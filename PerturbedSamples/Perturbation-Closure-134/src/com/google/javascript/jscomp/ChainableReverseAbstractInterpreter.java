[REPLACE]^private final Visitor<JSType> restrictUndefinedVisitor  = null ;^179^180^^^^179^238^[REPLACE] private final Visitor<JSType> restrictUndefinedVisitor = new Visitor<JSType> (  )  {^ [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  
[REPLACE]^private  Visitor<JSType> restrictNullVisitor = new Visitor<JSType> (  )  {^244^245^^^^244^303^[REPLACE] private final Visitor<JSType> restrictNullVisitor = new Visitor<JSType> (  )  {^ [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  
[REPLACE]^private  String value;^462^^^^^^^[REPLACE] private final String value;^ [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  
[REPLACE]^Preconditions.checkNotNull ( qualifiedName ) ;^63^^^^^61^68^[REPLACE] Preconditions.checkNotNull ( convention ) ;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] CodingConvention convention JSTypeRegistry typeRegistry [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^this.convention =  null;^64^^^^^61^68^[REPLACE] this.convention = convention;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] CodingConvention convention JSTypeRegistry typeRegistry [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^this.typeRegistry =  null;^65^^^^^61^68^[REPLACE] this.typeRegistry = typeRegistry;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] CodingConvention convention JSTypeRegistry typeRegistry [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^firstLink  =  firstLink ;^66^^^^^61^68^[REPLACE] firstLink = this;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] CodingConvention convention JSTypeRegistry typeRegistry [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^nextLink = true;^67^^^^^61^68^[REPLACE] nextLink = null;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] CodingConvention convention JSTypeRegistry typeRegistry [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[ADD]^^67^^^^^61^68^[ADD] nextLink = null;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] CodingConvention convention JSTypeRegistry typeRegistry [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^this.value =  null;^472^^^^^471^474^[REPLACE] this.value = value;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String value boolean resultEqualsValue [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^this.resultEqualsValue =  true;^473^^^^^471^474^[REPLACE] this.resultEqualsValue = resultEqualsValue;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String value boolean resultEqualsValue [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[ADD]^^473^^^^^471^474^[ADD] this.resultEqualsValue = resultEqualsValue;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String value boolean resultEqualsValue [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^Preconditions.checkArgument (nextLink != true ) ;^80^^^^^78^84^[REPLACE] Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[METHOD] append [TYPE] ChainableReverseAbstractInterpreter [PARAMETER] ChainableReverseAbstractInterpreter lastLink [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^this.nextLink =  nextLink;^81^^^^^78^84^[REPLACE] this.nextLink = lastLink;^[METHOD] append [TYPE] ChainableReverseAbstractInterpreter [PARAMETER] ChainableReverseAbstractInterpreter lastLink [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[ADD]^^81^82^^^^78^84^[ADD] this.nextLink = lastLink; lastLink.firstLink = this.firstLink;^[METHOD] append [TYPE] ChainableReverseAbstractInterpreter [PARAMETER] ChainableReverseAbstractInterpreter lastLink [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^lastLink.firstLink =  this.firstLink;^82^^^^^78^84^[REPLACE] lastLink.firstLink = this.firstLink;^[METHOD] append [TYPE] ChainableReverseAbstractInterpreter [PARAMETER] ChainableReverseAbstractInterpreter lastLink [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^return nextLink;^83^^^^^78^84^[REPLACE] return lastLink;^[METHOD] append [TYPE] ChainableReverseAbstractInterpreter [PARAMETER] ChainableReverseAbstractInterpreter lastLink [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^return lastLink;^90^^^^^89^91^[REPLACE] return firstLink;^[METHOD] getFirst [TYPE] ChainableReverseAbstractInterpreter [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String value 
[REPLACE]^return firstLink.nextPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^98^99^^^^96^100^[REPLACE] return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[METHOD] firstPreciserScopeKnowingConditionOutcome [TYPE] FlowScope [PARAMETER] Node condition FlowScope blindScope boolean outcome [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node condition  [TYPE]  String value  [TYPE]  FlowScope blindScope 
[REPLACE]^return nextLink != null ? nextLink.nextPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^108^109^^^^106^110^[REPLACE] return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[METHOD] nextPreciserScopeKnowingConditionOutcome [TYPE] FlowScope [PARAMETER] Node condition FlowScope blindScope boolean outcome [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node condition  [TYPE]  String value  [TYPE]  FlowScope blindScope 
[REPLACE]^if  ( nameVar == this )  {^121^^^^^117^149^[REPLACE] if  ( nameVar != null )  {^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^if  ( nameVarType != null )  {^123^^^^^117^149^[REPLACE] if  ( nameVarType == null )  {^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^propVarType = node.getJSType (  ) ; ;^124^^^^^117^149^[REPLACE] nameVarType = node.getJSType (  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^return propVarType;^126^^^^^117^149^[REPLACE] return nameVarType;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^JSType 0Type = nameVar.getType (  ) ;^122^^^^^117^149^[REPLACE] JSType nameVarType = nameVar.getType (  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[ADD]^^124^^^^^117^149^[ADD] nameVarType = node.getJSType (  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^if  ( qualifiedName != null )  {^132^^^^^117^149^[REPLACE] if  ( qualifiedName == null )  {^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^return true;^133^^^^^117^149^[REPLACE] return null;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^if  ( propVar == null )  {^137^^^^^117^149^[REPLACE] if  ( propVar != null )  {^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^propVarType = node.getJSType (  ) ; ;^138^^^^^117^149^[REPLACE] propVarType = propVar.getType (  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^if  ( propVarType != true )  {^140^^^^^117^149^[REPLACE] if  ( propVarType == null )  {^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^propVarType = propVar.getType (  ) ; ;^141^^^^^117^149^[REPLACE] propVarType = node.getJSType (  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^if  ( propVarType != null )  {^143^^^^^117^149^[REPLACE] if  ( propVarType == null )  {^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^propVarType  =  propVarType ;^144^^^^^117^149^[REPLACE] propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^return this;^128^^^^^117^149^[REPLACE] return null;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^return this;^133^^^^^117^149^[REPLACE] return null;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^return nameVarType;^146^^^^^117^149^[REPLACE] return propVarType;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^StaticSlot<JSType> nameVar = scope.getSlot ( node.getType (  )  ) ;^120^^^^^117^149^[REPLACE] StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^JSType nullType = nameVar.getType (  ) ;^122^^^^^117^149^[REPLACE] JSType nameVarType = nameVar.getType (  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^String qualifiedName = node.getString (  ) ;^131^^^^^117^149^[REPLACE] String qualifiedName = node.getQualifiedName (  ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[ADD]^^131^132^133^134^^117^149^[ADD] String qualifiedName = node.getQualifiedName (  ) ; if  ( qualifiedName == null )  { return null; }^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^StaticSlot<JSType> propVar = scope.getSlot ( value ) ;^135^^^^^117^149^[REPLACE] StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^JSType propVarType = this;^136^^^^^117^149^[REPLACE] JSType propVarType = null;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^return false;^148^^^^^117^149^[REPLACE] return null;^[METHOD] getTypeIfRefinable [TYPE] JSType [PARAMETER] Node node FlowScope scope [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  StaticSlot nameVar  propVar  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType nameVarType  propVarType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^origType  =  getNativeType ( UNKNOWN_TYPE )  ;^167^^^^^156^174^[REPLACE] origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[METHOD] declareNameInScope [TYPE] void [PARAMETER] FlowScope scope Node node JSType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType origType  type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^String qualifiedName = node.getString (  ) ;^163^^^^^156^174^[REPLACE] String qualifiedName = node.getQualifiedName (  ) ;^[METHOD] declareNameInScope [TYPE] void [PARAMETER] FlowScope scope Node node JSType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType origType  type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^JSType origType = node.getType (  ) ;^166^^^^^156^174^[REPLACE] JSType origType = node.getJSType (  ) ;^[METHOD] declareNameInScope [TYPE] void [PARAMETER] FlowScope scope Node node JSType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType origType  type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^return ;^172^^^^^156^174^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] declareNameInScope [TYPE] void [PARAMETER] FlowScope scope Node node JSType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType origType  type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  Node node  [TYPE]  String qualifiedName  value  [TYPE]  FlowScope scope 
[REPLACE]^JSType nameVarType = nameVar.getType (  ) ;^182^^^^^181^188^[REPLACE] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[ADD]^^182^^^^^181^188^[ADD] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^if  (  enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^[REPLACE] if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return nameVarType;^186^^^^^181^188^[REPLACE] return type;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return nameVarType;^184^^^^^181^188^[REPLACE] return enumElementType;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE ) ;^191^192^^^^190^193^[REPLACE] return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^196^^^^^195^197^[REPLACE] return getNativeType ( NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^200^^^^^199^201^[REPLACE] return getNativeType ( NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( UNKNOWN_TYPE ) ;^204^^^^^203^205^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return nameVarType;^208^^^^^207^209^[REPLACE] return type;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  FunctionType type  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^212^^^^^211^213^[REPLACE] return getNativeType ( NULL_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^216^^^^^215^217^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return nameVarType;^220^^^^^219^221^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^224^^^^^223^225^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^228^^^^^227^229^[REPLACE] return type.getRestrictedUnion ( getNativeType ( VOID_TYPE )  ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^232^^^^^231^233^[REPLACE] return getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return false;^236^^^^^235^237^[REPLACE] return null;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^JSType nameVarType = nameVar.getType (  ) ;^247^^^^^246^253^[REPLACE] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^if  ( type == null ) {^248^^^^^246^253^[REPLACE] if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return nameVarType;^251^^^^^246^253^[REPLACE] return type;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return nameVarType;^249^^^^^246^253^[REPLACE] return enumElementType;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^256^257^^^^255^258^[REPLACE] return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^261^^^^^260^262^[REPLACE] return getNativeType ( NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^265^^^^^264^266^[REPLACE] return getNativeType ( NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( UNKNOWN_TYPE ) ;^269^^^^^268^270^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return nameVarType;^273^^^^^272^274^[REPLACE] return type;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  FunctionType type  [TYPE]  String qualifiedName  value 
[REPLACE]^return false;^277^^^^^276^278^[REPLACE] return null;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^281^^^^^280^282^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return nameVarType;^285^^^^^284^286^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^289^^^^^288^290^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return type.getRestrictedUnion ( getNativeType ( VOID_TYPE )  ) ;^293^^^^^292^294^[REPLACE] return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^297^^^^^296^298^[REPLACE] return getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^301^^^^^300^302^[REPLACE] return getNativeType ( VOID_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;^323^^^^^322^324^[REPLACE] return caseTopType ( getNativeType ( ALL_TYPE )  ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return caseTopType ( getNativeType ( ALL_TYPE )  ) ;^327^^^^^326^328^[REPLACE] return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^JSType restricted = false;^331^^^^^330^343^[REPLACE] JSType restricted = null;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^if  ( restrictedAlternate == null )  {^334^^^^^330^343^[REPLACE] if  ( restrictedAlternate != null )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[ADD]^^334^335^336^337^338^330^343^[ADD] if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^if  ( restricted != null )  {^335^^^^^330^343^[REPLACE] if  ( restricted == null )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^restricted =  alternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^[REPLACE] restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^restricted =  alternate;^336^^^^^330^343^[REPLACE] restricted = restrictedAlternate;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[ADD]^^336^^^^^330^343^[ADD] restricted = restrictedAlternate;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^if  (restrictedAlternate != true )  {^335^^^^^330^343^[REPLACE] if  ( restricted == null )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[ADD]^restricted = restrictedAlternate;restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^335^336^337^338^339^330^343^[ADD] if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[ADD]^^338^^^^^330^343^[ADD] restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^JSType nameVarType = nameVar.getType (  ) ;^332^^^^^330^343^[REPLACE] for  ( JSType alternate : type.getAlternates (  )  )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[ADD]^^332^333^334^335^336^330^343^[ADD] for  ( JSType alternate : type.getAlternates (  )  )  { JSType restrictedAlternate = alternate.visit ( this ) ; if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^JSType restrictedAlternate = restrictedAlternate.visit ( this ) ;^333^^^^^330^343^[REPLACE] JSType restrictedAlternate = alternate.visit ( this ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return restrictedAlternate;^342^^^^^330^343^[REPLACE] return restricted;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^346^^^^^345^347^[REPLACE] return getNativeType ( NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^JSType nameVarType = nameVar.getType (  ) ;^359^^^^^349^365^[REPLACE] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[ADD]^^359^^^^^349^365^[ADD] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^[REPLACE] if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return nameVarType;^363^^^^^349^365^[REPLACE] return type;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return nameVarType;^361^^^^^349^365^[REPLACE] return enumElementType;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return true;^376^^^^^375^377^[REPLACE] return null;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return this;^380^^^^^379^381^[REPLACE] return null;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return true;^384^^^^^383^385^[REPLACE] return null;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  FunctionType type  [TYPE]  String qualifiedName  value 
[REPLACE]^return this;^388^^^^^387^389^[REPLACE] return null;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return false;^392^^^^^391^393^[REPLACE] return null;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return this;^396^^^^^395^397^[REPLACE] return null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return false;^400^^^^^399^401^[REPLACE] return null;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return true;^404^^^^^403^405^[REPLACE] return null;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return nameVarType;^417^^^^^416^418^[REPLACE] return topType;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^421^^^^^420^422^[REPLACE] return getNativeType ( NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( UNKNOWN_TYPE ) ;^425^^^^^424^426^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return nameVarType;^429^^^^^428^430^[REPLACE] return type;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  FunctionType type  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^433^^^^^432^434^[REPLACE] return getNativeType ( NULL_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^437^^^^^436^438^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return nameVarType;^441^^^^^440^442^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^445^^^^^444^446^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^449^^^^^448^450^[REPLACE] return getNativeType ( VOID_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  value 
[REPLACE]^return result.equals ( value )   &&  true;^482^^^^^481^483^[REPLACE] return result.equals ( value )  == resultEqualsValue;^[METHOD] matchesExpectation [TYPE] boolean [PARAMETER] String result [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^if  ( restrictedAlternate != null )  {^487^^^^^486^501^[REPLACE] if  ( resultEqualsValue )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^^487^488^489^490^491^486^501^[ADD] if  ( resultEqualsValue )  { if  ( value.equals ( "number" )  )  { return getNativeType ( NUMBER_TYPE ) ; } else if  ( value.equals ( "boolean" )  )  { return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^if  ( value.equals ( "function" )  )  {^488^^^^^486^501^[REPLACE] if  ( value.equals ( "number" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^} else if  ( value.equals ( "undefined" )  )  {^490^^^^^486^501^[REPLACE] } else if  ( value.equals ( "boolean" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^} else if  ( value.equals ( "undefined" )  )  {^492^^^^^486^501^[REPLACE] } else if  ( value.equals ( "string" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^} else if  ( value.equals ( "boolean" )  )  {^494^^^^^486^501^[REPLACE] } else if  ( value.equals ( "undefined" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^}   return getNativeType ( VOID_TYPE ) ;return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^494^495^496^497^498^486^501^[ADD] else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^} else if  ( value.equals ( "undefined" )  )  {^496^^^^^486^501^[REPLACE] } else if  ( value.equals ( "function" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^497^^^^^486^501^[REPLACE] return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^495^^^^^486^501^[REPLACE] return getNativeType ( VOID_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  else {^496^^^^^486^501^[REPLACE] } else if  ( value.equals ( "function" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^493^^^^^486^501^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  else {^494^^^^^486^501^[REPLACE] } else if  ( value.equals ( "undefined" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^}   return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^496^497^498^^^486^501^[ADD] else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return getNativeType ( UNKNOWN_TYPE ) ;^491^^^^^486^501^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  else {^492^^^^^486^501^[REPLACE] } else if  ( value.equals ( "string" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REMOVE]^if  ( value.equals ( "function" )  )  {     JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;     return  ( resultEqualsValue )  &&  ( ctorType.isSubtype ( type )  )  ? ctorType : null; }^492^^^^^486^501^[REMOVE] ^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  if  ( value.equals ( "function" )  )  {^496^^^^^486^501^[REPLACE] } else if  ( value.equals ( "function" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^}   return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^494^495^496^497^498^486^501^[ADD] else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^489^^^^^486^501^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  else {^490^^^^^486^501^[REPLACE] } else if  ( value.equals ( "boolean" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  if  ( value.equals ( "string" )  )  {^492^^^^^486^501^[REPLACE] } else if  ( value.equals ( "string" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  if  ( value.equals ( "undefined" )  )  {^494^^^^^486^501^[REPLACE] } else if  ( value.equals ( "undefined" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^}^496^497^498^^^486^501^[ADD] else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^}   return getNativeType ( STRING_TYPE ) ;return getNativeType ( VOID_TYPE ) ;^492^493^494^495^^486^501^[ADD] else if  ( value.equals ( "string" )  )  { return getNativeType ( STRING_TYPE ) ; } else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^return getNativeType ( NUMBER_TYPE ) ;return getNativeType ( BOOLEAN_TYPE ) ;^488^489^490^491^^486^501^[ADD] if  ( value.equals ( "number" )  )  { return getNativeType ( NUMBER_TYPE ) ; } else if  ( value.equals ( "boolean" )  )  { return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^}  if  ( value.equals ( "boolean" )  )  {^490^^^^^486^501^[REPLACE] } else if  ( value.equals ( "boolean" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[ADD]^}   return getNativeType ( VOID_TYPE ) ;^492^493^494^495^^486^501^[ADD] else if  ( value.equals ( "string" )  )  { return getNativeType ( STRING_TYPE ) ; } else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REMOVE]^if  ( value.equals ( "function" )  )  {     JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;     return  ( resultEqualsValue )  &&  ( ctorType.isSubtype ( type )  )  ? ctorType : null; }^496^^^^^486^501^[REMOVE] ^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return nameVarType;^500^^^^^486^501^[REPLACE] return topType;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType topType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return null;^504^505^^^^503^506^[REPLACE] return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : true;^509^^^^^508^510^[REPLACE] return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return matchesExpectation ( "function" )  ? type : this;^513^^^^^512^514^[REPLACE] return matchesExpectation ( "function" )  ? type : null;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  FunctionType type  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : true;^517^^^^^516^518^[REPLACE] return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : false;^521^^^^^520^522^[REPLACE] return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^} else if  ( value.equals ( "function" )  )  {^525^^^^^524^530^[REPLACE] if  ( value.equals ( "function" )  )  {^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType ctorType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return true ;^527^^^^^524^530^[REPLACE] return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType ctorType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^JSType nameVarType = nameVar.getType (  ) ;^526^^^^^524^530^[REPLACE] JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType ctorType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return resultEqualsValue || ctorType .getLeastSupertype ( ctorType )   ? ctorType : null;^527^^^^^524^530^[REPLACE] return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType ctorType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return matchesExpectation ( "object" )  ? type : true;^529^^^^^524^530^[REPLACE] return matchesExpectation ( "object" )  ? type : null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType ctorType  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : false;^533^^^^^532^534^[REPLACE] return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : false;^537^^^^^536^538^[REPLACE] return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return type == null ? null : type.visit ( restrictNullVisitor ) ;^545^^^^^544^546^[REPLACE] return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[METHOD] getRestrictedWithoutUndefined [TYPE] JSType [PARAMETER] JSType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return type == null ? null : type.isSubtype ( restrictNullVisitor ) ;^552^^^^^551^553^[REPLACE] return type == null ? null : type.visit ( restrictNullVisitor ) ;^[METHOD] getRestrictedWithoutNull [TYPE] JSType [PARAMETER] JSType type [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return   this ;^584^585^586^^^582^587^[REPLACE] return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[METHOD] getRestrictedByTypeOfResult [TYPE] JSType [PARAMETER] JSType type String value boolean resultEqualsValue [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  JSType type  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value 
[REPLACE]^return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^590^^^^^589^591^[REPLACE] return typeRegistry.getNativeType ( typeId ) ;^[METHOD] getNativeType [TYPE] JSType [PARAMETER] JSTypeNative typeId [CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  outcome  resultEqualsValue  true  [TYPE]  Visitor restrictNullVisitor  restrictUndefinedVisitor  [TYPE]  ChainableReverseAbstractInterpreter firstLink  lastLink  nextLink  [TYPE]  CodingConvention convention  [TYPE]  String qualifiedName  result  value  [TYPE]  JSTypeNative typeId 
[REPLACE]^JSType type = enumElementType.getPrimitiveType (  ) .equals ( this ) ;^182^^^^^181^188^[REPLACE] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 1   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^[REPLACE] if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 1   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^186^^^^^181^188^[REPLACE] return type;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 1   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^184^^^^^181^188^[REPLACE] return enumElementType;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 1   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^191^192^^^^190^193^[REPLACE] return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^196^^^^^195^197^[REPLACE] return getNativeType ( NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^200^^^^^199^201^[REPLACE] return getNativeType ( NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^204^^^^^203^205^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^208^^^^^207^209^[REPLACE] return type;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  FunctionType type 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^212^^^^^211^213^[REPLACE] return getNativeType ( NULL_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^216^^^^^215^217^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^220^^^^^219^221^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] 1   [TYPE]  ObjectType type  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^224^^^^^223^225^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^228^^^^^227^229^[REPLACE] return type.getRestrictedUnion ( getNativeType ( VOID_TYPE )  ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] 1   [TYPE]  UnionType type  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^232^^^^^231^233^[REPLACE] return getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^return true;^236^^^^^235^237^[REPLACE] return null;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
[REPLACE]^JSType type = enumElementType.getPrimitiveType (  ) .equals ( this ) ;^247^^^^^246^253^[REPLACE] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 2   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[ADD]^^247^^^^^246^253^[ADD] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 2   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^if  ( type == false ) {^248^^^^^246^253^[REPLACE] if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 2   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[ADD]^^248^249^250^251^252^246^253^[ADD] if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 2   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^251^^^^^246^253^[REPLACE] return type;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 2   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^249^^^^^246^253^[REPLACE] return enumElementType;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] 2   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^256^257^^^^255^258^[REPLACE] return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^261^^^^^260^262^[REPLACE] return getNativeType ( NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^265^^^^^264^266^[REPLACE] return getNativeType ( NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^269^^^^^268^270^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^273^^^^^272^274^[REPLACE] return type;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] 2   [TYPE]  boolean false  true  [TYPE]  FunctionType type 
[REPLACE]^return this;^277^^^^^276^278^[REPLACE] return null;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^281^^^^^280^282^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^285^^^^^284^286^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] 2   [TYPE]  ObjectType type  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^289^^^^^288^290^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^293^^^^^292^294^[REPLACE] return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] 2   [TYPE]  UnionType type  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^297^^^^^296^298^[REPLACE] return getNativeType ( UNKNOWN_TYPE ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^301^^^^^300^302^[REPLACE] return getNativeType ( VOID_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] 2   [TYPE]  boolean false  true 
[REPLACE]^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;^323^^^^^322^324^[REPLACE] return caseTopType ( getNativeType ( ALL_TYPE )  ) ;^[METHOD] caseAllType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return caseTopType ( getNativeType ( ALL_TYPE )  ) ;^327^^^^^326^328^[REPLACE] return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;^[METHOD] caseUnknownType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^JSType restricted = true;^331^^^^^330^343^[REPLACE] JSType restricted = null;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^if  (restricted == null )  {^334^^^^^330^343^[REPLACE] if  ( restrictedAlternate != null )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[ADD]^^334^335^336^337^338^330^343^[ADD] if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^if  ( alternate != this  )  {^335^^^^^330^343^[REPLACE] if  ( restricted == null )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[ADD]^^335^336^337^338^339^330^343^[ADD] if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^restricted =  alternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^[REPLACE] restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^restricted =  alternate;^336^^^^^330^343^[REPLACE] restricted = restrictedAlternate;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[ADD]^^336^^^^^330^343^[ADD] restricted = restrictedAlternate;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^if  ( restricted != null )  {^335^^^^^330^343^[REPLACE] if  ( restricted == null )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^restricted =  null.getLeastSupertype ( restricted ) ;^338^^^^^330^343^[REPLACE] restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[ADD]^^338^^^^^330^343^[ADD] restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^JSType restrictedAlternate = alternate.visit ( this ) ;^332^^^^^330^343^[REPLACE] for  ( JSType alternate : type.getAlternates (  )  )  {^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[ADD]^^332^333^334^335^336^330^343^[ADD] for  ( JSType alternate : type.getAlternates (  )  )  { JSType restrictedAlternate = alternate.visit ( this ) ; if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^JSType restrictedAlternate = restrictedAlternate.visit ( this ) ;^333^^^^^330^343^[REPLACE] JSType restrictedAlternate = alternate.visit ( this ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[ADD]^^333^^^^^330^343^[ADD] JSType restrictedAlternate = alternate.visit ( this ) ;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^return restrictedAlternate;^342^^^^^330^343^[REPLACE] return restricted;^[METHOD] caseUnionType [TYPE] JSType [PARAMETER] UnionType type [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  UnionType type  [TYPE]  JSType alternate  restricted  restrictedAlternate  [TYPE]  boolean false  true 
[REPLACE]^return restricted;^346^^^^^345^347^[REPLACE] return getNativeType ( NO_TYPE ) ;^[METHOD] caseNoType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^JSType restrictedAlternate = alternate.visit ( this ) ;^359^^^^^349^365^[REPLACE] JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^if  ( type == null ) {^360^^^^^349^365^[REPLACE] if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return restricted;^363^^^^^349^365^[REPLACE] return type;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return restricted;^361^^^^^349^365^[REPLACE] return enumElementType;^[METHOD] caseEnumElementType [TYPE] JSType [PARAMETER] EnumElementType enumElementType [CLASS] RestrictByTypeOfResultVisitor   [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  EnumElementType enumElementType 
[REPLACE]^return this;^376^^^^^375^377^[REPLACE] return null;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return false;^380^^^^^379^381^[REPLACE] return null;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return false;^384^^^^^383^385^[REPLACE] return null;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  boolean false  true  [TYPE]  FunctionType type 
[REPLACE]^return false;^388^^^^^387^389^[REPLACE] return null;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return true;^392^^^^^391^393^[REPLACE] return null;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return true;^396^^^^^395^397^[REPLACE] return null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  true 
[REPLACE]^return this;^400^^^^^399^401^[REPLACE] return null;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return true;^404^^^^^403^405^[REPLACE] return null;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] RestrictByTrueTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^417^^^^^416^418^[REPLACE] return topType;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  JSType topType  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^421^^^^^420^422^[REPLACE] return getNativeType ( NO_OBJECT_TYPE ) ;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^425^^^^^424^426^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return topType;^429^^^^^428^430^[REPLACE] return type;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  boolean false  true  [TYPE]  FunctionType type 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^433^^^^^432^434^[REPLACE] return getNativeType ( NULL_TYPE ) ;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^437^^^^^436^438^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return topType;^441^^^^^440^442^[REPLACE] return type;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( BOOLEAN_TYPE ) ;^445^^^^^444^446^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^449^^^^^448^450^[REPLACE] return getNativeType ( VOID_TYPE ) ;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] RestrictByFalseTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^private  String value;^462^^^^^^^[REPLACE] private final String value;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  true 
[REPLACE]^this.value =  null;^472^^^^^471^474^[REPLACE] this.value = value;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String value boolean resultEqualsValue [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String value 
[REPLACE]^this.resultEqualsValue =  true;^473^^^^^471^474^[REPLACE] this.resultEqualsValue = resultEqualsValue;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String value boolean resultEqualsValue [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String value 
[REPLACE]^return result.equals ( value )   !=  resultEqualsValue;;^482^^^^^481^483^[REPLACE] return result.equals ( value )  == resultEqualsValue;^[METHOD] matchesExpectation [TYPE] boolean [PARAMETER] String result [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value 
[REPLACE]^} else if  ( value.equals ( "undefined" )  )  {^487^^^^^486^501^[REPLACE] if  ( resultEqualsValue )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^^487^488^489^490^491^486^501^[ADD] if  ( resultEqualsValue )  { if  ( value.equals ( "number" )  )  { return getNativeType ( NUMBER_TYPE ) ; } else if  ( value.equals ( "boolean" )  )  { return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^if  ( value.equals ( "function" )  )  {^488^^^^^486^501^[REPLACE] if  ( value.equals ( "number" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^} else if  ( value.equals ( "undefined" )  )  {^490^^^^^486^501^[REPLACE] } else if  ( value.equals ( "boolean" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^}  if  ( value.equals ( "string" )  )  {^492^^^^^486^501^[REPLACE] } else if  ( value.equals ( "string" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^}   return getNativeType ( STRING_TYPE ) ;return getNativeType ( VOID_TYPE ) ;^492^493^494^495^^486^501^[ADD] else if  ( value.equals ( "string" )  )  { return getNativeType ( STRING_TYPE ) ; } else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^}  else {^494^^^^^486^501^[REPLACE] } else if  ( value.equals ( "undefined" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^}  else {^496^^^^^486^501^[REPLACE] } else if  ( value.equals ( "function" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^497^^^^^486^501^[REPLACE] return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^495^^^^^486^501^[REPLACE] return getNativeType ( VOID_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^return getNativeType ( NUMBER_TYPE ) ;^493^^^^^486^501^[REPLACE] return getNativeType ( STRING_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^} else if  ( value.equals ( "string" )  )  {^494^^^^^486^501^[REPLACE] } else if  ( value.equals ( "undefined" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^}  if  ( value.equals ( "function" )  )  {^496^^^^^486^501^[REPLACE] } else if  ( value.equals ( "function" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REMOVE]^if  ( value.equals ( "function" )  )  {     JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;     return  ( resultEqualsValue )  &&  ( ctorType.isSubtype ( type )  )  ? ctorType : null; }^496^^^^^486^501^[REMOVE] ^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^} else if  ( value.equals ( "undefined" )  )  {^496^^^^^486^501^[REPLACE] } else if  ( value.equals ( "function" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^491^^^^^486^501^[REPLACE] return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^} else if  ( value.equals ( "undefined" )  )  {^492^^^^^486^501^[REPLACE] } else if  ( value.equals ( "string" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REMOVE]^if  ( value.equals ( "function" )  )  {     JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;     return  ( resultEqualsValue )  &&  ( ctorType.isSubtype ( type )  )  ? ctorType : null; }^492^^^^^486^501^[REMOVE] ^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^}  if  ( value.equals ( "undefined" )  )  {^494^^^^^486^501^[REPLACE] } else if  ( value.equals ( "undefined" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^}   return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^496^497^498^^^486^501^[ADD] else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^}   return getNativeType ( VOID_TYPE ) ;return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^494^495^496^497^498^486^501^[ADD] else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^489^^^^^486^501^[REPLACE] return getNativeType ( NUMBER_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^}  if  ( value.equals ( "boolean" )  )  {^490^^^^^486^501^[REPLACE] } else if  ( value.equals ( "boolean" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^}   return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^494^495^496^497^498^486^501^[ADD] else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REMOVE]^if  ( value.equals ( "string" )  )  {     return getNativeType ( STRING_TYPE ) ; }else     if  ( value.equals ( "undefined" )  )  {         return getNativeType ( VOID_TYPE ) ;     }else         if  ( value.equals ( "function" )  )  {             return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;         }^494^^^^^486^501^[REMOVE] ^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^return getNativeType ( NUMBER_TYPE ) ;return getNativeType ( BOOLEAN_TYPE ) ;^488^489^490^491^^486^501^[ADD] if  ( value.equals ( "number" )  )  { return getNativeType ( NUMBER_TYPE ) ; } else if  ( value.equals ( "boolean" )  )  { return getNativeType ( BOOLEAN_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^}  else {^492^^^^^486^501^[REPLACE] } else if  ( value.equals ( "string" )  )  {^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^}   return getNativeType ( VOID_TYPE ) ;^492^493^494^495^^486^501^[ADD] else if  ( value.equals ( "string" )  )  { return getNativeType ( STRING_TYPE ) ; } else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^}   return getNativeType ( BOOLEAN_TYPE ) ;return getNativeType ( STRING_TYPE ) ;^490^491^492^493^^486^501^[ADD] else if  ( value.equals ( "boolean" )  )  { return getNativeType ( BOOLEAN_TYPE ) ; } else if  ( value.equals ( "string" )  )  { return getNativeType ( STRING_TYPE ) ;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[ADD]^}^496^497^498^^^486^501^[ADD] else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^return getNativeType ( STRING_TYPE ) ;^500^^^^^486^501^[REPLACE] return topType;^[METHOD] caseTopType [TYPE] JSType [PARAMETER] JSType topType [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType topType 
[REPLACE]^return true ;^504^505^^^^503^506^[REPLACE] return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[METHOD] caseNoObjectType [TYPE] JSType [PARAMETER] [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value 
[REPLACE]^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : false;^509^^^^^508^510^[REPLACE] return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[METHOD] caseBooleanType [TYPE] JSType [PARAMETER] [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value 
[REPLACE]^return matchesExpectation ( "function" )  ? type : false;^513^^^^^512^514^[REPLACE] return matchesExpectation ( "function" )  ? type : null;^[METHOD] caseFunctionType [TYPE] JSType [PARAMETER] FunctionType type [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  FunctionType type 
[REPLACE]^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : this;^517^^^^^516^518^[REPLACE] return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[METHOD] caseNullType [TYPE] JSType [PARAMETER] [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value 
[REPLACE]^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : false;^521^^^^^520^522^[REPLACE] return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[METHOD] caseNumberType [TYPE] JSType [PARAMETER] [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value 
[REPLACE]^} else if  ( value.equals ( "function" )  )  {^525^^^^^524^530^[REPLACE] if  ( value.equals ( "function" )  )  {^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType ctorType 
[ADD]^JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^525^526^527^528^^524^530^[ADD] if  ( value.equals ( "function" )  )  { JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null; }^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType ctorType 
[REPLACE]^return true ;^527^^^^^524^530^[REPLACE] return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType ctorType 
[ADD]^^526^527^^^^524^530^[ADD] JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType ctorType 
[REPLACE]^return   ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^[REPLACE] return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType ctorType 
[REPLACE]^return matchesExpectation ( "object" )  ? type : this;^529^^^^^524^530^[REPLACE] return matchesExpectation ( "object" )  ? type : null;^[METHOD] caseObjectType [TYPE] JSType [PARAMETER] ObjectType type [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  ObjectType type  [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value  [TYPE]  JSType ctorType 
[REPLACE]^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : false;^533^^^^^532^534^[REPLACE] return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[METHOD] caseStringType [TYPE] JSType [PARAMETER] [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value 
[REPLACE]^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : false;^537^^^^^536^538^[REPLACE] return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[METHOD] caseVoidType [TYPE] JSType [PARAMETER] [CLASS] RestrictByOneTypeOfResultVisitor   [TYPE]  boolean false  resultEqualsValue  true  [TYPE]  String result  value 
