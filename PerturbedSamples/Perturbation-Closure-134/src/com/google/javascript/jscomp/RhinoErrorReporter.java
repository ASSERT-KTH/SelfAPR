[REPLACE]^static final DiagnosticType PARSE_ERROR ;^35^36^^^^35^36^[REPLACE] static final DiagnosticType PARSE_ERROR = DiagnosticType.error ( "JSC_PARSE_ERROR", "Parse error. {0}" ) ;^ [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter  
[REPLACE]^static  DiagnosticType EXTRA_FILEOVERVIEW = DiagnosticType.warning ( "JSC_EXTRA_FILEOVERVIEW", "Parse error. {0}" ) ;^40^41^^^^40^41^[REPLACE] static final DiagnosticType EXTRA_FILEOVERVIEW = DiagnosticType.warning ( "JSC_EXTRA_FILEOVERVIEW", "Parse error. {0}" ) ;^ [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter  
[REPLACE]^static final DiagnosticType TRAILING_COMMA ;^43^44^^^^43^44^[REPLACE] static final DiagnosticType TRAILING_COMMA = DiagnosticType.error ( "JSC_TRAILING_COMMA", "Parse error. {0}" ) ;^ [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter  
[REPLACE]^static final DiagnosticType DUPLICATE_PARAM  = null ;^46^47^^^^46^47^[REPLACE] static final DiagnosticType DUPLICATE_PARAM = DiagnosticType.error ( "JSC_DUPLICATE_PARAM", "Parse error. {0}" ) ;^ [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter  
[REPLACE]^static  DiagnosticType BAD_JSDOC_ANNOTATION = DiagnosticType.warning ( "JSC_BAD_JSDOC_ANNOTATION", "Parse error. {0}" ) ;^49^50^^^^49^50^[REPLACE] static final DiagnosticType BAD_JSDOC_ANNOTATION = DiagnosticType.warning ( "JSC_BAD_JSDOC_ANNOTATION", "Parse error. {0}" ) ;^ [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter  
[REPLACE]^private  Map<String, DiagnosticType> typeMap;^53^^^^^^^[REPLACE] private final Map<String, DiagnosticType> typeMap;^ [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter  
[REPLACE]^private  AbstractCompiler compiler;^55^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter  
[REPLACE]^this.compiler =  null;^68^^^^^67^91^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REPLACE]^typeMap  =  typeMap ;^69^70^71^72^^67^91^[REPLACE] typeMap = ImmutableMap.of (   replacePlaceHolders (^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REPLACE]^s = Pattern.quote ( s ) ;^134^^^^^133^135^[REPLACE] super ( compiler ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REMOVE]^s = Pattern.quote ( s ) ;^134^^^^^133^135^[REMOVE] ^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REPLACE]^s = Pattern.quote ( s ) ;^148^^^^^147^149^[REPLACE] super ( compiler ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REPLACE]^s =  Pattern.quote ( null ) ;^63^^^^^62^65^[REPLACE] s = Pattern.quote ( s ) ;^[METHOD] replacePlaceHolders [TYPE] String [PARAMETER] String s [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REPLACE]^return  new OldRhinoErrorReporter ( compiler )  ;^95^^^^^94^96^[REPLACE] return new NewRhinoErrorReporter ( compiler ) ;^[METHOD] forNewRhino [TYPE] ErrorReporter [PARAMETER] AbstractCompiler compiler [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REPLACE]^return  new NewRhinoErrorReporter ( compiler )  ;^99^^^^^98^100^[REPLACE] return new OldRhinoErrorReporter ( compiler ) ;^[METHOD] forOldRhino [TYPE] ErrorReporter [PARAMETER] AbstractCompiler compiler [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA 
[REPLACE]^compiler.report ( makeError ( message, sourceName, line, line, CheckLevel.WARNING )  ) ;^104^105^^^^102^106^[REPLACE] compiler.report ( makeError ( message, sourceName, line, lineOffset, CheckLevel.WARNING )  ) ;^[METHOD] warning [TYPE] void [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  String lineSource  message  sourceName  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  int line  lineOffset 
[REPLACE]^makeError ( message, sourceName, line, lineOffset, CheckLevel.ERROR )  ) ;^105^^^^^102^106^[REPLACE] makeError ( message, sourceName, line, lineOffset, CheckLevel.WARNING )  ) ;^[METHOD] warning [TYPE] void [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  String lineSource  message  sourceName  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  int line  lineOffset 
[REPLACE]^compiler.report ( makeError ( message, lineSource, line, lineOffset, CheckLevel.ERROR )  ) ;^110^111^^^^108^112^[REPLACE] compiler.report ( makeError ( message, sourceName, line, lineOffset, CheckLevel.ERROR )  ) ;^[METHOD] error [TYPE] void [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  String lineSource  message  sourceName  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  int line  lineOffset 
[REPLACE]^makeError ( message, sourceName, lineOffset, lineOffset, CheckLevel.ERROR )  ) ;^111^^^^^108^112^[REPLACE] makeError ( message, sourceName, line, lineOffset, CheckLevel.ERROR )  ) ;^[METHOD] error [TYPE] void [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  String lineSource  message  sourceName  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  int line  lineOffset 
[REPLACE]^if  ( message.matches ( entry .getValue (  )   )  )  {^120^^^^^114^128^[REPLACE] if  ( message.matches ( entry.getKey (  )  )  )  {^[METHOD] makeError [TYPE] JSError [PARAMETER] String message String sourceName int line int lineOffset CheckLevel defaultLevel [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  CheckLevel defaultLevel  [TYPE]  String message  sourceName  [TYPE]  Map typeMap  [TYPE]  int line  lineOffset 
[REPLACE]^return JSError.make ( sourceName, line, lineOffset, entry.getKey (  ) , message ) ;^121^122^^^^114^128^[REPLACE] return JSError.make ( sourceName, line, lineOffset, entry.getValue (  ) , message ) ;^[METHOD] makeError [TYPE] JSError [PARAMETER] String message String sourceName int line int lineOffset CheckLevel defaultLevel [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  CheckLevel defaultLevel  [TYPE]  String message  sourceName  [TYPE]  Map typeMap  [TYPE]  int line  lineOffset 
[REPLACE]^return JSError.make ( message, line, lineOffset, entry.getValue (  ) , message ) ;^121^122^^^^114^128^[REPLACE] return JSError.make ( sourceName, line, lineOffset, entry.getValue (  ) , message ) ;^[METHOD] makeError [TYPE] JSError [PARAMETER] String message String sourceName int line int lineOffset CheckLevel defaultLevel [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  CheckLevel defaultLevel  [TYPE]  String message  sourceName  [TYPE]  Map typeMap  [TYPE]  int line  lineOffset 
[REPLACE]^for  ( Entry<String, DiagnosticType> entry : typeMap.entrySet (  )  )  { if  ( message.matches ( entry.getKey (  )  )  )  {^119^^^^^114^128^[REPLACE] for  ( Entry<String, DiagnosticType> entry : typeMap.entrySet (  )  )  {^[METHOD] makeError [TYPE] JSError [PARAMETER] String message String sourceName int line int lineOffset CheckLevel defaultLevel [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  CheckLevel defaultLevel  [TYPE]  String message  sourceName  [TYPE]  Map typeMap  [TYPE]  int line  lineOffset 
[REPLACE]^return JSError .make ( sourceName , line , line , sourceName )  ;^126^127^^^^114^128^[REPLACE] return JSError.make ( sourceName, line, lineOffset, defaultLevel, PARSE_ERROR, message ) ;^[METHOD] makeError [TYPE] JSError [PARAMETER] String message String sourceName int line int lineOffset CheckLevel defaultLevel [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  CheckLevel defaultLevel  [TYPE]  String message  sourceName  [TYPE]  Map typeMap  [TYPE]  int line  lineOffset 
[REPLACE]^return new EvaluatorException ( message, sourceName, line, lineSource, line ) ;^139^140^^^^137^141^[REPLACE] return new EvaluatorException ( message, sourceName, line, lineSource, lineOffset ) ;^[METHOD] runtimeError [TYPE] EvaluatorException [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  String lineSource  message  sourceName  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  int line  lineOffset 
[REPLACE]^return new com.google.javascript.jscomp.mozilla.rhino.EvaluatorException ( message, sourceName, lineOffset, lineSource, lineOffset ) ;^154^155^^^^152^156^[REPLACE] return new com.google.javascript.jscomp.mozilla.rhino.EvaluatorException ( message, sourceName, line, lineSource, lineOffset ) ;^[METHOD] runtimeError [TYPE] EvaluatorException [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] RhinoErrorReporter OldRhinoErrorReporter NewRhinoErrorReporter   [TYPE]  AbstractCompiler compiler  [TYPE]  String lineSource  message  sourceName  [TYPE]  boolean false  true  [TYPE]  Map typeMap  [TYPE]  DiagnosticType BAD_JSDOC_ANNOTATION  DUPLICATE_PARAM  EXTRA_FILEOVERVIEW  PARSE_ERROR  TRAILING_COMMA  [TYPE]  int line  lineOffset 
[REPLACE]^return new EvaluatorException ( message, sourceName, line, lineSource, line ) ;^139^140^^^^137^141^[REPLACE] return new EvaluatorException ( message, sourceName, line, lineSource, lineOffset ) ;^[METHOD] runtimeError [TYPE] EvaluatorException [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] OldRhinoErrorReporter   [TYPE]  boolean false  true  [TYPE]  String lineSource  message  sourceName  [TYPE]  int line  lineOffset 
[REPLACE]^return new com.google.javascript.jscomp.mozilla.rhino.EvaluatorException ( sourceName, sourceName, line, lineSource, lineOffset ) ;^154^155^^^^152^156^[REPLACE] return new com.google.javascript.jscomp.mozilla.rhino.EvaluatorException ( message, sourceName, line, lineSource, lineOffset ) ;^[METHOD] runtimeError [TYPE] EvaluatorException [PARAMETER] String message String sourceName int line String lineSource int lineOffset [CLASS] NewRhinoErrorReporter   [TYPE]  boolean false  true  [TYPE]  String lineSource  message  sourceName  [TYPE]  int line  lineOffset 
