[REPLACE]^static final DiagnosticType MALFORMED_TYPEDEF  = null ;^84^85^86^87^^84^87^[REPLACE] static final DiagnosticType MALFORMED_TYPEDEF = DiagnosticType.warning ( "JSC_MALFORMED_TYPEDEF", "Typedef for {0} does not have any type information" ) ;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^static  DiagnosticType ENUM_INITIALIZER = DiagnosticType.warning ( "JSC_ENUM_INITIALIZER_NOT_ENUM", "enum initializer must be an object literal or an enum" ) ;^89^90^91^92^^89^92^[REPLACE] static final DiagnosticType ENUM_INITIALIZER = DiagnosticType.warning ( "JSC_ENUM_INITIALIZER_NOT_ENUM", "enum initializer must be an object literal or an enum" ) ;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^static final DiagnosticType CONSTRUCTOR_EXPECTED  = null ;^94^95^96^97^^94^97^[REPLACE] static final DiagnosticType CONSTRUCTOR_EXPECTED = DiagnosticType.warning ( "JSC_REFLECT_CONSTRUCTOR_EXPECTED", "Constructor expected as first argument" ) ;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private  JSTypeRegistry typeRegistry;^102^^^^^^^[REPLACE] private final JSTypeRegistry typeRegistry;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private Map<ObjectType, ObjectType> delegateProxyMap ;^103^^^^^^^[REPLACE] private Map<ObjectType, ObjectType> delegateProxyMap = Maps.newHashMap (  ) ;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private String sourceName = true;^242^^^^^^^[REPLACE] private String sourceName = null;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private final List<Node> nonExternFunctions ;^734^^^^^^^[REPLACE] private final List<Node> nonExternFunctions = Lists.newArrayList (  ) ;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private final List<StubDeclaration> stubDeclarations ;^742^743^^^^742^743^[REPLACE] private final List<StubDeclaration> stubDeclarations = Lists.newArrayList (  ) ;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private  Node node;^1171^^^^^^^[REPLACE] private final Node node;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private  boolean isExtern;^1172^^^^^^^[REPLACE] private final boolean isExtern;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private final  char  ownerName;^1173^^^^^^^[REPLACE] private final String ownerName;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^private  ObjectType thisType;^1188^^^^^^^[REPLACE] private final ObjectType thisType;^ [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder  
[REPLACE]^this ( compiler, compiler.getTypeValidator (  )  ) ;^106^^^^^105^107^[REPLACE] this ( compiler, compiler.getCodingConvention (  )  ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.compiler =  null;^111^^^^^109^115^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] CodingConvention) [PARAMETER] AbstractCompiler compiler CodingConvention codingConvention [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.validator =  null.getTypeValidator (  ) ;^112^^^^^109^115^[REPLACE] this.validator = compiler.getTypeValidator (  ) ;^[METHOD] <init> [TYPE] CodingConvention) [PARAMETER] AbstractCompiler compiler CodingConvention codingConvention [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.codingConvention =  null;^113^^^^^109^115^[REPLACE] this.codingConvention = codingConvention;^[METHOD] <init> [TYPE] CodingConvention) [PARAMETER] AbstractCompiler compiler CodingConvention codingConvention [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^113^114^^^^109^115^[ADD] this.codingConvention = codingConvention; this.typeRegistry = compiler.getTypeRegistry (  ) ;^[METHOD] <init> [TYPE] CodingConvention) [PARAMETER] AbstractCompiler compiler CodingConvention codingConvention [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.typeRegistry =  null.getTypeRegistry (  ) ;^114^^^^^109^115^[REPLACE] this.typeRegistry = compiler.getTypeRegistry (  ) ;^[METHOD] <init> [TYPE] CodingConvention) [PARAMETER] AbstractCompiler compiler CodingConvention codingConvention [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.scope =  null;^245^^^^^244^246^[REPLACE] this.scope = scope;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareArguments ( fnNode ) ;^746^^^^^745^747^[REPLACE] super ( scope ) ;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^746^^^^^745^747^[ADD] super ( scope ) ;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.node =  null;^1176^^^^^1175^1179^[REPLACE] this.node = node;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1176^1177^^^^1175^1179^[ADD] this.node = node; this.isExtern = isExtern;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.isExtern =  true;^1177^^^^^1175^1179^[REPLACE] this.isExtern = isExtern;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.ownerName =  sourceName;^1178^^^^^1175^1179^[REPLACE] this.ownerName = ownerName;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.thisType =  null;^1191^^^^^1190^1192^[REPLACE] this.thisType = thisType;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] ObjectType thisType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareArguments ( fnNode ) ;^1243^^^^^1242^1244^[REPLACE] super ( scope ) ;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^declareArguments ( fnNode ) ;^1243^^^^^1242^1244^[REMOVE] ^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node node  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Scope newScope = true;^125^^^^^121^157^[REPLACE] Scope newScope = null;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( parent != true )  {^126^^^^^121^157^[REPLACE] if  ( parent == null )  {^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^newScope =  new Scope ( null, root ) ;^152^^^^^126^154^[REPLACE] newScope = new Scope ( parent, root ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( type == false ) {^139^^^^^121^157^[REPLACE] if  ( type != null && type instanceof FunctionType )  {^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^FunctionType fnType =  ( FunctionType )  type;ObjectType fnThisType = fnType.getTypeOfThis (  ) ;^139^140^141^142^143^121^157^[ADD] if  ( type != null && type instanceof FunctionType )  { FunctionType fnType =  ( FunctionType )  type; ObjectType fnThisType = fnType.getTypeOfThis (  ) ; if  ( !fnThisType.isUnknownType (  )  )  { NodeTraversal.traverse ( compiler, functionNode.getLastChild (  ) ,^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( fnThisType.isUnknownType (  )  )  {^142^^^^^121^157^[REPLACE] if  ( !fnThisType.isUnknownType (  )  )  {^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^NodeTraversal.traverse ( compiler, functionNode .getFirstChild (  )  , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^143^144^^^^121^157^[REPLACE] NodeTraversal.traverse ( compiler, functionNode.getLastChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^NodeTraversal.traverse ( compiler, root.getLastChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^143^144^^^^121^157^[REPLACE] NodeTraversal.traverse ( compiler, functionNode.getLastChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType t = typeRegistry.getNativeFunctionType ( tId ) ;^140^^^^^121^157^[REPLACE] FunctionType fnType =  ( FunctionType )  type;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType fnThisType = fnType.getPrototype (  ) ;^141^^^^^121^157^[REPLACE] ObjectType fnThisType = fnType.getTypeOfThis (  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^NodeTraversal.traverse ( compiler, root.getFirstChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^143^144^^^^121^157^[REPLACE] NodeTraversal.traverse ( compiler, functionNode.getLastChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^newScope =  createInitialScope ( node ) ;^128^^^^^121^157^[REPLACE] newScope = createInitialScope ( root ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^128^^^^^121^157^[ADD] newScope = createInitialScope ( root ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^GlobalScopeBuilder scopeBuilder = new GlobalScopeBuilder ( scope ) ;^130^^^^^121^157^[REPLACE] GlobalScopeBuilder scopeBuilder = new GlobalScopeBuilder ( newScope ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^for  ( Node functionNode : scopeBuilder.nonExternFunctions )  { JSType type = functionNode.getJSType (  ) ;^137^^^^^121^157^[REPLACE] for  ( Node functionNode : scopeBuilder.nonExternFunctions )  {^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType type = functionNode.setJSType (  ) ;^138^^^^^121^157^[REPLACE] JSType type = functionNode.getJSType (  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType fnThisType = fnType .getPrototype (  )  ;^141^^^^^121^157^[REPLACE] ObjectType fnThisType = fnType.getTypeOfThis (  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( type == true && type instanceof FunctionType )  {^139^^^^^121^157^[REPLACE] if  ( type != null && type instanceof FunctionType )  {^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^142^^^^^121^157^[REPLACE] if  ( !fnThisType.isUnknownType (  )  )  {^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^142^143^144^145^^121^157^[ADD] if  ( !fnThisType.isUnknownType (  )  )  { NodeTraversal.traverse ( compiler, functionNode.getLastChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ; }^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^ObjectType fnThisType = fnType.getTypeOfThis (  ) ;^140^141^^^^121^157^[ADD] FunctionType fnType =  ( FunctionType )  type; ObjectType fnThisType = fnType.getTypeOfThis (  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^NodeTraversal.traverse ( compiler, functionNode.getFirstChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^143^144^^^^121^157^[REPLACE] NodeTraversal.traverse ( compiler, functionNode.getLastChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^143^144^^^^121^157^[ADD] NodeTraversal.traverse ( compiler, functionNode.getLastChild (  ) , scopeBuilder.new CollectProperties ( fnThisType )  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^newScope =  new Scope ( null, root ) ;^152^^^^^121^157^[REPLACE] newScope = new Scope ( parent, root ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^152^^^^^121^157^[ADD] newScope = new Scope ( parent, root ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^137^138^139^140^141^121^157^[ADD] for  ( Node functionNode : scopeBuilder.nonExternFunctions )  { JSType type = functionNode.getJSType (  ) ; if  ( type != null && type instanceof FunctionType )  { FunctionType fnType =  ( FunctionType )  type; ObjectType fnThisType = fnType.getTypeOfThis (  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType type = root.getJSType (  ) ;^138^^^^^121^157^[REPLACE] JSType type = functionNode.getJSType (  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^140^141^^^^121^157^[ADD] FunctionType fnType =  ( FunctionType )  type; ObjectType fnThisType = fnType.getTypeOfThis (  ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.resolveTypesInScope ( scope ) ;^155^^^^^121^157^[REPLACE] typeRegistry.resolveTypesInScope ( newScope ) ;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return scope;^156^^^^^121^157^[REPLACE] return newScope;^[METHOD] createScope [TYPE] Scope [PARAMETER] Node root Scope parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType fnType  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  GlobalScopeBuilder scopeBuilder  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Scope s = new Scope ( node, compiler ) ;^165^^^^^164^194^[REPLACE] Scope s = new Scope ( root, compiler ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, ARRAY_FUNCTION_TYPE ) ;^166^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, ARRAY_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, BOOLEAN_OBJECT_FUNCTION_TYPE ) ;^167^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, BOOLEAN_OBJECT_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, DATE_FUNCTION_TYPE ) ;^168^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, DATE_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, ERROR_FUNCTION_TYPE ) ;^169^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, ERROR_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( s, RANGE_ERROR_FUNCTION_TYPE ) ;^170^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, EVAL_ERROR_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( s, ERROR_FUNCTION_TYPE ) ;^171^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, FUNCTION_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^171^^^^^164^194^[REMOVE] ^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, NUMBER_OBJECT_FUNCTION_TYPE ) ;^172^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, NUMBER_OBJECT_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, OBJECT_FUNCTION_TYPE ) ;^173^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, OBJECT_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^173^^^^^164^194^[REMOVE] ^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, RANGE_ERROR_FUNCTION_TYPE ) ;^174^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, RANGE_ERROR_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^174^^^^^164^194^[REMOVE] ^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, REFERENCE_ERROR_FUNCTION_TYPE ) ;^175^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, REFERENCE_ERROR_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, REGEXP_FUNCTION_TYPE ) ;^176^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, REGEXP_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, STRING_OBJECT_FUNCTION_TYPE ) ;^177^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, STRING_OBJECT_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, SYNTAX_ERROR_FUNCTION_TYPE ) ;^178^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, SYNTAX_ERROR_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, TYPE_ERROR_FUNCTION_TYPE ) ;^179^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, TYPE_ERROR_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( scope, URI_ERROR_FUNCTION_TYPE ) ;^180^^^^^164^194^[REPLACE] declareNativeFunctionType ( s, URI_ERROR_FUNCTION_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^180^^^^^164^194^[REMOVE] ^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeValueType ( scope, "undefined", VOID_TYPE ) ;^181^^^^^164^194^[REPLACE] declareNativeValueType ( s, "undefined", VOID_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeValueType ( scope, "goog.typedef", NO_TYPE ) ;^186^^^^^164^194^[REPLACE] declareNativeValueType ( s, "goog.typedef", NO_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeValueType ( scope, "ActiveXObject", NO_OBJECT_TYPE ) ;^191^^^^^164^194^[REPLACE] declareNativeValueType ( s, "ActiveXObject", NO_OBJECT_TYPE ) ;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return scope;^193^^^^^164^194^[REPLACE] return s;^[METHOD] createInitialScope [TYPE] Scope [PARAMETER] Node root [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType t = typeRegistry .getNativeObjectType (  )  ;^197^^^^^196^201^[REPLACE] FunctionType t = typeRegistry.getNativeFunctionType ( tId ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^197^^^^^196^201^[ADD] FunctionType t = typeRegistry.getNativeFunctionType ( tId ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeType ( s, t.getInstanceType (  ) .getReferenceName (  ) , t ) ;^198^^^^^196^201^[REPLACE] declareNativeType ( scope, t.getInstanceType (  ) .getReferenceName (  ) , t ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeType ( scope, t .getPrototype (  )  .getReferenceName (  ) , t ) ;^198^^^^^196^201^[REPLACE] declareNativeType ( scope, t.getInstanceType (  ) .getReferenceName (  ) , t ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^198^^^^^196^201^[ADD] declareNativeType ( scope, t.getInstanceType (  ) .getReferenceName (  ) , t ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeType ( scope, t.getPrototype (  ) .getReferenceName (  ) , t ) ;^198^^^^^196^201^[REPLACE] declareNativeType ( scope, t.getInstanceType (  ) .getReferenceName (  ) , t ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeType ( scope, t.getInstanceType (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^199^200^^^^196^201^[REPLACE] declareNativeType ( scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^scope, t.getPrototype (  ) .inferParameterTypes (  ) , t.getPrototype (  )  ) ;^200^^^^^196^201^[REPLACE] scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^scope, t.getInstanceType (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^200^^^^^196^201^[REPLACE] scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^[METHOD] declareNativeFunctionType [TYPE] void [PARAMETER] Scope scope JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  FunctionType t  [TYPE]  String ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeType ( scope, name, typeRegistry .getNativeObjectType (  )   ) ;^205^^^^^203^206^[REPLACE] declareNativeType ( scope, name, typeRegistry.getNativeType ( tId )  ) ;^[METHOD] declareNativeValueType [TYPE] void [PARAMETER] Scope scope String name JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeType ( scope, name, typeRegistry.getNativeFunctionType ( tId )  ) ;^205^^^^^203^206^[REPLACE] declareNativeType ( scope, name, typeRegistry.getNativeType ( tId )  ) ;^[METHOD] declareNativeValueType [TYPE] void [PARAMETER] Scope scope String name JSTypeNative tId [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node functionNode  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  JSTypeNative tId  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^scope.declare ( name, this, t, this, false ) ;^209^^^^^208^210^[REPLACE] scope.declare ( name, null, t, null, false ) ;^[METHOD] declareNativeType [TYPE] void [PARAMETER] Scope scope String name JSType t [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType t  [TYPE]  Node functionNode  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^209^^^^^208^210^[ADD] scope.declare ( name, null, t, null, false ) ;^[METHOD] declareNativeType [TYPE] void [PARAMETER] Scope scope String name JSType t [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType t  [TYPE]  Node functionNode  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( n.getType (  )   !=  Token.GETPROP )  {^218^^^^^217^229^[REPLACE] if  ( n.getType (  )  == Token.GETPROP )  {^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^Node firstChild = n.getFirstChild (  ) ;Node maybeOwner = firstChild.getFirstChild (  ) ;^218^219^220^221^222^217^229^[ADD] if  ( n.getType (  )  == Token.GETPROP )  { Node firstChild = n.getFirstChild (  ) ; if  ( firstChild.getType (  )  == Token.GETPROP && firstChild.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { Node maybeOwner = firstChild.getFirstChild (  ) ;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( firstChild.getType (  )  == Token.GETPROP ) {^220^221^^^^217^229^[REPLACE] if  ( firstChild.getType (  )  == Token.GETPROP && firstChild.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^220^221^222^223^224^217^229^[ADD] if  ( firstChild.getType (  )  == Token.GETPROP && firstChild.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { Node maybeOwner = firstChild.getFirstChild (  ) ; if  ( maybeOwner.isQualifiedName (  )  )  { return maybeOwner;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( root .getQualifiedName (  )   )  {^223^^^^^217^229^[REPLACE] if  ( maybeOwner.isQualifiedName (  )  )  {^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^return maybeOwner;^223^224^225^^^217^229^[ADD] if  ( maybeOwner.isQualifiedName (  )  )  { return maybeOwner; }^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return root;^224^^^^^217^229^[REPLACE] return maybeOwner;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node maybeOwner = root.getFirstChild (  ) ;^222^^^^^217^229^[REPLACE] Node maybeOwner = firstChild.getFirstChild (  ) ;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^222^^^^^217^229^[ADD] Node maybeOwner = firstChild.getFirstChild (  ) ;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node firstChild = node.getFirstChild (  ) ;^219^^^^^217^229^[REPLACE] Node firstChild = n.getFirstChild (  ) ;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( root.isQualifiedName (  )  )  {^223^^^^^217^229^[REPLACE] if  ( maybeOwner.isQualifiedName (  )  )  {^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node maybeOwner = root.getLastChild (  ) ;^222^^^^^217^229^[REPLACE] Node maybeOwner = firstChild.getFirstChild (  ) ;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node firstChild = node .getLastChild (  )  ;^219^^^^^217^229^[REPLACE] Node firstChild = n.getFirstChild (  ) ;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return true;^228^^^^^217^229^[REPLACE] return null;^[METHOD] getPrototypePropertyOwner [TYPE] Node [PARAMETER] Node n [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( n.getType (  )  == Token.FUNCTION ) {^251^252^^^^249^260^[REPLACE] if  ( n.getType (  )  == Token.FUNCTION || n.getType (  )  == Token.SCRIPT )  {^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  parent  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^sourceName =   ( Striparentg )  parent.getProp ( Node.SOURCENAME_PROP ) ;^253^^^^^249^260^[REPLACE] sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  parent  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^sourceName =   ( Strinullg )  null.getProp ( Node.SOURCENAME_PROP ) ;^253^^^^^249^260^[REPLACE] sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  parent  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return parent == null || parent.setJSType (  )  != Token.FUNCTION || n == parent.getFirstChild (  )  || parent == scope.getRootNode (  ) ;^258^259^^^^249^260^[REPLACE] return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  )  || parent == scope.getRootNode (  ) ;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  parent  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return getDeclaredTypeInAnnotation ( t.getInput (  ) , node, info ) ;^273^^^^^271^274^[REPLACE] return getDeclaredTypeInAnnotation ( t.getSourceName (  ) , node, info ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] NodeTraversal t Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  parent  root  [TYPE]  String name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType jsType = false;^278^^^^^277^321^[REPLACE] JSType jsType = null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^Node objNode  =  node.getFirstChild (  )  ;^279^280^^^^277^321^[REPLACE] Node objNode = node.getType (  )  == Token.GETPROP ? node.getFirstChild (  )  : null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^279^280^^^^277^321^[ADD] Node objNode = node.getType (  )  == Token.GETPROP ? node.getFirstChild (  )  : null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info == this )  {^281^^^^^277^321^[REPLACE] if  ( info != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^282^^^^^277^321^[REPLACE] if  ( info.hasType (  )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^jsType = info.getType (  ) .evaluate ( scope ) ;String fnName = node.getQualifiedName (  ) ;^282^283^284^285^^277^321^[ADD] if  ( info.hasType (  )  )  { jsType = info.getType (  ) .evaluate ( scope ) ; } else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  { String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info == null || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^284^^^^^277^321^[REPLACE] } else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info.isConstructor (  )  ) {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return false;^289^^^^^277^321^[REPLACE] return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (root == null )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^302^303^304^305^306^277^321^[ADD] if  ( objNode != null )  { if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { builder.inferThisType ( info, objNode.getFirstChild (  )  ) ; searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^303^304^305^306^^277^321^[ADD] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { builder.inferThisType ( info, objNode.getFirstChild (  )  ) ; searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^} else if  ( objNode.getType (  )   ||  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^searchedForThisType = false;^309^^^^^277^321^[REPLACE] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^309^^^^^277^321^[ADD] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^searchedForThisType = false;^306^^^^^303^310^[REPLACE] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  else {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^searchedForThisType = false;^306^^^^^277^321^[REPLACE] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^306^^^^^277^321^[ADD] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode.getType (  )  == Token.GETPROP || objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.getType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^}   builder.inferThisType ( info, objNode.getJSType (  )  ) ;searchedForThisType = true;^307^308^309^310^^277^321^[ADD] else if  ( objNode.getType (  )  == Token.THIS )  { builder.inferThisType ( info, objNode.getJSType (  )  ) ; searchedForThisType = true; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( searchedForThisType )  {^313^^^^^277^321^[REPLACE] if  ( !searchedForThisType )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^builder.inferThisType ( info,  ( Node )  null ) ;^313^314^315^^^277^321^[ADD] if  ( !searchedForThisType )  { builder.inferThisType ( info,  ( Node )  null ) ; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^builder.inferThisType ( info,  ( Node )  false ) ;^314^^^^^277^321^[REPLACE] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^jsType =  null.buildAndRegister (  ) ;^317^^^^^277^321^[REPLACE] jsType = builder.buildAndRegister (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^String fnName = root.getQualifiedName (  ) ;^285^^^^^277^321^[REPLACE] String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, root, sourceName, scope ) .inferTemplateTypeName ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^boolean searchedForThisType = true;^301^^^^^277^321^[REPLACE] boolean searchedForThisType = false;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^301^^^^^277^321^[ADD] boolean searchedForThisType = false;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  typeRegistry.declareType ( fnName )  == false )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^return null;^288^289^290^^^277^321^[ADD] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  { return null; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return true;^289^^^^^277^321^[REPLACE] return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode == false )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^} else if  ( objNode.getType (  )   !=  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^306^^^^^303^310^[ADD] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^313^314^315^^^277^321^[ADD] if  ( !searchedForThisType )  { builder.inferThisType ( info,  ( Node )  null ) ; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REMOVE]^if  ( parent.getType (  )  == Token.NAME )  { return;^314^^^^^277^321^[REMOVE] ^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return this;^289^^^^^277^321^[REPLACE] return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^String fnName = node.isQualifiedName (  ) ;^285^^^^^277^321^[REPLACE] String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, ownerName, scope ) .inferTemplateTypeName ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^jsType =  null.getType (  ) .evaluate ( scope ) ;^283^^^^^277^321^[REPLACE] jsType = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^284^^^^^277^321^[REPLACE] } else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  typeRegistry.getType ( fnName )  == true )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( root == null )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  objNode.getFirstChild (  ) .getString (  ) .equals ( "prototype" )  )  {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^}   searchedForThisType = true;^307^308^309^310^^277^321^[ADD] else if  ( objNode.getType (  )  == Token.THIS )  { builder.inferThisType ( info, objNode.getJSType (  )  ) ; searchedForThisType = true; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode.getType (  )  == Token.GETPROP ) {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^} else if  ( root.getType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( !true )  {^313^^^^^277^321^[REPLACE] if  ( !searchedForThisType )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^285^286^^288^289^277^321^[ADD] String fnName = node.getQualifiedName (  ) ;  if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  { return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  typeRegistry.declareType ( fnName )  == null )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.getType (  )   !=  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.getType (  )   ||  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope )  .inferThisType ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^}   String fnName = node.getQualifiedName (  ) ;^284^285^^^^277^321^[ADD] else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  { String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  == true )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode == null )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^builder.inferThisType ( info,  ( Node )  this ) ;^314^^^^^277^321^[REPLACE] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^314^^^^^277^321^[ADD] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^String fnName = root.isQualifiedName (  ) ;^285^^^^^277^321^[REPLACE] String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, parent, sourceName, scope ) .inferTemplateTypeName ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  typeRegistry.getType ( fnName )  == null )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode == true )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^builder .inferThisType ( info )  ;^314^^^^^277^321^[REPLACE] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^292^293^294^^^277^321^[ADD] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.setJSType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^builder.inferThisType ( info,  ( Node )  true ) ;^314^^^^^277^321^[REPLACE] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( sourceName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info.isConstructor (  )  && typeRegistry.declareType ( fnName )  == null )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^} else if  ( objNode.getType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^317^^^^^277^321^[ADD] jsType = builder.buildAndRegister (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^String fnName = parent.isQualifiedName (  ) ;^285^^^^^277^321^[REPLACE] String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return rhsValue.getJSType (  ) ;^320^^^^^277^321^[REPLACE] return jsType;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  Node firstChild  functionNode  maybeOwner  n  node  objNode  parent  root  [TYPE]  String fnName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^Preconditions.checkState ( sourceName == null ) ;^334^^^^^333^401^[REPLACE] Preconditions.checkState ( sourceName != null ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSDocInfo info = parent.getJSDocInfo (  ) ;^336^^^^^333^401^[REPLACE] JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( n.getChildCount (  )   <=  1 )  {^344^^^^^333^401^[REPLACE] if  ( n.getChildCount (  )  > 1 )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node parentame = n.getFirstChild (  ) ;^353^^^^^344^356^[REPLACE] Node name = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info == null )  {^345^^^^^333^401^[REPLACE] if  ( info != null )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, parent, MULTIPLE_VAR_DEF )  ) ;^347^^^^^333^401^[REPLACE] compiler.report ( JSError.make ( sourceName, n, MULTIPLE_VAR_DEF )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^347^^^^^333^401^[ADD] compiler.report ( JSError.make ( sourceName, n, MULTIPLE_VAR_DEF )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^349^^^^^333^401^[REPLACE] for  ( Node name : n.children (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( NodeUtil.getStringValue ( n )  )  {^369^^^^^333^401^[REPLACE] if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^defineSlot ( n.getFirstChild (  ) , n, functionType ) ;^369^370^371^^^333^401^[ADD] if  ( NodeUtil.isFunctionDeclaration ( n )  )  { defineSlot ( n.getFirstChild (  ) , n, functionType ) ; }^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node key = value.getFirstChild (  ) ;^370^^^^^333^401^[REPLACE] defineSlot ( n.getFirstChild (  ) , n, functionType ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( parent.getFirstChild (  ) , n, functionType ) ;^370^^^^^333^401^[REPLACE] defineSlot ( n.getFirstChild (  ) , n, functionType ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( rvalue.getType (  )  != Token.FUNCTION || info != null && info.isConstructor (  )  )  {^387^388^^^^333^401^[REPLACE] if  ( rvalue.getType (  )  == Token.FUNCTION || info != null && info.isConstructor (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( info == parentull ) {^391^^^^^333^401^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^}   info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^391^392^393^394^395^333^401^[ADD] else if  ( info != null && info.hasEnumParameterType (  )  )  { lvalue.setJSType ( getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ; }^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^lvalue.setJSType ( getEnumType ( rvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^392^393^394^^^333^401^[REPLACE] lvalue.setJSType ( getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^getEnumType ( lvalue.getQualifiedName (  ) , parent, rvalue, info.getEnumParameterType (  )  .equals ( ownerName )   )  ) ;^393^394^^^^333^401^[REPLACE] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^getEnumType ( rvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^393^394^^^^333^401^[REPLACE] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^393^394^395^^^333^401^[ADD] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ; }^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^info.getEnumParameterType (  ) .setJSType ( scope )  )  ) ;^394^^^^^333^401^[REPLACE] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^info.hasEnumParameterType (  ) .evaluate ( scope )  )  ) ;^394^^^^^333^401^[REPLACE] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^getFunctionType ( lvalue.getQualifiedName (  ) , root, info, lvalue ) ;^389^390^^^^387^395^[REPLACE] getFunctionType ( lvalue.getQualifiedName (  ) , rvalue, info, lvalue ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^getFunctionType ( rvalue.isQualifiedName (  ) , rvalue, info, lvalue ) ;^389^390^^^^387^395^[REPLACE] getFunctionType ( lvalue.getQualifiedName (  ) , rvalue, info, lvalue ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( info == true ) {^391^^^^^333^401^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^lvalue.setJSType ( getEnumType ( lvalue.getQualifiedName (  ) , parent, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^392^393^394^^^333^401^[REPLACE] lvalue.setJSType ( getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^getEnumType ( lvalue .isQualifiedName (  )  , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^393^394^^^^333^401^[REPLACE] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^getEnumType ( rvalue.isQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^393^394^^^^333^401^[REPLACE] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^info .hasEnumParameterType (  )  .evaluate ( scope )  )  ) ;^394^^^^^333^401^[REPLACE] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^info  =  rvalue.getJSDocInfo (  ) ;^386^^^^^333^401^[REPLACE] info =  ( info != null )  ? info : rvalue.getJSDocInfo (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node catchName = parent.getFirstChild (  ) ;^339^^^^^333^401^[REPLACE] Node catchName = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node name = n .getLastChild (  )  ;^353^^^^^333^401^[REPLACE] Node name = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^353^^^^^333^401^[ADD] Node name = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^int rootType = parent .getType (  )  ;^360^^^^^333^401^[REPLACE] int parentType = parent.getType (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String functionName = parent.getFirstChild (  ) .getString (  ) ;^366^^^^^333^401^[REPLACE] String functionName = n.getFirstChild (  ) .getString (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType functionType = getFunctionType ( functionName, n, info, this ) ;^367^368^^^^333^401^[REPLACE] FunctionType functionType = getFunctionType ( functionName, n, info, null ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node rvalue = parent.getFirstChild (  ) ;^384^^^^^333^401^[REPLACE] Node rvalue = n.getLastChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^384^^^^^333^401^[ADD] Node rvalue = n.getLastChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node lvalue = parent.getFirstChild (  ) ;^385^^^^^333^401^[REPLACE] Node lvalue = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return ;^399^^^^^333^401^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node value = rvalue.getFirstChild (  ) ;^413^^^^^412^441^[REPLACE] Node value = name.getFirstChild (  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value != null ) {^415^^^^^412^441^[REPLACE] if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info != true )  {^424^^^^^415^440^[REPLACE] if  ( info == null )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( info.hasEnumParameterType (  )  )  {^430^^^^^415^440^[REPLACE] } else if  ( info.hasEnumParameterType (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^433^^^^^415^440^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, rvalue, info ) ;^436^^^^^415^440^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( var.getString (  ) , value, info, var ) ;^434^^^^^415^440^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getEnumType ( null.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^431^432^^^^415^440^[REPLACE] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( info.isConstructor (  )  )  {^433^^^^^415^440^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^}   type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^433^434^435^436^437^415^440^[ADD] else if  ( info.isConstructor (  )  )  { type = getFunctionType ( name.getString (  ) , value, info, name ) ; } else { type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ; }^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, var, info ) ;^436^^^^^415^440^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( value.getString (  ) , value, info, value ) ;^434^^^^^415^440^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getEnumType ( parent.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^431^432^^^^415^440^[REPLACE] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^431^432^^^^415^440^[ADD] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( rvalue.getString (  ) , value, info, rvalue ) ;^434^^^^^415^440^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^434^^^^^415^440^[ADD] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, null, info ) ;^436^^^^^415^440^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : true;^428^429^^^^415^440^[REPLACE] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean isExtern = t.getInput (  ) .isExtern (  ) ;^426^^^^^415^440^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^436^^^^^415^440^[ADD] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getEnumType ( var.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^431^432^^^^415^440^[REPLACE] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( parent.getString (  ) , value, info, parent ) ;^434^^^^^415^440^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : false;^428^429^^^^415^440^[REPLACE] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^428^429^^^^415^440^[ADD] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType type = this;^423^^^^^415^440^[REPLACE] JSType type = null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String functionName = var.getString (  ) ;^417^^^^^412^441^[REPLACE] String functionName = name.getString (  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^417^^^^^412^441^[ADD] String functionName = name.getString (  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType functionType = getFunctionType ( functionName, value, info, this ) ;^418^419^^^^412^441^[REPLACE] FunctionType functionType = getFunctionType ( functionName, value, info, null ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info != null )  {^424^^^^^412^441^[REPLACE] if  ( info == null )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^424^425^426^427^428^412^441^[ADD] if  ( info == null )  {  CompilerInput input = compiler.getInput ( sourceName ) ; Preconditions.checkNotNull ( input, sourceName ) ; type = input.isExtern (  )  ?^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( info.hasEnumParameterType (  )  )  {^430^^^^^412^441^[REPLACE] } else if  ( info.hasEnumParameterType (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^433^^^^^412^441^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, var, info ) ;^436^^^^^433^437^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( var.getString (  ) , value, info, var ) ;^434^^^^^412^441^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^434^^^^^412^441^[ADD] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, rvalue, info ) ;^436^^^^^412^441^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getEnumType ( null.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^431^432^^^^412^441^[REPLACE] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^431^432^^^^412^441^[ADD] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( info.isConstructor (  )  )  {^433^^^^^412^441^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( parent.getString (  ) , value, info, parent ) ;^434^^^^^412^441^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getEnumType ( var.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^431^432^^^^412^441^[REPLACE] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( rvalue.getString (  ) , value, info, rvalue ) ;^434^^^^^412^441^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, var, info ) ;^436^^^^^412^441^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^436^^^^^412^441^[ADD] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : this;^428^429^^^^412^441^[REPLACE] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^428^429^^^^412^441^[ADD] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean isExtern = t.getInput (  ) .isExtern (  ) ;^426^^^^^412^441^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^430^^^^^412^441^[REPLACE] } else if  ( info.hasEnumParameterType (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^}   info.getEnumParameterType (  ) .evaluate ( scope )  ) ;type = getFunctionType ( name.getString (  ) , value, info, name ) ;^430^431^432^433^434^412^441^[ADD] else if  ( info.hasEnumParameterType (  )  )  { type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ; } else if  ( info.isConstructor (  )  )  { type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, null, info ) ;^436^^^^^412^441^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  getFunctionType ( null.getString (  ) , value, info, null ) ;^434^^^^^412^441^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String functionName = value.getParent (  ) ;^417^^^^^412^441^[REPLACE] String functionName = name.getString (  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType functionType = getFunctionType ( functionName, value, info, false ) ;^418^419^^^^412^441^[REPLACE] FunctionType functionType = getFunctionType ( functionName, value, info, null ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType type = this;^423^^^^^412^441^[REPLACE] JSType type = null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^423^^^^^412^441^[ADD] JSType type = null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^CompilerInput input = compiler .getTypeRegistry (  )  ;^426^^^^^412^441^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  firstChild  functionNode  lvalue  maybeOwner  n  name  node  objNode  parent  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  isExtern  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType functionType = this;^456^^^^^455^548^[REPLACE] FunctionType functionType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( rValue == false && rValue.isQualifiedName (  )  )  {^459^^^^^455^548^[REPLACE] if  ( rValue != null && rValue.isQualifiedName (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( var == null && var.getType (  )  instanceof FunctionType )  {^461^^^^^455^548^[REPLACE] if  ( var != null && var.getType (  )  instanceof FunctionType )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType == null && functionType.isConstructor (  )  )  {^463^^^^^455^548^[REPLACE] if  ( functionType != null && functionType.isConstructor (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^463^464^465^^^455^548^[ADD] if  ( functionType != null && functionType.isConstructor (  )  )  { typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( sourceName, functionType.getInstanceType (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( name, functionType.getPrototype (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType =  ( EnumType )  var.getType (  ) ; ;^462^^^^^455^548^[REPLACE] functionType =  ( FunctionType )  var.getType (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^462^^^^^455^548^[ADD] functionType =  ( FunctionType )  var.getType (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType == null && functionType.isConstructor (  )  )  {^463^^^^^455^548^[REPLACE] if  ( functionType != null && functionType.isConstructor (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( name, propType.getPrototype (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return propType;^467^^^^^455^548^[REPLACE] return functionType;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( rValue.isQualifiedName (  )  ) ;^460^^^^^455^548^[REPLACE] Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^460^461^462^463^464^455^548^[ADD] Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ; if  ( var != null && var.getType (  )  instanceof FunctionType )  { functionType =  ( FunctionType )  var.getType (  ) ; if  ( functionType != null && functionType.isConstructor (  )  )  { typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  var.getType (  )  instanceof FunctionType )  {^461^^^^^455^548^[REPLACE] if  ( var != null && var.getType (  )  instanceof FunctionType )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^functionType =  ( FunctionType )  var.getType (  ) ;typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^461^462^463^464^465^455^548^[ADD] if  ( var != null && var.getType (  )  instanceof FunctionType )  { functionType =  ( FunctionType )  var.getType (  ) ; if  ( functionType != null && functionType.isConstructor (  )  )  { typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType == this ) {^463^^^^^455^548^[REPLACE] if  ( functionType != null && functionType.isConstructor (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType == null ) {^463^^^^^455^548^[REPLACE] if  ( functionType != null && functionType.isConstructor (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( name, propType.getInstanceType (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( parametersNode.getQualifiedName (  )  ) ;^460^^^^^455^548^[REPLACE] Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node owner = false;^470^^^^^455^548^[REPLACE] Node owner = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( lvalueNode == null )  {^471^^^^^455^548^[REPLACE] if  ( lvalueNode != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^owner =  getPrototypePropertyOwner ( parent ) ;^472^^^^^455^548^[REPLACE] owner = getPrototypePropertyOwner ( lvalueNode ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^owner =  getPrototypePropertyOwner ( var ) ;^472^^^^^455^548^[REPLACE] owner = getPrototypePropertyOwner ( lvalueNode ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node errorRoot  =  lvalueNode ;^475^^^^^455^548^[REPLACE] Node errorRoot = rValue == null ? lvalueNode : rValue;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^475^^^^^455^548^[ADD] Node errorRoot = rValue == null ? lvalueNode : rValue;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean isFnLiteral = rValue != null  <  rValue.getType (  )  == Token.FUNCTION;^476^477^^^^455^548^[REPLACE] boolean isFnLiteral = rValue != null && rValue.getType (  )  == Token.FUNCTION;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^476^477^^^^455^548^[ADD] boolean isFnLiteral = rValue != null && rValue.getType (  )  == Token.FUNCTION;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node fnRoot = isFnLiteral ? rValue : false;^478^^^^^455^548^[REPLACE] Node fnRoot = isFnLiteral ? rValue : null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^478^^^^^455^548^[ADD] Node fnRoot = isFnLiteral ? rValue : null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node parametersNode = isFnLiteral ? rValue.getFirstChild (  ) .getNext (  )  : this;^479^480^^^^455^548^[REPLACE] Node parametersNode = isFnLiteral ? rValue.getFirstChild (  ) .getNext (  )  : null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType != this && info != this && info.hasType (  )  )  {^482^^^^^455^548^[REPLACE] if  ( functionType == null && info != null && info.hasType (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( type.restrictByNotNullOrUndefined (  )  )  {^487^^^^^455^548^[REPLACE] if  ( type.isFunctionType (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  ( FunctionType )  var.getType (  ) ; ;^488^^^^^455^548^[REPLACE] functionType =  ( FunctionType )  type;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^488^^^^^455^548^[ADD] functionType =  ( FunctionType )  type;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^type =  null.restrictByNotNullOrUndefined (  ) ;^486^^^^^455^548^[REPLACE] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^486^^^^^455^548^[ADD] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType type = info.hasType (  ) .evaluate ( scope ) ;^483^^^^^455^548^[REPLACE] JSType type = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^487^^^^^455^548^[REPLACE] if  ( type.isFunctionType (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType type = info.getType (  ) .setJSType ( scope ) ;^483^^^^^455^548^[REPLACE] JSType type = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^483^^^^^455^548^[ADD] JSType type = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType != null )  {^493^^^^^455^548^[REPLACE] if  ( functionType == null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^493^494^495^^^455^548^[ADD] if  ( functionType == null )  { if  ( info == null || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info != false ) {^494^495^^^^455^548^[REPLACE] if  ( info == null || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( lvalueNode != null && lvalueNode.getType (  )  != Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^502^503^^^^494^525^[REPLACE] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( var == null )  {^506^^^^^502^524^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (thisType == true )  {^509^^^^^502^524^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^propType =  findOverriddenFunction ( thisType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^510^511^^^^502^524^[REPLACE] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType == null )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^514^515^516^517^518^502^524^[ADD] if  ( propType != null )  { functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^502^524^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^515^516^517^^^502^524^[ADD] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType.hasOwnProperty ( var.getType (  )  ) ;^507^^^^^502^524^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType propType = true;^508^^^^^502^524^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ownerType == null )  {^509^^^^^502^524^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^510^511^^^^502^524^[ADD] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType == null )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  new FunctionTypeBuilder ( null, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^502^524^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( var.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^502^524^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^507^^^^^502^524^[ADD] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( var == null )  {^506^^^^^494^525^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;FunctionType propType = null;^506^507^508^509^510^494^525^[ADD] if  ( var != null )  { ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null; if  ( ownerType != null )  { propType = findOverriddenFunction (^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (thisType == null )  {^509^^^^^494^525^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^propType =  findOverriddenFunction ( thisType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^510^511^^^^494^525^[REPLACE] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType == null )  {^514^^^^^494^525^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^494^525^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^515^516^517^^^494^525^[ADD] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType.hasOwnProperty ( var.getType (  )  ) ;^507^^^^^494^525^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType propType = true;^508^^^^^494^525^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ownerType == null )  {^509^^^^^494^525^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( rvalue.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^494^525^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType.cast ( var .getType (  )   ) ;^507^^^^^494^525^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType propType = this;^508^^^^^494^525^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^508^^^^^494^525^[ADD] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( lvalueNode != null ) {^502^503^^^^455^548^[REPLACE] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^506^507^508^509^510^502^524^[ADD] if  ( var != null )  { ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null; if  ( ownerType != null )  { propType = findOverriddenFunction (^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType.cast ( var.getNameNode (  )  ) ;^507^^^^^502^524^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^509^510^511^512^^502^524^[ADD] if  ( ownerType != null )  { propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (functionType == null )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( rValue.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^502^524^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( var == null )  {^506^^^^^455^548^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (thisType == null )  {^509^^^^^455^548^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^509^510^511^512^^455^548^[ADD] if  ( ownerType != null )  { propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^propType =  findOverriddenFunction ( thisType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^510^511^^^^455^548^[REPLACE] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^510^511^^^^455^548^[ADD] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType ==functionType )  {^514^^^^^455^548^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^455^548^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType.cast ( var .getType (  )   ) ;^507^^^^^455^548^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^507^508^^^^455^548^[ADD] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType propType = true;^508^^^^^455^548^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^508^^^^^455^548^[ADD] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType == this  )  {^514^^^^^455^548^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^514^515^516^517^518^455^548^[ADD] if  ( propType != null )  { functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^515^516^517^^^455^548^[ADD] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( var.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^455^548^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType.cast ( var.getNameNode (  )  ) ;^507^^^^^455^548^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType propType = false;^508^^^^^455^548^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info != false || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^494^495^^^^455^548^[REPLACE] if  ( info == null || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^494^495^^^^455^548^[ADD] if  ( info == null || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( thisType == null )  {^509^^^^^502^524^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^propType =  findOverriddenFunction ( null, lvalueNode.getLastChild (  ) .getString (  )  ) ;^510^511^^^^502^524^[REPLACE] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType ==functionType )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType .getConstructor (  )  ;^507^^^^^502^524^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType propType = this;^508^^^^^502^524^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( thisType == this )  {^509^^^^^494^525^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = ObjectType.cast ( var.getNameNode (  )  ) ;^507^^^^^494^525^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType == false )  {^514^^^^^494^525^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( rValue.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^494^525^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^502^503^504^505^^455^548^[ADD] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  { Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (thisType == null )  {^509^^^^^502^524^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType == true )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^508^^^^^502^524^[ADD] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType == false )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( parametersNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^502^524^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^504^505^^^^502^524^[ADD] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ownerType == null )  {^509^^^^^455^548^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( propType == null )  {^514^^^^^455^548^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  new FunctionTypeBuilder ( ownerName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^455^548^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType propType = this;^508^^^^^455^548^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( root.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^455^548^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType !=propType )  {^528^^^^^455^548^[REPLACE] if  ( functionType == null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^528^529^530^531^532^455^548^[ADD] if  ( functionType == null )  { functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  new FunctionTypeBuilder ( null, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^529^530^531^532^^455^548^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^529^530^531^^^455^548^[ADD] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^529^530^531^532^^455^548^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( rvalue == false )  {^542^^^^^455^548^[REPLACE] if  ( rValue != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^rValue .getJSType (  )  ;^543^^^^^455^548^[REPLACE] rValue.setJSType ( functionType ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return propType;^547^^^^^455^548^[REPLACE] return functionType;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  ownerName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType propType = thisType .isPropertyTypeInferred ( functionName )  ;^557^^^^^553^573^[REPLACE] JSType propType = ownerType.getPropertyType ( propName ) ;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^557^^^^^553^573^[ADD] JSType propType = ownerType.getPropertyType ( propName ) ;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ! propType instanceof FunctionType )  {^558^^^^^553^573^[REPLACE] if  ( propType instanceof FunctionType )  {^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ! propType instanceof FunctionType )  {^566^^^^^553^573^[REPLACE] if  ( propType instanceof FunctionType )  {^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^return  ( FunctionType )  propType;^566^567^568^^^553^573^[ADD] if  ( propType instanceof FunctionType )  { return  ( FunctionType )  propType; }^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return rhsValue.getJSType (  ) ;^567^^^^^553^573^[REPLACE] return  ( FunctionType )  propType;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^propType =  thisType.getPropertyType ( propName ) ;^565^^^^^553^573^[REPLACE] propType = iface.getPropertyType ( propName ) ;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return rhsValue.getJSType (  ) ;^559^^^^^553^573^[REPLACE] return  ( FunctionType )  propType;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return true;^572^^^^^553^573^[REPLACE] return null;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType propType  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^EnumType enumType = false;^590^^^^^589^631^[REPLACE] EnumType enumType = null;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^while  ( parent == null )  {^600^^^^^589^631^[REPLACE] while  ( key != null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( enumType.hasOwnProperty ( sourceName )  )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^603^604^605^606^607^589^631^[ADD] if  ( enumType.hasOwnProperty ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ; } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType .getElementsType (  )  ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^609^^^^^605^610^[ADD] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, sourceName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSError .make ( name , maybeOwner )   ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, parent, ENUM_DUP, keyName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, propName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^} else if  ( !codingConvention.isValidEnumKey ( parentName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^if  ( parent.getType (  )  == Token.NAME )  { return;^609^^^^^605^610^[REMOVE] ^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSError.make ( sourceName, parent, ENUM_NOT_CONSTANT, keyName )  ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key =  parent.getNext (  ) ;^611^^^^^589^631^[REPLACE] key = key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^611^^^^^589^631^[ADD] key = key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key  = parent.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String parentName = NodeUtil.isFunctionDeclaration ( key ) ;^601^^^^^589^631^[REPLACE] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value == null )  {^593^^^^^589^631^[REPLACE] if  ( value != null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^593^594^^596^^589^631^[ADD] if  ( value != null )  { if  ( value.getType (  )  == Token.OBJECTLIT )  { enumType = typeRegistry.createEnumType ( name, elementsType ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^while  (parent == null )  {^600^^^^^589^631^[REPLACE] while  ( key != null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( codingConvention.isValidEnumKey ( keyName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^}   JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;enumType.defineElement ( keyName ) ;^605^606^607^608^609^589^631^[ADD] else if  ( !codingConvention.isValidEnumKey ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ; } else { enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType.hasOwnProperty ( keyName ) ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, parent, ENUM_NOT_CONSTANT, keyName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^return getDeclaredTypeInAnnotation ( t, n, info ) ;^607^^^^^589^631^[REMOVE] ^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, sourceName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^604^^^^^589^631^[ADD] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError .make ( ownerName , catchName )   ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( !codingConvention.isValidEnumKey ( parentName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, sourceName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, sourceName )  ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key =  ( key != null )  ? null : key.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String parentName = NodeUtil.getStringValue ( key ) ;^601^^^^^589^631^[REPLACE] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value.getType (  )   !=  Token.OBJECTLIT )  {^594^^^^^589^631^[REPLACE] if  ( value.getType (  )  == Token.OBJECTLIT )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( value.isQualifiedName (  )  )  {^614^^^^^589^631^[REPLACE] } else if  ( value.isQualifiedName (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( var == null && var.getType (  )  instanceof EnumType )  {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^functionType =  ( FunctionType )  var.getType (  ) ; ;^617^^^^^589^631^[REPLACE] enumType =  ( EnumType )  var.getType (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^617^^^^^589^631^[ADD] enumType =  ( EnumType )  var.getType (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( var.getQualifiedName (  )  ) ;^615^^^^^589^631^[REPLACE] Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  var .getJSType (  )   instanceof EnumType )  {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^enumType =  ( EnumType )  var.getType (  ) ;^616^617^618^^^589^631^[ADD] if  ( var != null && var.getType (  )  instanceof EnumType )  { enumType =  ( EnumType )  var.getType (  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( rvalue.getQualifiedName (  )  ) ;^615^^^^^589^631^[REPLACE] Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^615^616^617^618^^589^631^[ADD] Var var = scope.getVar ( value.getQualifiedName (  )  ) ; if  ( var != null && var.getType (  )  instanceof EnumType )  { enumType =  ( EnumType )  var.getType (  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^while  ( key == null )  {^600^^^^^589^631^[REPLACE] while  ( key != null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, ownerName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSError .make ( propName , objNode )   ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^scope, t.getPrototype (  ) .getReferenceName (  ) , t.getPrototype (  )  ) ;^604^^^^^589^631^[REMOVE] ^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key =  null.getNext (  ) ;^611^^^^^589^631^[REPLACE] key = key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key  =  null ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType.defineElement ( ownerName ) ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^606^607^^^^589^631^[ADD] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( !codingConvention .applySingletonGetter ( 1 , this , ownerType )   )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType.hasOwnProperty ( sourceName ) ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType =  typeRegistry.createEnumType ( null, elementsType ) ;^596^^^^^589^631^[REPLACE] enumType = typeRegistry.createEnumType ( name, elementsType ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key  =  this  ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node key = var.getLastChild (  ) ;^599^^^^^589^631^[REPLACE] Node key = value.getFirstChild (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^599^^^^^589^631^[ADD] Node key = value.getFirstChild (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( enumType.hasOwnProperty ( propName )  )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError .make ( ownerName , parametersNode )   ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, propName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  var.getType (  )  instanceof EnumType )  {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType =  typeRegistry.createEnumType ( sourceName, elementsType ) ;^596^^^^^589^631^[REPLACE] enumType = typeRegistry.createEnumType ( name, elementsType ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node key = rvalue.getFirstChild (  ) ;^599^^^^^589^631^[REPLACE] Node key = value.getFirstChild (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ;^615^^^^^589^631^[REPLACE] Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^594^595^596^^^589^631^[ADD] if  ( value.getType (  )  == Token.OBJECTLIT )  {  enumType = typeRegistry.createEnumType ( name, elementsType ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^614^^^^^589^631^[REPLACE] } else if  ( value.isQualifiedName (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  var.getNameNode (  )  instanceof EnumType )  {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^603^604^605^606^607^589^631^[ADD] if  ( enumType.hasOwnProperty ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ; } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^enumType.defineElement ( sourceName ) ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^607^^^^^589^631^[ADD] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError .make ( propName , n )   ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( !codingConvention.identifyTypeDefAssign ( ownerName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key  =  key.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, ownerName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError .make ( sourceName , functionNode )   ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^612^^^^^589^631^[ADD] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError .make ( sourceName , objNode )   ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( var.isQualifiedName (  )  ) ;^615^^^^^589^631^[REPLACE] Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^616^617^618^^^589^631^[ADD] if  ( var != null && var.getType (  )  instanceof EnumType )  { enumType =  ( EnumType )  var.getType (  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^596^^^^^589^631^[ADD] enumType = typeRegistry.createEnumType ( name, elementsType ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^key =  ( key != false )  ? false : key.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^601^^^^^589^631^[ADD] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var var = scope.getVar ( value .isQualifiedName (  )   ) ;^615^^^^^589^631^[REPLACE] Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( enumType != this )  {^622^^^^^589^631^[REPLACE] if  ( enumType == null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^624^^^^^589^631^[REPLACE] } else if  ( scope.isGlobal (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^}   typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^624^625^626^627^^589^631^[ADD] else if  ( scope.isGlobal (  )  )  { if  ( name != null && !name.isEmpty (  )  )  { typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  !name.isEmpty (  )  )  {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( sourceName, enumType.getElementsType (  )  ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( name != null && !name.isEmpty (  )  )  { typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( name == null && !name.isEmpty (  )  )  {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^626^^^^^589^631^[ADD] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( sourceName, var, ENUM_INITIALIZER )  ) ;^623^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, parent, ENUM_INITIALIZER )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( scope.isGlobal (  )  )  {^624^^^^^589^631^[REPLACE] } else if  ( scope.isGlobal (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( name == null && !name.equals (  )  )  {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( name, enumType .defineElement ( propName )   ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( name == true && !name.isEmpty (  )  )  {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^625^626^627^^^589^631^[ADD] if  ( name != null && !name.isEmpty (  )  )  { typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( ownerName, enumType.getElementsType (  )  ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return rhsValue.getJSType (  ) ;^630^^^^^589^631^[REPLACE] return enumType;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  Var var  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  EnumType enumType  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( name, parent, type, type != true ) ;^642^^^^^641^643^[REPLACE] defineSlot ( name, parent, type, type == null ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node name Node parent JSType type [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^642^^^^^641^643^[ADD] defineSlot ( name, parent, type, type == null ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node name Node parent JSType type [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  isExtern  isFnLiteral  searchedForThisType  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Preconditions.checkArgument ( inferred  &&  type != null ) ;^658^^^^^657^722^[REPLACE] Preconditions.checkArgument ( inferred || type != null ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^658^^^^^657^722^[ADD] Preconditions.checkArgument ( inferred || type != null ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean shouldDeclareOnGlobalThis = true;^661^^^^^657^722^[REPLACE] boolean shouldDeclareOnGlobalThis = false;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( parametersNode.getType (  )   &&  Token.NAME )  {^662^^^^^657^722^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Preconditions.checkArgument ( n.setJSType (  )  == Token.GETPROP  <  ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^672^673^674^675^^662^676^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.GETPROP && ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^n .getJSType (  )   == Token.GETPROP && ( parent^673^674^675^^^662^676^[REPLACE] n.getType (  )  == Token.GETPROP && ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^( var.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^674^675^^^^662^676^[REPLACE] ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^674^675^^^^662^676^[ADD] ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^parent.setJSType (  )  == Token.EXPR_RESULT )  ) ;^675^^^^^662^676^[REPLACE] parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^shouldDeclareOnGlobalThis = scope.isGlobal (  )   ||  ( parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.FUNCTION ) ;^668^669^670^^^657^722^[REPLACE] shouldDeclareOnGlobalThis = scope.isGlobal (  )  && ( parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.FUNCTION ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^shouldDeclareOnGlobalThis = scope.isGlobal (  )   >=  ( parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.FUNCTION ) ;^668^669^670^^^657^722^[REPLACE] shouldDeclareOnGlobalThis = scope.isGlobal (  )  && ( parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.FUNCTION ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String variableName = n.isQualifiedName (  ) ;^677^^^^^657^722^[REPLACE] String variableName = n.getQualifiedName (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^678^^^^^657^722^[REPLACE] Preconditions.checkArgument ( !variableName.isEmpty (  )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( scope.isDeclared ( qName, false )  )  {^681^^^^^657^722^[REPLACE] if  ( scope.isDeclared ( variableName, false )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( inferred )  {^686^^^^^681^721^[REPLACE] if  ( !inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^n.setJSType ( type ) ;^686^687^688^^^681^721^[ADD] if  ( !inferred )  { n.setJSType ( type ) ; }^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^n .getJSType (  )  ;^687^^^^^681^721^[REPLACE] n.setJSType ( type ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^687^^^^^681^721^[ADD] n.setJSType ( type ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^692^^^^^681^721^[REPLACE] if  ( shouldDeclareOnGlobalThis )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( !inferred )  {^696^^^^^681^721^[REPLACE] if  ( inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^globalThis.defineInferredProperty ( variableName, type, isExtern ) ;^703^^^^^696^704^[REPLACE] globalThis.defineDeclaredProperty ( variableName, type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^globalThis.defineInferredProperty ( variableName, type != null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^697^698^699^700^^681^721^[REPLACE] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.getType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^699^700^701^^^681^721^[REPLACE] typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^699^700^701^^^681^721^[ADD] typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType globalThis = typeRegistry.getType ( JSTypeNative.GLOBAL_THIS ) ;^693^694^^^^681^721^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^693^694^^^^681^721^[ADD] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerVarType = ownerVar.getType (  ) ;^695^^^^^681^721^[REPLACE] boolean isExtern = input.isExtern (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^696^697^698^699^700^681^721^[ADD] if  ( inferred )  { globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^globalThis .defineDeclaredProperty ( type , shouldDeclareOnGlobalThis )  ;^703^^^^^696^704^[REPLACE] globalThis.defineDeclaredProperty ( variableName, type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^globalThis.defineInferredProperty ( variableName, type != null ? typeRegistry.getType ( JSTypeNative.NO_TYPE )  : type,^697^698^699^700^^681^721^[REPLACE] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^697^698^699^^^681^721^[ADD] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  :^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ! scope.isGlobal (  )  ) {^709^^^^^681^721^[REPLACE] if  ( scope.isGlobal (  )  && type instanceof FunctionType )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^FunctionType fnType =  ( FunctionType )  type;FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^709^710^711^712^713^681^721^[ADD] if  ( scope.isGlobal (  )  && type instanceof FunctionType )  { FunctionType fnType =  ( FunctionType )  type; if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  { FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ; scope.declare ( variableName + ".prototype", n,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  fnType.isInterface (  )  )  {^711^^^^^681^721^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType superClassCtor = fnType.isConstructor (  ) ;^712^^^^^681^721^[REPLACE] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType t = typeRegistry.getNativeFunctionType ( tId ) ;^710^^^^^681^721^[REPLACE] FunctionType fnType =  ( FunctionType )  type;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( fnType.isConstructor (  )  ) {^711^^^^^681^721^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^712^^^^^681^721^[ADD] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean isExtern = t.getInput (  ) .isExtern (  ) ;^689^^^^^681^721^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType globalThis = typeRegistry .getNativeType ( null )  ;^693^694^^^^681^721^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var oldVar = scope.getVar ( propName ) ;^682^^^^^657^722^[REPLACE] Var oldVar = scope.getVar ( variableName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^682^^^^^657^722^[ADD] Var oldVar = scope.getVar ( variableName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( inferred )  {^686^^^^^657^722^[REPLACE] if  ( !inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^n .getJSType (  )  ;^687^^^^^657^722^[REPLACE] n.setJSType ( type ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^692^^^^^657^722^[REPLACE] if  ( shouldDeclareOnGlobalThis )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^692^693^694^695^^657^722^[ADD] if  ( shouldDeclareOnGlobalThis )  { ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ; boolean isExtern = input.isExtern (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( !inferred )  {^696^^^^^657^722^[REPLACE] if  ( inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^globalThis.defineInferredProperty ( variableName, type != true ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^697^698^699^700^^657^722^[REPLACE] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^697^698^699^^^657^722^[ADD] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  :^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry .getNativeObjectType (  )   : type, isExtern ) ;^699^700^701^^^657^722^[REPLACE] typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType globalThis = typeRegistry .getNativeType ( this )  ;^693^694^^^^657^722^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerVarType = ownerVar.getType (  ) ;^695^^^^^657^722^[REPLACE] boolean isExtern = input.isExtern (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^globalThis.defineDeclaredProperty ( variableName, type, true ) ;^703^^^^^696^704^[REPLACE] globalThis.defineDeclaredProperty ( variableName, type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^globalThis.defineInferredProperty   typeRegistry .getNativeObjectType (  )   ;^697^698^699^700^^657^722^[REPLACE] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^699^700^701^^^657^722^[ADD] typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  type instanceof FunctionType )  {^709^^^^^657^722^[REPLACE] if  ( scope.isGlobal (  )  && type instanceof FunctionType )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( fnType.isConstructor (  )  && fnType.isInterface (  )  )  {^711^^^^^657^722^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType superClassCtor = fnType.isConstructor (  ) ;^712^^^^^657^722^[REPLACE] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType t = typeRegistry.getNativeFunctionType ( tId ) ;^710^^^^^657^722^[REPLACE] FunctionType fnType =  ( FunctionType )  type;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType superClassCtor = fnType .isConstructor (  )  ;^712^^^^^657^722^[REPLACE] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^712^^^^^657^722^[ADD] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( fnType.isConstructor (  )  ) {^711^^^^^657^722^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var oldVar = scope.getVar ( ownerName ) ;^682^^^^^657^722^[REPLACE] Var oldVar = scope.getVar ( variableName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^CompilerInput input = compiler .getTypeRegistry (  )  ;^689^^^^^657^722^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType globalThis = typeRegistry.getType ( JSTypeNative.GLOBAL_THIS ) ;^693^694^^^^657^722^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType type  [TYPE]  Var oldVar  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  sourceName  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType fnThisType  globalThis  iface  ownerType  thisType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  CompilerInput input  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( relationship == null )  {^762^^^^^757^912^[REPLACE] if  ( relationship != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superClass == null && subClass != null )  {^767^^^^^757^912^[REPLACE] if  ( superClass != null && subClass != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( relationship.type  !=  SubclassType.INHERITS )  {^771^^^^^757^912^[REPLACE] if  ( relationship.type == SubclassType.INHERITS )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^771^772^773^^^757^912^[ADD] if  ( relationship.type == SubclassType.INHERITS )  { validator.expectSuperType ( t, n, superClass, subClass ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^validator.expectSuperType ( t, n, superClass, objectType ) ;^772^^^^^757^912^[REPLACE] validator.expectSuperType ( t, n, superClass, subClass ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  subCtor != true )  {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^codingConvention.applySingletonGetter ( superCtor, subCtor, relationship.type ) ;^776^777^^^^757^912^[REPLACE] codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType superCtor = subClass.cast (  ) ;^768^^^^^757^912^[REPLACE] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType subCtor = superClass.cast (  ) ;^769^^^^^757^912^[REPLACE] FunctionType subCtor = subClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( relationship.type  ||  SubclassType.INHERITS )  {^771^^^^^757^912^[REPLACE] if  ( relationship.type == SubclassType.INHERITS )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^validator.expectSuperType ( t, n, superClass, superClass ) ;^772^^^^^757^912^[REPLACE] validator.expectSuperType ( t, n, superClass, subClass ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == this ) {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^codingConvention.applySubclassRelationship ( subCtor, subCtor, relationship.type ) ;^776^777^^^^757^912^[REPLACE] codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType superClass = ObjectType.hasOwnProperty ( typeRegistry.getType ( relationship.superclassName )  ) ;^763^764^^^^757^912^[REPLACE] ObjectType superClass = ObjectType.cast ( typeRegistry.getType ( relationship.superclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType subClass = ObjectType.hasOwnProperty ( typeRegistry.getType ( relationship.subclassName )  ) ;^765^766^^^^757^912^[REPLACE] ObjectType subClass = ObjectType.cast ( typeRegistry.getType ( relationship.subclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^765^766^^^^757^912^[ADD] ObjectType subClass = ObjectType.cast ( typeRegistry.getType ( relationship.subclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType superCtor = type.cast (  ) ;^768^^^^^757^912^[REPLACE] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superClass == null ) {^767^^^^^757^912^[REPLACE] if  ( superClass != null && subClass != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^767^768^769^^^757^912^[ADD] if  ( superClass != null && subClass != null )  { FunctionType superCtor = superClass.getConstructor (  ) ; FunctionType subCtor = subClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == false ) {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^775^776^777^778^^757^912^[ADD] if  ( superCtor != null && subCtor != null )  { codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType superCtor = type.getConstructor (  ) ;^768^^^^^757^912^[REPLACE] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType subCtor = superClass.getConstructor (  ) ;^769^^^^^757^912^[REPLACE] FunctionType subCtor = subClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^validator.expectSuperType ( t, parent, superClass, subClass ) ;^772^^^^^757^912^[REPLACE] validator.expectSuperType ( t, n, superClass, subClass ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == null && subCtor != null )  {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( singletonGetterClassName == null )  {^784^^^^^757^912^[REPLACE] if  ( singletonGetterClassName != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( thisType == this  )  {^787^^^^^757^912^[REPLACE] if  ( objectType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( functionType == null )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, false, false, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, false ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^791^792^793^^^757^912^[ADD] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) ,^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType functionType = type.getConstructor (  ) ;^788^^^^^757^912^[REPLACE] FunctionType functionType = objectType.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, true, true, new FunctionParamBuilder ( typeRegistry ) .equals (  ) , objectType, true ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (getterType == null )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, true, true, new FunctionParamBuilder ( typeRegistry )  .LocalScopeBuilder ( parent )  , objectType, true ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType objectType = ObjectType.hasOwnProperty ( typeRegistry.getType ( singletonGetterClassName )  ) ;^785^786^^^^757^912^[REPLACE] ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( singletonGetterClassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^785^786^^^^757^912^[ADD] ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( singletonGetterClassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^788^^^^^757^912^[ADD] FunctionType functionType = objectType.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, this, this, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, this ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( objectType == false )  {^787^^^^^757^912^[REPLACE] if  ( objectType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^FunctionType functionType = objectType.getConstructor (  ) ;^787^788^^790^791^757^912^[ADD] if  ( objectType != null )  { FunctionType functionType = objectType.getConstructor (  ) ; if  ( functionType != null )  { FunctionType getterType = new FunctionType (^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == null )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^790^791^792^793^794^757^912^[ADD] if  ( functionType != null )  { FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, true, true, new FunctionParamBuilder ( typeRegistry ) .equals (  ) , type, true ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, this, this, new FunctionParamBuilder ( typeRegistry ) .equals (  ) , objectType, this ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == this )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegateRelationship == this  )  {^803^^^^^757^912^[REPLACE] if  ( delegateRelationship != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^803^804^805^806^807^757^912^[ADD] if  ( delegateRelationship != null )  { ObjectType delegatorObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegator )  ) ; ObjectType delegateBaseObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegateBase )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  delegateBaseObject != null && delegateSuperObject != null )  {^811^812^813^^^757^912^[REPLACE] if  ( delegatorObject != null && delegateBaseObject != null && delegateSuperObject != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegatorCtor == null && delegateBaseCtor != null && delegateSuperCtor != null )  {^820^821^^^^811^843^[REPLACE] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^820^821^822^823^824^811^843^[ADD] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  { FunctionParamBuilder functionParamBuilder = new FunctionParamBuilder ( typeRegistry ) ; functionParamBuilder.addRequiredParams (^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, true, true, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , true ) ;^826^827^828^^^820^842^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.declareType ( delegateBaseObject.getReferenceName (  ) , true, true, true ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegatorCtor = delegatorObject.cast (  ) ;^814^^^^^811^843^[REPLACE] FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateBaseCtor = thisType.cast (  ) ;^815^816^^^^811^843^[REPLACE] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^815^816^^^^811^843^[ADD] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateSuperCtor = ownerType.getConstructor (  ) ;^817^818^^^^811^843^[REPLACE] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^817^818^^^^811^843^[ADD] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, this, this, functionParamBuilder.addRequiredParams (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , this ) ;^826^827^828^^^811^843^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry .createEnumType ( propName , null )  ;^830^831^832^833^^811^843^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegatorCtor == null ) {^820^821^^^^757^912^[REPLACE] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( ownerType.getReferenceName (  ) , true, true, true ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegatorObject = ObjectType .getConstructor (  )  ;^804^805^^^^757^912^[REPLACE] ObjectType delegatorObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegator )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegateBaseObject = ObjectType.hasOwnProperty ( typeRegistry.getType ( delegateRelationship.delegateBase )  ) ;^806^807^^^^757^912^[REPLACE] ObjectType delegateBaseObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegateBase )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegatorCtor = delegatorObject .getPropertyType ( variableName )  ;^814^^^^^757^912^[REPLACE] FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateBaseCtor = thisType.getConstructor (  ) ;^815^816^^^^757^912^[REPLACE] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateSuperCtor = subClass.getConstructor (  ) ;^817^818^^^^757^912^[REPLACE] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, true, true, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , true ) ;^826^827^828^^^757^912^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , this, this, this ) ;^830^831^832^833^^757^912^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^830^831^832^^^757^912^[ADD] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null,^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegatorObject == null ) {^811^812^813^^^757^912^[REPLACE] if  ( delegatorObject != null && delegateBaseObject != null && delegateSuperObject != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, false, false, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , false ) ;^826^827^828^^^820^842^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^826^827^828^^^820^842^[ADD] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.declareType ( delegateBaseObject.getReferenceName (  ) , this, this, this ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegatorCtor = ownerType.getConstructor (  ) ;^814^^^^^811^843^[REPLACE] FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateBaseCtor = delegateBaseObject.cast (  ) ;^815^816^^^^811^843^[REPLACE] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, true, true, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , true ) ;^826^827^828^^^811^843^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getConstructor (  ) , false, false, false ) ;^830^831^832^833^^811^843^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^822^823^^^^820^842^[ADD] FunctionParamBuilder functionParamBuilder = new FunctionParamBuilder ( typeRegistry ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, true, true, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( type ) , true ) ;^826^827^828^^^820^842^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( type.getReferenceName (  ) , this, this, this ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( objectLiteralCast == true )  {^848^^^^^757^912^[REPLACE] if  ( objectLiteralCast != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( type == false ) {^851^^^^^757^912^[REPLACE] if  ( type != null && type.getConstructor (  )  != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^851^852^853^854^855^757^912^[ADD] if  ( type != null && type.getConstructor (  )  != null )  { objectLiteralCast.objectNode.setJSType ( type ) ; } else { compiler.report ( JSError.make ( t.getSourceName (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^compiler.report (   t.getSourceName (  )   ) ;^854^855^^^^851^856^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^compiler.report ( JSError.make ( t.getInput (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^854^855^^^^851^856^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^type   ;^852^^^^^757^912^[REPLACE] objectLiteralCast.objectNode.setJSType ( type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^852^^^^^757^912^[ADD] objectLiteralCast.objectNode.setJSType ( type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType type = ObjectType.hasOwnProperty ( typeRegistry.getType ( objectLiteralCast.typeName )  ) ;^849^850^^^^757^912^[REPLACE] ObjectType type = ObjectType.cast ( typeRegistry.getType ( objectLiteralCast.typeName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  type.getConstructor (  )  != null )  {^851^^^^^757^912^[REPLACE] if  ( type != null && type.getConstructor (  )  != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^compiler.report ( JSError.make ( t.getSourceName (  ) , parent, CONSTRUCTOR_EXPECTED )  ) ;^854^855^^^^851^856^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^compiler.report ( JSError .make ( keyName , objNode )   ) ;^854^855^^^^851^856^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( !t.getInput (  ) .isExterparent (  )  )  {^861^^^^^757^912^[REPLACE] if  ( !t.getInput (  ) .isExtern (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^nonExternFunctions.add ( parent ) ;^862^^^^^757^912^[REPLACE] nonExternFunctions.add ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( parent.getType (  )  == Token.ASSIGN ) {^866^867^^^^757^912^[REPLACE] if  ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^866^867^868^869^^757^912^[ADD] if  ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.NAME )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^return maybeOwner;^868^^^^^866^869^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  firstChild.isQualifiedName (  )  )  {^882^883^^^^757^912^[REPLACE] if  ( firstChild.getType (  )  == Token.GETPROP && firstChild.isQualifiedName (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , var, n, firstChild.getNext (  )  ) ;^884^885^^^^882^886^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , firstChild, n, firstChild.getNext (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, n .getString (  )  , firstChild, n, firstChild.getNext (  )  ) ;^884^885^^^^882^886^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , firstChild, n, firstChild.getNext (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^firstChild, n, firstChild.getNext (  )  ) ;^884^885^886^^^882^886^[ADD] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , firstChild, n, firstChild.getNext (  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^firstChild, n, firstChild.getParent (  )  ) ;^885^^^^^882^886^[REPLACE] firstChild, n, firstChild.getNext (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( parent.hasOneChild (  )  )  {^897^^^^^757^912^[REPLACE] if  ( n.hasOneChild (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForOldStyleTypedef ( t, parent ) ;^898^^^^^757^912^[REPLACE] checkForOldStyleTypedef ( t, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, n.getFirstChild (  ) , n.getString (  )  ) ;^899^^^^^757^912^[REPLACE] checkForTypedef ( t, n.getFirstChild (  ) , n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, parent.getFirstChild (  ) , n.getJSDocInfo (  )  ) ;^899^^^^^757^912^[REPLACE] checkForTypedef ( t, n.getFirstChild (  ) , n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, parent.getFirstChild (  ) , n.getString (  )  ) ;^899^^^^^757^912^[REPLACE] checkForTypedef ( t, n.getFirstChild (  ) , n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REMOVE]^jsType = builder.buildAndRegister (  ) ;^899^^^^^757^912^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( parent.getType (  )  == Token.EXPR_RESULT ) {^905^906^^^^757^912^[REPLACE] if  ( parent.getType (  )  == Token.EXPR_RESULT && n.isQualifiedName (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, parent, n.getString (  )  ) ;^907^^^^^905^909^[REPLACE] checkForTypedef ( t, n, n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, n, n.getString (  )  ) ;^907^^^^^905^909^[REPLACE] checkForTypedef ( t, n, n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REMOVE]^Node key = value.getFirstChild (  ) ;^907^^^^^905^909^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , n, parent, false ) ;^908^^^^^905^909^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , n, parent, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, parent.getString (  ) , n, parent, null ) ;^908^^^^^905^909^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , n, parent, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^return maybeOwner;^868^^^^^757^912^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^SubclassRelationship relationship = codingConvention.getDelegateRelationship ( parent ) ;^760^761^^^^757^912^[REPLACE] SubclassRelationship relationship = codingConvention.getClassesDefinedByCall ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType superCtor = ownerType.getConstructor (  ) ;^768^^^^^757^912^[REPLACE] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType subCtor = subClass.cast (  ) ;^769^^^^^757^912^[REPLACE] FunctionType subCtor = subClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^String singletonGetterClassName = codingConvention.getSingletonGetterClassName ( parent ) ;^782^783^^^^757^912^[REPLACE] String singletonGetterClassName = codingConvention.getSingletonGetterClassName ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( variableName )  ) ;^785^786^^^^757^912^[REPLACE] ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( singletonGetterClassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^DelegateRelationship delegateRelationship = codingConvention.getSingletonGetterClassName ( parent ) ;^801^802^^^^757^912^[REPLACE] DelegateRelationship delegateRelationship = codingConvention.getDelegateRelationship ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegateSuperObject = ObjectType.cast ( typeRegistry.getType ( codingConvention .getSingletonGetterClassName ( parametersNode )   )  ) ;^808^809^810^^^757^912^[REPLACE] ObjectType delegateSuperObject = ObjectType.cast ( typeRegistry.getType ( codingConvention.getDelegateSuperclassName (  )  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegatorCtor = type.cast (  ) ;^814^^^^^757^912^[REPLACE] FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateBaseCtor = type.getConstructor (  ) ;^815^816^^^^757^912^[REPLACE] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateSuperCtor = ownerType.getConstructor (  ) ;^817^818^^^^757^912^[REPLACE] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^822^823^^^^757^912^[ADD] FunctionParamBuilder functionParamBuilder = new FunctionParamBuilder ( typeRegistry ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, this, this, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , this ) ;^826^827^828^^^757^912^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( type.getConstructor (  ) , this, this, this ) ;^830^831^832^833^^757^912^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectLiteralCast objectLiteralCast = codingConvention.getObjectLiteralCast ( t, parent ) ;^846^847^^^^757^912^[REPLACE] ObjectLiteralCast objectLiteralCast = codingConvention.getObjectLiteralCast ( t, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType type = ObjectType .getConstructor (  )  ;^849^850^^^^757^912^[REPLACE] ObjectType type = ObjectType.cast ( typeRegistry.getType ( objectLiteralCast.typeName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^849^850^^^^757^912^[ADD] ObjectType type = ObjectType.cast ( typeRegistry.getType ( objectLiteralCast.typeName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^Node firstChild = parent.getFirstChild (  ) ;^881^^^^^757^912^[REPLACE] Node firstChild = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^881^^^^^757^912^[ADD] Node firstChild = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  SubclassRelationship relationship  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  variableName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( info != null ) {^922^^^^^921^948^[REPLACE] if  ( info == null || !info.hasTypedefType (  )  )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return maybeOwner;^923^^^^^921^948^[REPLACE] return;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String typedef = var.getQualifiedName (  ) ;^926^^^^^921^948^[REPLACE] String typedef = candidate.getQualifiedName (  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^926^927^928^929^^921^948^[ADD] String typedef = candidate.getQualifiedName (  ) ; if  ( typedef == null )  { return; }^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (variableName != null )  {^927^^^^^921^948^[REPLACE] if  ( typedef == null )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return maybeOwner;^928^^^^^921^948^[REPLACE] return;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.declareType ( propName ) ;^934^^^^^921^948^[REPLACE] typeRegistry.forwardDeclareType ( typedef ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType realType = info.getTypedefType (  ) .setJSType ( scope ) ;^936^^^^^921^948^[REPLACE] JSType realType = info.getTypedefType (  ) .evaluate ( scope ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^936^^^^^921^948^[ADD] JSType realType = info.getTypedefType (  ) .evaluate ( scope ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( realType != null )  {^937^^^^^921^948^[REPLACE] if  ( realType == null )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^937^938^939^940^941^921^948^[ADD] if  ( realType == null )  { compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ; }^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report (   t.getSourceName (  )   ) ;^938^939^940^^^921^948^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^t.getSourceName (  )   ) ;^939^940^^^^921^948^[REPLACE] JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^t .getInput ( variableName )  , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^940^^^^^921^948^[REPLACE] t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^if  ( name != null && !name.isEmpty (  )  )  { typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^940^^^^^921^948^[REMOVE] ^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.createEnumType ( typedef, realType ) ;^943^^^^^921^948^[REPLACE] typeRegistry.declareType ( typedef, realType ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( candidate.getType (  )   &&  Token.GETPROP )  {^944^^^^^921^948^[REPLACE] if  ( candidate.getType (  )  == Token.GETPROP )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( candidate, candidate.getProp (  ) , typeRegistry.getNativeType ( NO_TYPE ) , true ) ;^945^946^^^^921^948^[REPLACE] defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^945^946^^^^921^948^[ADD] defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( value, candidate .getProp (  )  , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^945^946^^^^921^948^[REPLACE] defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.getType ( NO_TYPE ) , false ) ;^946^^^^^921^948^[REPLACE] typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String typedef = codingConvention.getDelegateRelationship ( var ) ;^958^^^^^956^979^[REPLACE] String typedef = codingConvention.identifyTypeDefAssign ( candidate ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (singletonGetterClassName == null )  {^959^^^^^956^979^[REPLACE] if  ( typedef != null )  {^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^959^960^^^963^956^979^[ADD] if  ( typedef != null )  {  typeRegistry.forwardDeclareType ( typedef ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( realType != this )  {^968^^^^^956^979^[REPLACE] if  ( realType == null )  {^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^968^969^970^971^972^956^979^[ADD] if  ( realType == null )  { compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ; }^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report ( JSError.make ( t .getInput ( name )  , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^969^970^971^^^956^979^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^969^970^971^^^956^979^[ADD] compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^t.getSourceName (  )   ) ;^970^971^^^^956^979^[REPLACE] JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^t .getInput ( name )  , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^971^^^^^956^979^[REPLACE] t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSDocInfo info = value .getString (  )  ;^965^^^^^956^979^[REPLACE] JSDocInfo info = candidate.getJSDocInfo (  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType realType  =  null ;^966^967^^^^956^979^[REPLACE] JSType realType = info == null ? null : info.getType (  ) .evaluate ( scope ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^966^967^^^^956^979^[ADD] JSType realType = info == null ? null : info.getType (  ) .evaluate ( scope ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( realType != null )  {^968^^^^^956^979^[REPLACE] if  ( realType == null )  {^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^compiler.report (   t.getSourceName (  )   ) ;^969^970^971^^^956^979^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSError .make ( variableName , node )   ) ;^970^971^^^^956^979^[REPLACE] JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^970^971^^^^956^979^[ADD] JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^t.getInput (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^971^^^^^956^979^[REPLACE] t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSDocInfo info = rvalue.getString (  ) ;^965^^^^^956^979^[REPLACE] JSDocInfo info = candidate.getJSDocInfo (  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType realType = info != null ? null : info.getType (  ) .evaluate ( scope ) ;^966^967^^^^956^979^[REPLACE] JSType realType = info == null ? null : info.getType (  ) .evaluate ( scope ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  parametersNode  parent  rValue  root  rvalue  value  var  [TYPE]  String fnName  functionName  keyName  name  ownerName  propName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node ownerNode = parent.getLastChild (  ) ;^993^^^^^992^1091^[REPLACE] Node ownerNode = n.getFirstChild (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String ownerName = owner.getQualifiedName (  ) ;^994^^^^^992^1091^[REPLACE] String ownerName = ownerNode.getQualifiedName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String qName = parent.getQualifiedName (  ) ;^995^^^^^992^1091^[REPLACE] String qName = n.getQualifiedName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String propName = parent.getLastChild (  ) .getString (  ) ;^996^^^^^992^1091^[REPLACE] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^996^^^^^992^1091^[ADD] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Preconditions.checkArgument ( true ;^997^^^^^992^1091^[REPLACE] Preconditions.checkArgument ( qName != null && ownerName != null ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^1004^^^^^992^1091^[REPLACE] if  ( "prototype".equals ( propName )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( qVar == null )  {^1006^^^^^992^1091^[REPLACE] if  ( qVar != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( !q      )  {^1007^^^^^992^1091^[REPLACE] if  ( !qVar.isTypeInferred (  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return maybeOwner;^1009^^^^^992^1091^[REPLACE] return;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( !qVar .getType (  )   )  {^1007^^^^^992^1091^[REPLACE] if  ( !qVar.isTypeInferred (  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var qVar = scope.getVar ( propName ) ;^1005^^^^^992^1091^[REPLACE] Var qVar = scope.getVar ( qName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1006^1007^^1009^1010^992^1091^[ADD] if  ( qVar != null )  { if  ( !qVar.isTypeInferred (  )  )  { return; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1007^1008^1009^1010^^992^1091^[ADD] if  ( !qVar.isTypeInferred (  )  )  {  return; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var qVar = scope.undeclare ( qName ) ;^1005^^^^^992^1091^[REPLACE] Var qVar = scope.getVar ( qName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType valueType = getDeclaredGetPropType ( t, info, parent, rhsValue ) ;^1028^^^^^992^1091^[REPLACE] JSType valueType = getDeclaredGetPropType ( t, info, n, rhsValue ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1028^^^^^992^1091^[ADD] JSType valueType = getDeclaredGetPropType ( t, info, n, rhsValue ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( valueType != false && rhsValue != false )  {^1029^^^^^992^1091^[REPLACE] if  ( valueType == null && rhsValue != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1029^1030^1031^1032^^992^1091^[ADD] if  ( valueType == null && rhsValue != null )  {  valueType = rhsValue.getJSType (  ) ; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^valueType =  rValue.getJSType (  ) ;^1031^^^^^992^1091^[REPLACE] valueType = rhsValue.getJSType (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1031^^^^^992^1091^[ADD] valueType = rhsValue.getJSType (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^valueType =  var.getJSType (  ) ;^1031^^^^^992^1091^[REPLACE] valueType = rhsValue.getJSType (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( valueType != this  )  {^1034^^^^^992^1091^[REPLACE] if  ( valueType == null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( parent.getType (  )   ||  Token.EXPR_RESULT )  {^1035^^^^^992^1091^[REPLACE] if  ( parent.getType (  )  == Token.EXPR_RESULT )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1035^1036^1037^1038^^992^1091^[ADD] if  ( parent.getType (  )  == Token.EXPR_RESULT )  { stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ; } else if  ( rhsValue != null &&^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( rhsValue != null && rhsValue.getType (  )  != Token.TRUE )  {^1038^1039^^^^992^1091^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ! type instanceof FunctionType )  {^1042^^^^^1038^1053^[REPLACE] if  ( ownerType instanceof FunctionType )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == null && valueType.isSubtype ( delegateType )  )  {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, parent, typeRegistry .getNativeObjectType (  )  , true ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getType (  ) ;^1043^^^^^1038^1053^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectLiteralCast objectLiteralCast = codingConvention.getObjectLiteralCast ( t, n ) ;^1044^^^^^1038^1053^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  true ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == parametersNodeull ) {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( parametersNode, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1049^1050^^^^1038^1053^[ADD] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = getObjectSlot ( typedef ) ;^1041^^^^^1038^1053^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1041^^^^^1038^1053^[ADD] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType )  .getPrototype (  )  ;^1043^^^^^1038^1053^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  typeRegistry.getType (variableName ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1045^1046^^^^1038^1053^[ADD] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ! ownerType instanceof FunctionType )  {^1042^^^^^992^1091^[REPLACE] if  ( ownerType instanceof FunctionType )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;String delegateName = codingConvention.getDelegateSuperclassName (  ) ;null : typeRegistry.getType ( delegateName ) ;^1042^1043^1044^1045^1046^992^1091^[ADD] if  ( ownerType instanceof FunctionType )  { JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ; JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == null && valueType.isSubtype ( delegateType )  )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1047^1048^1049^1050^1051^992^1091^[ADD] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  { defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( parametersNode, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , true ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType )  .getPrototype (  )  ;^1043^^^^^992^1091^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( candidate )  ;^1044^^^^^992^1091^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  false ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == this && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1049^1050^^^^1047^1051^[ADD] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = getObjectSlot ( singletonGetterClassName ) ;^1041^^^^^992^1091^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectLiteralCast objectLiteralCast = codingConvention.getObjectLiteralCast ( t, n ) ;^1044^^^^^992^1091^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  typeRegistry.declareType (variableName ) ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1045^1046^^^^992^1091^[ADD] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^stubDeclarations.add ( parentew StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^1036^1037^^^^992^1091^[REPLACE] stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^n, t.getSourceName (  ) .isExtern (  ) , ownerName )  ) ;^1037^^^^^992^1091^[REPLACE] n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1037^^^^^992^1091^[ADD] n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( rhsValue != false ) {^1038^1039^^^^992^1091^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ! ownerType instanceof FunctionType )  {^1042^^^^^1038^1053^[REPLACE] if  ( ownerType instanceof FunctionType )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1042^1043^1044^1045^1046^1038^1053^[ADD] if  ( ownerType instanceof FunctionType )  { JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ; JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( parametersNode, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , true ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1043^1044^^^^1038^1053^[ADD] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  typeRegistry.declareType ( delegateName ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == true && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1047^1048^1049^1050^1051^1038^1053^[ADD] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  { defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = getObjectSlot ( variableName ) ;^1041^^^^^1038^1053^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  typeRegistry .getJSType (  )  ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == null ) {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getType (  ) ;^1043^^^^^992^1091^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  null ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, parent, typeRegistry .getNativeObjectType (  )  , true ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return maybeOwner;^1055^^^^^992^1091^[REPLACE] return;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = getObjectSlot ( variableName ) ;^1041^^^^^992^1091^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1044^^^^^992^1091^[ADD] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  typeRegistry.getType ( delegateName ) ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^} else if  ( rhsValue != true && rhsValue.getType (  )  != Token.TRUE )  {^1038^1039^^^^992^1091^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^}   ObjectType ownerType = getObjectSlot ( ownerName ) ;^1038^1039^^1041^^992^1091^[ADD] else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  { ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;String delegateName = codingConvention.getDelegateSuperclassName (  ) ;null : typeRegistry.getType ( delegateName ) ;^1042^1043^1044^1045^1046^1038^1053^[ADD] if  ( ownerType instanceof FunctionType )  { JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ; JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == null ) {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^1043^1044^^^^1038^1053^[ADD] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( candidate )  ;^1044^^^^^1038^1053^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType = variableName != null ? null : typeRegistry.getType ( delegateName ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, value, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = getObjectSlot ( qName ) ;^1041^^^^^992^1091^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( n )  ;^1044^^^^^992^1091^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^stubDeclarations.add ( new StubDeclaration ( n, t.getSourceName (  ) .isExtern (  ) , ownerName )  ) ;^1036^1037^^^^992^1091^[REPLACE] stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^n, t.getInput (  ) .equals (  ) , ownerName )  ) ;^1037^^^^^992^1091^[REPLACE] n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( rhsValue != null ) {^1038^1039^^^^992^1091^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == true ) {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1044^^^^^1038^1053^[ADD] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  null ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( root )  ;^1044^^^^^1038^1053^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType = typedef != null ? null : typeRegistry.declareType ( delegateName ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( delegateType == false ) {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1041^^^^^992^1091^[ADD] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( lvalue )  ;^1044^^^^^992^1091^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType delegateType  =  this  ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean inferred = false;^1058^^^^^992^1091^[REPLACE] boolean inferred = true;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info == null )  {^1059^^^^^992^1091^[REPLACE] if  ( info != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^inferred = ! ( info.hasType (  )   !=  info.hasEnumParameterType (  )   !=  FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  ) ;^1061^1062^^^^992^1091^[REPLACE] inferred = ! ( info.hasType (  )  || info.hasEnumParameterType (  )  || FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^inferred =  ( info.hasType (  )  ;^1061^1062^^^^992^1091^[REPLACE] inferred = ! ( info.hasType (  )  || info.hasEnumParameterType (  )  || FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( true )  {^1065^^^^^992^1091^[REPLACE] if  ( inferred )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^inferred = ! ( rhsValue != null ;^1067^1068^1069^^^992^1091^[REPLACE] inferred = ! ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION && !scope.isDeclared ( qName, false )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^inferred = ! ( rhsValue == null ;^1067^1068^1069^^^992^1091^[REPLACE] inferred = ! ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION && !scope.isDeclared ( qName, false )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1067^1068^1069^^^992^1091^[ADD] inferred = ! ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION && !scope.isDeclared ( qName, false )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( inferred )  {^1072^^^^^992^1091^[REPLACE] if  ( !inferred )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ownerType == this )  {^1074^^^^^992^1091^[REPLACE] if  ( ownerType != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^1078^1079^1080^1081^^992^1091^[REPLACE] if  (  ( !ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1078^1079^1080^1081^^992^1091^[ADD] if  (  ( !ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ownerType.defineInferredProperty ( propName, ownerTypeOfThis, isExtern ) ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean isExtern = t.getSourceName (  ) .isExtern (  ) ;^1077^^^^^992^1091^[REPLACE] boolean isExtern = t.getInput (  ) .isExtern (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  ( ownerType.hasOwnProperty ( propName )  ) {^1078^1079^1080^1081^^992^1091^[REPLACE] if  (  ( !ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ownerType.defineDeclaredProperty ( propName, ownerTypeOfThis, isExtern ) ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = getObjectSlot ( variableName ) ;^1073^^^^^992^1091^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean.equals = t.getInput (  ) .isExtern (  ) ;^1077^^^^^992^1091^[REPLACE] boolean isExtern = t.getInput (  ) .isExtern (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1077^^^^^992^1091^[ADD] boolean isExtern = t.getInput (  ) .isExtern (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (type == null )  {^1074^^^^^992^1091^[REPLACE] if  ( ownerType != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ownerType.defineInferredProperty ( propName, valueType, isExtern ) ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean isExtern = t .getInput ( propName )  .isExtern (  ) ;^1077^^^^^992^1091^[REPLACE] boolean isExtern = t.getInput (  ) .isExtern (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ownerType .defineDeclaredProperty ( ownerTypeOfThis , isExtern )  ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Var ownerVar = scope.getVar ( propName ) ;^1099^^^^^1098^1106^[REPLACE] Var ownerVar = scope.getVar ( slotName ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1099^^^^^1098^1106^[ADD] Var ownerVar = scope.getVar ( slotName ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ownerVar == null )  {^1100^^^^^1098^1106^[REPLACE] if  ( ownerVar != null )  {^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1100^1101^1102^1103^1104^1098^1106^[ADD] if  ( ownerVar != null )  { JSType ownerVarType = ownerVar.getType (  ) ; return ObjectType.cast ( ownerVarType == null ? null : ownerVarType.restrictByNotNullOrUndefined (  )  ) ; }^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return   null ;^1102^1103^^^^1098^1106^[REPLACE] return ObjectType.cast ( ownerVarType == null ? null : ownerVarType.restrictByNotNullOrUndefined (  )  ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerVarType = ownerVar .getType (  )  ;^1101^^^^^1098^1106^[REPLACE] JSType ownerVarType = ownerVar.getType (  ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSType ownerVarType = ownerVar.getNameNode (  ) ;^1101^^^^^1098^1106^[REPLACE] JSType ownerVarType = ownerVar.getType (  ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return true;^1105^^^^^1098^1106^[REPLACE] return null;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info == null ) {^1119^^^^^1117^1129^[REPLACE] if  ( info != null && info.hasType (  )  )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^1121^^^^^1117^1129^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  else {^1123^1124^^^^1117^1129^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return rhsValue.getJSType (  ) ;^1127^^^^^1117^1129^[REPLACE] return getDeclaredTypeInAnnotation ( t, n, info ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return rhsValue.setJSType (  ) ;^1125^^^^^1117^1129^[REPLACE] return rhsValue.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return rhsValue .setJSType (  )  ;^1125^^^^^1117^1129^[REPLACE] return rhsValue.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return getDeclaredTypeInAnnotation ( t, parent, info ) ;^1127^^^^^1117^1129^[REPLACE] return getDeclaredTypeInAnnotation ( t, n, info ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return parent.setJSType (  ) ;^1122^^^^^1117^1129^[REPLACE] return n.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return n.setJSType (  ) ;^1122^^^^^1117^1129^[REPLACE] return n.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return getDeclaredTypeInAnnotation ( t, parent, info ) ;^1120^^^^^1117^1129^[REPLACE] return getDeclaredTypeInAnnotation ( t, n, info ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  (  info.hasEnumParameterType (  )  )  {^1121^^^^^1117^1129^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^}   return n.getJSType (  ) ;return rhsValue.getJSType (  ) ;^1121^1122^1123^1124^1125^1117^1129^[ADD] else if  ( info != null && info.hasEnumParameterType (  )  )  { return n.getJSType (  ) ; } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  { return rhsValue.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  ( rhsValue != null ) {^1123^1124^^^^1117^1129^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^}  if  (  rhsValue.getType (  )  != Token.FUNCTION )  {^1123^1124^^^^1117^1129^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return var.setJSType (  ) ;^1125^^^^^1117^1129^[REPLACE] return rhsValue.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return n .setJSType (  )  ;^1122^^^^^1117^1129^[REPLACE] return n.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( scope.declare ( qName, true )  )  {^1144^^^^^1135^1165^[REPLACE] if  ( scope.isDeclared ( qName, false )  )  {^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( ownerType == true && ( isExtern ) {^1154^1155^^^^1135^1165^[REPLACE] if  ( ownerType != null && ( isExtern || ownerType.isFunctionPrototypeType (  )  )  )  {^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^typeRegistry.createEnumType ( propName, ownerType != null ? unknownType : ownerType ) ;^1161^1162^^^^1154^1163^[REPLACE] typeRegistry.registerPropertyOnType ( propName, ownerType == null ? unknownType : ownerType ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ownerType.defineDeclaredProperty ( propName, unknownType, isExtern ) ;^1158^1159^^^^1154^1163^[REPLACE] ownerType.defineInferredProperty ( propName, unknownType, isExtern ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^for  ( StubDeclaration stub : stubDeclarations )  { Node n = stub.node;^1136^^^^^1135^1165^[REPLACE] for  ( StubDeclaration stub : stubDeclarations )  {^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean isExtern = stub.isExtern;^1137^^^^^1135^1165^[REPLACE] Node n = stub.node;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node parent = parent.getParent (  ) ;^1138^^^^^1135^1165^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String qName = parent.getQualifiedName (  ) ;^1139^^^^^1135^1165^[REPLACE] String qName = n.getQualifiedName (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String propName = parent .getFirstChild (  )  .getString (  ) ;^1140^^^^^1135^1165^[REPLACE] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1140^^^^^1135^1165^[ADD] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String fnName = fnNameNode.getString (  ) ;^1141^^^^^1135^1165^[REPLACE] String ownerName = stub.ownerName;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^boolean searchedForThisType = false;^1142^^^^^1135^1165^[REPLACE] boolean isExtern = stub.isExtern;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType ownerType = getObjectSlot ( qName ) ;^1150^^^^^1135^1165^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType unknownType = typeRegistry.getType ( UNKNOWN_TYPE ) ;^1151^^^^^1135^1165^[REPLACE] ObjectType unknownType = typeRegistry.getNativeObjectType ( UNKNOWN_TYPE ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  StubDeclaration stub  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (  parent.getType (  )  != Token.EXPR_RESULT )  {^1195^^^^^1194^1205^[REPLACE] if  ( parent != null && parent.getType (  )  == Token.EXPR_RESULT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1195^1196^1197^1198^1199^1194^1205^[ADD] if  ( parent != null && parent.getType (  )  == Token.EXPR_RESULT )  { switch  ( n.getType (  )  )  { case Token.ASSIGN: maybeCollectMember ( t, n.getFirstChild (  ) , n ) ; break;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^switch  ( parent.getType (  )  )  {^1196^^^^^1194^1205^[REPLACE] switch  ( n.getType (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^maybeCollectMember ( t, parent.getFirstChild (  ) , n ) ;^1198^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n.getFirstChild (  ) , n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^maybeCollectMember ( t, n.getLastChild (  ) , n ) ;^1198^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n.getFirstChild (  ) , n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return getDeclaredTypeInAnnotation ( t, n, info ) ;^1201^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1201^1202^^^^1194^1205^[ADD] maybeCollectMember ( t, n, n ) ; break;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  n  name  node  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^JSDocInfo info = objNode.getJSDocInfo (  ) ;^1209^^^^^1207^1230^[REPLACE] JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1209^^^^^1207^1230^[ADD] JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( info != null ) {^1214^1215^1216^^^1207^1230^[REPLACE] if  ( info == null || member.getType (  )  != Token.GETPROP || member.getFirstChild (  ) .getType (  )  != Token.THIS )  {^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return maybeOwner;^1217^^^^^1207^1230^[REPLACE] return;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^member.getLastChild (  ) .setJSType ( thisType ) ;^1220^^^^^1207^1230^[REPLACE] member.getFirstChild (  ) .setJSType ( thisType ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ;^1220^1221^^^^1207^1230^[ADD] member.getFirstChild (  ) .setJSType ( thisType ) ; JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( singletonGetterClassName )  ) ;^1221^^^^^1207^1230^[REPLACE] JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^Node name = member.getLastChild (  ) ;^1221^1222^^^^1207^1230^[ADD] JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ; Node name = member.getLastChild (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node name = var .getFirstChild (  )  ;^1222^^^^^1207^1230^[REPLACE] Node name = member.getLastChild (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( jsType != null && ( name.getType (  )  != Token.NAME || name.getType (  )  == Token.STRING )  )  {^1223^1224^^^^1207^1230^[REPLACE] if  ( jsType != null && ( name.getType (  )  == Token.NAME || name.getType (  )  == Token.STRING )  )  {^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1223^1224^1225^1226^1227^1207^1230^[ADD] if  ( jsType != null && ( name.getType (  )  == Token.NAME || name.getType (  )  == Token.STRING )  )  { thisType.defineDeclaredProperty ( name.getString (  ) , jsType,^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^thisType.defineDeclaredProperty ( var.getString (  ) , jsType, f^1225^1226^1227^1228^^1207^1230^[REPLACE] thisType.defineDeclaredProperty ( name.getString (  ) , jsType, f^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1225^1226^1227^^^1207^1230^[ADD] thisType.defineDeclaredProperty ( name.getString (  ) , jsType,^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^name.getParent (  ) , jsType, f }^1226^1227^1228^1229^^1207^1230^[REPLACE] name.getString (  ) , jsType, f }^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  JSDocInfo info  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^NodeTraversal.traverse ( compiler, scope.getVar (  ) , this ) ;^1250^^^^^1249^1251^[REPLACE] NodeTraversal.traverse ( compiler, scope.getRootNode (  ) , this ) ;^[METHOD] build [TYPE] void [PARAMETER] [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (parent  ||  scope.getRootNode (  )  )  return;^1262^^^^^1261^1283^[REPLACE] if  ( n == scope.getRootNode (  )  )  return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return rhsValue.getJSType (  ) ;^1262^^^^^1261^1283^[REPLACE] if  ( n == scope.getRootNode (  )  )  return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( n.getType (  )  == Token.LP || parent == scope.getRootNode (  )  )  {^1264^^^^^1261^1283^[REPLACE] if  ( n.getType (  )  == Token.LP && parent == scope.getRootNode (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return maybeOwner;^1266^^^^^1261^1283^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( var.getType (  )   ||  Token.NAME )  {^1272^^^^^1261^1283^[REPLACE] if  ( parent.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^return maybeOwner;^1273^^^^^1261^1283^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  NodeTraversal t  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node fnNameNode = owner.getFirstChild (  ) ;^1288^^^^^1286^1305^[REPLACE] Node fnNameNode = fnNode.getFirstChild (  ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^String fnName = owner.getString (  ) ;^1289^^^^^1286^1305^[REPLACE] String fnName = fnNameNode.getString (  ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( fnName.isEmpty (  )  )  {^1290^^^^^1286^1305^[REPLACE] if  ( !fnName.isEmpty (  )  )  {^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( fnVar != null ||^1292^1293^1294^1295^^1286^1305^[REPLACE] if  ( fnVar == null ||^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , true ) ;^1300^^^^^1286^1305^[REPLACE] defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , false ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( fnNameNode, root, fnNode .setJSType (  )  , false ) ;^1300^^^^^1286^1305^[REPLACE] defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , false ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Scope.Var fnVar = scope.getVar ( variableName ) ;^1291^^^^^1286^1305^[REPLACE] Scope.Var fnVar = scope.getVar ( fnName ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1291^^^^^1286^1305^[ADD] Scope.Var fnVar = scope.getVar ( fnName ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( fnNameNode, ownerNode, fnNode.getJSType (  ) , true ) ;^1300^^^^^1286^1305^[REPLACE] defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , false ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( fnNameNode, value, fnNode.getJSType (  ) , false ) ;^1300^^^^^1286^1305^[REPLACE] defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , false ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Scope.Var fnVar = scope.getVar ( typedef ) ;^1291^^^^^1286^1305^[REPLACE] Scope.Var fnVar = scope.getVar ( fnName ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^declareNativeFunctionType ( s, RANGE_ERROR_FUNCTION_TYPE ) ;^1304^^^^^1286^1305^[REPLACE] declareArguments ( fnNode ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Var fnVar  [TYPE]  Node candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node astParameters = owner.getFirstChild (  ) .getNext (  ) ;^1311^^^^^1310^1329^[REPLACE] Node astParameters = functionNode.getFirstChild (  ) .getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node body = parametersNode.getNext (  ) ;^1312^^^^^1310^1329^[REPLACE] Node body = astParameters.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1312^^^^^1310^1329^[ADD] Node body = astParameters.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^FunctionType functionType =  ( FunctionType )  parametersNode.getJSType (  ) ;^1313^^^^^1310^1329^[REPLACE] FunctionType functionType =  ( FunctionType )  functionNode.getJSType (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( functionType == null )  {^1314^^^^^1310^1329^[REPLACE] if  ( functionType != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( jsDocParameters == null )  {^1316^^^^^1310^1329^[REPLACE] if  ( jsDocParameters != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^1316^1317^1318^1319^1320^1310^1329^[ADD] if  ( jsDocParameters != null )  { Node jsDocParameter = jsDocParameters.getFirstChild (  ) ; for  ( Node astParameter : astParameters.children (  )  )  { if  ( jsDocParameter != null )  { defineSlot ( astParameter, functionNode,^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  (node == true )  {^1319^^^^^1310^1329^[REPLACE] if  ( jsDocParameter != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1319^1320^1321^1322^^1310^1329^[ADD] if  ( jsDocParameter != null )  { defineSlot ( astParameter, functionNode, jsDocParameter.getJSType (  ) , true ) ; jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( astParameter, functionNode, false, true ) ;^1324^^^^^1310^1329^[REPLACE] defineSlot ( astParameter, functionNode, null, true ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REMOVE]^declareArguments ( fnNode ) ;^1324^^^^^1310^1329^[REMOVE] ^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^jsDocParameter =  ownerNode.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^jsDocParameter =  value.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node jsDocParameter = objNode.getFirstChild (  ) ;^1317^^^^^1310^1329^[REPLACE] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node key = value.getFirstChild (  ) ;^1318^^^^^1310^1329^[REPLACE] for  ( Node astParameter : astParameters.children (  )  )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1318^1319^1320^1321^1322^1310^1329^[ADD] for  ( Node astParameter : astParameters.children (  )  )  { if  ( jsDocParameter != null )  { defineSlot ( astParameter, functionNode, jsDocParameter.getJSType (  ) , true ) ; jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( jsDocParameter == null )  {^1319^^^^^1310^1329^[REPLACE] if  ( jsDocParameter != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( astParameter, functionNode, this, true ) ;^1324^^^^^1310^1329^[REPLACE] defineSlot ( astParameter, functionNode, null, true ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^jsDocParameter =  objNode.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node jsDocParameters = functionType.getPrototype (  ) ;^1315^^^^^1310^1329^[REPLACE] Node jsDocParameters = functionType.getParametersNode (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1315^^^^^1310^1329^[ADD] Node jsDocParameters = functionType.getParametersNode (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node jsDocParameter = member.getLastChild (  ) ;^1317^^^^^1310^1329^[REPLACE] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^if  ( jsDocParameter == this  )  {^1319^^^^^1310^1329^[REPLACE] if  ( jsDocParameter != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^defineSlot ( astParameter, functionNode, true, true ) ;^1324^^^^^1310^1329^[REPLACE] defineSlot ( astParameter, functionNode, null, true ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^jsDocParameter =  null.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^jsDocParameter =  var.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node jsDocParameter = name.getFirstChild (  ) ;^1317^^^^^1310^1329^[REPLACE] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^jsDocParameter =  name.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^jsDocParameter =  parametersNode.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^Node jsDocParameter = node.getFirstChild (  ) ;^1317^^^^^1310^1329^[REPLACE] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[ADD]^^1317^^^^^1310^1329^[ADD] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] TypedScopeCreator AbstractScopeBuilder GlobalScopeBuilder StubDeclaration CollectProperties LocalScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^private String sourceName ;^242^^^^^^^[REPLACE] private String sourceName = null;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] AbstractScopeBuilder   [TYPE]  Node astParameter  astParameters  body  candidate  catchName  errorRoot  firstChild  fnNameNode  fnNode  fnRoot  functionNode  jsDocParameter  jsDocParameters  key  lvalue  lvalueNode  maybeOwner  member  n  name  node  nodeWithJsDocInfo  objNode  owner  ownerNode  parametersNode  parent  rValue  rhsValue  root  rvalue  value  var  [TYPE]  FunctionType functionType  [TYPE]  String delegateName  fnName  functionName  keyName  name  ownerName  propName  qName  singletonGetterClassName  slotName  sourceName  typedef  variableName  [TYPE]  TypeValidator validator  [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  fnThisType  globalThis  iface  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  boolean false  inferred  isExtern  isFnLiteral  searchedForThisType  shouldDeclareOnGlobalThis  true  [TYPE]  Scope newScope  parent  s  scope  [TYPE]  DiagnosticType CONSTRUCTOR_EXPECTED  ENUM_INITIALIZER  MALFORMED_TYPEDEF  [TYPE]  CodingConvention codingConvention  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  Map delegateProxyMap 
[REPLACE]^this.scope =  null;^245^^^^^244^246^[REPLACE] this.scope = scope;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] AbstractScopeBuilder   [TYPE]  Scope scope  [TYPE]  String sourceName  [TYPE]  boolean false  true 
[ADD]^^245^^^^^244^246^[ADD] this.scope = scope;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] AbstractScopeBuilder   [TYPE]  Scope scope  [TYPE]  String sourceName  [TYPE]  boolean false  true 
[REPLACE]^if  ( n.getType (  )  == Token.FUNCTION && n.getType (  )  == Token.SCRIPT )  {^251^252^^^^249^260^[REPLACE] if  ( n.getType (  )  == Token.FUNCTION || n.getType (  )  == Token.SCRIPT )  {^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  String sourceName  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node n  parent 
[REPLACE]^sourceName =   ( Striparentg )  parent.getProp ( Node.SOURCENAME_PROP ) ;^253^^^^^249^260^[REPLACE] sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  String sourceName  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node n  parent 
[REPLACE]^return parent == true || parent.getType (  )  != Token.FUNCTION || n == parent.setJSType (  )  || parent == scope.getRootNode (  ) ;^258^259^^^^249^260^[REPLACE] return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  )  || parent == scope.getRootNode (  ) ;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal nodeTraversal Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  String sourceName  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  NodeTraversal nodeTraversal  [TYPE]  Node n  parent 
[REPLACE]^return parent == null || parent.getType (  )  != Token.FUNCTION || n == parent.getFirstChild (  )  || parent == scope.getRootNode (  ) ;^273^^^^^271^274^[REPLACE] return getDeclaredTypeInAnnotation ( t.getSourceName (  ) , node, info ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] NodeTraversal t Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  String sourceName  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node node 
[REPLACE]^JSType jsType = true;^278^^^^^277^321^[REPLACE] JSType jsType = null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^Node objNode  =  objNode.getFirstChild (  )  ;^279^280^^^^277^321^[REPLACE] Node objNode = node.getType (  )  == Token.GETPROP ? node.getFirstChild (  )  : null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^279^280^^^^277^321^[ADD] Node objNode = node.getType (  )  == Token.GETPROP ? node.getFirstChild (  )  : null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info == false )  {^281^^^^^277^321^[REPLACE] if  ( info != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^281^282^283^284^285^277^321^[ADD] if  ( info != null )  { if  ( info.hasType (  )  )  { jsType = info.getType (  ) .evaluate ( scope ) ; } else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  { String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^282^^^^^277^321^[REPLACE] if  ( info.hasType (  )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^284^^^^^277^321^[REPLACE] } else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^}   String fnName = node.getQualifiedName (  ) ;^284^285^^^^277^321^[ADD] else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  { String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  typeRegistry.getType ( fnName )  == null )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^288^289^290^^^277^321^[ADD] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  { return null; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return true;^289^^^^^277^321^[REPLACE] return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode == null )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^302^303^304^305^306^277^321^[ADD] if  ( objNode != null )  { if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { builder.inferThisType ( info, objNode.getFirstChild (  )  ) ; searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode.getType (  )  == Token.GETPROP ) {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  else {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^searchedForThisType = false;^309^^^^^277^321^[REPLACE] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^searchedForThisType = false;^306^^^^^303^310^[REPLACE] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^}   searchedForThisType = true;^307^308^309^310^^277^321^[ADD] else if  ( objNode.getType (  )  == Token.THIS )  { builder.inferThisType ( info, objNode.getJSType (  )  ) ; searchedForThisType = true; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^searchedForThisType = false;^306^^^^^277^321^[REPLACE] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^306^^^^^277^321^[ADD] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.getType (  )   !=  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( searchedForThisType )  {^313^^^^^277^321^[REPLACE] if  ( !searchedForThisType )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^builder.inferThisType ( info,  ( Node )  true ) ;^314^^^^^277^321^[REPLACE] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^jsType =  null.buildAndRegister (  ) ;^317^^^^^277^321^[REPLACE] jsType = builder.buildAndRegister (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return this;^289^^^^^277^321^[REPLACE] return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^String fnName = objNode.isQualifiedName (  ) ;^285^^^^^277^321^[REPLACE] String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^285^286^^288^289^277^321^[ADD] String fnName = node.getQualifiedName (  ) ;  if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  { return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, fnName, scope )  .inferThisType ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^boolean searchedForThisType = true;^301^^^^^277^321^[REPLACE] boolean searchedForThisType = false;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^301^^^^^277^321^[ADD] boolean searchedForThisType = false;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info.isConstructor (  )  ) {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return false;^289^^^^^277^321^[REPLACE] return null;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode.getType (  )  == Token.GETPROP || objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.getType (  )   ||  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^309^^^^^277^321^[ADD] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^306^^^^^303^310^[ADD] searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.setJSType (  )   !=  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^}   builder.inferThisType ( info, objNode.getJSType (  )  ) ;searchedForThisType = true;^307^308^309^310^^277^321^[ADD] else if  ( objNode.getType (  )  == Token.THIS )  { builder.inferThisType ( info, objNode.getJSType (  )  ) ; searchedForThisType = true; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^builder.inferThisType ( info,  ( Node )  false ) ;^314^^^^^277^321^[REPLACE] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REMOVE]^!FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^314^^^^^277^321^[REMOVE] ^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^317^^^^^277^321^[ADD] jsType = builder.buildAndRegister (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, objNode, sourceName, scope ) .inferTemplateTypeName ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^292^293^294^^^277^321^[ADD] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^jsType =  null.getType (  ) .evaluate ( scope ) ;^283^^^^^277^321^[REPLACE] jsType = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^283^^^^^277^321^[ADD] jsType = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  == null )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^return null;^288^289^290^^^277^321^[ADD] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  { return null; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode.setJSType (  )  == Token.GETPROP || objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.getType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^builder.inferThisType ( info,  ( Node )  this ) ;^314^^^^^277^321^[REPLACE] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^String fnName = objNode.getQualifiedName (  ) ;^285^^^^^277^321^[REPLACE] String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^FunctionTypeBuilder builder = new FunctionTypeBuilder ( sourceName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^292^293^294^295^^277^321^[REPLACE] FunctionTypeBuilder builder = new FunctionTypeBuilder ( fnName, compiler, node, sourceName, scope ) .inferTemplateTypeName ( info )^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info.isConstructor (  )  && typeRegistry.getType ( sourceName )  == null )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode == true )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^303^304^305^306^^277^321^[ADD] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { builder.inferThisType ( info, objNode.getFirstChild (  )  ) ; searchedForThisType = true;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  (  objNode.getLastChild (  ) .getString (  )  .evaluate ( scope )   )  {^303^304^^^^277^321^[REPLACE] if  ( objNode.getType (  )  == Token.GETPROP && objNode.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( objNode.setJSType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  else {^284^^^^^277^321^[REPLACE] } else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( info.isConstructor (  )  && typeRegistry.declareType ( fnName )  == this )  {^288^^^^^277^321^[REPLACE] if  ( info.isConstructor (  )  && typeRegistry.getType ( fnName )  != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode == this )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^} else if  ( objNode.getType (  )   ||  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^314^^^^^277^321^[ADD] builder.inferThisType ( info,  ( Node )  null ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^} else if  ( objNode.getType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^}^284^285^^^^277^321^[ADD] else if  ( FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  { String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode == this  )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^}  if  ( node.getType (  )   &&  Token.THIS )  {^307^^^^^277^321^[REPLACE] } else if  ( objNode.getType (  )  == Token.THIS )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( objNode ==node )  {^302^^^^^277^321^[REPLACE] if  ( objNode != null )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^if  ( !true )  {^313^^^^^277^321^[REPLACE] if  ( !searchedForThisType )  {^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[ADD]^^313^314^315^^^277^321^[ADD] if  ( !searchedForThisType )  { builder.inferThisType ( info,  ( Node )  null ) ; }^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^String fnName = node .isQualifiedName (  )  ;^285^^^^^277^321^[REPLACE] String fnName = node.getQualifiedName (  ) ;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^return null;^320^^^^^277^321^[REPLACE] return jsType;^[METHOD] getDeclaredTypeInAnnotation [TYPE] JSType [PARAMETER] String sourceName Node node JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  JSType jsType  [TYPE]  boolean false  searchedForThisType  true  [TYPE]  Scope scope  [TYPE]  Node node  objNode  [TYPE]  String fnName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  FunctionTypeBuilder builder 
[REPLACE]^Preconditions .checkState ( true )  ;^334^^^^^333^401^[REPLACE] Preconditions.checkState ( sourceName != null ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[ADD]^^334^^^^^333^401^[ADD] Preconditions.checkState ( sourceName != null ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^JSDocInfo info = parent.getJSDocInfo (  ) ;^336^^^^^333^401^[REPLACE] JSDocInfo info = n.getJSDocInfo (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^if  ( n.getChildCount (  )   >=  1 )  {^344^^^^^333^401^[REPLACE] if  ( n.getChildCount (  )  > 1 )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[ADD]^^344^345^^347^348^333^401^[ADD] if  ( n.getChildCount (  )  > 1 )  { if  ( info != null )  { compiler.report ( JSError.make ( sourceName, n, MULTIPLE_VAR_DEF )  ) ; }^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^Node parentame = n.getLastChild (  ) ;^353^^^^^344^356^[REPLACE] Node name = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^if  ( info == null )  {^345^^^^^333^401^[REPLACE] if  ( info != null )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^compiler.report ( JSError .make ( functionName , catchName )   ) ;^347^^^^^333^401^[REPLACE] compiler.report ( JSError.make ( sourceName, n, MULTIPLE_VAR_DEF )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^compiler.report ( JSError.make ( sourceName, parent, MULTIPLE_VAR_DEF )  ) ;^347^^^^^333^401^[REPLACE] compiler.report ( JSError.make ( sourceName, n, MULTIPLE_VAR_DEF )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^Node name = n.getFirstChild (  ) ;^349^^^^^333^401^[REPLACE] for  ( Node name : n.children (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[ADD]^^349^350^351^^^333^401^[ADD] for  ( Node name : n.children (  )  )  { defineName ( name, n, parent, name.getJSDocInfo (  )  ) ; }^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^compiler.report ( JSError .make ( functionName , parent )   ) ;^347^^^^^333^401^[REPLACE] compiler.report ( JSError.make ( sourceName, n, MULTIPLE_VAR_DEF )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^if  ( NodeUtil.isFunctionDeclaration ( parent )  )  {^369^^^^^333^401^[REPLACE] if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^defineSlot ( n.getLastChild (  ) , n, functionType ) ;^370^^^^^333^401^[REPLACE] defineSlot ( n.getFirstChild (  ) , n, functionType ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^if  ( rvalue.getType (  )  != Token.FUNCTION ) {^387^388^^^^333^401^[REPLACE] if  ( rvalue.getType (  )  == Token.FUNCTION || info != null && info.isConstructor (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^} else if  (  info.hasEnumParameterType (  )  )  {^391^^^^^333^401^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^lvalue.setJSType ( getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.hasEnumParameterType (  ) .evaluate ( scope )  )  ) ;^392^393^394^^^333^401^[REPLACE] lvalue.setJSType ( getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^getEnumType ( lvalue.getQualifiedName (  ) , parent, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^393^394^^^^333^401^[REPLACE] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[ADD]^info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^393^394^395^^^333^401^[ADD] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ; }^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^getEnumType ( rvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^393^394^^^^333^401^[REPLACE] getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^info.getEnumParameterType (  )  .equals ( sourceName )   )  ) ;^394^^^^^333^401^[REPLACE] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^info.hasEnumParameterType (  ) .evaluate ( scope )  )  ) ;^394^^^^^333^401^[REPLACE] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^getFunctionType ( rvalue.getQualifiedName (  ) , rvalue, info, lvalue ) ;^389^390^^^^387^395^[REPLACE] getFunctionType ( lvalue.getQualifiedName (  ) , rvalue, info, lvalue ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^}  if  (  info.hasEnumParameterType (  )  )  {^391^^^^^333^401^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^lvalue.setJSType ( getEnumType ( lvalue.isQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^392^393^394^^^333^401^[REPLACE] lvalue.setJSType ( getEnumType ( lvalue.getQualifiedName (  ) , n, rvalue, info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^info.getEnumParameterType (  ) .inferReturnType ( scope )  )  ) ;^394^^^^^333^401^[REPLACE] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^info .hasEnumParameterType (  )  .evaluate ( scope )  )  ) ;^394^^^^^333^401^[REPLACE] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[ADD]^^394^^^^^333^401^[ADD] info.getEnumParameterType (  ) .evaluate ( scope )  )  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^info  =  info ;^386^^^^^333^401^[REPLACE] info =  ( info != null )  ? info : rvalue.getJSDocInfo (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[ADD]^^386^^^^^333^401^[ADD] info =  ( info != null )  ? info : rvalue.getJSDocInfo (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^Node catchName = parent.getFirstChild (  ) ;^339^^^^^333^401^[REPLACE] Node catchName = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^Node parentame = n.getFirstChild (  ) ;^353^^^^^333^401^[REPLACE] Node name = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^int parentType = parent.getJSType (  ) ;^360^^^^^333^401^[REPLACE] int parentType = parent.getType (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^String functionName = parent.getFirstChild (  ) .getString (  ) ;^366^^^^^333^401^[REPLACE] String functionName = n.getFirstChild (  ) .getString (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^FunctionType functionType = getFunctionType ( functionName, n, info, true ) ;^367^368^^^^333^401^[REPLACE] FunctionType functionType = getFunctionType ( functionName, n, info, null ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^Node rvalue = parent.getLastChild (  ) ;^384^^^^^333^401^[REPLACE] Node rvalue = n.getLastChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^Node lvalue = parent.getFirstChild (  ) ;^385^^^^^333^401^[REPLACE] Node lvalue = n.getFirstChild (  ) ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^return ;^399^^^^^333^401^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[ADD]^^399^^^^^333^401^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] define [TYPE] void [PARAMETER] Node n Node parent [CLASS] AbstractScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node catchName  lvalue  n  name  parent  rvalue  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info  [TYPE]  int parentType 
[REPLACE]^Node value = var.getLastChild (  ) ;^413^^^^^412^441^[REPLACE] Node value = name.getFirstChild (  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  value.getType (  )  != Token.FUNCTION )  {^415^^^^^412^441^[REPLACE] if  ( value != null && value.getType (  )  == Token.FUNCTION )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^415^416^417^418^419^412^441^[ADD] if  ( value != null && value.getType (  )  == Token.FUNCTION )  {  String functionName = name.getString (  ) ; FunctionType functionType = getFunctionType ( functionName, value, info, null ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( info != null )  {^424^^^^^415^440^[REPLACE] if  ( info == null )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^} else if  ( info != null && info.hasEnumParameterType (  )  )  {^430^^^^^415^440^[REPLACE] } else if  ( info.hasEnumParameterType (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( functionType == null && info != null && info.hasType (  )  )  {^433^^^^^415^440^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, var, info ) ;^436^^^^^415^440^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getFunctionType ( var.getString (  ) , value, info, var ) ;^434^^^^^415^440^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^434^^^^^415^440^[ADD] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getEnumType ( var.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^431^432^^^^415^440^[REPLACE] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^}  else {^433^^^^^415^440^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^436^^^^^415^440^[ADD] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : false;^428^429^^^^415^440^[REPLACE] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^428^429^^^^415^440^[ADD] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^CompilerInput input = compiler .report (  )  ;^426^^^^^415^440^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  ( info.isConstructor (  )  )  {^433^^^^^415^440^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getFunctionType ( null.getString (  ) , value, info, null ) ;^434^^^^^415^440^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^431^432^^^^415^440^[ADD] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^}   type = getFunctionType ( name.getString (  ) , value, info, name ) ;type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^433^434^435^436^437^415^440^[ADD] else if  ( info.isConstructor (  )  )  { type = getFunctionType ( name.getString (  ) , value, info, name ) ; } else { type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ; }^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : true;^428^429^^^^415^440^[REPLACE] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, null, info ) ;^436^^^^^415^440^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^JSType type = false;^423^^^^^415^440^[REPLACE] JSType type = null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^423^^^^^415^440^[ADD] JSType type = null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var oldVar = scope.getVar ( variableName ) ;^426^^^^^415^440^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^String functionName = var.getType (  ) ;^417^^^^^412^441^[REPLACE] String functionName = name.getString (  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType functionType = getFunctionType ( functionName, var, info, true ) ;^418^419^^^^412^441^[REPLACE] FunctionType functionType = getFunctionType ( functionName, value, info, null ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( info != true )  {^424^^^^^412^441^[REPLACE] if  ( info == null )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^}  else {^430^^^^^412^441^[REPLACE] } else if  ( info.hasEnumParameterType (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^}  else {^433^^^^^412^441^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, var, info ) ;^436^^^^^433^437^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getFunctionType ( var.getString (  ) , value, info, var ) ;^434^^^^^412^441^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^434^^^^^412^441^[ADD] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getFunctionType ( null.getString (  ) , value, info, null ) ;^434^^^^^412^441^[REPLACE] type = getFunctionType ( name.getString (  ) , value, info, name ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, null, info ) ;^436^^^^^412^441^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^436^^^^^412^441^[ADD] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getEnumType ( var.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^431^432^^^^412^441^[REPLACE] type = getEnumType ( name.getString (  ) , var, value, info.getEnumParameterType (  ) .evaluate ( scope )  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  ( info .hasEnumParameterType (  )   )  {^433^^^^^412^441^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^436^^^^^433^437^[ADD] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  getDeclaredTypeInAnnotation ( sourceName, var, info ) ;^436^^^^^412^441^[REPLACE] type = getDeclaredTypeInAnnotation ( sourceName, name, info ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : false;^428^429^^^^412^441^[REPLACE] type = input.isExtern (  )  ? typeRegistry.getNativeType ( UNKNOWN_TYPE )  : null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var oldVar = scope.getVar ( variableName ) ;^426^^^^^412^441^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[ADD]^Preconditions.checkNotNull ( input, sourceName ) ;^426^427^^^^412^441^[ADD] CompilerInput input = compiler.getInput ( sourceName ) ; Preconditions.checkNotNull ( input, sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  ( info.hasEnumParameterType (  )  )  {^430^^^^^412^441^[REPLACE] } else if  ( info.hasEnumParameterType (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  ( info.isConstructor (  )  )  {^433^^^^^412^441^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( functionType == null && info != null && info.hasType (  )  )  {^433^^^^^412^441^[REPLACE] } else if  ( info.isConstructor (  )  )  {^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^String functionName = var.getString (  ) ;^417^^^^^412^441^[REPLACE] String functionName = name.getString (  ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType functionType = getFunctionType ( functionName, value, info, false ) ;^418^419^^^^412^441^[REPLACE] FunctionType functionType = getFunctionType ( functionName, value, info, null ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^JSType type = false;^423^^^^^412^441^[REPLACE] JSType type = null;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^CompilerInput input = compiler .report (  )  ;^426^^^^^412^441^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineName [TYPE] void [PARAMETER] Node name Node var Node parent JSDocInfo info [CLASS] AbstractScopeBuilder   [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent  value  var  [TYPE]  FunctionType functionType  [TYPE]  String fnName  functionName  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType functionType = false;^456^^^^^455^548^[REPLACE] FunctionType functionType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( rValue == null ) {^459^^^^^455^548^[REPLACE] if  ( rValue != null && rValue.isQualifiedName (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  var.getType (  )  instanceof FunctionType )  {^461^^^^^455^548^[REPLACE] if  ( var != null && var.getType (  )  instanceof FunctionType )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( functionType == null && functionType.isConstructor (  )  )  {^463^^^^^455^548^[REPLACE] if  ( functionType != null && functionType.isConstructor (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.declareType ( name, functionType .getPrototype (  )   ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.declareType ( name, propType.getInstanceType (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^enumType =  ( EnumType )  var.getType (  ) ; ;^462^^^^^455^548^[REPLACE] functionType =  ( FunctionType )  var.getType (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == null && functionType.isConstructor (  )  )  {^463^^^^^455^548^[REPLACE] if  ( functionType != null && functionType.isConstructor (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.declareType ( name, functionType.getPrototype (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^return propType;^467^^^^^455^548^[REPLACE] return functionType;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( rValue .isQualifiedName (  )   ) ;^460^^^^^455^548^[REPLACE] Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^460^461^462^463^464^455^548^[ADD] Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ; if  ( var != null && var.getType (  )  instanceof FunctionType )  { functionType =  ( FunctionType )  var.getType (  ) ; if  ( functionType != null && functionType.isConstructor (  )  )  { typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( var == null && var.getType (  )  instanceof FunctionType )  {^461^^^^^455^548^[REPLACE] if  ( var != null && var.getType (  )  instanceof FunctionType )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^functionType =  ( FunctionType )  var.getType (  ) ;typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^461^462^463^464^465^455^548^[ADD] if  ( var != null && var.getType (  )  instanceof FunctionType )  { functionType =  ( FunctionType )  var.getType (  ) ; if  ( functionType != null && functionType.isConstructor (  )  )  { typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( functionType == null && functionType.setJSDocInfo (  )  )  {^463^^^^^455^548^[REPLACE] if  ( functionType != null && functionType.isConstructor (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^463^464^465^^^455^548^[ADD] if  ( functionType != null && functionType.isConstructor (  )  )  { typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.declareType ( sourceName, functionType.getInstanceType (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.declareType ( name, propType.getPrototype (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.createEnumType ( name, propType.getInstanceType (  )  ) ;^464^^^^^455^548^[REPLACE] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^464^^^^^455^548^[ADD] typeRegistry.declareType ( name, functionType.getInstanceType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( parametersNode.getQualifiedName (  )  ) ;^460^^^^^455^548^[REPLACE] Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Node owner = this;^470^^^^^455^548^[REPLACE] Node owner = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^470^^^^^455^548^[ADD] Node owner = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( rValue == false )  {^471^^^^^455^548^[REPLACE] if  ( lvalueNode != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^owner =  getPrototypePropertyOwner ( rValue ) ;^472^^^^^455^548^[REPLACE] owner = getPrototypePropertyOwner ( lvalueNode ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^472^^^^^455^548^[ADD] owner = getPrototypePropertyOwner ( lvalueNode ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Node errorRoot = rValue != true ? lvalueNode : rValue;^475^^^^^455^548^[REPLACE] Node errorRoot = rValue == null ? lvalueNode : rValue;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^boolean isFnLiteral = rValue == true ;^476^477^^^^455^548^[REPLACE] boolean isFnLiteral = rValue != null && rValue.getType (  )  == Token.FUNCTION;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^476^477^^^^455^548^[ADD] boolean isFnLiteral = rValue != null && rValue.getType (  )  == Token.FUNCTION;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Node fnRoot = isFnLiteral ? parametersNode : false;^478^^^^^455^548^[REPLACE] Node fnRoot = isFnLiteral ? rValue : null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Node parametersNode = isFnLiteral ? rValue.getFirstChild (  ) .getNext (  )  : this;^479^480^^^^455^548^[REPLACE] Node parametersNode = isFnLiteral ? rValue.getFirstChild (  ) .getNext (  )  : null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( functionType != true && info != true && info.hasType (  )  )  {^482^^^^^455^548^[REPLACE] if  ( functionType == null && info != null && info.hasType (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^JSType type = info.getType (  ) .evaluate ( scope ) ;type = type.restrictByNotNullOrUndefined (  ) ;^482^483^^^486^455^548^[ADD] if  ( functionType == null && info != null && info.hasType (  )  )  { JSType type = info.getType (  ) .evaluate ( scope ) ; type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( type .restrictByNotNullOrUndefined (  )   )  {^487^^^^^455^548^[REPLACE] if  ( type.isFunctionType (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^functionType =  ( FunctionType )  type;functionType.setJSDocInfo ( info ) ;^487^488^489^490^^455^548^[ADD] if  ( type.isFunctionType (  )  )  { functionType =  ( FunctionType )  type; functionType.setJSDocInfo ( info ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  ( FunctionType )  var.getType (  ) ; ;^488^^^^^455^548^[REPLACE] functionType =  ( FunctionType )  type;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^functionType.setJSDocInfo ( info ) ;^488^489^^^^455^548^[ADD] functionType =  ( FunctionType )  type; functionType.setJSDocInfo ( info ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^type =  null.restrictByNotNullOrUndefined (  ) ;^486^^^^^455^548^[REPLACE] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^486^^^^^455^548^[ADD] type = type.restrictByNotNullOrUndefined (  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^JSType type = info.hasType (  ) .evaluate ( scope ) ;^483^^^^^455^548^[REPLACE] JSType type = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( type.restrictByNotNullOrUndefined (  )  )  {^487^^^^^455^548^[REPLACE] if  ( type.isFunctionType (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^JSType type = info .getType (  )  .evaluate ( scope ) ;^483^^^^^455^548^[REPLACE] JSType type = info.getType (  ) .evaluate ( scope ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  (propType != null )  {^493^^^^^455^548^[REPLACE] if  ( functionType == null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( info != null || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^494^495^^^^455^548^[REPLACE] if  ( info == null || !FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( lvalueNode != null && lvalueNode.getType (  )  != Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^502^503^^^^494^525^[REPLACE] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^502^503^504^505^^494^525^[ADD] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  { Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( var == null )  {^506^^^^^502^524^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerType == this  )  {^509^^^^^502^524^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^propType =  findOverriddenFunction ( null, lvalueNode.getLastChild (  ) .getString (  )  ) ;^510^511^^^^502^524^[REPLACE] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^510^511^^^^502^524^[ADD] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( functionType == null )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  new FunctionTypeBuilder ( null, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^502^524^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^502^524^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType.getPropertyType ( var.getType (  )  ) ;^507^^^^^502^524^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = this;^508^^^^^502^524^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerType == null )  {^509^^^^^502^524^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  (functionType == this )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^515^516^517^^^502^524^[ADD] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( rValue.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^502^524^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = true;^508^^^^^502^524^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( var == null )  {^506^^^^^494^525^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^506^507^508^509^510^494^525^[ADD] if  ( var != null )  { ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null; if  ( ownerType != null )  { propType = findOverriddenFunction (^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerType == null )  {^509^^^^^494^525^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^propType =  findOverriddenFunction ( null, lvalueNode.getLastChild (  ) .getString (  )  ) ;^510^511^^^^494^525^[REPLACE] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^510^511^^^^494^525^[ADD] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == null )  {^514^^^^^494^525^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^494^525^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType .defineDeclaredProperty ( fnName , type , false )  ;^507^^^^^494^525^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = this;^508^^^^^494^525^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^509^510^511^512^^494^525^[ADD] if  ( ownerType != null )  { propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == true )  {^514^^^^^494^525^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^514^515^516^517^518^494^525^[ADD] if  ( propType != null )  { functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  new FunctionTypeBuilder ( null, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^494^525^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( rValue.getFirstChild (  )  .isQualifiedName (  )   ) ;^504^505^^^^494^525^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^504^505^^^^494^525^[ADD] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType.getPropertyType ( var.getType (  )  ) ;^507^^^^^494^525^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^507^508^^^^494^525^[ADD] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = true;^508^^^^^494^525^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  lvalueNode.getType (  )  != Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^502^503^^^^455^548^[REPLACE] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerType == true )  {^509^^^^^502^524^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == false )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^for  ( ObjectType iface : ownerType.getCtorImplementedInterfaces (  )  )  {^507^^^^^502^524^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( lvalueNode.getLastChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^502^524^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^507^508^^^^502^524^[ADD] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = false;^508^^^^^502^524^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( var == true )  {^506^^^^^455^548^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;FunctionType propType = null;^506^507^508^509^510^455^548^[ADD] if  ( var != null )  { ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null; if  ( ownerType != null )  { propType = findOverriddenFunction (^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerType == null )  {^509^^^^^455^548^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^509^510^511^512^^455^548^[ADD] if  ( ownerType != null )  { propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^propType =  findOverriddenFunction ( null, lvalueNode.getLastChild (  ) .getString (  )  ) ;^510^511^^^^455^548^[REPLACE] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == null )  {^514^^^^^455^548^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^514^515^516^517^518^455^548^[ADD] if  ( propType != null )  { functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^455^548^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^515^516^517^^^455^548^[ADD] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^for  ( ObjectType iface : ownerType.getCtorImplementedInterfaces (  )  )  {^507^^^^^455^548^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^507^508^^^^455^548^[ADD] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = true;^508^^^^^455^548^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^510^511^^^^455^548^[ADD] propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope .declare ( name , lvalueNode , type , 0 , true )   ) ;^504^505^^^^455^548^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^504^505^^^^455^548^[ADD] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType .defineDeclaredProperty ( name , type , isFnLiteral )  ;^507^^^^^455^548^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^FunctionType propType = null;^507^508^^^^455^548^[ADD] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = false;^508^^^^^455^548^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( lvalueNode != false && lvalueNode.getType (  )  != Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^502^503^^^^494^525^[REPLACE] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( var == true )  {^506^^^^^502^524^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;FunctionType propType = null;^506^507^508^509^510^502^524^[ADD] if  ( var != null )  { ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null; if  ( ownerType != null )  { propType = findOverriddenFunction (^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == this  )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^514^515^516^517^518^502^524^[ADD] if  ( propType != null )  { functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType ==functionType )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( rValue .getLastChild (  )  .getQualifiedName (  )  ) ;^504^505^^^^502^524^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^504^505^^^^502^524^[ADD] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^508^^^^^502^524^[ADD] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( var == this  )  {^506^^^^^494^525^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^515^516^517^^^494^525^[ADD] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType.cast ( var .getType (  )   ) ;^507^^^^^494^525^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = false;^508^^^^^494^525^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == false )  {^514^^^^^494^525^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( parametersNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^494^525^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^502^503^504^505^^455^548^[ADD] if  ( lvalueNode != null && lvalueNode.getType (  )  == Token.GETPROP && lvalueNode.isQualifiedName (  )  )  { Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^506^507^508^509^510^502^524^[ADD] if  ( var != null )  { ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ; FunctionType propType = null; if  ( ownerType != null )  { propType = findOverriddenFunction (^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^509^510^511^512^^502^524^[ADD] if  ( ownerType != null )  { propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == null )  {^514^^^^^502^524^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType .defineDeclaredProperty ( sourceName , type , isFnLiteral )  ;^507^^^^^502^524^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( var == false )  {^506^^^^^455^548^[REPLACE] if  ( var != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerType == false )  {^509^^^^^455^548^[REPLACE] if  ( ownerType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType == this )  {^514^^^^^455^548^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  new FunctionTypeBuilder ( null, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^515^516^517^518^^455^548^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType.getPropertyType ( var.getType (  )  ) ;^507^^^^^455^548^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^FunctionType propType = this;^508^^^^^455^548^[REPLACE] FunctionType propType = null;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( propType ==functionType )  {^514^^^^^455^548^[REPLACE] if  ( propType != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^Var var = scope.getVar ( rValue.getFirstChild (  ) .getQualifiedName (  )  ) ;^504^505^^^^455^548^[REPLACE] Var var = scope.getVar ( lvalueNode.getFirstChild (  ) .getQualifiedName (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = ObjectType.cast ( var .getType (  )   ) ;^507^^^^^455^548^[REPLACE] ObjectType ownerType = ObjectType.cast ( var.getType (  )  ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( functionType != true )  {^528^^^^^455^548^[REPLACE] if  ( functionType == null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^528^529^530^531^532^455^548^[ADD] if  ( functionType == null )  { functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^functionType =  new FunctionTypeBuilder ( sourceName, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^529^530^531^532^^455^548^[REPLACE] functionType = new FunctionTypeBuilder ( name, compiler, errorRoot, sourceName, scope ) .setSourceNode ( fnRoot )^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( rValue == null )  {^542^^^^^455^548^[REPLACE] if  ( rValue != null )  {^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[ADD]^^542^543^544^^^455^548^[ADD] if  ( rValue != null )  { rValue.setJSType ( functionType ) ; }^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^rValue.setJSType ( propType ) ;^543^^^^^455^548^[REPLACE] rValue.setJSType ( functionType ) ;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^return propType;^547^^^^^455^548^[REPLACE] return functionType;^[METHOD] getFunctionType [TYPE] FunctionType [PARAMETER] String name Node rValue JSDocInfo info Node lvalueNode [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType ownerType  [TYPE]  boolean false  isFnLiteral  true  [TYPE]  JSType type  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node errorRoot  fnRoot  lvalueNode  owner  parametersNode  rValue  [TYPE]  FunctionType functionType  propType  [TYPE]  String fnName  functionName  name  sourceName  [TYPE]  JSDocInfo info 
[REPLACE]^JSType propType = iface.getPropertyType ( propName ) ;^557^^^^^553^573^[REPLACE] JSType propType = ownerType.getPropertyType ( propName ) ;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^if  ( ! propType instanceof FunctionType )  {^558^^^^^553^573^[REPLACE] if  ( propType instanceof FunctionType )  {^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[ADD]^return  ( FunctionType )  propType;^558^559^560^^^553^573^[ADD] if  ( propType instanceof FunctionType )  { return  ( FunctionType )  propType; } else {^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^if  ( ! propType instanceof FunctionType )  {^566^^^^^553^573^[REPLACE] if  ( propType instanceof FunctionType )  {^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^return functionType;^567^^^^^553^573^[REPLACE] return  ( FunctionType )  propType;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^propType =  ownerType.getPropertyType ( propName ) ;^565^^^^^553^573^[REPLACE] propType = iface.getPropertyType ( propName ) ;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^return functionType;^559^^^^^553^573^[REPLACE] return  ( FunctionType )  propType;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[ADD]^return  ( FunctionType )  propType;^566^567^568^^^553^573^[ADD] if  ( propType instanceof FunctionType )  { return  ( FunctionType )  propType; }^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^propType =  null.getPropertyType ( propName ) ;^565^^^^^553^573^[REPLACE] propType = iface.getPropertyType ( propName ) ;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[ADD]^^563^564^565^566^567^553^573^[ADD] for  ( ObjectType iface : ownerType.getCtorImplementedInterfaces (  )  )  { propType = iface.getPropertyType ( propName ) ; if  ( propType instanceof FunctionType )  { return  ( FunctionType )  propType;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^return this;^572^^^^^553^573^[REPLACE] return null;^[METHOD] findOverriddenFunction [TYPE] FunctionType [PARAMETER] ObjectType ownerType String propName [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType iface  ownerType  [TYPE]  String fnName  functionName  name  propName  sourceName  [TYPE]  JSType propType  [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^EnumType enumType = false;^590^^^^^589^631^[REPLACE] EnumType enumType = null;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^while  ( key == null )  {^600^^^^^589^631^[REPLACE] while  ( key != null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( enumType.hasOwnProperty ( sourceName )  )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^}  if  ( !codingConvention.isValidEnumKey ( parentName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^}   JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;enumType.defineElement ( keyName ) ;^605^606^607^608^609^589^631^[ADD] else if  ( !codingConvention.isValidEnumKey ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ; } else { enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^enumType.hasOwnProperty ( keyName ) ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, sourceName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^JSError.make ( sourceName, parent, ENUM_NOT_CONSTANT, keyName )  ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REMOVE]^defineSlot ( name, parent, type, type == null ) ;^607^^^^^589^631^[REMOVE] ^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, parent, ENUM_DUP, keyName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^604^^^^^589^631^[ADD] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.report ( JSError.make ( sourceName, parent, ENUM_DUP, keyName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^}  else {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^enumType.hasOwnProperty ( sourceName ) ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^609^^^^^605^610^[ADD] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, sourceName )  ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^key =  parent.getNext (  ) ;^611^^^^^589^631^[REPLACE] key = key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^key  =  key.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^String parentName = NodeUtil.getStringValue ( key ) ;^601^^^^^589^631^[REPLACE] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( parent == null )  {^593^^^^^589^631^[REPLACE] if  ( value != null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^while  ( key == true )  {^600^^^^^589^631^[REPLACE] while  ( key != null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^603^604^605^606^607^589^631^[ADD] if  ( enumType.hasOwnProperty ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ; } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^}  if  ( !codingConvention.isValidEnumKey ( sourceName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^enumType .getElementsType (  )  ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.report ( JSError.make ( sourceName, parent, ENUM_NOT_CONSTANT, keyName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, sourceName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REMOVE]^defineSlot ( name, parent, type, type == null ) ;^604^^^^^589^631^[REMOVE] ^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^} else if  ( !codingConvention.isValidEnumKey ( sourceName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, parent, ENUM_NOT_CONSTANT, keyName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^String keyName = NodeUtil .isFunctionDeclaration ( parent )  ;^601^^^^^589^631^[REPLACE] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( value.getType (  )   ||  Token.OBJECTLIT )  {^594^^^^^589^631^[REPLACE] if  ( value.getType (  )  == Token.OBJECTLIT )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^}  else {^614^^^^^589^631^[REPLACE] } else if  ( value.isQualifiedName (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( var == true ) {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^functionType =  ( FunctionType )  var.getType (  ) ; ;^617^^^^^589^631^[REPLACE] enumType =  ( EnumType )  var.getType (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^Var var = scope.getVar ( rValue.getQualifiedName (  )  ) ;^615^^^^^589^631^[REPLACE] Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^615^616^617^618^^589^631^[ADD] Var var = scope.getVar ( value.getQualifiedName (  )  ) ; if  ( var != null && var.getType (  )  instanceof EnumType )  { enumType =  ( EnumType )  var.getType (  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( var == this && var.getType (  )  instanceof EnumType )  {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^616^617^618^^^589^631^[ADD] if  ( var != null && var.getType (  )  instanceof EnumType )  { enumType =  ( EnumType )  var.getType (  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^617^^^^^589^631^[ADD] enumType =  ( EnumType )  var.getType (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^Var var = scope.getVar ( parent.getQualifiedName (  )  ) ;^615^^^^^589^631^[REPLACE] Var var = scope.getVar ( value.getQualifiedName (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( enumType.hasOwnProperty ( parentName )  )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^603^604^605^606^607^589^631^[ADD] if  ( enumType.hasOwnProperty ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ; } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  { compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^}  if  ( codingConvention.isValidEnumKey ( keyName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler .getInput ( fnName )  ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^String keyName = NodeUtil.isFunctionDeclaration ( key ) ;^601^^^^^589^631^[REPLACE] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, propName )  ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^604^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_DUP, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^enumType.defineElement ( sourceName ) ;^609^^^^^605^610^[REPLACE] enumType.defineElement ( keyName ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, sourceName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^enumType =  typeRegistry.createEnumType ( sourceName, elementsType ) ;^596^^^^^589^631^[REPLACE] enumType = typeRegistry.createEnumType ( name, elementsType ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^611^^^^^589^631^[ADD] key = key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^key =  ( key != false )  ? false : key.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^Node key = parent.getFirstChild (  ) ;^599^^^^^589^631^[REPLACE] Node key = value.getFirstChild (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^599^^^^^589^631^[ADD] Node key = value.getFirstChild (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^601^^^^^589^631^[ADD] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( enumType.hasOwnProperty ( propName )  )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^607^^^^^589^631^[ADD] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^606^607^^^^589^631^[ADD] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  (  var.getType (  )  instanceof EnumType )  {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( var == null ) {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^enumType =  ( EnumType )  var.getType (  ) ;^616^617^618^^^589^631^[ADD] if  ( var != null && var.getType (  )  instanceof EnumType )  { enumType =  ( EnumType )  var.getType (  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^611^612^^^^589^631^[ADD] key = key.getNext (  ) ; key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^key  =  null ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^Node key = parent.getLastChild (  ) ;^599^^^^^589^631^[REPLACE] Node key = value.getFirstChild (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( var == null && var.getType (  )  instanceof EnumType )  {^616^^^^^589^631^[REPLACE] if  ( var != null && var.getType (  )  instanceof EnumType )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^key =  ( key != true )  ? true : key.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^612^^^^^589^631^[ADD] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^String parentName = NodeUtil .isFunctionDeclaration ( value )  ;^601^^^^^589^631^[REPLACE] String keyName = NodeUtil.getStringValue ( key ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( enumType .defineElement ( propName )   )  {^603^^^^^589^631^[REPLACE] if  ( enumType.hasOwnProperty ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^}  if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^} else if  ( !codingConvention.isValidEnumKey ( parentName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.report ( JSError.make ( sourceName, n, MULTIPLE_VAR_DEF )  ) ;^607^^^^^589^631^[REPLACE] JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^enumType =  typeRegistry.createEnumType ( null, elementsType ) ;^596^^^^^589^631^[REPLACE] enumType = typeRegistry.createEnumType ( name, elementsType ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^key =  ( key == null )  ? null : key.getNext (  ) ;^611^612^^^^589^631^[ADD] key = key.getNext (  ) ; key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^Node key = value.getLastChild (  ) ;^599^^^^^589^631^[REPLACE] Node key = value.getFirstChild (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^606^607^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, key, ENUM_NOT_CONSTANT, keyName )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^} else if  ( codingConvention.isValidEnumKey ( keyName )  )  {^605^^^^^589^631^[REPLACE] } else if  ( !codingConvention.isValidEnumKey ( keyName )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^key =  ( key != null )  ? null : key.getNext (  ) ;^612^^^^^589^631^[REPLACE] key =  ( key == null )  ? null : key.getNext (  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( enumType != null )  {^622^^^^^589^631^[REPLACE] if  ( enumType == null )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^}  if  ( scope.isGlobal (  )  )  {^624^^^^^589^631^[REPLACE] } else if  ( scope.isGlobal (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  (  !name.isEmpty (  )  )  {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^625^626^627^^^589^631^[ADD] if  ( name != null && !name.isEmpty (  )  )  { typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ; }^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^typeRegistry.createEnumType ( name, enumType.getElementsType (  )  ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^typeRegistry.declareType ( name, enumType .defineElement ( name )   ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( sourceName == null && !name.isEmpty (  )  )  {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^propType = findOverriddenFunction ( ownerType, lvalueNode.getLastChild (  ) .getString (  )  ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.getInput ( JSError.make ( sourceName, value, ENUM_INITIALIZER )  ) ;^623^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, parent, ENUM_INITIALIZER )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REMOVE]^defineSlot ( name, parent, type, type == null ) ;^623^^^^^589^631^[REMOVE] ^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^compiler.report ( JSError.make ( sourceName, value, ENUM_INITIALIZER )  ) ;^623^^^^^589^631^[REPLACE] compiler.report ( JSError.make ( sourceName, parent, ENUM_INITIALIZER )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( name == null ) {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^typeRegistry.declareType ( sourceName, enumType.getElementsType (  )  ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^typeRegistry.declareType ( name, enumType .defineElement ( keyName )   ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[ADD]^^626^^^^^589^631^[ADD] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^if  ( name == null && !name.isEmpty (  )  )  {^625^^^^^589^631^[REPLACE] if  ( name != null && !name.isEmpty (  )  )  {^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^typeRegistry.createEnumType ( propName, enumType.getElementsType (  )  ) ;^626^^^^^589^631^[REPLACE] typeRegistry.declareType ( name, enumType.getElementsType (  )  ) ;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^return null;^630^^^^^589^631^[REPLACE] return enumType;^[METHOD] getEnumType [TYPE] EnumType [PARAMETER] String name Node parent Node value JSType elementsType [CLASS] AbstractScopeBuilder   [TYPE]  JSType elementsType  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  EnumType enumType  [TYPE]  Var var  [TYPE]  Node key  parent  value  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName 
[REPLACE]^defineSlot ( name, parent, type, type != null ) ;^642^^^^^641^643^[REPLACE] defineSlot ( name, parent, type, type == null ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node name Node parent JSType type [CLASS] AbstractScopeBuilder   [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  [TYPE]  JSType type  [TYPE]  boolean false  true  [TYPE]  Scope scope  [TYPE]  Node name  parent 
[REPLACE]^Preconditions.checkArgument ( true && type == null ) ;^658^^^^^657^722^[REPLACE] Preconditions.checkArgument ( inferred || type != null ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^boolean shouldDeclareOnGlobalThis = true;^661^^^^^657^722^[REPLACE] boolean shouldDeclareOnGlobalThis = false;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^661^^^^^657^722^[ADD] boolean shouldDeclareOnGlobalThis = false;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( n.getType (  )   &&  Token.NAME )  {^662^^^^^657^722^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^662^663^664^665^666^657^722^[ADD] if  ( n.getType (  )  == Token.NAME )  { Preconditions.checkArgument ( parent.getType (  )  == Token.FUNCTION || parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.LP ||^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^Preconditions.checkArgument ( n.setJSType (  )  == Token.GETPROP ;^672^673^674^675^^662^676^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.GETPROP && ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^n .getJSType (  )   == Token.GETPROP && ( parent^673^674^675^^^662^676^[REPLACE] n.getType (  )  == Token.GETPROP && ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^( n.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^674^675^^^^662^676^[REPLACE] ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^674^675^^^^662^676^[ADD] ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^parent .getJSType (  )   == Token.EXPR_RESULT )  ) ;^675^^^^^662^676^[REPLACE] parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^675^^^^^662^676^[ADD] parent.getType (  )  == Token.EXPR_RESULT )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^shouldDeclareOnGlobalThis = scope.isGlobal (  )  ;^668^669^670^^^657^722^[REPLACE] shouldDeclareOnGlobalThis = scope.isGlobal (  )  && ( parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.FUNCTION ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^668^669^670^^^657^722^[ADD] shouldDeclareOnGlobalThis = scope.isGlobal (  )  && ( parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.FUNCTION ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^String variableName = parent.getQualifiedName (  ) ;^677^^^^^657^722^[REPLACE] String variableName = n.getQualifiedName (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^Preconditions.checkArgument ( inferred || type != null ) ;^678^^^^^657^722^[REPLACE] Preconditions.checkArgument ( !variableName.isEmpty (  )  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^681^^^^^657^722^[REPLACE] if  ( scope.isDeclared ( variableName, false )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( inferred )  {^686^^^^^681^721^[REPLACE] if  ( !inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^n .getJSType (  )  ;^687^^^^^681^721^[REPLACE] n.setJSType ( type ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^692^^^^^681^721^[REPLACE] if  ( shouldDeclareOnGlobalThis )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( !inferred )  {^696^^^^^681^721^[REPLACE] if  ( inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^globalThis .defineInferredProperty ( fnName , inferred )  ;^703^^^^^696^704^[REPLACE] globalThis.defineDeclaredProperty ( variableName, type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^globalThis.defineInferredProperty   typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  ;^697^698^699^700^^681^721^[REPLACE] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^typeRegistry.getType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^699^700^701^^^681^721^[REPLACE] typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^ObjectType globalThis = typeRegistry.getType ( JSTypeNative.GLOBAL_THIS ) ;^693^694^^^^681^721^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^Node name = n.getFirstChild (  ) ;^695^^^^^681^721^[REPLACE] boolean isExtern = input.isExtern (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^globalThis.defineDeclaredProperty ( sourceName, type, isExtern ) ;^703^^^^^696^704^[REPLACE] globalThis.defineDeclaredProperty ( variableName, type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( ! scope.isGlobal (  )  && type instanceof FunctionType )  {^709^^^^^681^721^[REPLACE] if  ( scope.isGlobal (  )  && type instanceof FunctionType )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  (  fnType.isInterface (  )  )  {^711^^^^^681^721^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^FunctionType superClassCtor = fnType.isConstructor (  ) ;^712^^^^^681^721^[REPLACE] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^712^^^^^681^721^[ADD] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^710^^^^^681^721^[REPLACE] FunctionType fnType =  ( FunctionType )  type;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^FunctionType superClassCtor = fnType .isConstructor (  )  ;^712^^^^^681^721^[REPLACE] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( fnType.isConstructor (  )  ) {^711^^^^^681^721^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^CompilerInput input = compiler .report (  )  ;^689^^^^^681^721^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^ObjectType globalThis = typeRegistry .getNativeType (  )  ;^693^694^^^^681^721^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^Var oldVar = scope.getVar ( sourceName ) ;^682^^^^^657^722^[REPLACE] Var oldVar = scope.getVar ( variableName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( inferred )  {^686^^^^^657^722^[REPLACE] if  ( !inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^n .getJSType (  )  ;^687^^^^^657^722^[REPLACE] n.setJSType ( type ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^687^^^^^657^722^[ADD] n.setJSType ( type ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^692^^^^^657^722^[REPLACE] if  ( shouldDeclareOnGlobalThis )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( !inferred )  {^696^^^^^657^722^[REPLACE] if  ( inferred )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^696^697^698^699^700^657^722^[ADD] if  ( inferred )  { globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^703^^^^^696^704^[ADD] globalThis.defineDeclaredProperty ( variableName, type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^globalThis.defineInferredProperty type,^697^698^699^700^^657^722^[REPLACE] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^697^698^699^^^657^722^[ADD] globalThis.defineInferredProperty ( variableName, type == null ? typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  :^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^typeRegistry.getType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^699^700^701^^^657^722^[REPLACE] typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^ObjectType globalThis = typeRegistry .getNativeType (  )  ;^693^694^^^^657^722^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^Node name = n.getFirstChild (  ) ;^695^^^^^657^722^[REPLACE] boolean isExtern = input.isExtern (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^globalThis.defineDeclaredProperty ( name, type, isExtern ) ;^703^^^^^696^704^[REPLACE] globalThis.defineDeclaredProperty ( variableName, type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^typeRegistry .getNativeObjectType (  )   : type, isExtern ) ;^699^700^701^^^657^722^[REPLACE] typeRegistry.getNativeType ( JSTypeNative.NO_TYPE )  : type, isExtern ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  (  type instanceof FunctionType )  {^709^^^^^657^722^[REPLACE] if  ( scope.isGlobal (  )  && type instanceof FunctionType )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^709^710^711^712^713^657^722^[ADD] if  ( scope.isGlobal (  )  && type instanceof FunctionType )  { FunctionType fnType =  ( FunctionType )  type; if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  { FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ; scope.declare ( variableName + ".prototype", n,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  ( fnType.isConstructor (  )  && fnType.isInterface (  )  )  {^711^^^^^657^722^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^711^712^713^714^^657^722^[ADD] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  { FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ; scope.declare ( variableName + ".prototype", n, fnType.getPrototype (  ) , compiler.getInput ( sourceName ) ,^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^FunctionType superClassCtor = fnType.isConstructor (  ) ;^712^^^^^657^722^[REPLACE] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^712^^^^^657^722^[ADD] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^710^^^^^657^722^[REPLACE] FunctionType fnType =  ( FunctionType )  type;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^710^^^^^657^722^[ADD] FunctionType fnType =  ( FunctionType )  type;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^if  (  fnType.isInterface (  )  )  {^711^^^^^657^722^[REPLACE] if  ( fnType.isConstructor (  )  || fnType.isInterface (  )  )  {^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^FunctionType superClassCtor = fnType .isConstructor (  )  ;^712^^^^^657^722^[REPLACE] FunctionType superClassCtor = fnType.getSuperClassConstructor (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^Var oldVar = scope.getVar ( variableName ) ;^689^^^^^657^722^[REPLACE] CompilerInput input = compiler.getInput ( sourceName ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^ObjectType globalThis = typeRegistry.getType ( JSTypeNative.GLOBAL_THIS ) ;^693^694^^^^657^722^[REPLACE] ObjectType globalThis = typeRegistry.getNativeObjectType ( JSTypeNative.GLOBAL_THIS ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[ADD]^^695^^^^^657^722^[ADD] boolean isExtern = input.isExtern (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] AbstractScopeBuilder   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^private  List<Node> nonExternFunctions = Lists.newArrayList (  ) ;^734^^^^^^^[REPLACE] private final List<Node> nonExternFunctions = Lists.newArrayList (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^private final List<StubDeclaration> stubDeclarations  = null ;^742^743^^^^742^743^[REPLACE] private final List<StubDeclaration> stubDeclarations = Lists.newArrayList (  ) ;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^private  Node node;^1171^^^^^^^[REPLACE] private final Node node;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^private final  int  ownerName;^1173^^^^^^^[REPLACE] private final String ownerName;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^private  ObjectType thisType;^1188^^^^^^^[REPLACE] private final ObjectType thisType;^[METHOD] defineSlot [TYPE] void [PARAMETER] Node n Node parent JSType type boolean inferred [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType globalThis  [TYPE]  CompilerInput input  [TYPE]  JSType type  [TYPE]  boolean false  inferred  isExtern  shouldDeclareOnGlobalThis  true  [TYPE]  Scope scope  [TYPE]  Var oldVar  [TYPE]  Node n  parent  [TYPE]  FunctionType fnType  superClassCtor  [TYPE]  String fnName  functionName  keyName  name  propName  sourceName  variableName 
[REPLACE]^return n.getJSType (  ) ;^746^^^^^745^747^[REPLACE] super ( scope ) ;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Scope scope  [TYPE]  Node node 
[REPLACE]^this.node =  null;^1176^^^^^1175^1179^[REPLACE] this.node = node;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[REPLACE]^this.isExtern =  true;^1177^^^^^1175^1179^[REPLACE] this.isExtern = isExtern;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[REPLACE]^this.ownerName =  null;^1178^^^^^1175^1179^[REPLACE] this.ownerName = ownerName;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[ADD]^^1178^^^^^1175^1179^[ADD] this.ownerName = ownerName;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[REPLACE]^this.thisType =  null;^1191^^^^^1190^1192^[REPLACE] this.thisType = thisType;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] ObjectType thisType [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[REPLACE]^if  ( relationship == null )  {^762^^^^^757^912^[REPLACE] if  ( relationship != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^762^763^764^765^766^757^912^[ADD] if  ( relationship != null )  { ObjectType superClass = ObjectType.cast ( typeRegistry.getType ( relationship.superclassName )  ) ; ObjectType subClass = ObjectType.cast ( typeRegistry.getType ( relationship.subclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superClass == null ) {^767^^^^^757^912^[REPLACE] if  ( superClass != null && subClass != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^FunctionType superCtor = superClass.getConstructor (  ) ;FunctionType subCtor = subClass.getConstructor (  ) ;^767^768^769^^^757^912^[ADD] if  ( superClass != null && subClass != null )  { FunctionType superCtor = superClass.getConstructor (  ) ; FunctionType subCtor = subClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( relationship.type  ||  SubclassType.INHERITS )  {^771^^^^^757^912^[REPLACE] if  ( relationship.type == SubclassType.INHERITS )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^validator.expectSuperType ( t, n, type, subClass ) ;^772^^^^^757^912^[REPLACE] validator.expectSuperType ( t, n, superClass, subClass ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == null && subCtor != null )  {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^codingConvention.applySubclassRelationship ( superCtor, functionType, relationship.type ) ;^776^777^^^^757^912^[REPLACE] codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType superCtor = type.getConstructor (  ) ;^768^^^^^757^912^[REPLACE] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType subCtor = superClass.getConstructor (  ) ;^769^^^^^757^912^[REPLACE] FunctionType subCtor = subClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( relationship.type  !=  SubclassType.INHERITS )  {^771^^^^^757^912^[REPLACE] if  ( relationship.type == SubclassType.INHERITS )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == true && subCtor != true )  {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^775^776^777^778^^757^912^[ADD] if  ( superCtor != null && subCtor != null )  { codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^776^777^^^^757^912^[ADD] codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType superClass = ObjectType .getConstructor (  )  ;^763^764^^^^757^912^[REPLACE] ObjectType superClass = ObjectType.cast ( typeRegistry.getType ( relationship.superclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^763^764^^^^757^912^[ADD] ObjectType superClass = ObjectType.cast ( typeRegistry.getType ( relationship.superclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType subClass = ObjectType.hasOwnProperty ( typeRegistry.getType ( relationship.subclassName )  ) ;^765^766^^^^757^912^[REPLACE] ObjectType subClass = ObjectType.cast ( typeRegistry.getType ( relationship.subclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^765^766^^^^757^912^[ADD] ObjectType subClass = ObjectType.cast ( typeRegistry.getType ( relationship.subclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType superCtor = type .getReferenceName (  )  ;^768^^^^^757^912^[REPLACE] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^768^^^^^757^912^[ADD] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superClass == null && subClass != null )  {^767^^^^^757^912^[REPLACE] if  ( superClass != null && subClass != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( relationship.type  &&  SubclassType.INHERITS )  {^771^^^^^757^912^[REPLACE] if  ( relationship.type == SubclassType.INHERITS )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^validator.expectSuperType ( t, n, superClass, subClass ) ;^771^772^773^^^757^912^[ADD] if  ( relationship.type == SubclassType.INHERITS )  { validator.expectSuperType ( t, n, superClass, subClass ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^validator.expectSuperType ( t, parent, superClass, subClass ) ;^772^^^^^757^912^[REPLACE] validator.expectSuperType ( t, n, superClass, subClass ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  subCtor != true )  {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^codingConvention.applySubclassRelationship ( subCtor, subCtor, relationship.type ) ;^776^777^^^^757^912^[REPLACE] codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType superCtor = superClass.cast (  ) ;^768^^^^^757^912^[REPLACE] FunctionType superCtor = superClass.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^info.getType (  ) .evaluate ( scope ) ;^772^^^^^757^912^[REPLACE] validator.expectSuperType ( t, n, superClass, subClass ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REMOVE]^ObjectType superClass = ObjectType.cast ( typeRegistry.getType ( relationship.superclassName )  ) ;^772^^^^^757^912^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == false && subCtor != false )  {^775^^^^^757^912^[REPLACE] if  ( superCtor != null && subCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^codingConvention.applySingletonGetter ( superCtor, superCtor, relationship.type ) ;^776^777^^^^757^912^[REPLACE] codingConvention.applySubclassRelationship ( superCtor, subCtor, relationship.type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( singletonGetterClassName == null )  {^784^^^^^757^912^[REPLACE] if  ( singletonGetterClassName != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( objectType == this  )  {^787^^^^^757^912^[REPLACE] if  ( objectType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( superCtor == null )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, this, this, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, this ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType functionType = type.getConstructor (  ) ;^788^^^^^757^912^[REPLACE] FunctionType functionType = objectType.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, this, this, new FunctionParamBuilder ( typeRegistry )  .evaluate ( true )  , type, this ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^791^792^793^^^757^912^[ADD] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) ,^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( functionType == this  )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( ownerName )  ) ;^785^786^^^^757^912^[REPLACE] ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( singletonGetterClassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, true, true, new FunctionParamBuilder ( typeRegistry ) .evaluate (  ) , objectType, true ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( type == null )  {^787^^^^^757^912^[REPLACE] if  ( objectType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( functionType == null )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^790^791^792^793^794^757^912^[ADD] if  ( functionType != null )  { FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, true, true, new FunctionParamBuilder ( typeRegistry ) .build (  ) , type, true ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType functionType = objectType .getReferenceName (  )  ;^788^^^^^757^912^[REPLACE] FunctionType functionType = objectType.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, this, this, new FunctionParamBuilder ( typeRegistry ) .evaluate (  ) , objectType, this ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( functionType ==superCtor )  {^790^^^^^757^912^[REPLACE] if  ( functionType != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, this, this, new FunctionParamBuilder ( typeRegistry ) .build (  ) , type, this ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegateRelationship == this )  {^803^^^^^757^912^[REPLACE] if  ( delegateRelationship != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  delegateBaseObject != false && delegateSuperObject != false )  {^811^812^813^^^757^912^[REPLACE] if  ( delegatorObject != null && delegateBaseObject != null && delegateSuperObject != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegatorCtor == null ) {^820^821^^^^811^843^[REPLACE] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, true, true, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , true ) ;^826^827^828^^^820^842^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^826^827^828^^^820^842^[ADD] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , false, false, false ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegatorCtor = type.getConstructor (  ) ;^814^^^^^811^843^[REPLACE] FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateBaseCtor = type.getConstructor (  ) ;^815^816^^^^811^843^[REPLACE] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^815^816^^^^811^843^[ADD] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateSuperCtor = type.getConstructor (  ) ;^817^818^^^^811^843^[REPLACE] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, false, false, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( type ) , false ) ;^826^827^828^^^811^843^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^826^827^828^^^811^843^[ADD] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , this, this, this ) ;^830^831^832^833^^811^843^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegatorCtor == this ) {^820^821^^^^757^912^[REPLACE] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^820^821^822^823^824^757^912^[ADD] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  { FunctionParamBuilder functionParamBuilder = new FunctionParamBuilder ( typeRegistry ) ; functionParamBuilder.addRequiredParams (^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, this, this, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , this ) ;^826^827^828^^^820^842^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject .isPropertyTypeInferred ( singletonGetterClassName )  , this, this, this ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegatorObject = ObjectType .getConstructor (  )  ;^804^805^^^^757^912^[REPLACE] ObjectType delegatorObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegator )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegateBaseObject = ObjectType .getConstructor (  )  ;^806^807^^^^757^912^[REPLACE] ObjectType delegateBaseObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegateBase )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegateSuperObject = ObjectType.cast ( typeRegistry.getType ( codingConvention .getSingletonGetterClassName ( n )   )  ) ;^808^809^810^^^757^912^[REPLACE] ObjectType delegateSuperObject = ObjectType.cast ( typeRegistry.getType ( codingConvention.getDelegateSuperclassName (  )  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegatorCtor = type.getConstructor (  ) ;^814^^^^^757^912^[REPLACE] FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateBaseCtor = type.getConstructor (  ) ;^815^816^^^^757^912^[REPLACE] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateSuperCtor = thisType .getReferenceName (  )  ;^817^818^^^^757^912^[REPLACE] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^822^823^^^^757^912^[ADD] FunctionParamBuilder functionParamBuilder = new FunctionParamBuilder ( typeRegistry ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, true, true, functionParamBuilder.build (  ) , typeRegistry.forwardDeclareType ( delegateBaseObject ) , true ) ;^826^827^828^^^757^912^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , true, true, true ) ;^830^831^832^833^^757^912^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( delegatorObject == false ) {^811^812^813^^^757^912^[REPLACE] if  ( delegatorObject != null && delegateBaseObject != null && delegateSuperObject != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^811^812^813^814^815^757^912^[ADD] if  ( delegatorObject != null && delegateBaseObject != null && delegateSuperObject != null )  { FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ; FunctionType delegateBaseCtor =^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  delegateBaseCtor != null && delegateSuperCtor != null )  {^820^821^^^^811^843^[REPLACE] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^820^821^822^823^824^811^843^[ADD] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  { FunctionParamBuilder functionParamBuilder = new FunctionParamBuilder ( typeRegistry ) ; functionParamBuilder.addRequiredParams (^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, false, false, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , false ) ;^826^827^828^^^820^842^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , this, this, this ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateSuperCtor = type.cast (  ) ;^817^818^^^^811^843^[REPLACE] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^817^818^^^^811^843^[ADD] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^822^823^^^^811^843^[ADD] FunctionParamBuilder functionParamBuilder = new FunctionParamBuilder ( typeRegistry ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, true, true, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , true ) ;^826^827^828^^^811^843^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getConstructor (  ) , false, false, false ) ;^830^831^832^833^^811^843^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  (  delegateBaseCtor != null && delegateSuperCtor != null )  {^820^821^^^^757^912^[REPLACE] if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject .isPropertyTypeInferred ( ownerName )  , true, true, true ) ;^830^831^832^833^^820^842^[REPLACE] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( objectLiteralCast == null )  {^848^^^^^757^912^[REPLACE] if  ( objectLiteralCast != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( type == null && type.getConstructor (  )  != null )  {^851^^^^^757^912^[REPLACE] if  ( type != null && type.getConstructor (  )  != null )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^compiler.report ( JSError.make ( t.getSourceName (  ) , parent, CONSTRUCTOR_EXPECTED )  ) ;^854^855^^^^851^856^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^compiler.report ( JSError.make ( t.getInput (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^854^855^^^^851^856^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , n, CONSTRUCTOR_EXPECTED )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^thisType   ;^852^^^^^757^912^[REPLACE] objectLiteralCast.objectNode.setJSType ( type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType type = ObjectType.cast ( typeRegistry .getJSType (  )   ) ;^849^850^^^^757^912^[REPLACE] ObjectType type = ObjectType.cast ( typeRegistry.getType ( objectLiteralCast.typeName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^849^850^^^^757^912^[ADD] ObjectType type = ObjectType.cast ( typeRegistry.getType ( objectLiteralCast.typeName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^superClass   ;^852^^^^^757^912^[REPLACE] objectLiteralCast.objectNode.setJSType ( type ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( !t.getInput (  ) .isExterparent (  )  )  {^861^^^^^757^912^[REPLACE] if  ( !t.getInput (  ) .isExtern (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^nonExternFunctions.add ( parent ) ;^862^^^^^757^912^[REPLACE] nonExternFunctions.add ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^862^^^^^757^912^[ADD] nonExternFunctions.add ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( node.getType (  )  == Token.ASSIGN && parent.getType (  )  == Token.NAME )  {^866^867^^^^757^912^[REPLACE] if  ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^866^867^868^869^^757^912^[ADD] if  ( parent.getType (  )  == Token.ASSIGN || parent.getType (  )  == Token.NAME )  { return; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^return null;^868^^^^^866^869^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( firstChild.getType (  )  == Token.GETPROP ) {^882^883^^^^757^912^[REPLACE] if  ( firstChild.getType (  )  == Token.GETPROP && firstChild.isQualifiedName (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^882^883^884^885^886^757^912^[ADD] if  ( firstChild.getType (  )  == Token.GETPROP && firstChild.isQualifiedName (  )  )  { maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , firstChild, n, firstChild.getNext (  )  ) ; }^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , parent, n, firstChild.getNext (  )  ) ;^884^885^^^^882^886^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , firstChild, n, firstChild.getNext (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, parent.getJSDocInfo (  ) , firstChild, n, firstChild.getNext (  )  ) ;^884^885^^^^882^886^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , firstChild, n, firstChild.getNext (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^firstChild, n, firstChild.getParent (  )  ) ;^885^^^^^882^886^[REPLACE] firstChild, n, firstChild.getNext (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^885^^^^^882^886^[ADD] firstChild, n, firstChild.getNext (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( n .getLastChild (  )   )  {^897^^^^^757^912^[REPLACE] if  ( n.hasOneChild (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForOldStyleTypedef ( t, parent ) ;^898^^^^^757^912^[REPLACE] checkForOldStyleTypedef ( t, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^898^^^^^757^912^[ADD] checkForOldStyleTypedef ( t, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, parent.getFirstChild (  ) , n.getJSDocInfo (  )  ) ;^899^^^^^757^912^[REPLACE] checkForTypedef ( t, n.getFirstChild (  ) , n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, parent .getLastChild (  )  , n.getJSDocInfo (  )  ) ;^899^^^^^757^912^[REPLACE] checkForTypedef ( t, n.getFirstChild (  ) , n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( parent.getType (  )  == Token.EXPR_RESULT || n.isQualifiedName (  )  )  {^905^906^^^^757^912^[REPLACE] if  ( parent.getType (  )  == Token.EXPR_RESULT && n.isQualifiedName (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, n, n .getString (  )   ) ;^907^^^^^905^909^[REPLACE] checkForTypedef ( t, n, n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^checkForTypedef ( t, parent, n.getJSDocInfo (  )  ) ;^907^^^^^905^909^[REPLACE] checkForTypedef ( t, n, n.getJSDocInfo (  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , n, parent, false ) ;^908^^^^^905^909^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , n, parent, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^maybeDeclareQualifiedName ( t, parent.getString (  ) , n, parent, null ) ;^908^^^^^905^909^[REPLACE] maybeDeclareQualifiedName ( t, n.getJSDocInfo (  ) , n, parent, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^return null;^868^^^^^757^912^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^SubclassRelationship relationship = codingConvention.getClassesDefinedByCall ( parent ) ;^760^761^^^^757^912^[REPLACE] SubclassRelationship relationship = codingConvention.getClassesDefinedByCall ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType superClass = ObjectType.hasOwnProperty ( typeRegistry.getType ( relationship.superclassName )  ) ;^763^764^^^^757^912^[REPLACE] ObjectType superClass = ObjectType.cast ( typeRegistry.getType ( relationship.superclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType subClass = ObjectType .getConstructor (  )  ;^765^766^^^^757^912^[REPLACE] ObjectType subClass = ObjectType.cast ( typeRegistry.getType ( relationship.subclassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^String singletonGetterClassName = codingConvention.getDelegateRelationship ( n ) ;^782^783^^^^757^912^[REPLACE] String singletonGetterClassName = codingConvention.getSingletonGetterClassName ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType objectType = ObjectType.hasOwnProperty ( typeRegistry.getType ( ownerName )  ) ;^785^786^^^^757^912^[REPLACE] ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( singletonGetterClassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^785^786^^^^757^912^[ADD] ObjectType objectType = ObjectType.cast ( typeRegistry.getType ( singletonGetterClassName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType functionType = type .getReferenceName (  )  ;^788^^^^^757^912^[REPLACE] FunctionType functionType = objectType.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType getterType = new FunctionType ( typeRegistry, false, false, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, false ) ;^791^792^793^794^^757^912^[REPLACE] FunctionType getterType = new FunctionType ( typeRegistry, null, null, new FunctionParamBuilder ( typeRegistry ) .build (  ) , objectType, null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^DelegateRelationship delegateRelationship = codingConvention.getDelegateRelationship ( parent ) ;^801^802^^^^757^912^[REPLACE] DelegateRelationship delegateRelationship = codingConvention.getDelegateRelationship ( n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegatorObject = ObjectType.hasOwnProperty ( typeRegistry.getType ( delegateRelationship.delegator )  ) ;^804^805^^^^757^912^[REPLACE] ObjectType delegatorObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegator )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegateBaseObject = ObjectType.hasOwnProperty ( typeRegistry.getType ( delegateRelationship.delegateBase )  ) ;^806^807^^^^757^912^[REPLACE] ObjectType delegateBaseObject = ObjectType.cast ( typeRegistry.getType ( delegateRelationship.delegateBase )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType delegateSuperObject = ObjectType.hasOwnProperty ( typeRegistry.getType ( codingConvention.getDelegateSuperclassName (  )  )  ) ;^808^809^810^^^757^912^[REPLACE] ObjectType delegateSuperObject = ObjectType.cast ( typeRegistry.getType ( codingConvention.getDelegateSuperclassName (  )  )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegatorCtor = superClass.getConstructor (  ) ;^814^^^^^757^912^[REPLACE] FunctionType delegatorCtor = delegatorObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateBaseCtor = thisType.getConstructor (  ) ;^815^816^^^^757^912^[REPLACE] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^815^816^^^^757^912^[ADD] FunctionType delegateBaseCtor = delegateBaseObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType delegateSuperCtor = superClass.cast (  ) ;^817^818^^^^757^912^[REPLACE] FunctionType delegateSuperCtor = delegateSuperObject.getConstructor (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^FunctionType findDelegate = new FunctionType ( typeRegistry, this, this, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , this ) ;^826^827^828^^^757^912^[REPLACE] FunctionType findDelegate = new FunctionType ( typeRegistry, null, null, functionParamBuilder.build (  ) , typeRegistry.createNullableType ( delegateBaseObject ) , null ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[ADD]^^830^831^832^^^757^912^[ADD] FunctionType delegateProxy = typeRegistry.createConstructorType ( delegateBaseObject.getReferenceName (  ) , null, null,^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectLiteralCast objectLiteralCast = codingConvention .getDelegateSuperclassName (  )  ;^846^847^^^^757^912^[REPLACE] ObjectLiteralCast objectLiteralCast = codingConvention.getObjectLiteralCast ( t, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^ObjectType type = ObjectType .getConstructor (  )  ;^849^850^^^^757^912^[REPLACE] ObjectType type = ObjectType.cast ( typeRegistry.getType ( objectLiteralCast.typeName )  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^Node firstChild = parent.getFirstChild (  ) ;^881^^^^^757^912^[REPLACE] Node firstChild = n.getFirstChild (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  DelegateRelationship delegateRelationship  [TYPE]  NodeTraversal t  [TYPE]  Node firstChild  n  node  parent  [TYPE]  FunctionType delegateBaseCtor  delegateProxy  delegateSuperCtor  delegatorCtor  findDelegate  functionType  getterType  subCtor  superCtor  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  SubclassRelationship relationship  [TYPE]  String ownerName  singletonGetterClassName  [TYPE]  ObjectLiteralCast objectLiteralCast  [TYPE]  FunctionParamBuilder functionParamBuilder 
[REPLACE]^if  ( info != null || !info .getTypedefType (  )   )  {^922^^^^^921^948^[REPLACE] if  ( info == null || !info.hasTypedefType (  )  )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return null;^923^^^^^921^948^[REPLACE] return;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String typedef = parent.getQualifiedName (  ) ;^926^^^^^921^948^[REPLACE] String typedef = candidate.getQualifiedName (  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( typedef != null )  {^927^^^^^921^948^[REPLACE] if  ( typedef == null )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return null;^928^^^^^921^948^[REPLACE] return;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.forwardDeclareType ( singletonGetterClassName ) ;^934^^^^^921^948^[REPLACE] typeRegistry.forwardDeclareType ( typedef ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType realType = info.getTypedefType (  )  .setJSType ( subClass )  ;^936^^^^^921^948^[REPLACE] JSType realType = info.getTypedefType (  ) .evaluate ( scope ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( realType != false )  {^937^^^^^921^948^[REPLACE] if  ( realType == null )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^compiler.report ( JSError.make ( t.getSourceName (  ) , parent, MALFORMED_TYPEDEF, typedef )  ) ;^938^939^940^^^921^948^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, singletonGetterClassName )  ) ;^939^940^^^^921^948^[REPLACE] JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^t .getInput (  )  , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^940^^^^^921^948^[REPLACE] t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REMOVE]^defineSlot ( n, parent, unknownType, true ) ;^940^^^^^921^948^[REMOVE] ^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType ownerVarType = ownerVar.getType (  ) ;^943^^^^^921^948^[REPLACE] typeRegistry.declareType ( typedef, realType ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( candidate.getType (  )   !=  Token.GETPROP )  {^944^^^^^921^948^[REPLACE] if  ( candidate.getType (  )  == Token.GETPROP )  {^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^944^945^946^947^^921^948^[ADD] if  ( candidate.getType (  )  == Token.GETPROP )  { defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , false ) ; }^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , true ) ;^945^946^^^^921^948^[REPLACE] defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( parent, candidate .getNext (  )  , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^945^946^^^^921^948^[REPLACE] defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^945^946^^^^921^948^[ADD] defineSlot ( candidate, candidate.getParent (  ) , typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^typeRegistry.getType ( NO_TYPE ) , false ) ;^946^^^^^921^948^[REPLACE] typeRegistry.getNativeType ( NO_TYPE ) , false ) ;^[METHOD] checkForTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate JSDocInfo info [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String typedef = codingConvention.getDelegateRelationship ( parent ) ;^958^^^^^956^979^[REPLACE] String typedef = codingConvention.identifyTypeDefAssign ( candidate ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( typedef ==singletonGetterClassName )  {^959^^^^^956^979^[REPLACE] if  ( typedef != null )  {^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( realType != null )  {^968^^^^^956^979^[REPLACE] if  ( realType == null )  {^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, singletonGetterClassName )  ) ;^969^970^971^^^956^979^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSError.make ( t.getSourceName (  ) , parent, MALFORMED_TYPEDEF, typedef )  ) ;^970^971^^^^956^979^[REPLACE] JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^t.getInput (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^971^^^^^956^979^[REPLACE] t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSDocInfo info = parent.getJSDocInfo (  ) ;^965^^^^^956^979^[REPLACE] JSDocInfo info = candidate.getJSDocInfo (  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType realType = info != null ? null : info.getType (  ) .evaluate ( scope ) ;^966^967^^^^956^979^[REPLACE] JSType realType = info == null ? null : info.getType (  ) .evaluate ( scope ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^compiler.report ( JSError.make ( t.getSourceName (  ) , parent, MALFORMED_TYPEDEF, typedef )  ) ;^969^970^971^^^956^979^[REPLACE] compiler.report ( JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSError.make ( t.getInput (  ) , candidate, MALFORMED_TYPEDEF, singletonGetterClassName )  ) ;^970^971^^^^956^979^[REPLACE] JSError.make ( t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^971^^^^^956^979^[ADD] t.getSourceName (  ) , candidate, MALFORMED_TYPEDEF, typedef )  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSDocInfo info = parent.getString (  ) ;^965^^^^^956^979^[REPLACE] JSDocInfo info = candidate.getJSDocInfo (  ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType realType  =  null ;^966^967^^^^956^979^[REPLACE] JSType realType = info == null ? null : info.getType (  ) .evaluate ( scope ) ;^[METHOD] checkForOldStyleTypedef [TYPE] void [PARAMETER] NodeTraversal t Node candidate [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  subClass  superClass  thisType  type  [TYPE]  boolean false  isExtern  true  [TYPE]  JSType realType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  parent  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String ownerName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^Node ownerNode = parent.getFirstChild (  ) ;^993^^^^^992^1091^[REPLACE] Node ownerNode = n.getFirstChild (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String ownerName = rhsValue.getQualifiedName (  ) ;^994^^^^^992^1091^[REPLACE] String ownerName = ownerNode.getQualifiedName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String qName = n.isQualifiedName (  ) ;^995^^^^^992^1091^[REPLACE] String qName = n.getQualifiedName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String propName = n.getLastChild (  )  .getType (  )  ;^996^^^^^992^1091^[REPLACE] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^996^^^^^992^1091^[ADD] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^Preconditions.checkArgument ( typedef == null ;^997^^^^^992^1091^[REPLACE] Preconditions.checkArgument ( qName != null && ownerName != null ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegatorCtor != null && delegateBaseCtor != null && delegateSuperCtor != null )  {^1004^^^^^992^1091^[REPLACE] if  ( "prototype".equals ( propName )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1004^1005^1006^1007^^992^1091^[ADD] if  ( "prototype".equals ( propName )  )  { Var qVar = scope.getVar ( qName ) ; if  ( qVar != null )  { if  ( !qVar.isTypeInferred (  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( qVar == null )  {^1006^^^^^992^1091^[REPLACE] if  ( qVar != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( !q      )  {^1007^^^^^992^1091^[REPLACE] if  ( !qVar.isTypeInferred (  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return null;^1009^^^^^992^1091^[REPLACE] return;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^Var qVar = scope .undeclare ( qVar )  ;^1005^^^^^992^1091^[REPLACE] Var qVar = scope.getVar ( qName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( qVar == this )  {^1006^^^^^992^1091^[REPLACE] if  ( qVar != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1007^1008^1009^1010^^992^1091^[ADD] if  ( !qVar.isTypeInferred (  )  )  {  return; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^Var qVar = scope.undeclare ( typedef ) ;^1005^^^^^992^1091^[REPLACE] Var qVar = scope.getVar ( qName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType valueType = getDeclaredGetPropType ( t, info, n, ownerNode ) ;^1028^^^^^992^1091^[REPLACE] JSType valueType = getDeclaredGetPropType ( t, info, n, rhsValue ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerTypeOfThis != null && rhsValue != null )  {^1029^^^^^992^1091^[REPLACE] if  ( valueType == null && rhsValue != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1029^1030^1031^1032^^992^1091^[ADD] if  ( valueType == null && rhsValue != null )  {  valueType = rhsValue.getJSType (  ) ; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^valueType =  ownerNode.getJSType (  ) ;^1031^^^^^992^1091^[REPLACE] valueType = rhsValue.getJSType (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1031^^^^^992^1091^[ADD] valueType = rhsValue.getJSType (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( valueType != this  )  {^1034^^^^^992^1091^[REPLACE] if  ( valueType == null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1034^1035^1036^1037^1038^992^1091^[ADD] if  ( valueType == null )  { if  ( parent.getType (  )  == Token.EXPR_RESULT )  { stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ; } else if  ( rhsValue != null &&^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( parent.getType (  )   &&  Token.EXPR_RESULT )  {^1035^^^^^992^1091^[REPLACE] if  ( parent.getType (  )  == Token.EXPR_RESULT )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^}  else {^1038^1039^^^^992^1091^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ! ownerType instanceof FunctionType )  {^1042^^^^^1038^1053^[REPLACE] if  ( ownerType instanceof FunctionType )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegateType == null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , true ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType )  .getType (  )  ;^1043^^^^^1038^1053^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectLiteralCast objectLiteralCast = codingConvention.getObjectLiteralCast ( t, n ) ;^1044^^^^^1038^1053^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1044^^^^^1038^1053^[ADD] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  =  typeRegistry.getType ( typedef ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegateType == null ) {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = getObjectSlot ( typedef ) ;^1041^^^^^1038^1053^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1041^^^^^1038^1053^[ADD] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getType (  ) ;^1043^^^^^1038^1053^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( ownerNode )  ;^1044^^^^^1038^1053^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  =  null ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ! ownerType instanceof FunctionType )  {^1042^^^^^992^1091^[REPLACE] if  ( ownerType instanceof FunctionType )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;String delegateName = codingConvention.getDelegateSuperclassName (  ) ;null : typeRegistry.getType ( delegateName ) ;^1042^1043^1044^1045^1046^992^1091^[ADD] if  ( ownerType instanceof FunctionType )  { JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ; JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegateType == null && ownerTypeOfThis .restrictByNotNullOrUndefined (  )   )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , true ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType )  .getType (  )  ;^1043^^^^^992^1091^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectLiteralCast objectLiteralCast = codingConvention.getObjectLiteralCast ( t, n ) ;^1044^^^^^992^1091^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1044^^^^^992^1091^[ADD] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  =  null ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1047^1048^1049^1050^1051^992^1091^[ADD] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  { defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, ownerNode, typeRegistry .getNativeObjectType (  )  , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry .getNativeObjectType (  )  , true ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = getObjectSlot ( typedef ) ;^1041^^^^^992^1091^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1041^^^^^992^1091^[ADD] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType = delegateName != null ? null : typeRegistry.getType ( delegateName ) ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^stubDeclarations.add ( parentew StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^1036^1037^^^^992^1091^[REPLACE] stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^n, t.getInput (  ) .setJSType (  ) , ownerName )  ) ;^1037^^^^^992^1091^[REPLACE] n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^n, t.getSourceName (  ) .isExtern (  ) , ownerName )  ) ;^1037^^^^^992^1091^[REPLACE] n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^}   ObjectType ownerType = getObjectSlot ( ownerName ) ;^1038^1039^^1041^^992^1091^[ADD] else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  { ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1049^1050^^^^1038^1053^[ADD] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( candidate )  ;^1044^^^^^1038^1053^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  =  typeRegistry.getType (singletonGetterClassName ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry .getNativeObjectType (  )  , true ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1043^1044^^^^1038^1053^[ADD] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  =  typeRegistry.getType ( delegateName ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegateType == null ) {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry .getNativeObjectType (  )  , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getType (  ) ;^1043^^^^^992^1091^[REPLACE] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( rhsValue )  ;^1044^^^^^992^1091^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType = typedef != null ? null : typeRegistry.getType ( delegateName ) ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1045^1046^^^^992^1091^[ADD] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegateType == true && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1049^1050^^^^1047^1051^[ADD] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return null;^1055^^^^^992^1091^[REPLACE] return;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1035^1036^1037^1038^^992^1091^[ADD] if  ( parent.getType (  )  == Token.EXPR_RESULT )  { stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ; } else if  ( rhsValue != null &&^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( ownerNode, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( ownerNode, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1038^1053^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType = typedef != null ? null : typeRegistry.getType ( delegateName ) ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  =  true ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegateType == null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^992^1091^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, ownerNode, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  =  typeRegistry.getType ( singletonGetterClassName ) ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  )  .getType (  )  , ownerName )  ) ;^1036^1037^^^^992^1091^[REPLACE] stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1036^1037^^^^992^1091^[ADD] stubDeclarations.add ( new StubDeclaration ( n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1037^^^^^992^1091^[ADD] n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^n, t .getSourceName (  )  .isExtern (  ) , ownerName )  ) ;^1037^^^^^992^1091^[REPLACE] n, t.getInput (  ) .isExtern (  ) , ownerName )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  ( rhsValue != null ) {^1038^1039^^^^992^1091^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.TRUE )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ;String delegateName = codingConvention.getDelegateSuperclassName (  ) ;null : typeRegistry.getType ( delegateName ) ;^1042^1043^1044^1045^1046^1038^1053^[ADD] if  ( ownerType instanceof FunctionType )  { JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ; JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( delegateType == true && ownerTypeOfThis.isSubtype ( delegateType )  )  {^1047^1048^^^^1038^1053^[REPLACE] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1047^1048^1049^1050^1051^1038^1053^[ADD] if  ( delegateType != null && ownerTypeOfThis.isSubtype ( delegateType )  )  { defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ; }^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( n )  ;^1044^^^^^1038^1053^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType  = typedef ;^1045^1046^^^^1038^1053^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1045^1046^^^^1038^1053^[ADD] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^defineSlot ( n, parent, typeRegistry.getType ( BOOLEAN_TYPE ) , false ) ;^1049^1050^^^^1047^1051^[REPLACE] defineSlot ( n, parent, typeRegistry.getNativeType ( BOOLEAN_TYPE ) , true ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1043^1044^^^^992^1091^[ADD] JSType ownerTypeOfThis =  (  ( FunctionType )  ownerType ) .getTypeOfThis (  ) ; String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType delegateType = delegateName != true ? true : typeRegistry.getType ( delegateName ) ;^1045^1046^^^^992^1091^[REPLACE] JSType delegateType = delegateName == null ? null : typeRegistry.getType ( delegateName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = getObjectSlot ( singletonGetterClassName ) ;^1041^^^^^992^1091^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^String delegateName = codingConvention .getSingletonGetterClassName ( candidate )  ;^1044^^^^^992^1091^[REPLACE] String delegateName = codingConvention.getDelegateSuperclassName (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^boolean inferred = false;^1058^^^^^992^1091^[REPLACE] boolean inferred = true;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( info == this )  {^1059^^^^^992^1091^[REPLACE] if  ( info != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^inferred = ! ( info.hasType (  )  ;^1061^1062^^^^992^1091^[REPLACE] inferred = ! ( info.hasType (  )  || info.hasEnumParameterType (  )  || FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^inferred = ! ( info.hasType (  )   ^  info.hasEnumParameterType (  )   ^  FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  ) ;^1061^1062^^^^992^1091^[REPLACE] inferred = ! ( info.hasType (  )  || info.hasEnumParameterType (  )  || FunctionTypeBuilder.isFunctionTypeDeclaration ( info )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( !inferred )  {^1065^^^^^992^1091^[REPLACE] if  ( inferred )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^inferred = ! ( rhsValue == null ;^1067^1068^1069^^^992^1091^[REPLACE] inferred = ! ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION && !scope.isDeclared ( qName, false )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1067^1068^1069^^^992^1091^[ADD] inferred = ! ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION && !scope.isDeclared ( qName, false )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^inferred = ! ( rhsValue != false  >=  rhsValue.getType (  )  != Token.FUNCTION  >=  !scope.isDeclared ( qName, false )  ) ;^1067^1068^1069^^^992^1091^[REPLACE] inferred = ! ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION && !scope.isDeclared ( qName, false )  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( inferred )  {^1072^^^^^992^1091^[REPLACE] if  ( !inferred )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( ownerType == null )  {^1074^^^^^992^1091^[REPLACE] if  ( ownerType != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1074^1075^^1077^1078^992^1091^[ADD] if  ( ownerType != null )  {  boolean isExtern = t.getInput (  ) .isExtern (  ) ; if  (  ( !ownerType.hasOwnProperty ( propName )  ||^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^1078^1079^1080^1081^^992^1091^[REPLACE] if  (  ( !ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ownerType.defineDeclaredProperty ( propName, valueType, true ) ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^boolean isExtern = t.getSourceName (  ) .isExtern (  ) ;^1077^^^^^992^1091^[REPLACE] boolean isExtern = t.getInput (  ) .isExtern (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  ( ownerType.hasOwnProperty ( propName )  ) {^1078^1079^1080^1081^^992^1091^[REPLACE] if  (  ( !ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1078^1079^1080^1081^^992^1091^[ADD] if  (  ( !ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ownerType.defineInferredProperty ( propName, valueType, true ) ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1083^^^^^1078^1084^[ADD] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ObjectType ownerType = getObjectSlot ( typedef ) ;^1073^^^^^992^1091^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^boolean isExtern = t.getInput (  )  .getType (  )  ;^1077^^^^^992^1091^[REPLACE] boolean isExtern = t.getInput (  ) .isExtern (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  (type == null )  {^1074^^^^^992^1091^[REPLACE] if  ( ownerType != null )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ownerType.defineDeclaredProperty ( propName, ownerTypeOfThis, isExtern ) ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  (  ( ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^1078^1079^1080^1081^^992^1091^[REPLACE] if  (  ( !ownerType.hasOwnProperty ( propName )  || ownerType.isPropertyTypeInferred ( propName )  )  && (  ( isExtern && !ownerType.isNativeObjectType (  )  )  || !ownerType.isInstanceType (  )  )  )  {^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^ownerType.defineDeclaredProperty ( typedef, valueType, isExtern ) ;^1083^^^^^1078^1084^[REPLACE] ownerType.defineDeclaredProperty ( propName, valueType, isExtern ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^boolean.setJSType = t.getInput (  ) .isExtern (  ) ;^1077^^^^^992^1091^[REPLACE] boolean isExtern = t.getInput (  ) .isExtern (  ) ;^[METHOD] maybeDeclareQualifiedName [TYPE] void [PARAMETER] NodeTraversal t JSDocInfo info Node n Node parent Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType delegateType  ownerTypeOfThis  valueType  [TYPE]  NodeTraversal t  [TYPE]  Var qVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^Var ownerVar = scope.undeclare ( qName ) ;^1099^^^^^1098^1106^[REPLACE] Var ownerVar = scope.getVar ( slotName ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef 
[REPLACE]^if  ( ownerVar == null )  {^1100^^^^^1098^1106^[REPLACE] if  ( ownerVar != null )  {^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef 
[ADD]^JSType ownerVarType = ownerVar.getType (  ) ;null : ownerVarType.restrictByNotNullOrUndefined (  )  ) ;^1100^1101^1102^1103^1104^1098^1106^[ADD] if  ( ownerVar != null )  { JSType ownerVarType = ownerVar.getType (  ) ; return ObjectType.cast ( ownerVarType == null ? null : ownerVarType.restrictByNotNullOrUndefined (  )  ) ; }^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef 
[REPLACE]^return   null ;^1102^1103^^^^1098^1106^[REPLACE] return ObjectType.cast ( ownerVarType == null ? null : ownerVarType.restrictByNotNullOrUndefined (  )  ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef 
[REPLACE]^JSType ownerVarType = ownerVar.isTypeInferred (  ) ;^1101^^^^^1098^1106^[REPLACE] JSType ownerVarType = ownerVar.getType (  ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef 
[REPLACE]^return   this  ;^1102^1103^^^^1098^1106^[REPLACE] return ObjectType.cast ( ownerVarType == null ? null : ownerVarType.restrictByNotNullOrUndefined (  )  ) ;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef 
[REPLACE]^return false;^1105^^^^^1098^1106^[REPLACE] return null;^[METHOD] getObjectSlot [TYPE] ObjectType [PARAMETER] String slotName [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType ownerVarType  [TYPE]  Var ownerVar  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef 
[REPLACE]^if  (  info.hasType (  )  )  {^1119^^^^^1117^1129^[REPLACE] if  ( info != null && info.hasType (  )  )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  ( info == null && info.hasEnumParameterType (  )  )  {^1121^^^^^1117^1129^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[ADD]^}   return n.getJSType (  ) ;return rhsValue.getJSType (  ) ;^1121^1122^1123^1124^1125^1117^1129^[ADD] else if  ( info != null && info.hasEnumParameterType (  )  )  { return n.getJSType (  ) ; } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  { return rhsValue.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^}  else {^1123^1124^^^^1117^1129^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return rhsValue.getJSType (  ) ;^1127^^^^^1117^1129^[REPLACE] return getDeclaredTypeInAnnotation ( t, n, info ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return ownerNode.getType (  ) ;^1125^^^^^1117^1129^[REPLACE] return rhsValue.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return rhsValue.getType (  ) ;^1125^^^^^1117^1129^[REPLACE] return rhsValue.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return n .getType (  )  ;^1122^^^^^1117^1129^[REPLACE] return n.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  (  rhsValue.getType (  )  != Token.FUNCTION )  {^1123^1124^^^^1117^1129^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return getDeclaredTypeInAnnotation ( t, parent, info ) ;^1120^^^^^1117^1129^[REPLACE] return getDeclaredTypeInAnnotation ( t, n, info ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^} else if  (  info.hasEnumParameterType (  )  )  {^1121^^^^^1117^1129^[REPLACE] } else if  ( info != null && info.hasEnumParameterType (  )  )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^}  if  ( rhsValue != false && rhsValue.getType (  )  != Token.FUNCTION )  {^1123^1124^^^^1117^1129^[REPLACE] } else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  {^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[ADD]^}   return rhsValue.getJSType (  ) ;return getDeclaredTypeInAnnotation ( t, n, info ) ;^1123^1124^1125^1126^1127^1117^1129^[ADD] else if  ( rhsValue != null && rhsValue.getType (  )  == Token.FUNCTION )  { return rhsValue.getJSType (  ) ; } else { return getDeclaredTypeInAnnotation ( t, n, info ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return parent.getType (  ) ;^1122^^^^^1117^1129^[REPLACE] return n.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return rhsValue.getJSType (  ) ;^1120^^^^^1117^1129^[REPLACE] return getDeclaredTypeInAnnotation ( t, n, info ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return n.getType (  ) ;^1122^^^^^1117^1129^[REPLACE] return n.getJSType (  ) ;^[METHOD] getDeclaredGetPropType [TYPE] JSType [PARAMETER] NodeTraversal t JSDocInfo info Node n Node rhsValue [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( scope .undeclare ( this )   )  {^1144^^^^^1135^1165^[REPLACE] if  ( scope.isDeclared ( qName, false )  )  {^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^continue;^1144^1145^1146^^^1135^1165^[ADD] if  ( scope.isDeclared ( qName, false )  )  { continue; }^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^if  ( ownerType == this && ( isExtern ) {^1154^1155^^^^1135^1165^[REPLACE] if  ( ownerType != null && ( isExtern || ownerType.isFunctionPrototypeType (  )  )  )  {^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^^1154^1155^^^1158^1135^1165^[ADD] if  ( ownerType != null && ( isExtern || ownerType.isFunctionPrototypeType (  )  )  )  { ownerType.defineInferredProperty (^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^typeRegistry.registerPropertyOnType type ) ;^1161^1162^^^^1154^1163^[REPLACE] typeRegistry.registerPropertyOnType ( propName, ownerType == null ? unknownType : ownerType ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^ownerType.defineDeclaredProperty ( propName, unknownType, isExtern ) ;^1158^1159^^^^1154^1163^[REPLACE] ownerType.defineInferredProperty ( propName, unknownType, isExtern ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^^1158^1159^^^^1154^1163^[ADD] ownerType.defineInferredProperty ( propName, unknownType, isExtern ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^for  ( StubDeclaration stub : stubDeclarations )  { Node n = stub.node;^1136^^^^^1135^1165^[REPLACE] for  ( StubDeclaration stub : stubDeclarations )  {^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^^1136^1137^1138^1139^1140^1135^1165^[ADD] for  ( StubDeclaration stub : stubDeclarations )  { Node n = stub.node; Node parent = n.getParent (  ) ; String qName = n.getQualifiedName (  ) ; String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^Node parent = n.getParent (  ) ;^1137^^^^^1135^1165^[REPLACE] Node n = stub.node;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^Node parent = parent.getNext (  ) ;^1138^^^^^1135^1165^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^String qName = parent.isQualifiedName (  ) ;^1139^^^^^1135^1165^[REPLACE] String qName = n.getQualifiedName (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^String propName = n.getLastChild (  ) .getString (  ) ;String ownerName = stub.ownerName;boolean isExtern = stub.isExtern;^1139^1140^1141^1142^^1135^1165^[ADD] String qName = n.getQualifiedName (  ) ; String propName = n.getLastChild (  ) .getString (  ) ; String ownerName = stub.ownerName; boolean isExtern = stub.isExtern;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^String propName = parent.getLastChild (  ) .getString (  ) ;^1140^^^^^1135^1165^[REPLACE] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^^1140^^^^^1135^1165^[ADD] String propName = n.getLastChild (  ) .getString (  ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^Var ownerVar = scope.getVar ( slotName ) ;^1141^^^^^1135^1165^[REPLACE] String ownerName = stub.ownerName;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^Node n = stub.node;^1142^^^^^1135^1165^[REPLACE] boolean isExtern = stub.isExtern;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^^1142^^^^^1135^1165^[ADD] boolean isExtern = stub.isExtern;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^ObjectType ownerType = getObjectSlot ( typedef ) ;^1150^^^^^1135^1165^[REPLACE] ObjectType ownerType = getObjectSlot ( ownerName ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^^1150^1151^^^^1135^1165^[ADD] ObjectType ownerType = getObjectSlot ( ownerName ) ; ObjectType unknownType = typeRegistry.getNativeObjectType ( UNKNOWN_TYPE ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^ObjectType unknownType = typeRegistry.getType ( UNKNOWN_TYPE ) ;^1151^^^^^1135^1165^[REPLACE] ObjectType unknownType = typeRegistry.getNativeObjectType ( UNKNOWN_TYPE ) ;^[METHOD] resolveStubDeclarations [TYPE] void [PARAMETER] [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  StubDeclaration stub  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^if  ( parent != this && parent.getType (  )  != Token.EXPR_RESULT )  {^1195^^^^^1194^1205^[REPLACE] if  ( parent != null && parent.getType (  )  == Token.EXPR_RESULT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^switch  ( parent.getType (  )  )  {^1196^^^^^1194^1205^[REPLACE] switch  ( n.getType (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^maybeCollectMember ( t, parent.getFirstChild (  ) , n ) ;^1198^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n.getFirstChild (  ) , n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^^1198^1199^^^^1194^1205^[ADD] maybeCollectMember ( t, n.getFirstChild (  ) , n ) ; break;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^maybeCollectMember ( t, parent, n ) ;^1201^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[ADD]^break;^1201^1202^^^^1194^1205^[ADD] maybeCollectMember ( t, n, n ) ; break;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  n  node  ownerNode  parent  rhsValue 
[REPLACE]^JSDocInfo info = rhsValue.getString (  ) ;^1209^^^^^1207^1230^[REPLACE] JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( info != null || member.getType (  )  != Token.GETPROP || member.getLastChild (  ) .getType (  )  != Token.THIS )  {^1214^1215^1216^^^1207^1230^[REPLACE] if  ( info == null || member.getType (  )  != Token.GETPROP || member.getFirstChild (  ) .getType (  )  != Token.THIS )  {^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1214^1215^1216^1217^1218^1207^1230^[ADD] if  ( info == null || member.getType (  )  != Token.GETPROP || member.getFirstChild (  ) .getType (  )  != Token.THIS )  { return; }^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^return null;^1217^^^^^1207^1230^[REPLACE] return;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^member .getLastChild (  )  .setJSType ( thisType ) ;^1220^^^^^1207^1230^[REPLACE] member.getFirstChild (  ) .setJSType ( thisType ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1220^1221^^^^1207^1230^[ADD] member.getFirstChild (  ) .setJSType ( thisType ) ; JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^JSType jsType = getDeclaredTypeInAnnotation ( t, ownerNode, info ) ;^1221^^^^^1207^1230^[REPLACE] JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^Node name = ownerNode.getLastChild (  ) ;^1222^^^^^1207^1230^[REPLACE] Node name = member.getLastChild (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^if  ( jsType != null && ( name .getJSType (  )   != Token.NAME || name^1223^1224^^^^1207^1230^[REPLACE] if  ( jsType != null && ( name.getType (  )  == Token.NAME || name.getType (  )  == Token.STRING )  )  {^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^thisType.defineDeclaredProperty ( name.getParent (  ) , jsType, f^1225^1226^1227^1228^^1207^1230^[REPLACE] thisType.defineDeclaredProperty ( name.getString (  ) , jsType, f^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[ADD]^^1225^1226^1227^^^1207^1230^[ADD] thisType.defineDeclaredProperty ( name.getString (  ) , jsType,^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^name.getParent (  ) , jsType, f }^1226^1227^1228^1229^^1207^1230^[REPLACE] name.getString (  ) , jsType, f }^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] GlobalScopeBuilder StubDeclaration CollectProperties   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^private  Node node;^1171^^^^^^^[REPLACE] private final Node node;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] StubDeclaration   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^private  boolean isExtern;^1172^^^^^^^[REPLACE] private final boolean isExtern;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] StubDeclaration   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^private final  boolean  ownerName;^1173^^^^^^^[REPLACE] private final String ownerName;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] StubDeclaration   [TYPE]  ObjectType delegateBaseObject  delegateSuperObject  delegatorObject  objectType  ownerType  subClass  superClass  thisType  type  unknownType  [TYPE]  boolean false  inferred  isExtern  true  [TYPE]  JSType jsType  [TYPE]  NodeTraversal t  [TYPE]  Node candidate  firstChild  member  n  name  node  nodeWithJsDocInfo  ownerNode  parent  rhsValue  [TYPE]  List nonExternFunctions  stubDeclarations  [TYPE]  String delegateName  ownerName  propName  qName  singletonGetterClassName  slotName  typedef  [TYPE]  JSDocInfo info 
[REPLACE]^this.node =  null;^1176^^^^^1175^1179^[REPLACE] this.node = node;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] StubDeclaration   [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[ADD]^^1176^1177^^^^1175^1179^[ADD] this.node = node; this.isExtern = isExtern;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] StubDeclaration   [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[REPLACE]^this.isExtern =  true;^1177^^^^^1175^1179^[REPLACE] this.isExtern = isExtern;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] StubDeclaration   [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[REPLACE]^this.ownerName =  null;^1178^^^^^1175^1179^[REPLACE] this.ownerName = ownerName;^[METHOD] <init> [TYPE] String) [PARAMETER] Node node boolean isExtern String ownerName [CLASS] StubDeclaration   [TYPE]  boolean false  isExtern  true  [TYPE]  String ownerName  [TYPE]  Node node 
[REPLACE]^this.thisType =  null;^1191^^^^^1190^1192^[REPLACE] this.thisType = thisType;^[METHOD] <init> [TYPE] ObjectType) [PARAMETER] ObjectType thisType [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  boolean false  true 
[REPLACE]^if  ( n != null && parent.getType (  )  != Token.EXPR_RESULT )  {^1195^^^^^1194^1205^[REPLACE] if  ( parent != null && parent.getType (  )  == Token.EXPR_RESULT )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[ADD]^^1195^1196^1197^1198^1199^1194^1205^[ADD] if  ( parent != null && parent.getType (  )  == Token.EXPR_RESULT )  { switch  ( n.getType (  )  )  { case Token.ASSIGN: maybeCollectMember ( t, n.getFirstChild (  ) , n ) ; break;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^switch  ( parent.getType (  )  )  {^1196^^^^^1194^1205^[REPLACE] switch  ( n.getType (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^maybeCollectMember ( t, n.getLastChild (  ) , n ) ;^1198^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n.getFirstChild (  ) , n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^maybeCollectMember ( t, parent.getLastChild (  ) , n ) ;^1198^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n.getFirstChild (  ) , n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^maybeCollectMember ( t, parent, n ) ;^1201^^^^^1194^1205^[REPLACE] maybeCollectMember ( t, n, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^JSDocInfo info = name.getJSDocInfo (  ) ;^1209^^^^^1207^1230^[REPLACE] JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^if  (  nodeWithJsDocInfo.getType (  )  != Token.GETPROP || member.getFirstChild (  ) .getType (  )  != Token.THIS )  {^1214^1215^1216^^^1207^1230^[REPLACE] if  ( info == null || member.getType (  )  != Token.GETPROP || member.getFirstChild (  ) .getType (  )  != Token.THIS )  {^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^member.getFirstChild (  ) .getType (  )  != Token.THIS )  { return;^1220^^^^^1207^1230^[REPLACE] member.getFirstChild (  ) .setJSType ( thisType ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^member.getLastChild (  ) .setJSType ( thisType ) ;^1220^^^^^1207^1230^[REPLACE] member.getFirstChild (  ) .setJSType ( thisType ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo (  ) ;^1221^^^^^1207^1230^[REPLACE] JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[ADD]^^1221^1222^^^^1207^1230^[ADD] JSType jsType = getDeclaredTypeInAnnotation ( t, member, info ) ; Node name = member.getLastChild (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^Node name = nodeWithJsDocInfo.getFirstChild (  ) ;^1222^^^^^1207^1230^[REPLACE] Node name = member.getLastChild (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[ADD]^^1222^^^^^1207^1230^[ADD] Node name = member.getLastChild (  ) ;^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^if  ( jsType != false && ( name.getType (  )  != Token.NAME ) {^1223^1224^^^^1207^1230^[REPLACE] if  ( jsType != null && ( name.getType (  )  == Token.NAME || name.getType (  )  == Token.STRING )  )  {^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[ADD]^^1223^1224^1225^1226^1227^1207^1230^[ADD] if  ( jsType != null && ( name.getType (  )  == Token.NAME || name.getType (  )  == Token.STRING )  )  { thisType.defineDeclaredProperty ( name.getString (  ) , jsType,^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^thisType.defineDeclaredProperty ( nodeWithJsDocInfo.getString (  ) , jsType, f^1225^1226^1227^1228^^1207^1230^[REPLACE] thisType.defineDeclaredProperty ( name.getString (  ) , jsType, f^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^name.getType (  ) , jsType, f }^1226^1227^1228^1229^^1207^1230^[REPLACE] name.getString (  ) , jsType, f }^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[ADD]^^1226^1227^1228^^^1207^1230^[ADD] name.getString (  ) , jsType, f^[METHOD] maybeCollectMember [TYPE] void [PARAMETER] NodeTraversal t Node member Node nodeWithJsDocInfo [CLASS] CollectProperties   [TYPE]  ObjectType thisType  [TYPE]  JSType jsType  [TYPE]  boolean false  true  [TYPE]  JSDocInfo info  [TYPE]  NodeTraversal t  [TYPE]  Node member  name  nodeWithJsDocInfo 
[REPLACE]^declareArguments ( fnNode ) ;^1243^^^^^1242^1244^[REPLACE] super ( scope ) ;^[METHOD] <init> [TYPE] Scope) [PARAMETER] Scope scope [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Scope scope 
[REPLACE]^defineSlot ( astParameter, functionNode, null, true ) ;^1250^^^^^1249^1251^[REPLACE] NodeTraversal.traverse ( compiler, scope.getRootNode (  ) , this ) ;^[METHOD] build [TYPE] void [PARAMETER] [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true 
[REPLACE]^if  ( n  ||  scope.getVar (  )  )  return;^1262^^^^^1261^1283^[REPLACE] if  ( n == scope.getRootNode (  )  )  return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^if  (  parent == scope.getRootNode (  )  )  {^1264^^^^^1261^1283^[REPLACE] if  ( n.getType (  )  == Token.LP && parent == scope.getRootNode (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^if  ( n == scope.getRootNode (  )  )  return;^1266^^^^^1261^1283^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^if  ( n.getType (  )   &&  Token.NAME )  {^1272^^^^^1261^1283^[REPLACE] if  ( parent.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^if  ( n == scope.getRootNode (  )  )  return;^1273^^^^^1261^1283^[REPLACE] return;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node n  parent 
[REPLACE]^Node fnNameNode = fnNameNode.getFirstChild (  ) ;^1288^^^^^1286^1305^[REPLACE] Node fnNameNode = fnNode.getFirstChild (  ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^String fnName = fnNode.getString (  ) ;^1289^^^^^1286^1305^[REPLACE] String fnName = fnNameNode.getString (  ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^if  ( fnName.isEmpty (  )  )  {^1290^^^^^1286^1305^[REPLACE] if  ( !fnName.isEmpty (  )  )  {^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^if  ( fnVar != null ||^1292^1293^1294^1295^^1286^1305^[REPLACE] if  ( fnVar == null ||^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , true ) ;^1300^^^^^1286^1305^[REPLACE] defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , false ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^defineSlot ( fnNameNode, fnNameNode, fnNode.getJSType (  ) , false ) ;^1300^^^^^1286^1305^[REPLACE] defineSlot ( fnNameNode, fnNode, fnNode.getJSType (  ) , false ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^Scope.Var fnVar = scope .getRootNode (  )  ;^1291^^^^^1286^1305^[REPLACE] Scope.Var fnVar = scope.getVar ( fnName ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[ADD]^^1292^1293^^^1296^1286^1305^[ADD] if  ( fnVar == null ||  ( fnVar.getNameNode (  )  != null &&^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^Node jsDocParameters = functionType.getParametersNode (  ) ;^1291^^^^^1286^1305^[REPLACE] Scope.Var fnVar = scope.getVar ( fnName ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^declareArguments ( fnNameNode ) ;^1304^^^^^1286^1305^[REPLACE] declareArguments ( fnNode ) ;^[METHOD] handleFunctionInputs [TYPE] void [PARAMETER] Node fnNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Var fnVar  [TYPE]  Node fnNameNode  fnNode  [TYPE]  String fnName 
[REPLACE]^Node astParameters = jsDocParameters.getFirstChild (  ) .getNext (  ) ;^1311^^^^^1310^1329^[REPLACE] Node astParameters = functionNode.getFirstChild (  ) .getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^Node body = jsDocParameters.getNext (  ) ;^1312^^^^^1310^1329^[REPLACE] Node body = astParameters.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^FunctionType functionType =  ( FunctionType )  jsDocParameters.getJSType (  ) ;^1313^^^^^1310^1329^[REPLACE] FunctionType functionType =  ( FunctionType )  functionNode.getJSType (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^if  ( functionType == null )  {^1314^^^^^1310^1329^[REPLACE] if  ( functionType != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^if  ( jsDocParameters == null )  {^1316^^^^^1310^1329^[REPLACE] if  ( jsDocParameters != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^if  ( jsDocParameter == this  )  {^1319^^^^^1310^1329^[REPLACE] if  ( jsDocParameter != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^defineSlot ( astParameter, jsDocParameters, true, true ) ;^1324^^^^^1310^1329^[REPLACE] defineSlot ( astParameter, functionNode, null, true ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^jsDocParameter =  functionNode.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^jsDocParameter =  jsDocParameters.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^Node jsDocParameter = jsDocParameter.getFirstChild (  ) ;^1317^^^^^1310^1329^[REPLACE] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[ADD]^^1317^^^^^1310^1329^[ADD] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^for  ( Node astParameter : astParameters.children (  )  )  { if  ( jsDocParameter != null )  {^1318^^^^^1310^1329^[REPLACE] for  ( Node astParameter : astParameters.children (  )  )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^if  ( jsDocParameter == null )  {^1319^^^^^1310^1329^[REPLACE] if  ( jsDocParameter != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[ADD]^^1319^1320^1321^1322^^1310^1329^[ADD] if  ( jsDocParameter != null )  { defineSlot ( astParameter, functionNode, jsDocParameter.getJSType (  ) , true ) ; jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^defineSlot ( astParameter, functionNode, true, true ) ;^1324^^^^^1310^1329^[REPLACE] defineSlot ( astParameter, functionNode, null, true ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[ADD]^^1324^^^^^1310^1329^[ADD] defineSlot ( astParameter, functionNode, null, true ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^jsDocParameter =  null.getNext (  ) ;^1322^^^^^1310^1329^[REPLACE] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^String fnName = fnNameNode.getString (  ) ;^1315^^^^^1310^1329^[REPLACE] Node jsDocParameters = functionType.getParametersNode (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[ADD]^^1315^^^^^1310^1329^[ADD] Node jsDocParameters = functionType.getParametersNode (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^Node jsDocParameter = jsDocParameter.getString (  ) ;^1317^^^^^1310^1329^[REPLACE] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[ADD]^^1322^^^^^1310^1329^[ADD] jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^Node jsDocParameter = jsDocParameters.getString (  ) ;^1317^^^^^1310^1329^[REPLACE] Node jsDocParameter = jsDocParameters.getFirstChild (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[ADD]^^1318^1319^1320^1321^1322^1310^1329^[ADD] for  ( Node astParameter : astParameters.children (  )  )  { if  ( jsDocParameter != null )  { defineSlot ( astParameter, functionNode, jsDocParameter.getJSType (  ) , true ) ; jsDocParameter = jsDocParameter.getNext (  ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^if  (jsDocParameters == null )  {^1319^^^^^1310^1329^[REPLACE] if  ( jsDocParameter != null )  {^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
[REPLACE]^defineSlot ( jsDocParameters, functionNode, false, true ) ;^1324^^^^^1310^1329^[REPLACE] defineSlot ( astParameter, functionNode, null, true ) ;^[METHOD] declareArguments [TYPE] void [PARAMETER] Node functionNode [CLASS] LocalScopeBuilder   [TYPE]  boolean false  true  [TYPE]  Node astParameter  astParameters  body  functionNode  jsDocParameter  jsDocParameters  [TYPE]  FunctionType functionType 
