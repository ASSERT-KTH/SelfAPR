[REPLACE]^public static final  double  NON_HALTING_ERROR_MSG = "Fixed point computation not halting";^45^46^^^^45^46^[REPLACE] public static final String NON_HALTING_ERROR_MSG = "Fixed point computation not halting";^ [CLASS] FixedPointGraphTraversal  
[REPLACE]^this.callback =  this;^54^^^^^53^55^[REPLACE] this.callback = callback;^[METHOD] <init> [TYPE] FixedPointGraphTraversal$EdgeCallback) [PARAMETER] EdgeCallback<N, E> callback [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  boolean false  true 
[REPLACE]^return new FixedPointGraphTraversal<NODE, EDGE> ( 0 ) ;^62^^^^^60^63^[REPLACE] return new FixedPointGraphTraversal<NODE, EDGE> ( callback ) ;^[METHOD] newTraversal [TYPE] <NODE,EDGE> [PARAMETER] EdgeCallback<NODE, EDGE> callback [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  boolean false  true 
[REPLACE]^Set<N> nodes = Sets.newLinkedHashSet (  ) ;^70^^^^^69^75^[REPLACE] Set<N> nodes = Sets.newHashSet (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  DiGraphNode node  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  Set nodes  [TYPE]  boolean false  true 
[REPLACE]^LinkedHashSet<DiGraphNode<N, E>> workSet = Sets.newLinkedHashSet (  ) ;^71^^^^^69^75^[REPLACE] for  ( DiGraphNode<N, E> node : graph.getDirectedGraphNodes (  )  )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  DiGraphNode node  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  Set nodes  [TYPE]  boolean false  true 
[ADD]^^71^72^73^^^69^75^[ADD] for  ( DiGraphNode<N, E> node : graph.getDirectedGraphNodes (  )  )  { nodes.add ( node.getValue (  )  ) ; }^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  DiGraphNode node  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  Set nodes  [TYPE]  boolean false  true 
[REPLACE]^computeFixedPoint ( 1, nodes ) ;^74^^^^^69^75^[REPLACE] computeFixedPoint ( graph, nodes ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  DiGraphNode node  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  Set nodes  [TYPE]  boolean false  true 
[REPLACE]^Set<N> entrySet = Sets.newLinkedHashSet (  ) ;^83^^^^^82^86^[REPLACE] Set<N> entrySet = Sets.newHashSet (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph N entry [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  Set entrySet  [TYPE]  boolean false  true  [TYPE]  N entry 
[REPLACE]^entry  entry   ;^84^^^^^82^86^[REPLACE] entrySet.add ( entry ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph N entry [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  Set entrySet  [TYPE]  boolean false  true  [TYPE]  N entry 
[REPLACE]^computeFixedPoint ( graph, null ) ;^85^^^^^82^86^[REPLACE] computeFixedPoint ( graph, entrySet ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph N entry [CLASS] FixedPointGraphTraversal   [TYPE]  EdgeCallback callback  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  Set entrySet  [TYPE]  boolean false  true  [TYPE]  N entry 
[REPLACE]^int cycleCount = 0L;^94^^^^^93^128^[REPLACE] int cycleCount = 0;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^long nodeCount = 0.getNodes (  )  .getValue (  )  ;^95^^^^^93^128^[REPLACE] long nodeCount = graph.getNodes (  ) .size (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^long maxIterations = Math.max ( maxIterations * nodeCount * nodeCount, 100 ) ;^99^^^^^93^128^[REPLACE] long maxIterations = Math.max ( nodeCount * nodeCount * nodeCount, 100 ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^LinkedHashSet<DiGraphNode<N, E>> workSet = Sets.newHashSet (  ) ;^102^103^^^^93^128^[REPLACE] LinkedHashSet<DiGraphNode<N, E>> workSet = Sets.newLinkedHashSet (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^Set<N> entrySet = Sets.newHashSet (  ) ;^104^^^^^93^128^[REPLACE] for  ( N n : entrySet )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , sourceValue )  )  {^120^^^^^93^128^[REPLACE] if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , destNode )  )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( false.getDestination (  )  ) ;^121^^^^^93^128^[REPLACE] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[ADD]^^121^^^^^93^128^[ADD] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( edge.getValue (  )  ) ;^121^^^^^93^128^[REPLACE] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REMOVE]^N sourceValue = source.getValue (  ) ;^121^^^^^93^128^[REMOVE] ^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^for  ( ; !workSet.isEmpty (  )  || cycleCount < maxIterations; cycleCount++ )  {^107^^^^^93^128^[REPLACE] for  ( ; !workSet.isEmpty (  )  && cycleCount < maxIterations; cycleCount++ )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , n )  )  {^120^^^^^93^128^[REPLACE] if  ( callback.traverseEdge ( sourceValue, edge.getValue (  ) , destNode )  )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^workSet.add ( this .getValue (  )   ) ;^121^^^^^93^128^[REPLACE] workSet.add ( edge.getDestination (  )  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^DiGraphNode<N, E> source = null.iterator (  ) .next (  ) ;^112^^^^^93^128^[REPLACE] DiGraphNode<N, E> source = workSet.iterator (  ) .next (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[ADD]^^112^113^^^^93^128^[ADD] DiGraphNode<N, E> source = workSet.iterator (  ) .next (  ) ; N sourceValue = source.getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^N trueValue = source.getValue (  ) ;^113^^^^^93^128^[REPLACE] N sourceValue = source.getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^List<DiGraphEdge<N, E>> outEdges = this.getOutEdges (  ) ;^117^^^^^93^128^[REPLACE] List<DiGraphEdge<N, E>> outEdges = source.getOutEdges (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^LinkedHashSet<DiGraphNode<N, E>> workSet = Sets.newLinkedHashSet (  ) ;^118^^^^^93^128^[REPLACE] for  ( DiGraphEdge<N, E> edge : outEdges )  {^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^N destNode = edge .getValue (  )  .getValue (  ) ;^119^^^^^93^128^[REPLACE] N destNode = edge.getDestination (  ) .getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^N nullValue = source.getOutEdges (  ) ;^113^^^^^93^128^[REPLACE] N sourceValue = source.getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^List<DiGraphEdge<N, E>> outEdges = 0.getOutEdges (  ) ;^117^^^^^93^128^[REPLACE] List<DiGraphEdge<N, E>> outEdges = source.getOutEdges (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^N destNode = false.getValue (  ) .getValue (  ) ;^119^^^^^93^128^[REPLACE] N destNode = edge.getDestination (  ) .getValue (  ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
[REPLACE]^Preconditions.checkState ( cycleCount  ==  maxIterations, NON_HALTING_ERROR_MSG ) ;^126^127^^^^93^128^[REPLACE] Preconditions.checkState ( cycleCount != maxIterations, NON_HALTING_ERROR_MSG ) ;^[METHOD] computeFixedPoint [TYPE] void [PARAMETER] DiGraph<N, E> graph Set<N> entrySet [CLASS] FixedPointGraphTraversal   [TYPE]  LinkedHashSet workSet  [TYPE]  DiGraphNode source  [TYPE]  Set entrySet  [TYPE]  DiGraphEdge edge  [TYPE]  boolean false  true  [TYPE]  EdgeCallback callback  [TYPE]  List outEdges  [TYPE]  String NON_HALTING_ERROR_MSG  [TYPE]  DiGraph graph  [TYPE]  int cycleCount  [TYPE]  long maxIterations  nodeCount  [TYPE]  N destNode  n  sourceValue 
