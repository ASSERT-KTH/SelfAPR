[REPLACE]^protected final Map<N, LinkedUndirectedGraphNode<N, E>> nodes  = null ;^38^39^^^^38^39^[REPLACE] protected final Map<N, LinkedUndirectedGraphNode<N, E>> nodes = Maps.newHashMap (  ) ;^ [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  
[REPLACE]^private List<UndiGraphEdge<N, E>> neighborList ;^259^260^^^^259^260^[REPLACE] private List<UndiGraphEdge<N, E>> neighborList = Lists.newArrayList (  ) ;^ [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  
[REPLACE]^private  short  id;^263^^^^^^^[REPLACE] private int id;^ [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  
[REPLACE]^private static int totalNodes  = null ;^264^^^^^^^[REPLACE] private static int totalNodes = 0;^ [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  
[REPLACE]^private final Iterator<UndiGraphEdge<N, E>> edgeIterator  = null ;^313^314^^^^313^314^[REPLACE] private final Iterator<UndiGraphEdge<N, E>> edgeIterator = neighborList.iterator (  ) ;^ [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  
[REPLACE]^protected  E value;^346^^^^^^^[REPLACE] protected final E value;^ [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  
[REPLACE]^this.value = edgeValue; ;^267^^^^^266^269^[REPLACE] this.value = nodeValue;^[METHOD] <init> [TYPE] LinkedUndirectedGraph$LinkedUndirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.id ;^268^^^^^266^269^[REPLACE] this.id = totalNodes++;^[METHOD] <init> [TYPE] LinkedUndirectedGraph$LinkedUndirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.value = nodeValue; ;^351^^^^^349^354^[REPLACE] this.value = edgeValue;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^this.nodeA = nodeA;^351^352^^^^349^354^[ADD] this.value = edgeValue; this.nodeA = nodeA;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.nodeB = nodeB; ;^352^^^^^349^354^[REPLACE] this.nodeA = nodeA;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^352^353^^^^349^354^[ADD] this.nodeA = nodeA; this.nodeB = nodeB;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.nodeA = nodeA; ;^353^^^^^349^354^[REPLACE] this.nodeB = nodeB;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return new SimpleSubGraph<N, E> ( null ) ;^42^^^^^41^43^[REPLACE] return new SimpleSubGraph<N, E> ( this ) ;^[METHOD] newSubGraph [TYPE] SubGraph [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^47^^^^^46^66^[REPLACE] UndiGraphNode<N, E> node = getUndirectedGraphNode ( srcValue ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^47^^^^^46^66^[ADD] UndiGraphNode<N, E> node = getUndirectedGraphNode ( srcValue ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^48^^^^^46^66^[REPLACE] if  ( node == null )  {^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^49^50^^^^46^66^[REPLACE] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =  getUndirectedGraphNode ( value ) ;^54^^^^^46^66^[REPLACE] node = getUndirectedGraphNode ( destValue ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^54^^^^^46^66^[ADD] node = getUndirectedGraphNode ( destValue ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^55^^^^^46^66^[REPLACE] if  ( node == null )  {^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^55^56^57^58^^46^66^[ADD] if  ( node == null )  { throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ; }^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^56^57^^^^46^66^[REPLACE] throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^56^57^^^^46^66^[ADD] throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^59^60^^^^46^66^[ADD] LinkedUndirectedGraphNode<N, E> dest = ( LinkedUndirectedGraphNode<N, E> )  node;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( null, edgeValue, dest ) ;^61^62^^^^46^66^[REPLACE] LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^61^62^^^^46^66^[ADD] LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^src.getNeighborEdges (  ) .add ( null ) ;^63^^^^^46^66^[REPLACE] src.getNeighborEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^src .neighborIterator (  )  .add ( edge ) ;^63^^^^^46^66^[REPLACE] src.getNeighborEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^dest.getNeighborEdges (  ) .add ( null ) ;^64^^^^^46^66^[REPLACE] dest.getNeighborEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^dest.neighborIterator (  ) .add ( edge ) ;^64^^^^^46^66^[REPLACE] dest.getNeighborEdges (  ) .add ( edge ) ;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REMOVE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^64^^^^^46^66^[REMOVE] ^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^65^^^^^46^66^[REPLACE] return edge;^[METHOD] connect [TYPE] GraphEdge [PARAMETER] N srcValue E edgeValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphEdge edge  [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^70^^^^^69^90^[REPLACE] UndiGraphNode<N, E> node = getUndirectedGraphNode ( srcValue ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( null != null )  {^71^^^^^69^90^[REPLACE] if  ( node == null )  {^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^71^72^73^74^^69^90^[ADD] if  ( node == null )  { throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ; }^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^72^73^^^^69^90^[REPLACE] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^72^73^^^^69^90^[ADD] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^72^73^^^^69^90^[REPLACE] throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =  getUndirectedGraphNode ( value ) ;^77^^^^^69^90^[REPLACE] node = getUndirectedGraphNode ( destValue ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^77^^^^^69^90^[ADD] node = getUndirectedGraphNode ( destValue ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != this  )  {^78^^^^^69^90^[REPLACE] if  ( node == null )  {^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^78^79^80^81^^69^90^[ADD] if  ( node == null )  { throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ; }^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^79^80^^^^69^90^[REPLACE] throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^79^80^^^^69^90^[REPLACE] throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^85^86^87^88^89^69^90^[ADD] for  ( UndiGraphEdge<N, E> edge : getUndirectedGraphEdges ( srcValue, destValue )  )  { src.getNeighborEdges (  ) .remove ( edge ) ; dest.getNeighborEdges (  ) .remove ( edge ) ; }^[METHOD] disconnect [TYPE] void [PARAMETER] N srcValue N destValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode dest  src  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^LinkedUndirectedGraphNode<N, E> node = nodes .put ( this , true )  ;^95^^^^^93^101^[REPLACE] LinkedUndirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^95^^^^^93^101^[ADD] LinkedUndirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( node != null )  {^96^^^^^93^101^[REPLACE] if  ( node == null )  {^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^96^97^98^99^^93^101^[ADD] if  ( node == null )  { node = new LinkedUndirectedGraphNode<N, E> ( nodeValue ) ; nodes.put ( nodeValue, node ) ; }^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =  new LinkedUndirectedGraphNode<N, E> ( value ) ;^97^^^^^93^101^[REPLACE] node = new LinkedUndirectedGraphNode<N, E> ( nodeValue ) ;^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^node =   new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest )  ;^97^^^^^93^101^[REPLACE] node = new LinkedUndirectedGraphNode<N, E> ( nodeValue ) ;^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^nodes.put ( nodeValue, node ) ;^97^98^^^^93^101^[ADD] node = new LinkedUndirectedGraphNode<N, E> ( nodeValue ) ; nodes.put ( nodeValue, node ) ;^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^100^^^^^93^101^[REPLACE] return node;^[METHOD] createUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( srcValue ) ;^105^^^^^104^112^[REPLACE] UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<UndiGraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^106^^^^^104^112^[REPLACE] List<GraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( Iterator<GraphNode<N, E>> i = getNeighborNodesIterator ( srcValue ) ;^107^^^^^104^112^[REPLACE] for  ( Iterator<GraphNode<N, E>> i = getNeighborNodesIterator ( value ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^nodeList.add ( null .hasNext (  )   ) ;^109^^^^^104^112^[REPLACE] nodeList.add ( i.next (  )  ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^nodeList.add ( 1.next (  )  ) ;^109^^^^^104^112^[REPLACE] nodeList.add ( i.next (  )  ) ;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^107^108^109^110^^104^112^[ADD] for  ( Iterator<GraphNode<N, E>> i = getNeighborNodesIterator ( value ) ; i.hasNext (  ) ; )  { nodeList.add ( i.next (  )  ) ; }^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return 1;^111^^^^^104^112^[REPLACE] return nodeList;^[METHOD] getNeighborNodes [TYPE] List [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( srcValue ) ;^116^^^^^115^119^[REPLACE] UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[METHOD] getNeighborNodesIterator [TYPE] Iterator [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^Preconditions.checkNotNull ( uNode, value +srcValue ) ;^117^^^^^115^119^[REPLACE] Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[METHOD] getNeighborNodesIterator [TYPE] Iterator [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return  (  ( LinkedUndirectedGraphNode<N, E> )  uNode )  .getNeighborEdges (  )  ;^118^^^^^115^119^[REPLACE] return  (  ( LinkedUndirectedGraphNode<N, E> )  uNode ) .neighborIterator (  ) ;^[METHOD] getNeighborNodesIterator [TYPE] Iterator [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> dNode1 = nodes.get ( nodeValue ) ;^124^^^^^123^139^[REPLACE] UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( null != null )  {^125^^^^^123^139^[REPLACE] if  ( dNode1 == null )  {^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return true;^126^^^^^123^139^[REPLACE] return null;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> dNode2 = nodes.get ( nodeValue ) ;^128^^^^^123^139^[REPLACE] UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( dNode2 != null )  {^129^^^^^123^139^[REPLACE] if  ( dNode2 == null )  {^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^129^130^131^^^123^139^[ADD] if  ( dNode2 == null )  { return null; }^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return this;^130^^^^^123^139^[REPLACE] return null;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return true;^130^^^^^123^139^[REPLACE] return null;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<UndiGraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^132^^^^^123^139^[REPLACE] List<UndiGraphEdge<N, E>> edges = Lists.newArrayList (  ) ;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  (  outEdge.getNodeB (  )  == dNode2 )  {^134^^^^^123^139^[REPLACE] if  ( outEdge.getNodeA (  )  == dNode2 || outEdge.getNodeB (  )  == dNode2 )  {^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^edges.remove ( null ) ;^135^^^^^123^139^[REPLACE] edges.add ( outEdge ) ;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^133^^^^^123^139^[REPLACE] for  ( UndiGraphEdge<N, E> outEdge : dNode1.getNeighborEdges (  )  )  {^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^133^134^135^136^^123^139^[ADD] for  ( UndiGraphEdge<N, E> outEdge : dNode1.getNeighborEdges (  )  )  { if  ( outEdge.getNodeA (  )  == dNode2 || outEdge.getNodeB (  )  == dNode2 )  { edges.add ( outEdge ) ; }^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^138^^^^^123^139^[REPLACE] return edges;^[METHOD] getUndirectedGraphEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return nodes.get ( value ) ;^143^^^^^142^144^[REPLACE] return nodes.get ( nodeValue ) ;^[METHOD] getUndirectedGraphNode [TYPE] UndiGraphNode [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^148^^^^^147^151^[REPLACE] List<UndiGraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^[METHOD] getUndirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^nodeList.addAll ( nodes.size (  )  ) ;^149^^^^^147^151^[REPLACE] nodeList.addAll ( nodes.values (  )  ) ;^[METHOD] getUndirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REMOVE]^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^149^^^^^147^151^[REMOVE] ^[METHOD] getUndirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^150^^^^^147^151^[REPLACE] return nodeList;^[METHOD] getUndirectedGraphNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return createUndirectedGraphNode ( srcValue ) ;^155^^^^^154^156^[REPLACE] return createUndirectedGraphNode ( value ) ;^[METHOD] createNode [TYPE] GraphNode [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphEdge<N, E>> result = Lists .newArrayListWithCapacity ( id )  ;^160^^^^^159^163^[REPLACE] List<GraphEdge<N, E>> result = Lists.newArrayList (  ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^result.addAll ( getUndirectedGraphEdges ( n1, nodeValue )  ) ;^161^^^^^159^163^[REPLACE] result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^161^^^^^159^163^[ADD] result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^result.addAll ( getUndirectedGraphEdges ( nodeValue, n2 )  ) ;^161^^^^^159^163^[REPLACE] result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^162^^^^^159^163^[REPLACE] return result;^[METHOD] getEdges [TYPE] List [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return getUndirectedGraphNode ( srcValue ) ;^167^^^^^166^168^[REPLACE] return getUndirectedGraphNode ( value ) ;^[METHOD] getNode [TYPE] GraphNode [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> dNode1 = nodes.get ( nodeValue ) ;^172^^^^^171^187^[REPLACE] UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( dNode1 != null )  {^173^^^^^171^187^[REPLACE] if  ( dNode1 == null )  {^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return value;^174^^^^^171^187^[REPLACE] return false;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return true;^174^^^^^171^187^[REPLACE] return false;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> dNode2 = nodes.get ( nodeValue ) ;^176^^^^^171^187^[REPLACE] UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^176^^^^^171^187^[ADD] UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( dNode2 != null )  {^177^^^^^171^187^[REPLACE] if  ( dNode2 == null )  {^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^177^178^179^^^171^187^[ADD] if  ( dNode2 == null )  { return false; }^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return true;^178^^^^^171^187^[REPLACE] return false;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  && ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^[REPLACE] if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return false;^183^^^^^171^187^[REPLACE] return true;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^180^^^^^171^187^[REPLACE] for  ( UndiGraphEdge<N, E> outEdge : dNode1.getNeighborEdges (  )  )  {^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return true;^186^^^^^171^187^[REPLACE] return false;^[METHOD] isConnected [TYPE] boolean [PARAMETER] N n1 N n2 [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge outEdge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphvizEdge> edgeList = Lists .newArrayListWithCapacity ( id )  ;^191^^^^^190^200^[REPLACE] List<GraphvizEdge> edgeList = Lists.newArrayList (  ) ;^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( edge.getNodeA (  )   !=  node )  {^194^^^^^190^200^[REPLACE] if  ( edge.getNodeA (  )  == node )  {^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^edgeList .add ( null )  ;^195^^^^^190^200^[REPLACE] edgeList.add (  ( GraphvizEdge )  edge ) ;^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^192^^^^^190^200^[REPLACE] for  ( LinkedUndirectedGraphNode<N, E> node : nodes.values (  )  )  {^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^193^^^^^190^200^[REPLACE] for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  {^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return nodeList;^199^^^^^190^200^[REPLACE] return edgeList;^[METHOD] getGraphvizEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return createUndirectedGraphNode ( value ) ;^204^^^^^203^205^[REPLACE] return "LinkedUndirectedGraph";^[METHOD] getName [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphvizNode> nodeList = Lists .newArrayList (  )  ;^209^210^^^^208^215^[REPLACE] List<GraphvizNode> nodeList = Lists.newArrayListWithCapacity ( nodes.size (  )  ) ;^[METHOD] getGraphvizNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^211^^^^^208^215^[REPLACE] for  ( LinkedUndirectedGraphNode<N, E> node : nodes.values (  )  )  {^[METHOD] getGraphvizNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return edgeList;^214^^^^^208^215^[REPLACE] return nodeList;^[METHOD] getGraphvizNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return true;^219^^^^^218^220^[REPLACE] return false;^[METHOD] isDirected [TYPE] boolean [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphNode<N, E>> nodeList = Lists.newArrayList (  ) ;^224^^^^^223^227^[REPLACE] List<GraphNode<N, E>> list = Lists.newArrayList (  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^224^^^^^223^227^[ADD] List<GraphNode<N, E>> list = Lists.newArrayList (  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^nodeList.addAll ( nodes.values (  )  ) ;^225^^^^^223^227^[REPLACE] list.addAll ( nodes.values (  )  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^list.addAll ( nodes.size (  )  ) ;^225^^^^^223^227^[REPLACE] list.addAll ( nodes.values (  )  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^226^^^^^223^227^[REPLACE] return list;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^List<GraphNode<N, E>> list = Lists.newArrayList (  ) ;^232^^^^^231^241^[REPLACE] List<GraphEdge<N, E>> result = Lists.newArrayList (  ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( edge.getNodeA (  )   ||  node )  {^235^^^^^231^241^[REPLACE] if  ( edge.getNodeA (  )  == node )  {^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^result .addAll ( this )  ;^236^^^^^231^241^[REPLACE] result.add ( edge ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^236^^^^^231^241^[ADD] result.add ( edge ) ;^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^233^^^^^231^241^[REPLACE] for  ( LinkedUndirectedGraphNode<N, E> node : nodes.values (  )  )  {^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  { if  ( edge.getNodeA (  )  == node )  {^234^^^^^231^241^[REPLACE] for  ( UndiGraphEdge<N, E> edge : node.getNeighborEdges (  )  )  {^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null;^240^^^^^231^241^[REPLACE] return result;^[METHOD] getEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  LinkedUndirectedGraphNode node  [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( srcValue ) ;^245^^^^^244^250^[REPLACE] UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^245^^^^^244^250^[ADD] UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( uNode != false )  {^246^^^^^244^250^[REPLACE] if  ( uNode == null )  {^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^246^247^248^^^244^250^[ADD] if  ( uNode == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^247^^^^^244^250^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[ADD]^^247^^^^^244^250^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return null.toString (  ) .size (  ) ;^249^^^^^244^250^[REPLACE] return uNode.getNeighborEdges (  ) .size (  ) ;^[METHOD] getNodeDegree [TYPE] int [PARAMETER] N value [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return createUndirectedGraphNode ( value ) ;^273^^^^^272^274^[REPLACE] return neighborList;^[METHOD] getNeighborEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return nodeB;^279^^^^^278^280^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return false;^284^^^^^283^285^[REPLACE] return value;^[METHOD] getValue [TYPE] N [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^annotation =  null;^289^^^^^288^290^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^294^^^^^293^295^[REPLACE] return "white";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^returnthis + id;^299^^^^^298^300^[REPLACE] return "LDN" + id;^[METHOD] getId [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return value != null ? value.Object (  )  : "null";^304^^^^^303^305^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return createUndirectedGraphNode ( value ) ;^308^^^^^307^309^[REPLACE] return new NeighborIterator (  ) ;^[METHOD] neighborIterator [TYPE] Iterator [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return edgeIterator.next (  ) ;^318^^^^^317^319^[REPLACE] return edgeIterator.hasNext (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphEdge<N, E> edge = edgeIterator.hasNext (  ) ;^323^^^^^322^329^[REPLACE] UndiGraphEdge<N, E> edge = edgeIterator.next (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( edge.getNodeB (  )   ||  LinkedUndirectedGraphNode.this )  {^324^^^^^322^329^[REPLACE] if  ( edge.getNodeA (  )  == LinkedUndirectedGraphNode.this )  {^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return edge.getNodeB (  ) ;^327^^^^^322^329^[REPLACE] return edge.getNodeA (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return null.getNodeA (  ) ;^325^^^^^322^329^[REPLACE] return edge.getNodeB (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return edge.getNodeA (  ) ;^325^^^^^322^329^[REPLACE] return edge.getNodeB (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  UndiGraphEdge edge  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^333^^^^^332^334^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return false;^358^^^^^357^359^[REPLACE] return value;^[METHOD] getValue [TYPE] E [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return nodeB;^363^^^^^362^364^[REPLACE] return nodeA;^[METHOD] getNodeA [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return nodeA;^368^^^^^367^369^[REPLACE] return nodeB;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return nodeB;^374^^^^^373^375^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^annotation =  null;^379^^^^^378^380^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[ADD]^^379^^^^^378^380^[ADD] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^384^^^^^383^385^[REPLACE] return "black";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return value != null ? value.Object (  )  : "null";^389^^^^^388^390^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeA ) .getNeighborEdges (  ) ;^395^^^^^394^396^[REPLACE] return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeA ) .getId (  ) ;^[METHOD] getNode1Id [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeB ) .getNeighborEdges (  ) ;^401^^^^^400^402^[REPLACE] return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeB ) .getId (  ) ;^[METHOD] getNode2Id [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return nodeA.toString (  )   !=  " -- "  !=  nodeB.toString (  ) ;;^406^^^^^405^407^[REPLACE] return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^private List<UndiGraphEdge<N, E>> neighborList  = null ;^259^260^^^^259^260^[REPLACE] private List<UndiGraphEdge<N, E>> neighborList = Lists.newArrayList (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^private static int totalNodes ;^264^^^^^^^[REPLACE] private static int totalNodes = 0;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^private final Iterator<UndiGraphEdge<N, E>> edgeIterator  = null ;^313^314^^^^313^314^[REPLACE] private final Iterator<UndiGraphEdge<N, E>> edgeIterator = neighborList.iterator (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode dNode1  dNode2  node  nodeA  nodeB  uNode  [TYPE]  E edgeValue  value  [TYPE]  Iterator edgeIterator  i  [TYPE]  List edgeList  edges  list  neighborList  nodeList  result  [TYPE]  Map nodes  [TYPE]  N destValue  n1  n2  nodeValue  srcValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^this.value =  value;^267^^^^^266^269^[REPLACE] this.value = nodeValue;^[METHOD] <init> [TYPE] LinkedUndirectedGraph$LinkedUndirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^this.id ;^268^^^^^266^269^[REPLACE] this.id = totalNodes++;^[METHOD] <init> [TYPE] LinkedUndirectedGraph$LinkedUndirectedGraphNode(N) [PARAMETER] N nodeValue [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^273^^^^^272^274^[REPLACE] return neighborList;^[METHOD] getNeighborEdges [TYPE] List [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return value;^279^^^^^278^280^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^284^^^^^283^285^[REPLACE] return value;^[METHOD] getValue [TYPE] N [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  [TYPE]  int id  totalNodes 
[REPLACE]^annotation =  null;^289^^^^^288^290^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^294^^^^^293^295^[REPLACE] return "white";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return "LDN" +null;^299^^^^^298^300^[REPLACE] return "LDN" + id;^[METHOD] getId [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return value != null ? value.Object (  )  : "null";^304^^^^^303^305^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return  ( A )  annotation;^308^^^^^307^309^[REPLACE] return new NeighborIterator (  ) ;^[METHOD] neighborIterator [TYPE] Iterator [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return edgeIterator.next (  ) ;^318^^^^^317^319^[REPLACE] return edgeIterator.hasNext (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^UndiGraphEdge<N, E> edge = edgeIterator.hasNext (  ) ;^323^^^^^322^329^[REPLACE] UndiGraphEdge<N, E> edge = edgeIterator.next (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^if  ( edge.getNodeA (  )   !=  LinkedUndirectedGraphNode.this )  {^324^^^^^322^329^[REPLACE] if  ( edge.getNodeA (  )  == LinkedUndirectedGraphNode.this )  {^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return edge.getNodeB (  ) ;^327^^^^^322^329^[REPLACE] return edge.getNodeA (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return edge.getNodeA (  ) ;^325^^^^^322^329^[REPLACE] return edge.getNodeB (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return null.getNodeA (  ) ;^325^^^^^322^329^[REPLACE] return edge.getNodeB (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return null.getNodeB (  ) ;^327^^^^^322^329^[REPLACE] return edge.getNodeA (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  boolean false  true  [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  UndiGraphEdge edge  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return ;^333^^^^^332^334^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[ADD]^^333^^^^^332^334^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedUndirectedGraphNode NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^private final Iterator<UndiGraphEdge<N, E>> edgeIterator  = null ;^313^314^^^^313^314^[REPLACE] private final Iterator<UndiGraphEdge<N, E>> edgeIterator = neighborList.iterator (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  List neighborList  [TYPE]  boolean false  true  [TYPE]  N nodeValue  value  [TYPE]  Annotation annotation  data  [TYPE]  int id  totalNodes 
[REPLACE]^return edgeIterator.next (  ) ;^318^^^^^317^319^[REPLACE] return edgeIterator.hasNext (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  boolean false  true 
[REPLACE]^UndiGraphEdge<N, E> edge = edgeIterator .hasNext (  )  ;^323^^^^^322^329^[REPLACE] UndiGraphEdge<N, E> edge = edgeIterator.next (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  UndiGraphEdge edge  [TYPE]  boolean false  true 
[REPLACE]^if  ( edge.getNodeA (  )   ||  LinkedUndirectedGraphNode.this )  {^324^^^^^322^329^[REPLACE] if  ( edge.getNodeA (  )  == LinkedUndirectedGraphNode.this )  {^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  UndiGraphEdge edge  [TYPE]  boolean false  true 
[REPLACE]^return null.getNodeB (  ) ;^327^^^^^322^329^[REPLACE] return edge.getNodeA (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  UndiGraphEdge edge  [TYPE]  boolean false  true 
[REPLACE]^return edge.getNodeA (  ) ;^325^^^^^322^329^[REPLACE] return edge.getNodeB (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  UndiGraphEdge edge  [TYPE]  boolean false  true 
[REPLACE]^return edge .getNodeA (  )  ;^325^^^^^322^329^[REPLACE] return edge.getNodeB (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  UndiGraphEdge edge  [TYPE]  boolean false  true 
[REPLACE]^return edge.getNodeB (  ) ;^327^^^^^322^329^[REPLACE] return edge.getNodeA (  ) ;^[METHOD] next [TYPE] GraphNode [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  UndiGraphEdge edge  [TYPE]  boolean false  true 
[REPLACE]^return ;^333^^^^^332^334^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] NeighborIterator   [TYPE]  Iterator edgeIterator  [TYPE]  boolean false  true 
[REPLACE]^private Annotation annotation;^347^^^^^^^[REPLACE] protected Annotation annotation;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  Iterator edgeIterator  [TYPE]  boolean false  true 
[REPLACE]^this.value =  value;^351^^^^^349^354^[REPLACE] this.value = edgeValue;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^this.nodeB = nodeB; ;^352^^^^^349^354^[REPLACE] this.nodeA = nodeA;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^this.nodeA = nodeA; ;^353^^^^^349^354^[REPLACE] this.nodeB = nodeB;^[METHOD] <init> [TYPE] UndiGraphNode) [PARAMETER] UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return  ( A )  annotation;^358^^^^^357^359^[REPLACE] return value;^[METHOD] getValue [TYPE] E [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return nodeB;^363^^^^^362^364^[REPLACE] return nodeA;^[METHOD] getNodeA [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return nodeA;^368^^^^^367^369^[REPLACE] return nodeB;^[METHOD] getNodeB [TYPE] GraphNode [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^return value;^374^^^^^373^375^[REPLACE] return  ( A )  annotation;^[METHOD] getAnnotation [TYPE] <A [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation 
[REPLACE]^annotation =  null;^379^^^^^378^380^[REPLACE] annotation = data;^[METHOD] setAnnotation [TYPE] void [PARAMETER] Annotation data [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return value;^384^^^^^383^385^[REPLACE] return "black";^[METHOD] getColor [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return value != null ? value .Object (  )   : "null";^389^^^^^388^390^[REPLACE] return value != null ? value.toString (  )  : "null";^[METHOD] getLabel [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeB ) .getId (  ) ;^395^^^^^394^396^[REPLACE] return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeA ) .getId (  ) ;^[METHOD] getNode1Id [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeA ) .getId (  ) ;^401^^^^^400^402^[REPLACE] return  (  ( LinkedUndirectedGraphNode<N, E> )  nodeB ) .getId (  ) ;^[METHOD] getNode2Id [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
[REPLACE]^return nodeA.toString (  )   ;^406^^^^^405^407^[REPLACE] return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] LinkedUndirectedGraphEdge   [TYPE]  boolean false  true  [TYPE]  UndiGraphNode nodeA  nodeB  [TYPE]  E edgeValue  value  [TYPE]  Annotation annotation  data 
