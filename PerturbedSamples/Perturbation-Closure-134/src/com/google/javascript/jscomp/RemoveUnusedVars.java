[REPLACE]^private  final Logger logger_ = Logger.getLogger ( RemoveUnusedVars.class.getName (  )  ) ;^47^48^^^^47^48^[REPLACE] private static final Logger logger_ = Logger.getLogger ( RemoveUnusedVars.class.getName (  )  ) ;^ [CLASS] RemoveUnusedVars  
[REPLACE]^private static final int MAX_ITERATIONS ;^53^^^^^^^[REPLACE] private static final int MAX_ITERATIONS = 20;^ [CLASS] RemoveUnusedVars  
[REPLACE]^private int numRemoved_ = 3;^56^^^^^^^[REPLACE] private int numRemoved_ = 0;^ [CLASS] RemoveUnusedVars  
[REPLACE]^private  boolean removeGlobals;^58^^^^^^^[REPLACE] private final boolean removeGlobals;^ [CLASS] RemoveUnusedVars  
[REPLACE]^private final Set<Var> warnedVars_  = null ;^66^^^^^^^[REPLACE] private final Set<Var> warnedVars_ = Sets.newHashSet (  ) ;^ [CLASS] RemoveUnusedVars  
[REPLACE]^private  Set<Var> referenced = Sets.newHashSet (  ) ;^71^^^^^^^[REPLACE] private final Set<Var> referenced = Sets.newHashSet (  ) ;^ [CLASS] RemoveUnusedVars  
[REPLACE]^compiler_ =  null;^77^^^^^73^80^[REPLACE] compiler_ = compiler;^[METHOD] <init> [TYPE] AbstractCompiler,boolean,boolean) [PARAMETER] AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  numRemoved_ 
[REPLACE]^this.removeGlobals =  true;^78^^^^^73^80^[REPLACE] this.removeGlobals = removeGlobals;^[METHOD] <init> [TYPE] AbstractCompiler,boolean,boolean) [PARAMETER] AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  numRemoved_ 
[ADD]^^78^79^^^^73^80^[ADD] this.removeGlobals = removeGlobals; this.preserveAnonymousFunctionNames = preserveAnonymousFunctionNames;^[METHOD] <init> [TYPE] AbstractCompiler,boolean,boolean) [PARAMETER] AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  numRemoved_ 
[REPLACE]^this.preserveAnonymousFunctionNames =  true;^79^^^^^73^80^[REPLACE] this.preserveAnonymousFunctionNames = preserveAnonymousFunctionNames;^[METHOD] <init> [TYPE] AbstractCompiler,boolean,boolean) [PARAMETER] AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  numRemoved_ 
[REPLACE]^warnedVars_ .contains ( this )  ;^87^^^^^86^106^[REPLACE] warnedVars_.clear (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^int i = 1;^91^^^^^86^106^[REPLACE] int i = 0;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^if  ( numRemoved_  <  1 )  {^97^^^^^86^106^[REPLACE] if  ( numRemoved_ > 0 )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^compiler_.addToDebugLog (  ) ;^98^^^^^86^106^[REPLACE] compiler_.reportCodeChange (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^logger_ .warning ( this )  ;^99^^^^^86^106^[REPLACE] logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REMOVE]^traverseAndRemoveUnusedReferences ( root ) ;^99^^^^^86^106^[REMOVE] ^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^numRemoved_ = 0 - 2;^93^^^^^86^106^[REPLACE] numRemoved_ = 0;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^if  ( i  !=  numRemoved_ )  {^103^^^^^86^106^[REPLACE] if  ( i == MAX_ITERATIONS )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[ADD]^logger_.warning ( "Reached max allowable iterations. Stopping." ) ;^103^104^105^^^86^106^[ADD] if  ( i == MAX_ITERATIONS )  { logger_.warning ( "Reached max allowable iterations. Stopping." ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^logger_.fine ( "Reached max allowable iterations. Stopping." ) ;^104^^^^^86^106^[REPLACE] logger_.warning ( "Reached max allowable iterations. Stopping." ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  [TYPE]  Node externs  root 
[REPLACE]^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, this ) ;^112^^^^^111^118^[REPLACE] Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[METHOD] traverseAndRemoveUnusedReferences [TYPE] void [PARAMETER] Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Node root  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_ 
[REPLACE]^traverseNode ( root, true, scope ) ;^113^^^^^111^118^[REPLACE] traverseNode ( root, null, scope ) ;^[METHOD] traverseAndRemoveUnusedReferences [TYPE] void [PARAMETER] Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Node root  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_ 
[ADD]^^113^^^^^111^118^[ADD] traverseNode ( root, null, scope ) ;^[METHOD] traverseAndRemoveUnusedReferences [TYPE] void [PARAMETER] Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Node root  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_ 
[REPLACE]^if  ( toRemove.getChildCount (  )  == 1 )  {^115^^^^^111^118^[REPLACE] if  ( removeGlobals )  {^[METHOD] traverseAndRemoveUnusedReferences [TYPE] void [PARAMETER] Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Node root  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_ 
[REPLACE]^removeUnreferencedVars ( fnScope ) ;^116^^^^^111^118^[REPLACE] removeUnreferencedVars ( scope ) ;^[METHOD] traverseAndRemoveUnusedReferences [TYPE] void [PARAMETER] Node root [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Node root  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_ 
[REPLACE]^int type = parent.getType (  ) ;^126^^^^^125^160^[REPLACE] int type = n.getType (  ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( NodeUtil.isFunctionAnonymous ( n )  && compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^125^160^[REPLACE] if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseFunction ( parent, scope ) ;^142^^^^^139^143^[REPLACE] traverseFunction ( n, scope ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^142^^^^^139^143^[ADD] traverseFunction ( n, scope ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( parent.getType (  )   ==  Token.VAR )  {^147^^^^^125^160^[REPLACE] if  ( parent.getType (  )  != Token.VAR )  {^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^147^148^149^150^151^125^160^[ADD] if  ( parent.getType (  )  != Token.VAR )  {  Var var = scope.getVar ( n.getString (  )  ) ; if  ( var != null )  { markReferencedVar ( var ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( var == null )  {^150^^^^^125^160^[REPLACE] if  ( var != null )  {^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^markReferencedVar ( var ) ;^150^151^152^^^125^160^[ADD] if  ( var != null )  { markReferencedVar ( var ) ; }^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseAndRemoveUnusedReferences ( root ) ;^151^^^^^125^160^[REPLACE] markReferencedVar ( var ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^151^^^^^125^160^[ADD] markReferencedVar ( var ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Var var = scope.getVar ( parent.getString (  )  ) ;^149^^^^^125^160^[REPLACE] Var var = scope.getVar ( n.getString (  )  ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Var var = scope.undeclare ( n.getString (  )  ) ;^149^^^^^125^160^[REPLACE] Var var = scope.getVar ( n.getString (  )  ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^157^^^^^125^160^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseNode ( c, parent, scope ) ;^158^^^^^125^160^[REPLACE] traverseNode ( c, n, scope ) ;^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { traverseNode ( c, n, scope ) ; ;^157^^^^^125^160^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^157^158^159^^^125^160^[ADD] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { traverseNode ( c, n, scope ) ; }^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^for  ( Node c = parent.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^157^^^^^125^160^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] traverseNode [TYPE] void [PARAMETER] Node n Node parent Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  Node c  n  parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Preconditions.checkState ( n.removeChild (  )   !=  0 ) ;^171^^^^^170^183^[REPLACE] Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^171^^^^^170^183^[ADD] Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Preconditions.checkState ( n .hasChildren (  )   == 3 ) ;^171^^^^^170^183^[REPLACE] Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Preconditions.checkState ( n.getType (  )   !=  Token.FUNCTION ) ;^172^^^^^170^183^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^172^^^^^170^183^[ADD] Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Preconditions.checkState ( n.removeChild (  )  == Token.FUNCTION ) ;^172^^^^^170^183^[REPLACE] Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^final Node body = n .getFirstChild (  )  ;^174^^^^^170^183^[REPLACE] final Node body = n.getLastChild (  ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Preconditions.checkState ( body.getNext (  )  == null ;^175^176^^^^170^183^[REPLACE] Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^175^176^^^^170^183^[ADD] Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Preconditions.checkState ( body.removeChild (  )  == null && body.getType (  )  == Token.BLOCK ) ;^175^176^^^^170^183^[REPLACE] Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^body.removeChild (  )  == Token.BLOCK ) ;^176^^^^^170^183^[REPLACE] body.getType (  )  == Token.BLOCK ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^178^^^^^170^183^[REPLACE] Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseNode ( body, n, scope ) ;^179^^^^^170^183^[REPLACE] traverseNode ( body, n, fnScope ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^removeUnreferencedFunctionArgs ( n, scope ) ;^181^^^^^170^183^[REPLACE] removeUnreferencedFunctionArgs ( n, fnScope ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^removeUnreferencedVars ( scope ) ;^182^^^^^170^183^[REPLACE] removeUnreferencedVars ( fnScope ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^182^^^^^170^183^[ADD] removeUnreferencedVars ( fnScope ) ;^[METHOD] traverseFunction [TYPE] void [PARAMETER] Node n Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  scope  [TYPE]  Node body  n  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node argList = lastArg .getLastChild (  )  .getNext (  ) ;^193^^^^^191^205^[REPLACE] Node argList = function.getFirstChild (  ) .getNext (  ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^193^194^^^^191^205^[ADD] Node argList = function.getFirstChild (  ) .getNext (  ) ; Node lastArg;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node parent = var.getParentNode (  ) ;^194^^^^^191^205^[REPLACE] Node lastArg;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^194^^^^^191^205^[ADD] Node lastArg;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^while  (  ( lastArg = argList.getLastChild (  )  )  == null )  {^195^^^^^191^205^[REPLACE] while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^195^196^^^^191^205^[ADD] while  (  ( lastArg = argList.getLastChild (  )  )  != null )  { Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( referenced.contains ( var )  )  {^197^^^^^191^205^[REPLACE] if  ( !referenced.contains ( var )  )  {^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^argList .removeChild ( argList , argList )  ;^198^^^^^191^205^[REPLACE] argList.removeChild ( lastArg ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^fn  var   ;^199^^^^^191^205^[REPLACE] fnScope.undeclare ( var ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Var var = fnScope.getVar ( function.getString (  )  ) ;^196^^^^^191^205^[REPLACE] Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^argList.removeChild ( lastArg ) ;fnScope.undeclare ( var ) ;numRemoved_++;^197^198^199^200^^191^205^[ADD] if  ( !referenced.contains ( var )  )  { argList.removeChild ( lastArg ) ; fnScope.undeclare ( var ) ; numRemoved_++;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^argList.removeChild ( function ) ;^198^^^^^191^205^[REPLACE] argList.removeChild ( lastArg ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^fnScope .getVar (  )  ;^199^^^^^191^205^[REPLACE] fnScope.undeclare ( var ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^while  (  ( lastArg =  function.getLastChild (  )  )  !^195^^^^^191^205^[REPLACE] while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Var var = fnScope.getVar ( lastArg.getParent (  )  ) ;^196^^^^^191^205^[REPLACE] Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[METHOD] removeUnreferencedFunctionArgs [TYPE] void [PARAMETER] Node function Scope fnScope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope fnScope  [TYPE]  Var var  [TYPE]  Node argList  function  lastArg  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( referenced.add ( var )  )  {^211^^^^^210^226^[REPLACE] if  ( referenced.contains ( var )  )  {^[METHOD] markReferencedVar [TYPE] void [PARAMETER] Var var [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Var var  [TYPE]  Node parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^referenced.contains ( var ) ;^215^^^^^210^226^[REPLACE] referenced.add ( var ) ;^[METHOD] markReferencedVar [TYPE] void [PARAMETER] Var var [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Var var  [TYPE]  Node parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^215^^^^^210^226^[ADD] referenced.add ( var ) ;^[METHOD] markReferencedVar [TYPE] void [PARAMETER] Var var [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Var var  [TYPE]  Node parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node parent = var.getInitialValue (  ) ;^217^^^^^210^226^[REPLACE] Node parent = var.getParentNode (  ) ;^[METHOD] markReferencedVar [TYPE] void [PARAMETER] Var var [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Var var  [TYPE]  Node parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  (  var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^218^219^^^^210^226^[REPLACE] if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[METHOD] markReferencedVar [TYPE] void [PARAMETER] Var var [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Var var  [TYPE]  Node parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseAndRemoveUnusedReferences ( root ) ;^224^^^^^210^226^[REPLACE] traverseFunction ( parent, var.scope ) ;^[METHOD] markReferencedVar [TYPE] void [PARAMETER] Var var [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Var var  [TYPE]  Node parent  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^CodingConvention convention = compiler_.reportCodeChange (  ) ;^232^^^^^231^301^[REPLACE] CodingConvention convention = compiler_.getCodingConvention (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^232^^^^^231^301^[ADD] CodingConvention convention = compiler_.getCodingConvention (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  (  !convention.isExported ( var.name )  )  )  {^237^238^^^^231^301^[REPLACE] if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^237^238^^240^241^231^301^[ADD] if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  { compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ; Node nameNode = var.nameNode;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getType (  )  == Token.LP ) {^252^253^^^^237^299^[REPLACE] if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( nameNode.getType (  )  == Token.FUNCTION || NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^263^264^265^^^237^299^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^267^268^269^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 )  {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   NodeUtil.removeChild ( parent, toRemove ) ;numRemoved_++;^295^296^297^298^^237^299^[ADD] else if  ( parent != null )  { NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil.removeChild ( nameNode, toRemove ) ;^296^^^^^237^299^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove.removeChild ( parent ) ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil.removeChild ( parent, nameNode ) ;^296^^^^^237^299^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( warnedVars_.contains ( var )  )  {^270^^^^^267^298^[REPLACE] if  ( !warnedVars_.contains ( var )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName  =  "<unknown>";^272^273^274^^^267^298^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  3 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^284^285^286^287^288^267^298^[ADD] if  ( toRemove.getChildCount (  )  == 1 )  { parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ; numRemoved_++; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( parent, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^285^286^^^^267^298^[ADD] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^286^^^^^267^298^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName = var.input == null ? var.input.getName (  ) : "<unknown>";^272^273^274^^^267^298^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( warnedVars_.contains ( var )  )  {^270^^^^^237^299^[REPLACE] if  ( !warnedVars_.contains ( var )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName  =  var.input.getName (  ) ;^272^273^274^^^237^299^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^272^273^274^^^237^299^[ADD] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  4 )  {^284^^^^^237^299^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove.getFirstChild (  )  )  ) ;^286^^^^^237^299^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR ) {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   toRemove.removeChild ( nameNode ) ;^289^290^^^293^237^299^[ADD] else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  { toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( nameNode == this )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil .removeChild ( toRemove )  ;^296^^^^^237^299^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^296^^^^^237^299^[ADD] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName = var.input == null ? var.input.getName (  ) : "<unknown>";^272^273^274^^^237^299^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR ) {^267^268^269^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^if  (  (  ( toRemove.getType (  )  )  ==  ( LP )  )  &&  (  ( parent.getType (  )  )  ==  ( FUNCTION )  )  )  { }else     if  (  (  ( toRemove.getType (  )  )  ==  ( FUNCTION )  )  &&  ( isFunctionAnonymous ( toRemove )  )  )  {         if  ( ! ( preserveAnonymousFunctionNames )  )  {             toRemove.getFirstChild (  ) .setString ( "" ) ;             compiler_.reportCodeChange (  ) ;         }     }else         if  (  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( FOR )  )  )  &&  (  ( parent.getChildCount (  )  )  < 4 )  )  {         }else             if  (  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  ( nameNode.hasChildren (  )  )  )  &&  ( mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  )  {                 if  ( ! ( warnedVars_.contains ( var )  )  )  {                     warnedVars_.add ( var ) ;                     String inputName =  (  ( var.input )  != null )  ? getName (  )  : "<unknown>";                     info (  (  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  )  + " may have side effects and can't be removed" )  ) ;                 }                 if  (  ( toRemove.getChildCount (  )  )  == 1 )  {                     parent.replaceChild ( toRemove, new Node ( EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;                      ( numRemoved_ ) ++;                 }             }else                 if  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  (  ( toRemove.getChildCount (  )  )  > 1 )  )  {                     toRemove.removeChild ( nameNode ) ;                      ( numRemoved_ ) ++;                 }else                     if  ( parent != null )  {                         removeChild ( parent, toRemove ) ;                          ( numRemoved_ ) ++;                     }^267^^^^^237^299^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent ==toRemove )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseFunction ( parent, var.scope ) ;^296^^^^^237^299^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( nameNode , nameNode )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  (toRemove == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^296^^^^^237^299^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   ||  1 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName  =  var.input.getName (  ) ;^272^273^274^^^267^298^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( warnedVars_ .clear (  )   )  {^270^^^^^237^299^[REPLACE] if  ( !warnedVars_.contains ( var )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   ||  1 )  {^284^^^^^237^299^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( parent, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, nameNode.getFirstChild (  )  )  ) ;^286^^^^^237^299^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  (  toRemove .hasChildren (  )   > 1 )  {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( parent , parent )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^296^297^^^^237^299^[ADD] NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName  =  "<unknown>";^272^273^274^^^237^299^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( preserveAnonymousFunctionNames )  {^258^^^^^256^298^[REPLACE] if  ( !preserveAnonymousFunctionNames )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove.getLastChild (  ) .setString ( "" ) ;^259^^^^^256^298^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .getLastChild (  )  .setString ( "" ) ;^259^^^^^256^298^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^compiler_.addToDebugLog (  ) ;^260^^^^^256^298^[REPLACE] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( preserveAnonymousFunctionNames )  {^258^^^^^237^299^[REPLACE] if  ( !preserveAnonymousFunctionNames )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node argList = function.getFirstChild (  ) .getNext (  ) ;^259^^^^^237^299^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove.getLastChild (  ) .setString ( "" ) ;^259^^^^^237^299^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^compiler_.addToDebugLog (  ) ;^260^^^^^237^299^[REPLACE] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^260^^^^^237^299^[ADD] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent != null ) {^263^264^265^^^237^299^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^if  (  (  ( toRemove.getType (  )  )  ==  ( LP )  )  &&  (  ( parent.getType (  )  )  ==  ( FUNCTION )  )  )  { }else     if  (  (  ( toRemove.getType (  )  )  ==  ( FUNCTION )  )  &&  ( isFunctionAnonymous ( toRemove )  )  )  {         if  ( ! ( preserveAnonymousFunctionNames )  )  {             toRemove.getFirstChild (  ) .setString ( "" ) ;             compiler_.reportCodeChange (  ) ;         }     }else         if  (  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( FOR )  )  )  &&  (  ( parent.getChildCount (  )  )  < 4 )  )  {         }else             if  (  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  ( nameNode.hasChildren (  )  )  )  &&  ( mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  )  {                 if  ( ! ( warnedVars_.contains ( var )  )  )  {                     warnedVars_.add ( var ) ;                     String inputName =  (  ( var.input )  != null )  ? getName (  )  : "<unknown>";                     info (  (  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  )  + " may have side effects and can't be removed" )  ) ;                 }                 if  (  ( toRemove.getChildCount (  )  )  == 1 )  {                     parent.replaceChild ( toRemove, new Node ( EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;                      ( numRemoved_ ) ++;                 }             }else                 if  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  (  ( toRemove.getChildCount (  )  )  > 1 )  )  {                     toRemove.removeChild ( nameNode ) ;                      ( numRemoved_ ) ++;                 }else                     if  ( parent != null )  {                         removeChild ( parent, toRemove ) ;                          ( numRemoved_ ) ++;                     }^263^^^^^237^299^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   numRemoved_++;^295^296^297^298^^237^299^[ADD] else if  ( parent != null )  { NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^warnedVars_.add ( var ) ;: "<unknown>";^270^271^272^273^274^267^298^[ADD] if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ; String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^272^273^274^^^267^298^[ADD] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove .hasChildren (  )    &&  1 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, nameNode.getFirstChild (  )  )  ) ;^286^^^^^267^298^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^286^^^^^267^298^[ADD] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  1 )  {^284^^^^^237^299^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, parent.removeFirstChild (  )  )  ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( nameNode == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   warnedVars_.add ( var ) ;^267^268^269^270^271^237^299^[ADD] else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  { if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent == this )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  2 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^warnedVars_.add ( var ) ;: "<unknown>";^270^271^272^273^274^237^299^[ADD] if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ; String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.getFirstChild (  )  )  ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^286^^^^^237^299^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  toRemove.getChildCount (  )  > 1 )  {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^256^257^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^if  (  (  ( toRemove.getType (  )  )  ==  ( LP )  )  &&  (  ( parent.getType (  )  )  ==  ( FUNCTION )  )  )  { }else     if  (  (  ( toRemove.getType (  )  )  ==  ( FUNCTION )  )  &&  ( isFunctionAnonymous ( toRemove )  )  )  {         if  ( ! ( preserveAnonymousFunctionNames )  )  {             toRemove.getFirstChild (  ) .setString ( "" ) ;             compiler_.reportCodeChange (  ) ;         }     }else         if  (  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( FOR )  )  )  &&  (  ( parent.getChildCount (  )  )  < 4 )  )  {         }else             if  (  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  ( nameNode.hasChildren (  )  )  )  &&  ( mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  )  {                 if  ( ! ( warnedVars_.contains ( var )  )  )  {                     warnedVars_.add ( var ) ;                     String inputName =  (  ( var.input )  != null )  ? getName (  )  : "<unknown>";                     info (  (  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  )  + " may have side effects and can't be removed" )  ) ;                 }                 if  (  ( toRemove.getChildCount (  )  )  == 1 )  {                     parent.replaceChild ( toRemove, new Node ( EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;                      ( numRemoved_ ) ++;                 }             }else                 if  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  (  ( toRemove.getChildCount (  )  )  > 1 )  )  {                     toRemove.removeChild ( nameNode ) ;                      ( numRemoved_ ) ++;                 }else                     if  ( parent != null )  {                         removeChild ( parent, toRemove ) ;                          ( numRemoved_ ) ++;                     }^256^^^^^237^299^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent != true && parent.getType (  )  != Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^237^299^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}^263^264^265^^267^237^299^[ADD] else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  { } else if  ( toRemove.getType (  )  == Token.VAR &&^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == this  )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( toRemove , toRemove )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  1 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^284^285^286^287^288^237^299^[ADD] if  ( toRemove.getChildCount (  )  == 1 )  { parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ; numRemoved_++; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseFunction ( n, scope ) ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^traverseAndRemoveUnusedReferences ( root ) ;^293^^^^^289^298^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil .removeChild ( nameNode )  ;^296^^^^^237^299^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.VAR ) {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   &&  1 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove.getFirstChild (  )  )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove .getFirstChild (  )   )  ) ;^286^^^^^237^299^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^293^^^^^289^298^[ADD] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName = var.input == true ? var.input.getName (  ) : "<unknown>";^272^273^274^^^237^299^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove.getFirstChild (  )  .getString (  )  ;^259^^^^^256^298^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^compiler_ .addToDebugLog (  )  ;^260^^^^^256^298^[REPLACE] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^toRemove.getFirstChild (  ) .setString ( "" ) ;compiler_.reportCodeChange (  ) ;^258^259^260^261^^237^299^[ADD] if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^compiler_ .addToDebugLog (  )  ;^260^^^^^237^299^[REPLACE] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  parent.getType (  )  != Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^237^299^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.VAR || nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  (  toRemove.getChildCount (  )  > 1 )  {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, parent.removeFirstChild (  )  )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove.getFirstChild (  )  )  ) ;^286^^^^^267^298^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent .getLastChild (  )   ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^285^286^^^^237^299^[ADD] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^286^^^^^237^299^[ADD] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^numRemoved_++;^296^297^^^^237^299^[ADD] NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == this )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( nameNode , toRemove )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (toRemove == true )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.removeChild (  )   ||  1 % 4 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.getFirstChild (  )  )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove .getFirstChild (  )   )  ) ;^286^^^^^267^298^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( warnedVars_.add ( var )  )  {^270^^^^^237^299^[REPLACE] if  ( !warnedVars_.contains ( var )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   &&  1 )  {^284^^^^^237^299^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove.getFirstChild (  )  )  ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (nameNode == this )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil .removeChild ( parent )  ;^296^^^^^237^299^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node parent = var.getParentNode (  ) ;^241^^^^^237^299^[REPLACE] Node nameNode = var.nameNode;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node toRemove = toRemove.getParent (  ) ;^242^^^^^237^299^[REPLACE] Node toRemove = nameNode.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node parent = parent.getString (  ) ;^243^^^^^237^299^[REPLACE] Node parent = toRemove.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.removeChild (  )  == Token.LP ) {^252^253^^^^231^301^[REPLACE] if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.FUNCTION || NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   toRemove.getFirstChild (  ) .setString ( "" ) ;compiler_.reportCodeChange (  ) ;^256^257^258^259^260^231^301^[ADD] else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  { if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  parent.getType (  )  != Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^231^301^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}^263^264^265^^267^231^301^[ADD] else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  { } else if  ( toRemove.getType (  )  == Token.VAR &&^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^267^268^269^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   warnedVars_.add ( var ) ;^267^268^269^270^271^231^301^[ADD] else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  { if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil.removeChild ( nameNode, toRemove ) ;^296^^^^^231^301^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == null )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^270^271^272^273^274^267^298^[ADD] if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ; String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove .getFirstChild (  )   )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^286^^^^^267^298^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( warnedVars_.contains ( var )  )  {^270^^^^^231^301^[REPLACE] if  ( !warnedVars_.contains ( var )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName  =  "<unknown>";^272^273^274^^^231^301^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  1L )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, parent.getFirstChild (  )  )  ) ;^285^286^^^^231^301^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^285^286^^^^231^301^[ADD] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^286^^^^^231^301^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR ) {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove == true )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil.removeChild ( parent, nameNode ) ;^296^^^^^231^301^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^293^294^^^^289^298^[ADD] toRemove.removeChild ( nameNode ) ; numRemoved_++;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   numRemoved_++;^295^296^297^298^^231^301^[ADD] else if  ( parent != null )  { NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.VAR || nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^if  (  (  ( toRemove.getType (  )  )  ==  ( LP )  )  &&  (  ( parent.getType (  )  )  ==  ( FUNCTION )  )  )  { }else     if  (  (  ( toRemove.getType (  )  )  ==  ( FUNCTION )  )  &&  ( isFunctionAnonymous ( toRemove )  )  )  {         if  ( ! ( preserveAnonymousFunctionNames )  )  {             toRemove.getFirstChild (  ) .setString ( "" ) ;             compiler_.reportCodeChange (  ) ;         }     }else         if  (  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( FOR )  )  )  &&  (  ( parent.getChildCount (  )  )  < 4 )  )  {         }else             if  (  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  ( nameNode.hasChildren (  )  )  )  &&  ( mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  )  {                 if  ( ! ( warnedVars_.contains ( var )  )  )  {                     warnedVars_.add ( var ) ;                     String inputName =  (  ( var.input )  != null )  ? getName (  )  : "<unknown>";                     info (  (  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  )  + " may have side effects and can't be removed" )  ) ;                 }                 if  (  ( toRemove.getChildCount (  )  )  == 1 )  {                     parent.replaceChild ( toRemove, new Node ( EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;                      ( numRemoved_ ) ++;                 }             }else                 if  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  (  ( toRemove.getChildCount (  )  )  > 1 )  )  {                     toRemove.removeChild ( nameNode ) ;                      ( numRemoved_ ) ++;                 }else                     if  ( parent != null )  {                         removeChild ( parent, toRemove ) ;                          ( numRemoved_ ) ++;                     }^267^^^^^231^301^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^if  (  ( parent.getType (  )  )  !=  ( VAR )  )  {     Var var = scope.getVar ( n.getString (  )  ) ;     if  ( var != null )  {         markReferencedVar ( var ) ;     } }^289^^^^^231^301^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent ==toRemove )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName  =  var.input.getName (  ) ;^272^273^274^^^231^301^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  1 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 * 3 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent == null )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (toRemove == null )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^Var var = it.next (  ) ;^259^^^^^256^298^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( preserveAnonymousFunctionNames )  {^258^^^^^231^301^[REPLACE] if  ( !preserveAnonymousFunctionNames )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove.getFirstChild (  )  .getString (  )  ;^259^^^^^231^301^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .getLastChild (  )  .setString ( "" ) ;^259^^^^^231^301^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^compiler_.addToDebugLog (  ) ;^260^^^^^231^301^[REPLACE] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^260^^^^^231^301^[ADD] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  else {^263^264^265^^^231^301^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR ) {^267^268^269^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 4 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^numRemoved_++;^296^297^^^^231^301^[ADD] NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent .getLastChild (  )   ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.removeChild (  )   !=  2 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^231^301^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent == this  )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   NodeUtil.removeChild ( parent, toRemove ) ;numRemoved_++;^295^296^297^298^^231^301^[ADD] else if  ( parent != null )  { NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil .removeChild ( parent )  ;^296^^^^^231^301^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( nameNode.getType (  )  == Token.VAR || nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.VAR ) {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   toRemove.removeChild ( nameNode ) ;^289^290^^^293^231^301^[ADD] else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  { toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent == this )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^296^^^^^231^301^[ADD] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^272^273^274^^^231^301^[ADD] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( parent.getChildCount (  )   !=  4 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, parent.removeFirstChild (  )  )  ) ;^285^286^^^^231^301^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.FUNCTION ) {^256^257^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || toRemove .hasChildren (  )   > 2 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent ==toRemove )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( nameNode == true )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.removeChild (  )   !=  1 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName = var.input == false ? var.input.getName (  ) : "<unknown>";^272^273^274^^^267^298^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.getFirstChild (  )  )  ) ;^285^286^^^^231^301^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^286^^^^^231^301^[ADD] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  toRemove.getChildCount (  )  > 1 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (nameNode == null )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( toRemove , parent )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == true )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( nameNode ==toRemove )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^warnedVars_.add ( var ) ;: "<unknown>";^270^271^272^273^274^231^301^[ADD] if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ; String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName = var.input == null ? var.input.getName (  ) : "<unknown>";^272^273^274^^^231^301^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, nameNode.getFirstChild (  )  )  ) ;^286^^^^^231^301^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^286^^^^^231^301^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^numRemoved_++;^293^294^^^^289^298^[ADD] toRemove.removeChild ( nameNode ) ; numRemoved_++;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^260^^^^^256^298^[ADD] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^258^259^260^261^^231^301^[ADD] if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove.getLastChild (  ) .setString ( "" ) ;^259^^^^^231^301^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^259^260^^^^231^301^[ADD] toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^compiler_ .addToDebugLog (  )  ;^260^^^^^231^301^[REPLACE] compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( nameNode == null )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName = var.input == this ? var.input.getName (  ) : "<unknown>";^272^273^274^^^267^298^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.removeChild (  )   &&  1 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^284^285^286^287^288^231^301^[ADD] if  ( toRemove.getChildCount (  )  == 1 )  { parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ; numRemoved_++; }^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == false )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^286^287^^^^267^298^[ADD] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ; numRemoved_++;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( nameNode == true )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^296^297^^^^231^301^[ADD] NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^234^^^^^231^301^[REPLACE] for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ;  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( referenced.contains ( var )  && ( var.isLocal (  )  ) {^237^238^^^^231^301^[REPLACE] if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getType (  )  == Token.LP || parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^299^[REPLACE] if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^252^253^^^256^237^299^[ADD] if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  { } else if  ( toRemove.getType (  )  == Token.FUNCTION &&^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^}   toRemove.getFirstChild (  ) .setString ( "" ) ;compiler_.reportCodeChange (  ) ;^256^257^258^259^260^237^299^[ADD] else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  { if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( toRemove , nameNode )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^if  (  ( parent.getType (  )  )  !=  ( VAR )  )  {     Var var = scope.getVar ( n.getString (  )  ) ;     if  ( var != null )  {         markReferencedVar ( var ) ;     } }^289^^^^^237^299^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   ||  1 >> 4 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove .getFirstChild (  )   )  ) ;^285^286^^^^237^299^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.VAR || toRemove .hasChildren (  )   > 1 )  {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == false )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove.getFirstChild (  )  .getString (  )  ;^259^^^^^237^299^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^259^^^^^237^299^[ADD] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || nameNode .getChildCount (  )   || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (toRemove == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  (  nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 >> 2 )  {^289^290^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  1L )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove .hasChildren (  )    &&  3 )  {^284^^^^^237^299^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.FUNCTION || NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^237^299^[REPLACE] } else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent != this ) {^263^264^265^^^237^299^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  (toRemove == this )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   !=  1 - 3 )  {^284^^^^^237^299^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( parent , nameNode )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^compiler_.reportCodeChange (  ) ;^259^260^^^^256^298^[ADD] toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^259^260^^^^237^299^[ADD] toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .getLastChild (  )  .setString ( "" ) ;^259^^^^^237^299^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( nameNode == null )  {^295^^^^^237^299^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^270^271^272^273^274^237^299^[ADD] if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ; String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^286^^^^^237^299^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^String inputName = var.input == this ? var.input.getName (  ) : "<unknown>";^272^273^274^^^237^299^[REPLACE] String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node toRemove = nameNode .getString (  )  ;^242^^^^^237^299^[REPLACE] Node toRemove = nameNode.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getType (  )  == Token.LP ) {^252^253^^^^231^301^[REPLACE] if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.FUNCTION || NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  nameNode.hasChildren (  )  || NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (nameNode == true )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^286^^^^^267^298^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   ||  1 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove == null )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 >>> 3 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == this )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.removeChild (  )   &&  1 - 3 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^285^286^^^^267^298^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   &&  1L )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent .getLastChild (  )   ) ;^285^286^^^^231^301^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^new Node ( Token.EXPR_RESULT, toRemove .getFirstChild (  )   )  ) ;^286^^^^^231^301^[REPLACE] new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( toRemove.getType (  )  == Token.VAR || toRemove .hasChildren (  )   > 1 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^traverseFunction ( parent, var.scope ) ;^296^^^^^231^301^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil .removeChild ( toRemove )  ;^296^^^^^231^301^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( parent == false )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.removeChild (  )   ||  1 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   &&  1 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( parent, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^231^301^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent == this  )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^toRemove .removeChild ( parent , toRemove )  ;^293^^^^^289^298^[REPLACE] toRemove.removeChild ( nameNode ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REMOVE]^if  (  (  ( toRemove.getType (  )  )  ==  ( LP )  )  &&  (  ( parent.getType (  )  )  ==  ( FUNCTION )  )  )  { }else     if  (  (  ( toRemove.getType (  )  )  ==  ( FUNCTION )  )  &&  ( isFunctionAnonymous ( toRemove )  )  )  {         if  ( ! ( preserveAnonymousFunctionNames )  )  {             toRemove.getFirstChild (  ) .setString ( "" ) ;             compiler_.reportCodeChange (  ) ;         }     }else         if  (  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( FOR )  )  )  &&  (  ( parent.getChildCount (  )  )  < 4 )  )  {         }else             if  (  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  ( nameNode.hasChildren (  )  )  )  &&  ( mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  )  {                 if  ( ! ( warnedVars_.contains ( var )  )  )  {                     warnedVars_.add ( var ) ;                     String inputName =  (  ( var.input )  != null )  ? getName (  )  : "<unknown>";                     info (  (  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  )  + " may have side effects and can't be removed" )  ) ;                 }                 if  (  ( toRemove.getChildCount (  )  )  == 1 )  {                     parent.replaceChild ( toRemove, new Node ( EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;                      ( numRemoved_ ) ++;                 }             }else                 if  (  (  ( toRemove.getType (  )  )  ==  ( VAR )  )  &&  (  ( toRemove.getChildCount (  )  )  > 1 )  )  {                     toRemove.removeChild ( nameNode ) ;                      ( numRemoved_ ) ++;                 }else                     if  ( parent != null )  {                         removeChild ( parent, toRemove ) ;                          ( numRemoved_ ) ++;                     }^256^^^^^231^301^[REMOVE] ^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   ||  0 )  {^284^^^^^267^298^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   ||  3 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^NodeUtil .removeChild ( nameNode )  ;^296^^^^^231^301^[REPLACE] NodeUtil.removeChild ( parent, toRemove ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node argList = function.getFirstChild (  ) .getNext (  ) ;^259^^^^^256^298^[REPLACE] toRemove.getFirstChild (  ) .setString ( "" ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  ( parent != null && parent.getType (  )  != Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^231^301^[REPLACE] } else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( toRemove.getChildCount (  )   &&  3 )  {^284^^^^^231^301^[REPLACE] if  ( toRemove.getChildCount (  )  == 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^285^286^^^^231^301^[REPLACE] parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  (  toRemove.getChildCount (  )  > 1 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( nameNode == null )  {^295^^^^^231^301^[REPLACE] } else if  ( parent != null )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^}  if  (  toRemove.getChildCount (  )  > 1L )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^if  ( warnedVars_.add ( var )  )  {^270^^^^^267^298^[REPLACE] if  ( !warnedVars_.contains ( var )  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^} else if  ( toRemove.removeChild (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 )  {^289^290^^^^231^301^[REPLACE] } else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Var var = this.hasNext (  ) ;^235^^^^^231^301^[REPLACE] Var var = it.next (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node parent = var.getParentNode (  ) ;^241^^^^^231^301^[REPLACE] Node nameNode = var.nameNode;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node toRemove = toRemove.getParent (  ) ;^242^^^^^231^301^[REPLACE] Node toRemove = nameNode.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^Node parent = toRemove.getParent (  ) ;^242^243^^^^231^301^[ADD] Node toRemove = nameNode.getParent (  ) ; Node parent = toRemove.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node parent = parent.getString (  ) ;^243^^^^^231^301^[REPLACE] Node parent = toRemove.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^243^^^^^231^301^[ADD] Node parent = toRemove.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^for  ( Iterator<Var> it = scope.getVar (  ) ; it.hasNext (  ) ;  )  {^234^^^^^231^301^[REPLACE] for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ;  )  {^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Var var = it .hasNext (  )  ;^235^^^^^231^301^[REPLACE] Var var = it.next (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[ADD]^^241^^^^^231^301^[ADD] Node nameNode = var.nameNode;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
[REPLACE]^Node parent = parent .getString (  )  ;^243^^^^^231^301^[REPLACE] Node parent = toRemove.getParent (  ) ;^[METHOD] removeUnreferencedVars [TYPE] void [PARAMETER] Scope scope [CLASS] RemoveUnusedVars   [TYPE]  AbstractCompiler compiler  compiler_  [TYPE]  boolean false  preserveAnonymousFunctionNames  removeGlobals  true  [TYPE]  Set referenced  warnedVars_  [TYPE]  Scope scope  [TYPE]  Var var  [TYPE]  CodingConvention convention  [TYPE]  Node nameNode  parent  toRemove  [TYPE]  Iterator it  [TYPE]  String inputName  [TYPE]  Logger logger_  [TYPE]  int MAX_ITERATIONS  i  numRemoved_  type 
