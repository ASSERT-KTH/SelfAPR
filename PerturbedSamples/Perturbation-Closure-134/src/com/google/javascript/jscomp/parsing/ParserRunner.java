[REPLACE]^private static  String configResource = "com.google.javascript.jscomp.parsing.ParserConfig";^37^38^^^^37^38^[REPLACE] private static final String configResource = "com.google.javascript.jscomp.parsing.ParserConfig";^ [CLASS] ParserRunner  
[REPLACE]^private static Set<String> annotationNames  = null ;^40^^^^^^^[REPLACE] private static Set<String> annotationNames = null;^ [CLASS] ParserRunner  
[REPLACE]^trimmedNames.add ( name.trim (  )  ) ;^50^^^^^49^52^[REPLACE] initAnnotationNames (  ) ;^[METHOD] getAnnotationNames [TYPE] Set [PARAMETER] [CLASS] ParserRunner   [TYPE]  Set annotationNames  [TYPE]  String configResource  [TYPE]  boolean false  true 
[REPLACE]^return;^51^^^^^49^52^[REPLACE] return annotationNames;^[METHOD] getAnnotationNames [TYPE] Set [PARAMETER] [CLASS] ParserRunner   [TYPE]  Set annotationNames  [TYPE]  String configResource  [TYPE]  boolean false  true 
[REPLACE]^if  ( annotationNames == null )  {^55^^^^^54^66^[REPLACE] if  ( annotationNames != null )  {^[METHOD] initAnnotationNames [TYPE] void [PARAMETER] [CLASS] ParserRunner   [TYPE]  ResourceBundle config  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  String configResource  name  [TYPE]  String[] names  [TYPE]  boolean false  true 
[REPLACE]^return annotationNames;^56^^^^^54^66^[REPLACE] return;^[METHOD] initAnnotationNames [TYPE] void [PARAMETER] [CLASS] ParserRunner   [TYPE]  ResourceBundle config  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  String configResource  name  [TYPE]  String[] names  [TYPE]  boolean false  true 
[REPLACE]^for  ( String name : names )  { trimmedNames.add ( name.trim (  )  ) ;^59^^^^^54^66^[REPLACE] Set<String> trimmedNames = Sets.newHashSet (  ) ;^[METHOD] initAnnotationNames [TYPE] void [PARAMETER] [CLASS] ParserRunner   [TYPE]  ResourceBundle config  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  String configResource  name  [TYPE]  String[] names  [TYPE]  boolean false  true 
[REPLACE]^ResourceBundle config = ResourceBundle.getString ( configResource ) ;^60^^^^^54^66^[REPLACE] ResourceBundle config = ResourceBundle.getBundle ( configResource ) ;^[METHOD] initAnnotationNames [TYPE] void [PARAMETER] [CLASS] ParserRunner   [TYPE]  ResourceBundle config  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  String configResource  name  [TYPE]  String[] names  [TYPE]  boolean false  true 
[REPLACE]^String[] names = config .getBundle ( configResource )  .split ( "," ) ;^61^^^^^54^66^[REPLACE] String[] names = config.getString ( "jsdoc.annotations" ) .split ( "," ) ;^[METHOD] initAnnotationNames [TYPE] void [PARAMETER] [CLASS] ParserRunner   [TYPE]  ResourceBundle config  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  String configResource  name  [TYPE]  String[] names  [TYPE]  boolean false  true 
[REPLACE]^for  ( String name : names )  { trimmedNames.add ( name.trim (  )  ) ;^62^^^^^54^66^[REPLACE] for  ( String name : names )  {^[METHOD] initAnnotationNames [TYPE] void [PARAMETER] [CLASS] ParserRunner   [TYPE]  ResourceBundle config  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  String configResource  name  [TYPE]  String[] names  [TYPE]  boolean false  true 
[REPLACE]^annotationNames =  ImmutableSet.copyOf ( true ) ;^65^^^^^54^66^[REPLACE] annotationNames = ImmutableSet.copyOf ( trimmedNames ) ;^[METHOD] initAnnotationNames [TYPE] void [PARAMETER] [CLASS] ParserRunner   [TYPE]  ResourceBundle config  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  String configResource  name  [TYPE]  String[] names  [TYPE]  boolean false  true 
[REPLACE]^trimmedNames.add ( name.trim (  )  ) ;^86^^^^^85^119^[REPLACE] initAnnotationNames (  ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^Context cx = Context.exit (  ) ;^88^^^^^85^119^[REPLACE] Context cx = Context.enter (  ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^89^^^^^85^119^[REPLACE] cx.setErrorReporter ( errorReporter ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^cx.setErrorReporter ( Context.VERSION_1_5 ) ;^90^^^^^85^119^[REPLACE] cx.setLanguageVersion ( Context.VERSION_1_5 ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^String[] names = config.getString ( "jsdoc.annotations" ) .split ( "," ) ;^91^^^^^85^119^[REPLACE] CompilerEnvirons compilerEnv = new CompilerEnvirons (  ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^compilerEnv .setRecordingComments ( isIdeMode )  ;^92^^^^^85^119^[REPLACE] compilerEnv.initFromContext ( cx ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^compilerEnv.setRecordingComments ( false ) ;^93^^^^^85^119^[REPLACE] compilerEnv.setRecordingComments ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[ADD]^^93^94^^^^85^119^[ADD] compilerEnv.setRecordingComments ( true ) ; compilerEnv.setRecordingLocalJsDocComments ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^compilerEnv.setRecordingComments ( false ) ;^94^^^^^85^119^[REPLACE] compilerEnv.setRecordingLocalJsDocComments ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[ADD]^^94^95^^^^85^119^[ADD] compilerEnv.setRecordingLocalJsDocComments ( true ) ; compilerEnv.setWarnTrailingComma ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^compilerEnv .setRecordingComments ( false )  ;^95^^^^^85^119^[REPLACE] compilerEnv.setWarnTrailingComma ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^if  ( astRoot != null )  {^96^^^^^85^119^[REPLACE] if  ( isIdeMode )  {^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^compilerEnv.setRecordingComments ( false ) ;^97^^^^^85^119^[REPLACE] compilerEnv.setReservedKeywordAsIdentifier ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^compilerEnv.setAllowMemberExprAsFunctionName ( false ) ;^98^^^^^85^119^[REPLACE] compilerEnv.setAllowMemberExprAsFunctionName ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[ADD]^^98^^^^^85^119^[ADD] compilerEnv.setAllowMemberExprAsFunctionName ( true ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^String[] names = config.getString ( "jsdoc.annotations" ) .split ( "," ) ;^101^^^^^85^119^[REPLACE] Parser p = new Parser ( compilerEnv, errorReporter ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^AstRoot astRoot = this;^102^^^^^85^119^[REPLACE] AstRoot astRoot = null;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[ADD]^astRoot = p.parse ( sourceString, sourceName, 1 ) ;logger.info ( "Error parsing " + sourceName + ": " + e.getMessage (  )  ) ;^103^104^105^106^107^85^119^[ADD] try { astRoot = p.parse ( sourceString, sourceName, 1 ) ; } catch  ( EvaluatorException e )  { logger.info ( "Error parsing " + sourceName + ": " + e.getMessage (  )  ) ; } finally {^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^astRoot = p.parse ( sourceString, sourceName, 3 ) ;^104^^^^^85^119^[REPLACE] astRoot = p.parse ( sourceString, sourceName, 1 ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^astRoot = p.parse ( sourceString, sourceName, 0 ) ;^104^^^^^85^119^[REPLACE] astRoot = p.parse ( sourceString, sourceName, 1 ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^Node root = this;^110^^^^^85^119^[REPLACE] Node root = null;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^if  ( astRoot == null )  {^111^^^^^85^119^[REPLACE] if  ( astRoot != null )  {^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^root =  IRFactory.transformTree ( null, sourceString, config, errorReporter ) ;^114^115^^^^85^119^[REPLACE] root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^Config config = new Config ( typeRegistry, annotationNames, true ) ;^112^113^^^^85^119^[REPLACE] Config config = new Config ( typeRegistry, annotationNames, isIdeMode ) ;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
[REPLACE]^return;^118^^^^^85^119^[REPLACE] return root;^[METHOD] parse [TYPE] Node [PARAMETER] String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [CLASS] ParserRunner   [TYPE]  Context cx  [TYPE]  Set annotationNames  trimmedNames  [TYPE]  Config config  [TYPE]  Node root  [TYPE]  CompilerEnvirons compilerEnv  [TYPE]  String configResource  name  sourceName  sourceString  [TYPE]  Logger logger  [TYPE]  Parser p  [TYPE]  JSTypeRegistry typeRegistry  [TYPE]  ErrorReporter errorReporter  [TYPE]  boolean false  isIdeMode  true  [TYPE]  EvaluatorException e  [TYPE]  AstRoot astRoot 
