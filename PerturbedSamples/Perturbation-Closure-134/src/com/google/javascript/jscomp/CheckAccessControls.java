[REPLACE]^static  DiagnosticType DEPRECATED_NAME = DiagnosticType.disabled ( "JSC_DEPRECATED_VAR", "Variable {0} has been deprecated." ) ;^50^51^52^^^50^52^[REPLACE] static final DiagnosticType DEPRECATED_NAME = DiagnosticType.disabled ( "JSC_DEPRECATED_VAR", "Variable {0} has been deprecated." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType DEPRECATED_NAME_REASON ;^54^55^56^^^54^56^[REPLACE] static final DiagnosticType DEPRECATED_NAME_REASON = DiagnosticType.disabled ( "JSC_DEPRECATED_VAR_REASON", "Variable {0} has been deprecated: {1}" ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType DEPRECATED_PROP ;^58^59^60^^^58^60^[REPLACE] static final DiagnosticType DEPRECATED_PROP = DiagnosticType.disabled ( "JSC_DEPRECATED_PROP", "Property {0} of type {1} has been deprecated." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType DEPRECATED_PROP_REASON ;^62^63^64^^^62^64^[REPLACE] static final DiagnosticType DEPRECATED_PROP_REASON = DiagnosticType.disabled ( "JSC_DEPRECATED_PROP_REASON", "Property {0} of type {1} has been deprecated: {2}" ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static  DiagnosticType DEPRECATED_CLASS = DiagnosticType.disabled ( "JSC_DEPRECATED_CLASS", "Class {0} has been deprecated." ) ;^66^67^68^^^66^68^[REPLACE] static final DiagnosticType DEPRECATED_CLASS = DiagnosticType.disabled ( "JSC_DEPRECATED_CLASS", "Class {0} has been deprecated." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType DEPRECATED_CLASS_REASON  = null ;^70^71^72^^^70^72^[REPLACE] static final DiagnosticType DEPRECATED_CLASS_REASON = DiagnosticType.disabled ( "JSC_DEPRECATED_CLASS_REASON", "Class {0} has been deprecated: {1}" ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS ;^74^75^76^77^^74^77^[REPLACE] static final DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS = DiagnosticType.disabled ( "JSC_BAD_PRIVATE_GLOBAL_ACCESS", "Access to private variable {0} not allowed outside file {1}." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^final DiagnosticType BAD_PRIVATE_PROPERTY_ACCESS = DiagnosticType.disabled ( "JSC_BAD_PRIVATE_PROPERTY_ACCESS", "Access to private property {0} of {1} not allowed here." ) ;^79^80^81^82^^79^82^[REPLACE] static final DiagnosticType BAD_PRIVATE_PROPERTY_ACCESS = DiagnosticType.disabled ( "JSC_BAD_PRIVATE_PROPERTY_ACCESS", "Access to private property {0} of {1} not allowed here." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType BAD_PROTECTED_PROPERTY_ACCESS  = null ;^84^85^86^87^^84^87^[REPLACE] static final DiagnosticType BAD_PROTECTED_PROPERTY_ACCESS = DiagnosticType.disabled ( "JSC_BAD_PROTECTED_PROPERTY_ACCESS", "Access to protected property {0} of {1} not allowed here." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType PRIVATE_OVERRIDE ;^89^90^91^92^^89^92^[REPLACE] static final DiagnosticType PRIVATE_OVERRIDE = DiagnosticType.disabled ( "JSC_PRIVATE_OVERRIDE", "Overriding private property of {0}." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^static final DiagnosticType VISIBILITY_MISMATCH  = null ;^94^95^96^97^^94^97^[REPLACE] static final DiagnosticType VISIBILITY_MISMATCH = DiagnosticType.disabled ( "JSC_VISIBILITY_MISMATCH", "Overriding {0} property of {1} with {2} property." ) ;^ [CLASS] CheckAccessControls  
[REPLACE]^private  AbstractCompiler compiler;^99^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] CheckAccessControls  
[REPLACE]^private int deprecatedDepth  = null ;^103^^^^^^^[REPLACE] private int deprecatedDepth = 0;^ [CLASS] CheckAccessControls  
[REPLACE]^private int methodDepth  = null ;^104^^^^^^^[REPLACE] private int methodDepth = 0;^ [CLASS] CheckAccessControls  
[REPLACE]^private JSType currentClass ;^105^^^^^^^[REPLACE] private JSType currentClass = null;^ [CLASS] CheckAccessControls  
[REPLACE]^this.compiler =  null;^108^^^^^107^110^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^this.validator =  null.getTypeValidator (  ) ;^109^^^^^107^110^[REPLACE] this.validator = compiler.getTypeValidator (  ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^109^^^^^107^110^[ADD] this.validator = compiler.getTypeValidator (  ) ;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node n = t.getScopeRoot (  ) ;^113^^^^^112^114^[REPLACE] NodeTraversal.traverse ( compiler, root, this ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node externs  root  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^113^^^^^112^114^[ADD] NodeTraversal.traverse ( compiler, root, this ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node externs  root  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( t.inGlobalScope (  )  )  {^117^^^^^116^129^[REPLACE] if  ( !t.inGlobalScope (  )  )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^117^118^119^120^121^116^129^[ADD] if  ( !t.inGlobalScope (  )  )  { Node n = t.getScopeRoot (  ) ; Node parent = n.getParent (  ) ; if  ( isDeprecatedFunction ( n, parent )  )  { deprecatedDepth++;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^120^^^^^116^129^[REPLACE] if  ( isDeprecatedFunction ( n, parent )  )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^deprecatedDepth++;^120^121^122^^^116^129^[ADD] if  ( isDeprecatedFunction ( n, parent )  )  { deprecatedDepth++; }^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( deprecatedDepth  &&  1 )  {^124^^^^^116^129^[REPLACE] if  ( methodDepth == 0 )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^currentClass =  getClassOfMethod ( parent, pareparentt ) ;^125^^^^^116^129^[REPLACE] currentClass = getClassOfMethod ( n, parent ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node n = t .getScope (  )  ;^118^^^^^116^129^[REPLACE] Node n = t.getScopeRoot (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node parent = parent.getParent (  ) ;^119^^^^^116^129^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( methodDepth  !=  3 )  {^124^^^^^116^129^[REPLACE] if  ( methodDepth == 0 )  {^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node n = t.getScope (  ) ;^118^^^^^116^129^[REPLACE] Node n = t.getScopeRoot (  ) ;^[METHOD] enterScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( t.inGlobalScope (  )  )  {^132^^^^^131^144^[REPLACE] if  ( !t.inGlobalScope (  )  )  {^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^135^^^^^131^144^[REPLACE] if  ( isDeprecatedFunction ( n, parent )  )  {^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( methodDepth  !=  2 )  {^140^^^^^131^144^[REPLACE] if  ( methodDepth == 0 )  {^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^currentClass = false;^141^^^^^131^144^[REPLACE] currentClass = null;^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^141^^^^^131^144^[ADD] currentClass = null;^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^currentClass = true;^141^^^^^131^144^[REPLACE] currentClass = null;^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node n = t.getScope (  ) ;^133^^^^^131^144^[REPLACE] Node n = t.getScopeRoot (  ) ;^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node parent = parent.getParent (  ) ;^134^^^^^131^144^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^deprecatedDepth--;^135^136^137^^^131^144^[ADD] if  ( isDeprecatedFunction ( n, parent )  )  { deprecatedDepth--; }^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( methodDepth  !=  0 )  {^140^^^^^131^144^[REPLACE] if  ( methodDepth == 0 )  {^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^currentClass = null;^140^141^142^^^131^144^[ADD] if  ( methodDepth == 0 )  { currentClass = null; }^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^currentClass = this;^141^^^^^131^144^[REPLACE] currentClass = null;^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^134^^^^^131^144^[ADD] Node parent = n.getParent (  ) ;^[METHOD] exitScope [TYPE] void [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( parent.getType (  )   &&  Token.ASSIGN )  {^151^^^^^150^178^[REPLACE] if  ( parent.getType (  )  == Token.ASSIGN )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^151^152^153^154^^150^178^[ADD] if  ( parent.getType (  )  == Token.ASSIGN )  { Node lValue = parent.getFirstChild (  ) ; if  ( lValue.isQualifiedName (  )  )  { if  ( lValue.getType (  )  == Token.GETPROP )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^172^173^^^^150^178^[REPLACE] } else if  ( NodeUtil.isFunctionDeclaration ( n )  || parent.getType (  )  == Token.NAME )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue.getJSType (  )  ) ;^174^^^^^172^175^[REPLACE] return normalizeClassType ( n.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( n .getType (  )   ) ;^174^^^^^150^178^[REPLACE] return normalizeClassType ( n.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^153^^^^^150^178^[REPLACE] if  ( lValue.isQualifiedName (  )  )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( lValue.getType (  )   ||  Token.GETPROP )  {^154^^^^^150^178^[REPLACE] if  ( lValue.getType (  )  == Token.GETPROP )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( n.getJSType (  )  ) ;^169^^^^^154^170^[REPLACE] return normalizeClassType ( lValue.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  lValueType.isConstructor (  )  )  {^157^^^^^150^178^[REPLACE] if  ( lValueType != null && lValueType.isConstructor (  )  )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^157^158^^160^^150^178^[ADD] if  ( lValueType != null && lValueType.isConstructor (  )  )  {  return  (  ( FunctionType )  lValueType ) .getInstanceType (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^164^^^^^157^165^[REPLACE] return normalizeClassType ( lValue.getFirstChild (  ) .getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  lValueType )  .getJSType (  )  ;^160^^^^^150^178^[REPLACE] return  (  ( FunctionType )  lValueType ) .getInstanceType (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  lValueType ) .getJSType (  ) ;^160^^^^^150^178^[REPLACE] return  (  ( FunctionType )  lValueType ) .getInstanceType (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^164^^^^^150^178^[REPLACE] return normalizeClassType ( lValue.getFirstChild (  ) .getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSType lValueType = lValue .getType (  )  ;^156^^^^^150^178^[REPLACE] JSType lValueType = lValue.getJSType (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( lValueType == this && lValueType.isConstructor (  )  )  {^157^^^^^150^178^[REPLACE] if  ( lValueType != null && lValueType.isConstructor (  )  )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue.getLastChild (  ) .getJSType (  )  ) ;^164^^^^^157^165^[REPLACE] return normalizeClassType ( lValue.getFirstChild (  ) .getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^160^^^^^150^178^[REPLACE] return  (  ( FunctionType )  lValueType ) .getInstanceType (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( n.getJSType (  )  ) ;^169^^^^^150^178^[REPLACE] return normalizeClassType ( lValue.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSType lValueType = lValue.getType (  ) ;^156^^^^^150^178^[REPLACE] JSType lValueType = lValue.getJSType (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue.getType (  )  ) ;^169^^^^^154^170^[REPLACE] return normalizeClassType ( lValue.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( lValueType == null && lValueType.isConstructor (  )  )  {^157^^^^^150^178^[REPLACE] if  ( lValueType != null && lValueType.isConstructor (  )  )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue .getLastChild (  )  .getJSType (  )  ) ;^164^^^^^157^165^[REPLACE] return normalizeClassType ( lValue.getFirstChild (  ) .getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue.getLastChild (  ) .getJSType (  )  ) ;^164^^^^^150^178^[REPLACE] return normalizeClassType ( lValue.getFirstChild (  ) .getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( lValueType == null ) {^157^^^^^150^178^[REPLACE] if  ( lValueType != null && lValueType.isConstructor (  )  )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue .getType (  )   ) ;^169^^^^^150^178^[REPLACE] return normalizeClassType ( lValue.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node lValue = n.getFirstChild (  ) ;^152^^^^^150^178^[REPLACE] Node lValue = parent.getFirstChild (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^156^^^^^150^178^[ADD] JSType lValueType = lValue.getJSType (  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue .getType (  )   ) ;^169^^^^^154^170^[REPLACE] return normalizeClassType ( lValue.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue.getFirstChild (  )  .getType (  )   ) ;^164^^^^^157^165^[REPLACE] return normalizeClassType ( lValue.getFirstChild (  ) .getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( lValue.getType (  )   !=  Token.GETPROP )  {^154^^^^^150^178^[REPLACE] if  ( lValue.getType (  )  == Token.GETPROP )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^} else if  ( NodeUtil.isFunctionDeclaration ( n )  && parent.getType (  )  == Token.NAME )  {^172^173^^^^150^178^[REPLACE] } else if  ( NodeUtil.isFunctionDeclaration ( n )  || parent.getType (  )  == Token.NAME )  {^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( n .getType (  )   ) ;^174^^^^^172^175^[REPLACE] return normalizeClassType ( n.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return normalizeClassType ( lValue.getJSType (  )  ) ;^174^^^^^150^178^[REPLACE] return normalizeClassType ( n.getJSType (  )  ) ;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return false;^177^^^^^150^178^[REPLACE] return null;^[METHOD] getClassOfMethod [TYPE] JSType [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node lValue  n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  type.isUnknownType (  )  )  {^185^^^^^184^196^[REPLACE] if  ( type == null || type.isUnknownType (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^185^186^187^188^^184^196^[ADD] if  ( type == null || type.isUnknownType (  )  )  { return type; } else if  ( type.isConstructor (  )  )  { return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^187^^^^^184^196^[REPLACE] } else if  ( type.isConstructor (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( lValueType .isUnknownType (  )   )  {^189^^^^^184^196^[REPLACE] } else if  ( type.isFunctionPrototypeType (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( owner .toString (  )   )  {^191^^^^^184^196^[REPLACE] if  ( owner.isConstructor (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return owner .getJSType (  )  ;^192^^^^^184^196^[REPLACE] return owner.getInstanceType (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^FunctionType owner =  (  ( FunctionPrototypeType )  type ) .getInstanceType (  ) ;^190^^^^^184^196^[REPLACE] FunctionType owner =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( owner.getInstanceType (  )  )  {^191^^^^^184^196^[REPLACE] if  ( owner.isConstructor (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return owner.isConstructor (  ) ;^192^^^^^184^196^[REPLACE] return owner.getInstanceType (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  type ) .getJSType (  ) ;^188^^^^^184^196^[REPLACE] return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( lValueType.isFunctionPrototypeType (  )  )  {^189^^^^^184^196^[REPLACE] } else if  ( type.isFunctionPrototypeType (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^FunctionType owner =  (  ( FunctionPrototypeType )  type )  .getInstanceType (  )  ;^190^^^^^184^196^[REPLACE] FunctionType owner =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  type )  .getJSType (  )  ;^188^^^^^184^196^[REPLACE] return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return lValueType;^186^^^^^184^196^[REPLACE] return type;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^189^^^^^184^196^[REPLACE] } else if  ( type.isFunctionPrototypeType (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^191^^^^^184^196^[REPLACE] if  ( owner.isConstructor (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^190^^^^^184^196^[ADD] FunctionType owner =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  lValueType ) .getInstanceType (  ) ;^188^^^^^184^196^[REPLACE] return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( type .isUnknownType (  )   )  {^189^^^^^184^196^[REPLACE] } else if  ( type.isFunctionPrototypeType (  )  )  {^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^}   FunctionType owner =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ;return owner.getInstanceType (  ) ;^189^190^191^192^193^184^196^[ADD] else if  ( type.isFunctionPrototypeType (  )  )  { FunctionType owner =  (  ( FunctionPrototypeType )  type ) .getOwnerFunction (  ) ; if  ( owner.isConstructor (  )  )  { return owner.getInstanceType (  ) ; }^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^return owner.getInstanceType (  ) ;^191^192^193^^^184^196^[ADD] if  ( owner.isConstructor (  )  )  { return owner.getInstanceType (  ) ; }^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return true;^186^^^^^184^196^[REPLACE] return type;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return lValueType;^195^^^^^184^196^[REPLACE] return type;^[METHOD] normalizeClassType [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  FunctionType owner  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return type;^199^^^^^198^200^[REPLACE] return true;^[METHOD] shouldTraverse [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^switch  ( n.getJSType (  )  )  {^203^^^^^202^216^[REPLACE] switch  ( n.getType (  )  )  {^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^203^204^205^^^202^216^[ADD] switch  ( n.getType (  )  )  { case Token.NAME: checkNameDeprecation ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( isDeprecatedFunction ( n, parent )  )  { deprecatedDepth--;^205^^^^^202^216^[REPLACE] checkNameDeprecation ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^205^^^^^202^216^[ADD] checkNameDeprecation ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^checkNameVisibility ( t, n, n ) ;^206^^^^^202^216^[REPLACE] checkNameVisibility ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^checkPropertyDeprecation ( t, n, n ) ;^209^^^^^202^216^[REPLACE] checkPropertyDeprecation ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^209^^^^^202^216^[ADD] checkPropertyDeprecation ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^shouldEmitDeprecationWarning ( t, n, parent )  )  {^210^^^^^202^216^[REPLACE] checkPropertyVisibility ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^checkConstructorDeprecation ( t, parent, parent ) ;^213^^^^^202^216^[REPLACE] checkConstructorDeprecation ( t, n, parent ) ;^[METHOD] visit [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSType type = n.getType (  ) ;^223^^^^^221^241^[REPLACE] JSType type = n.getJSType (  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (lValueType == null )  {^225^^^^^221^241^[REPLACE] if  ( type != null )  {^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( deprecationInfo == null ) {^228^229^^^^221^241^[REPLACE] if  ( deprecationInfo != null && shouldEmitDeprecationWarning ( t, n, parent )  )  {^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^228^229^^231^232^221^241^[ADD] if  ( deprecationInfo != null && shouldEmitDeprecationWarning ( t, n, parent )  )  { if  ( !deprecationInfo.isEmpty (  )  )  { compiler.report (^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^231^^^^^221^241^[REPLACE] if  ( !deprecationInfo.isEmpty (  )  )  {^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^231^232^233^234^^221^241^[ADD] if  ( !deprecationInfo.isEmpty (  )  )  { compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, parent, DEPRECATED_CLASS, type.toString (  )  )  ) ;^236^237^^^^221^241^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, parent, DEPRECATED_CLASS, type.toString (  )  )  ) ;^237^^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^237^^^^^221^241^[ADD] JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_CLASS, lValueType.toString (  )  )  ) ;^237^^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, parent, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^232^233^234^^^221^241^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError .make ( t , parent , DEPRECATED_NAME )   ) ;^233^234^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^233^234^^^^221^241^[ADD] JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^type.getJSDocInfo (  ) , deprecationInfo )  ) ;^234^^^^^221^241^[REPLACE] type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^234^^^^^221^241^[ADD] type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( deprecationInfo.isEmpty (  )  )  {^231^^^^^221^241^[REPLACE] if  ( !deprecationInfo.isEmpty (  )  )  {^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^236^237^^^^221^241^[ADD] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^237^^^^^221^241^[REMOVE] ^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS_REASON, lValueType.getJSDocInfo (  ) , deprecationInfo )  ) ;^232^233^234^^^221^241^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^232^233^234^^^221^241^[ADD] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, parent, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^233^234^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^String deprecationInfo = getTypeDeprecationInfo ( lValueType ) ;^226^^^^^221^241^[REPLACE] String deprecationInfo = getTypeDeprecationInfo ( type ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^226^^^^^221^241^[ADD] String deprecationInfo = getTypeDeprecationInfo ( type ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  shouldEmitDeprecationWarning ( t, n, parent )  )  {^228^229^^^^221^241^[REPLACE] if  ( deprecationInfo != null && shouldEmitDeprecationWarning ( t, n, parent )  )  {^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS, type .getJSDocInfo (  )   )  ) ;^236^237^^^^221^241^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_CLASS, type.getJSDocInfo (  )  )  ) ;^237^^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_CLASS, lValueType.getJSDocInfo (  )  )  ) ;^237^^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^type .getJSDocInfo (  )  , deprecationInfo )  ) ;^234^^^^^221^241^[REPLACE] type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS, type.getJSDocInfo (  )  )  ) ;^236^237^^^^221^241^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_NAME, n.getString (  )  )  ) ;^237^^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.getJSDocInfo (  ) , deprecationInfo )  ) ;^232^233^234^^^221^241^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, parent, DEPRECATED_CLASS_REASON, type .getJSDocInfo (  )  , deprecationInfo )  ) ;^233^234^^^^221^241^[REPLACE] JSError.make ( t, n, DEPRECATED_CLASS_REASON, type.toString (  ) , deprecationInfo )  ) ;^[METHOD] checkConstructorDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( n.getType (  )  == Token.FUNCTION ) {^248^249^^^^246^268^[REPLACE] if  ( parent.getType (  )  == Token.FUNCTION || parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.NEW )  {^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^248^249^250^251^^246^268^[ADD] if  ( parent.getType (  )  == Token.FUNCTION || parent.getType (  )  == Token.VAR || parent.getType (  )  == Token.NEW )  { return; }^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^250^^^^^246^268^[REPLACE] return;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Var var = t.getScope (  ) .getVar ( name.getString (  )  ) ;^253^^^^^246^268^[REPLACE] Scope.Var var = t.getScope (  ) .getVar ( n.getString (  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSDocInfo docInfo  =  null ;^254^^^^^246^268^[REPLACE] JSDocInfo docInfo = var == null ? null : var.getJSDocInfo (  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo == null ) {^256^257^^^^246^268^[REPLACE] if  ( docInfo != null && docInfo.isDeprecated (  )  && shouldEmitDeprecationWarning ( t, n, parent )  )  {^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo.getDeprecationReason (  )  == true )  {^259^^^^^246^268^[REPLACE] if  ( docInfo.getDeprecationReason (  )  != null )  {^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, parent, DEPRECATED_NAME, n.getString (  )  )  ) ;^264^265^^^^246^268^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_NAME, n.getString (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^264^265^^^^246^268^[ADD] compiler.report ( JSError.make ( t, n, DEPRECATED_NAME, n.getString (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_CLASS, type.toString (  )  )  ) ;^265^^^^^246^268^[REPLACE] JSError.make ( t, n, DEPRECATED_NAME, n.getString (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, parent, DEPRECATED_NAME, n.getString (  )  )  ) ;^265^^^^^246^268^[REPLACE] JSError.make ( t, n, DEPRECATED_NAME, n.getString (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_NAME_REASON, n .getParent (  )  , docInfo.getDeprecationReason (  )  )  ) ;^260^261^262^^^246^268^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getString (  ) , docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, parent, DEPRECATED_NAME_REASON, n.getString (  ) , docInfo.getDeprecationReason (  )  )  ) ;^261^262^^^^246^268^[REPLACE] JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getString (  ) , docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getParent (  ) , docInfo.getDeprecationReason (  )  )  ) ;^261^262^^^^246^268^[REPLACE] JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getString (  ) , docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^261^262^^^^246^268^[ADD] JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getString (  ) , docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^docInfo .isDeprecated (  )   )  ) ;^262^^^^^246^268^[REPLACE] docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo.isDeprecated (  )  == null )  {^259^^^^^246^268^[REPLACE] if  ( docInfo.getDeprecationReason (  )  != null )  {^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^259^260^261^262^^246^268^[ADD] if  ( docInfo.getDeprecationReason (  )  != null )  { compiler.report ( JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getString (  ) , docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_NAME, n .getParent (  )   )  ) ;^265^^^^^246^268^[REPLACE] JSError.make ( t, n, DEPRECATED_NAME, n.getString (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^265^^^^^246^268^[REMOVE] ^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getParent (  ) , docInfo.getDeprecationReason (  )  )  ) ;^260^261^262^^^246^268^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_NAME_REASON, n.getString (  ) , docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^docInfo.isDeprecated (  )  )  ) ;^262^^^^^246^268^[REPLACE] docInfo.getDeprecationReason (  )  )  ) ;^[METHOD] checkNameDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node n  parent  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( parent.getType (  )   !=  Token.NEW )  {^276^^^^^274^303^[REPLACE] if  ( parent.getType (  )  == Token.NEW )  {^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^return;^276^277^278^^^274^303^[ADD] if  ( parent.getType (  )  == Token.NEW )  { return; }^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^277^^^^^274^303^[REPLACE] return;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^ObjectType objectType = ObjectType.cast ( dereference ( parent.getFirstChild (  ) .getJSType (  )  )  ) ;^280^281^^^^274^303^[REPLACE] ObjectType objectType = ObjectType.cast ( dereference ( n.getFirstChild (  ) .getJSType (  )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^String propertyName = parent.getLastChild (  ) .getString (  ) ;^282^^^^^274^303^[REPLACE] String propertyName = n.getLastChild (  ) .getString (  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^282^^^^^274^303^[ADD] String propertyName = n.getLastChild (  ) .getString (  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( objectType == true )  {^284^^^^^274^303^[REPLACE] if  ( objectType != null )  {^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  shouldEmitDeprecationWarning ( t, n, parent )  )  {^288^289^^^^274^303^[REPLACE] if  ( deprecationInfo != null && shouldEmitDeprecationWarning ( t, n, parent )  )  {^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( deprecationInfo.isEmpty (  )  )  {^291^^^^^288^301^[REPLACE] if  ( !deprecationInfo.isEmpty (  )  )  {^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false )  )  ) ;^297^298^299^^^288^301^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false )  )  ) ;^298^299^^^^288^301^[REPLACE] JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( n.getFirstChild (  ) , false )  )  ) ;^299^^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getLastChild (  ) , true )  )  ) ;^299^^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , deprecationInfo )  ) ;^292^293^294^295^^288^301^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , deprecationInfo )  ) ;^293^294^295^^^288^301^[REPLACE] JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , deprecationInfo )  ) ;^294^295^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getLastChild (  ) , true ) , deprecationInfo )  ) ;^294^295^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( deprecationInfo.isEmpty (  )  )  {^291^^^^^274^303^[REPLACE] if  ( !deprecationInfo.isEmpty (  )  )  {^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false )  )  ) ;^297^298^299^^^291^300^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false )  )  ) ;^298^299^^^^291^300^[REPLACE] JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getFirstChild (  ) , false )  )  ) ;^299^^^^^291^300^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent .getLastChild (  )  , true )  )  ) ;^299^^^^^291^300^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , deprecationInfo )  ) ;^292^293^294^295^^274^303^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , propertyName )  ) ;^293^294^295^^^274^303^[REPLACE] JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^293^294^295^^^274^303^[ADD] JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( n.getLastChild (  ) , false ) , deprecationInfo )  ) ;^294^295^^^^274^303^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^294^295^^^^274^303^[ADD] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getLastChild (  ) , true ) , deprecationInfo )  ) ;^294^295^^^^274^303^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^String deprecationInfo = getPropertyDeprecationInfo ( objectType, deprecationInfo ) ;^285^286^^^^274^303^[REPLACE] String deprecationInfo = getPropertyDeprecationInfo ( objectType, propertyName ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( deprecationInfo == null && shouldEmitDeprecationWarning ( t, n, parent )  )  {^288^289^^^^274^303^[REPLACE] if  ( deprecationInfo != null && shouldEmitDeprecationWarning ( t, n, parent )  )  {^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^297^298^299^^^288^301^[ADD] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( n.getLastChild (  ) , false )  )  ) ;^299^^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^299^^^^^288^301^[REMOVE] ^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getFirstChild (  ) , true )  )  ) ;^299^^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n .getLastChild (  )  , false ) , deprecationInfo )  ) ;^292^293^294^295^^288^301^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^292^293^294^^^288^301^[ADD] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) ,^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^293^294^295^^^288^301^[ADD] JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( n.getLastChild (  ) , false ) , deprecationInfo )  ) ;^294^295^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^294^295^^^^288^301^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^291^292^293^294^295^274^303^[ADD] if  ( !deprecationInfo.isEmpty (  )  )  { compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( n.getFirstChild (  ) , false )  )  ) ;^299^^^^^291^300^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getFirstChild (  ) , true )  )  ) ;^299^^^^^291^300^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , propertyName )  ) ;^292^293^294^295^^274^303^[REPLACE] compiler.report ( JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , deprecationInfo )  ) ;^293^294^295^^^274^303^[REPLACE] JSError.make ( t, n, DEPRECATED_PROP_REASON, propertyName, validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( n.getFirstChild (  ) , false ) , deprecationInfo )  ) ;^294^295^^^^274^303^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( parent.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^294^295^^^^274^303^[REPLACE] validator.getReadableJSTypeName ( n.getFirstChild (  ) , true ) , deprecationInfo )  ) ;^[METHOD] checkPropertyDeprecation [TYPE] void [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  String deprecationInfo  propertyName  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Var var = t.getScope (  ) .getVar ( name.getParent (  )  ) ;^311^^^^^310^330^[REPLACE] Var var = t.getScope (  ) .getVar ( name.getString (  )  ) ;^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( var == null )  {^312^^^^^310^330^[REPLACE] if  ( var != null )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo == null )  {^314^^^^^310^330^[REPLACE] if  ( docInfo != null )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( visibility == Visibility.PRIVATE && t.getInput (  ) .getName (  ) .equals ( docInfo.getSourceName (  )  )  )  {^317^318^^^^310^330^[REPLACE] if  ( visibility == Visibility.PRIVATE && !t.getInput (  ) .getName (  ) .equals ( docInfo.getSourceName (  )  )  )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo.isConstructor (  )  || isValidPrivateConstructorAccess ( parent )  )  {^319^320^^^^310^330^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^321^^^^^310^330^[REPLACE] return;^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo.isConstructor (  )  ) {^319^320^^^^310^330^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^319^320^321^322^^310^330^[ADD] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  { return; }^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Visibility visibility = docInfo.getSourceName (  ) ;^316^^^^^310^330^[REPLACE] Visibility visibility = docInfo.getVisibility (  ) ;^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( visibility == Visibility.PRIVATE ) {^317^318^^^^310^330^[REPLACE] if  ( visibility == Visibility.PRIVATE && !t.getInput (  ) .getName (  ) .equals ( docInfo.getSourceName (  )  )  )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  isValidPrivateConstructorAccess ( parent )  )  {^319^320^^^^310^330^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^if  ( isDeprecatedFunction ( n, parent )  )  {      ( deprecatedDepth ) ++; }^319^^^^^310^330^[REMOVE] ^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSDocInfo info = type.getOwnPropertyJSDocInfo ( prop ) ;^313^^^^^310^330^[REPLACE] JSDocInfo docInfo = var.getJSDocInfo (  ) ;^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^316^^^^^310^330^[ADD] Visibility visibility = docInfo.getVisibility (  ) ;^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo == true )  {^314^^^^^310^330^[REPLACE] if  ( docInfo != null )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  isValidPrivateConstructorAccess ( name )  )  {^319^320^^^^310^330^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Visibility visibility = docInfo .getSourceName (  )  ;^316^^^^^310^330^[REPLACE] Visibility visibility = docInfo.getVisibility (  ) ;^[METHOD] checkNameVisibility [TYPE] void [PARAMETER] NodeTraversal t Node name Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Var var  [TYPE]  Node name  parent  [TYPE]  Visibility visibility  [TYPE]  JSDocInfo docInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^ObjectType objectType = ObjectType .toString (  )   )  ) ;^339^340^^^^338^430^[REPLACE] ObjectType objectType = ObjectType.cast ( dereference ( getprop.getFirstChild (  ) .getJSType (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^String propertyName = getprop.getFirstChild (  ) .getString (  ) ;^341^^^^^338^430^[REPLACE] String propertyName = getprop.getLastChild (  ) .getString (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^341^^^^^338^430^[ADD] String propertyName = getprop.getLastChild (  ) .getString (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( objectType == this )  {^343^^^^^338^430^[REPLACE] if  ( objectType != null )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( true )  {^352^^^^^338^430^[REPLACE] if  ( isOverride )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^objectType =  null.getImplicitPrototype (  ) ;^353^^^^^338^430^[REPLACE] objectType = objectType.getImplicitPrototype (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo == null ) {^359^360^^^^338^430^[REPLACE] if  ( docInfo != null && docInfo.getVisibility (  )  != Visibility.INHERITED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^359^360^361^362^^338^430^[ADD] if  ( docInfo != null && docInfo.getVisibility (  )  != Visibility.INHERITED )  { break; }^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( objectType != null )  {^365^^^^^338^430^[REPLACE] if  ( objectType == null )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^367^^^^^338^430^[REPLACE] return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^374^^^^^338^430^[REPLACE] if  ( isOverride )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( true )  {^396^^^^^374^428^[REPLACE] if  ( sameInput )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( visibility != Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  {^399^400^^^^374^428^[REPLACE] } else if  ( visibility == Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^414^^^^^374^428^[REPLACE] } else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  !currentClass.isSubtype ( ownerType )  )  {^420^^^^^374^428^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , false )  )  ) ;^422^423^424^425^^374^428^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , false )  )  ) ;^424^425^^^^374^428^[REPLACE] validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^getprop .getLastChild (  )  , true )  )  ) ;^425^^^^^374^428^[REPLACE] getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != null || !currentClass.isSubtype ( ownerType )  )  {^420^^^^^374^428^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler .getTypeValidator (  )  ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^374^428^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^getprop.getLastChild (  ) , true )  )  ) ;^425^^^^^374^428^[REPLACE] getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo.isConstructor (  )  || isValidPrivateConstructorAccess ( parent )  )  {^401^402^^^^399^427^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^401^402^403^404^^399^427^[ADD] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  { return; }^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^403^^^^^401^404^[REPLACE] return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^403^^^^^399^427^[REPLACE] return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo.isConstructor (  )  || isValidPrivateConstructorAccess ( parent )  )  {^401^402^^^^374^428^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^401^402^403^404^^374^428^[ADD] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  { return; }^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( overridingVisibility  ||  Visibility.PROTECTED )  {^414^^^^^374^428^[REPLACE] } else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^}^414^415^^^^374^428^[ADD] else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^422^423^424^^^374^428^[ADD] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^424^425^^^^374^428^[ADD] validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != null ) {^420^^^^^374^428^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^421^422^423^^^374^428^[ADD] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName,^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop .getLastChild (  )  , false )  )  ) ;^422^423^424^425^^374^428^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( getprop.getLastChild (  ) , false )  )  ) ;^424^425^^^^374^428^[REPLACE] validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^403^^^^^374^428^[REPLACE] return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^398^^^^^374^428^[REPLACE] return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^}   return;^399^400^401^402^403^374^428^[ADD] else if  ( visibility == Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  { if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  { return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^420^421^422^423^424^374^428^[ADD] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  { compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getLastChild (  ) , false )  )  ) ;^422^423^424^425^^374^428^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  isValidPrivateConstructorAccess ( parent )  )  {^401^402^^^^399^427^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  isValidPrivateConstructorAccess ( parent )  )  {^401^402^^^^374^428^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( visibility  &&  Visibility.PROTECTED )  {^414^^^^^374^428^[REPLACE] } else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^425^^^^^374^428^[ADD] getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != this || !currentClass.isSubtype ( ownerType )  )  {^420^^^^^374^428^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , getprop , VISIBILITY_MISMATCH , propertyName )  ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^374^428^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( visibility == Visibility.PRIVATE ) {^384^^^^^338^430^[REPLACE] if  ( visibility == Visibility.PRIVATE && !sameInput )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^384^385^386^387^388^338^430^[ADD] if  ( visibility == Visibility.PRIVATE && !sameInput )  { compiler.report ( JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.toString (  )  )  ) ; } else if  ( overridingVisibility != Visibility.INHERITED &&^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( overridingVisibility != Visibility.INHERITED || overridingVisibility != visibility )  {^388^389^^^^338^430^[REPLACE] } else if  ( overridingVisibility != Visibility.INHERITED && overridingVisibility != visibility )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.cast (  ) , overridingVisibility.name (  )  )  ) ;^390^391^392^393^^388^394^[REPLACE] compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop, VISIBILITY_MISMATCH, overridingVisibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^391^392^393^^^388^394^[REPLACE] JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^392^393^^^^388^394^[ADD] visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^visibility.name (  ) , objectType .getJSDocInfo (  )  , overridingVisibility.name (  )  )  ) ;^392^393^^^^388^394^[REPLACE] visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^docInfo.getDeprecationReason (  )  )  ) ;^393^^^^^388^394^[REPLACE] overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType .getJSDocInfo (  )   )  ) ;^385^386^387^^^338^430^[REPLACE] compiler.report ( JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^385^386^387^^^338^430^[ADD] compiler.report ( JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.cast (  )  )  ) ;^386^387^^^^338^430^[REPLACE] JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^386^387^^^^338^430^[ADD] JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^objectType.cast (  )  )  ) ;^387^^^^^338^430^[REPLACE] objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^}^388^389^390^391^392^338^430^[ADD] else if  ( overridingVisibility != Visibility.INHERITED && overridingVisibility != visibility )  { compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) ,^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , visibility.name (  )  )  ) ;^390^391^392^393^^388^394^[REPLACE] compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^391^392^393^^^388^394^[ADD] JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^visibility.name (  ) , objectType.cast (  ) , overridingVisibility.name (  )  )  ) ;^392^393^^^^388^394^[REPLACE] visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSDocInfo overridingInfo = parent.getString (  ) ;^377^^^^^338^430^[REPLACE] JSDocInfo overridingInfo = parent.getJSDocInfo (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Visibility overridingVisibility  =  overridingInfo.getVisibility (  ) ;^378^379^^^^338^430^[REPLACE] Visibility overridingVisibility = overridingInfo == null ? Visibility.INHERITED : overridingInfo.getVisibility (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( visibility == Visibility.PRIVATE && sameInput )  {^384^^^^^338^430^[REPLACE] if  ( visibility == Visibility.PRIVATE && !sameInput )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.cast (  ) , overridingVisibility.name (  )  )  ) ;^391^392^393^^^388^394^[REPLACE] JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( overridingVisibility != Visibility.INHERITED ) {^388^389^^^^338^430^[REPLACE] } else if  ( overridingVisibility != Visibility.INHERITED && overridingVisibility != visibility )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, overridingVisibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^390^391^392^393^^388^394^[REPLACE] compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^390^391^392^^^388^394^[ADD] compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) ,^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^396^^^^^338^430^[REPLACE] if  ( sameInput )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^396^397^398^399^^338^430^[ADD] if  ( sameInput )  {  return; } else if  ( visibility == Visibility.PRIVATE &&^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^399^400^^^^338^430^[REPLACE] } else if  ( visibility == Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^414^^^^^338^430^[REPLACE] } else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != null || !currentClass.isSubtype ( ownerType )  )  {^420^^^^^338^430^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , getprop , VISIBILITY_MISMATCH , propertyName )  ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^338^430^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^421^422^423^^^338^430^[ADD] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName,^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , false )  )  ) ;^422^423^424^425^^338^430^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^422^423^424^^^338^430^[ADD] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( getprop.getLastChild (  ) , false )  )  ) ;^424^425^^^^338^430^[REPLACE] validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^getprop.getLastChild (  ) , true )  )  ) ;^425^^^^^338^430^[REPLACE] getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  !currentClass.isSubtype ( ownerType )  )  {^420^^^^^338^430^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler .getTypeValidator (  )  ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^338^430^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop .getLastChild (  )  , false )  )  ) ;^422^423^424^425^^338^430^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo.isConstructor (  )  || isValidPrivateConstructorAccess ( parent )  )  {^401^402^^^^338^430^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != false || !currentClass.isSubtype ( ownerType )  )  {^420^^^^^338^430^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^420^421^422^423^424^338^430^[ADD] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  { compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , false )  )  ) ;^424^425^^^^338^430^[REPLACE] validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^getprop .getLastChild (  )  , true )  )  ) ;^425^^^^^338^430^[REPLACE] getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^403^^^^^338^430^[REPLACE] return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^398^^^^^338^430^[REPLACE] return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( visibility  &&  Visibility.PROTECTED )  {^414^^^^^338^430^[REPLACE] } else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^424^425^^^^338^430^[ADD] validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^425^^^^^338^430^[ADD] getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( overridingInfo.isConstructor (  )  || isValidPrivateConstructorAccess ( parent )  )  {^401^402^^^^399^427^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError .make ( t , parent , BAD_PROTECTED_PROPERTY_ACCESS , propertyName )   )  ) ;^422^423^424^425^^338^430^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^getClassOfMethod ( scopeRoot, scopeRootParent )  )  != null ) ;^425^^^^^338^430^[REMOVE] ^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != false ) {^420^^^^^338^430^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , getprop , PRIVATE_OVERRIDE , propertyName )  ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^338^430^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^for  ( ; objectType == null;^356^^^^^338^430^[REPLACE] for  ( ; objectType != null;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  docInfo.getVisibility (  )  != Visibility.INHERITED )  {^359^360^^^^356^363^[REPLACE] if  ( docInfo != null && docInfo.getVisibility (  )  != Visibility.INHERITED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^docInfo =  null.getOwnPropertyJSDocInfo ( propertyName ) ;^358^^^^^356^363^[REPLACE] docInfo = objectType.getOwnPropertyJSDocInfo ( propertyName ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^objectType = objectType.getImplicitPrototype (  ) ; ;^357^^^^^338^430^[REPLACE] objectType = objectType.getImplicitPrototype (  )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^docInfo =  null.getOwnPropertyJSDocInfo ( propertyName ) ;^358^^^^^338^430^[REPLACE] docInfo = objectType.getOwnPropertyJSDocInfo ( propertyName ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^boolean isOverride = t.inGlobalScope (  )  || parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == getprop;^346^347^348^^^338^430^[REPLACE] boolean isOverride = t.inGlobalScope (  )  && parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == getprop;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSDocInfo docInfo = false;^355^^^^^338^430^[REPLACE] JSDocInfo docInfo = null;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^boolean sameInput = t.getInput (  )  .getVar (  )  .equals ( docInfo.getSourceName (  )  ) ;^370^371^^^^338^430^[REPLACE] boolean sameInput = t.getInput (  ) .getName (  ) .equals ( docInfo.getSourceName (  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Visibility visibility = overridingInfo.getSourceName (  ) ;^372^^^^^338^430^[REPLACE] Visibility visibility = docInfo.getVisibility (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^ObjectType objType = ObjectType.cast ( type ) ;^373^^^^^338^430^[REPLACE] JSType ownerType = normalizeClassType ( objectType ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node lValue = parent.getFirstChild (  ) ;^377^^^^^338^430^[REPLACE] JSDocInfo overridingInfo = parent.getJSDocInfo (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( objectType != this  )  {^365^^^^^338^430^[REPLACE] if  ( objectType == null )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( true )  {^374^^^^^338^430^[REPLACE] if  ( isOverride )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info != null && info.isDeprecated (  )  )  {^396^^^^^374^428^[REPLACE] if  ( sameInput )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^396^397^398^399^^374^428^[ADD] if  ( sameInput )  {  return; } else if  ( visibility == Visibility.PRIVATE &&^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  if  ( visibility != Visibility.PRIVATE && ( currentClass == true || ownerType.differsFrom ( currentClass )  )  )  {^399^400^^^^374^428^[REPLACE] } else if  ( visibility == Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^} else if  ( visibility  &&  Visibility.PROTECTED )  {^414^^^^^374^428^[REPLACE] } else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , parent , DEPRECATED_CLASS_REASON , propertyName )  ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^374^428^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError .make ( t , getprop , DEPRECATED_PROP , propertyName )   )  ) ;^422^423^424^425^^374^428^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^getClassOfMethod ( scopeRoot, scopeRootParent )  )  != null ) ;^425^^^^^374^428^[REMOVE] ^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^399^400^^^^374^428^[REPLACE] } else if  ( visibility == Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , getprop , DEPRECATED_CLASS_REASON , propertyName )  ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^374^428^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != true || !currentClass.isSubtype ( ownerType )  )  {^420^^^^^374^428^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^if  ( isDeprecatedFunction ( n, parent )  )  {      ( deprecatedDepth ) ++; }^401^^^^^399^427^[REMOVE] ^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != this ) {^420^^^^^374^428^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^} else if  ( overridingVisibility != Visibility.INHERITED || overridingVisibility != visibility )  {^388^389^^^^338^430^[REPLACE] } else if  ( overridingVisibility != Visibility.INHERITED && overridingVisibility != visibility )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError .make ( t , parent , DEPRECATED_NAME_REASON )  , overridingVisibility.name (  )  )  ) ;^391^392^393^^^388^394^[REPLACE] JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^393^^^^^388^394^[ADD] overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.cast (  )  )  ) ;^385^386^387^^^338^430^[REPLACE] compiler.report ( JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^objectType .getJSDocInfo (  )   )  ) ;^387^^^^^338^430^[REPLACE] objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^}  else {^388^389^^^^338^430^[REPLACE] } else if  ( overridingVisibility != Visibility.INHERITED && overridingVisibility != visibility )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , parent , BAD_PRIVATE_GLOBAL_ACCESS )  , overridingVisibility.name (  )  )  ) ;^390^391^392^393^^388^394^[REPLACE] compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , visibility.name (  )  )  ) ;^391^392^393^^^388^394^[REPLACE] JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Visibility overridingVisibility  =  Visibility.INHERITED ;^378^379^^^^338^430^[REPLACE] Visibility overridingVisibility = overridingInfo == null ? Visibility.INHERITED : overridingInfo.getVisibility (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , getprop , BAD_PRIVATE_GLOBAL_ACCESS )  , overridingVisibility.name (  )  )  ) ;^390^391^392^393^^388^394^[REPLACE] compiler.report ( JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType .getJSDocInfo (  )  , overridingVisibility.name (  )  )  ) ;^391^392^393^^^388^394^[REPLACE] JSError.make ( t, getprop, VISIBILITY_MISMATCH, visibility.name (  ) , objectType.toString (  ) , overridingVisibility.name (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType .getJSDocInfo (  )   )  ) ;^386^387^^^^338^430^[REPLACE] JSError.make ( t, getprop, PRIVATE_OVERRIDE, objectType.toString (  )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REMOVE]^getClassOfMethod ( scopeRoot, scopeRootParent )  )  != null ) ;^387^^^^^338^430^[REMOVE] ^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != null ) {^420^^^^^338^430^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  isValidPrivateConstructorAccess ( parent )  )  {^401^402^^^^338^430^[REPLACE] if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^} else if  ( visibility  !=  Visibility.PROTECTED )  {^414^^^^^338^430^[REPLACE] } else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( currentClass != null || !currentClass.differsFrom ( type )  )  {^420^^^^^338^430^[REPLACE] if  ( currentClass == null || !currentClass.isSubtype ( ownerType )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getLastChild (  ) , false )  )  ) ;^422^423^424^425^^338^430^[REPLACE] JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName ( getprop.getFirstChild (  ) , true )  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^} else if  ( visibility != Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  {^399^400^^^^338^430^[REPLACE] } else if  ( visibility == Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^}   return;^399^400^401^402^403^338^430^[ADD] else if  ( visibility == Visibility.PRIVATE && ( currentClass == null || ownerType.differsFrom ( currentClass )  )  )  { if  ( docInfo.isConstructor (  )  && isValidPrivateConstructorAccess ( parent )  )  { return;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^}^414^415^^^^338^430^[ADD] else if  ( visibility == Visibility.PROTECTED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^compiler.report ( JSError .make ( t , getprop , BAD_PROTECTED_PROPERTY_ACCESS , propertyName )  ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^421^422^423^424^^338^430^[REPLACE] compiler.report ( JSError.make ( t, getprop,  BAD_PROTECTED_PROPERTY_ACCESS, propertyName, validator.getReadableJSTypeName (^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( docInfo == null ) {^359^360^^^^356^363^[REPLACE] if  ( docInfo != null && docInfo.getVisibility (  )  != Visibility.INHERITED )  {^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^358^^^^^356^363^[ADD] docInfo = objectType.getOwnPropertyJSDocInfo ( propertyName ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^357^358^^^^338^430^[ADD] objectType = objectType.getImplicitPrototype (  )  )  { docInfo = objectType.getOwnPropertyJSDocInfo ( propertyName ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^boolean isOverride = t.inGlobalScope (  )  ;^346^347^348^^^338^430^[REPLACE] boolean isOverride = t.inGlobalScope (  )  && parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == getprop;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^355^^^^^338^430^[ADD] JSDocInfo docInfo = null;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^boolean sameInput = t .getScopeRoot (  )  .getName (  ) .equals ( docInfo.getSourceName (  )  ) ;^370^371^^^^338^430^[REPLACE] boolean sameInput = t.getInput (  ) .getName (  ) .equals ( docInfo.getSourceName (  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^370^371^^^^338^430^[ADD] boolean sameInput = t.getInput (  ) .getName (  ) .equals ( docInfo.getSourceName (  )  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Visibility overridingVisibility = docInfo != this ? Visibility.INHERITED : overridingInfo.getSourceName (  ) ;^378^379^^^^338^430^[REPLACE] Visibility overridingVisibility = overridingInfo == null ? Visibility.INHERITED : overridingInfo.getVisibility (  ) ;^[METHOD] checkPropertyVisibility [TYPE] void [PARAMETER] NodeTraversal t Node getprop Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType objectType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  isOverride  sameInput  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node getprop  parent  [TYPE]  Visibility overridingVisibility  visibility  [TYPE]  String propertyName  [TYPE]  JSDocInfo docInfo  overridingInfo  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return parent .getJSType (  )   != Token.NEW;^447^^^^^446^448^[REPLACE] return parent.getType (  )  != Token.NEW;^[METHOD] isValidPrivateConstructorAccess [TYPE] boolean [PARAMETER] Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( !t.inGlobalScope (  )  )  {^463^^^^^456^477^[REPLACE] if  ( t.inGlobalScope (  )  )  {^[METHOD] shouldEmitDeprecationWarning [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  (  ( parent.getType (  )  == Token.CALL && parent .getLastChild (  )   == n )  || n.getType (  )  == Token.NEW )  )  {^464^465^^^^456^477^[REPLACE] if  ( ! (  ( parent.getType (  )  == Token.CALL && parent.getFirstChild (  )  == n )  || n.getType (  )  == Token.NEW )  )  {^[METHOD] shouldEmitDeprecationWarning [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return true;^466^^^^^456^477^[REPLACE] return false;^[METHOD] shouldEmitDeprecationWarning [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  n.getType (  )  == Token.NEW )  )  {^464^465^^^^456^477^[REPLACE] if  ( ! (  ( parent.getType (  )  == Token.CALL && parent.getFirstChild (  )  == n )  || n.getType (  )  == Token.NEW )  )  {^[METHOD] shouldEmitDeprecationWarning [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  (  n == parent.getFirstChild (  )  || NodeUtil.isAssignmentOp ( parent )  )  {^471^472^^^^456^477^[REPLACE] if  ( n.getType (  )  == Token.GETPROP && n == parent.getFirstChild (  )  && NodeUtil.isAssignmentOp ( parent )  )  {^[METHOD] shouldEmitDeprecationWarning [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return true;^473^^^^^456^477^[REPLACE] return false;^[METHOD] shouldEmitDeprecationWarning [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  (  ( FunctionType )  type ) .getInstanceType (  ) ;^476^^^^^456^477^[REPLACE] return !canAccessDeprecatedTypes ( t ) ;^[METHOD] shouldEmitDeprecationWarning [TYPE] boolean [PARAMETER] NodeTraversal t Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node scopeRoot = t.getScope (  ) ;^490^^^^^489^501^[REPLACE] Node scopeRoot = t.getScopeRoot (  ) ;^[METHOD] canAccessDeprecatedTypes [TYPE] boolean [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node scopeRoot  scopeRootParent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^Node scopeRootParentParent = scopeRoot.getString (  ) ;^491^^^^^489^501^[REPLACE] Node scopeRootParent = scopeRoot.getParent (  ) ;^[METHOD] canAccessDeprecatedTypes [TYPE] boolean [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node scopeRoot  scopeRootParent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return  ( deprecatedDepth ;^492^493^494^495^^489^501^[REPLACE] return  ( deprecatedDepth > 0 )  ||^[METHOD] canAccessDeprecatedTypes [TYPE] boolean [PARAMETER] NodeTraversal t [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node scopeRoot  scopeRootParent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( n.getType (  )   !=  Token.FUNCTION )  {^507^^^^^506^515^[REPLACE] if  ( n.getType (  )  == Token.FUNCTION )  {^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^JSType type = n.getJSType (  ) ;return getTypeDeprecationInfo ( type )  != null;^507^508^509^510^511^506^515^[ADD] if  ( n.getType (  )  == Token.FUNCTION )  { JSType type = n.getJSType (  ) ; if  ( type != null )  { return getTypeDeprecationInfo ( type )  != null; }^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( type == null )  {^509^^^^^506^515^[REPLACE] if  ( type != null )  {^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return getTypeDeprecationInfo ( type )  ;^510^^^^^506^515^[REPLACE] return getTypeDeprecationInfo ( type )  != null;^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSType type = n.getType (  ) ;^508^^^^^506^515^[REPLACE] JSType type = n.getJSType (  ) ;^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return false ;^510^^^^^506^515^[REPLACE] return getTypeDeprecationInfo ( type )  != null;^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSType type = parent .getType (  )  ;^508^^^^^506^515^[REPLACE] JSType type = n.getJSType (  ) ;^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return true;^514^^^^^506^515^[REPLACE] return false;^[METHOD] isDeprecatedFunction [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  Node n  parent  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( type != null )  {^523^^^^^522^542^[REPLACE] if  ( type == null )  {^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^return null;^523^524^525^^^522^542^[ADD] if  ( type == null )  { return null; }^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return this;^524^^^^^522^542^[REPLACE] return null;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return true;^524^^^^^522^542^[REPLACE] return null;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSDocInfo info = ownerType.toString (  ) ;^527^^^^^522^542^[REPLACE] JSDocInfo info = type.getJSDocInfo (  ) ;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info == true && info.isDeprecated (  )  )  {^528^^^^^522^542^[REPLACE] if  ( info != null && info.isDeprecated (  )  )  {^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^528^529^530^531^^522^542^[ADD] if  ( info != null && info.isDeprecated (  )  )  { if  ( info.getDeprecationReason (  )  != null )  { return info.getDeprecationReason (  ) ; }^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info.getDeprecationReason (  )  == null )  {^529^^^^^522^542^[REPLACE] if  ( info.getDeprecationReason (  )  != null )  {^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return info.isDeprecated (  ) ;^530^^^^^522^542^[REPLACE] return info.getDeprecationReason (  ) ;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return info .isDeprecated (  )  ;^530^^^^^522^542^[REPLACE] return info.getDeprecationReason (  ) ;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^532^^^^^522^542^[REPLACE] return "";^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info .isDeprecated (  )   == true )  {^529^^^^^522^542^[REPLACE] if  ( info.getDeprecationReason (  )  != null )  {^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^529^530^531^^^522^542^[ADD] if  ( info.getDeprecationReason (  )  != null )  { return info.getDeprecationReason (  ) ; }^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^ObjectType objType = ObjectType.cast ( ownerType ) ;^534^^^^^522^542^[REPLACE] ObjectType objType = ObjectType.cast ( type ) ;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( objType == null )  {^535^^^^^522^542^[REPLACE] if  ( objType != null )  {^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( implicitProto == null )  {^537^^^^^522^542^[REPLACE] if  ( implicitProto != null )  {^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return getTypeDeprecationInfo ( objType ) ;^538^^^^^522^542^[REPLACE] return getTypeDeprecationInfo ( implicitProto ) ;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^ObjectType implicitProto = implicitProto.getImplicitPrototype (  ) ;^536^^^^^522^542^[REPLACE] ObjectType implicitProto = objType.getImplicitPrototype (  ) ;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^536^^^^^522^542^[ADD] ObjectType implicitProto = objType.getImplicitPrototype (  ) ;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( objType == null )  {^537^^^^^522^542^[REPLACE] if  ( implicitProto != null )  {^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return false;^541^^^^^522^542^[REPLACE] return null;^[METHOD] getTypeDeprecationInfo [TYPE] String [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  objType  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^JSDocInfo info = implicitProto.getOwnPropertyJSDocInfo ( prop ) ;^551^^^^^549^564^[REPLACE] JSDocInfo info = type.getOwnPropertyJSDocInfo ( prop ) ;^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^^551^^^^^549^564^[ADD] JSDocInfo info = type.getOwnPropertyJSDocInfo ( prop ) ;^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info == null && info.isDeprecated (  )  )  {^552^^^^^549^564^[REPLACE] if  ( info != null && info.isDeprecated (  )  )  {^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( info.getDeprecationReason (  )  == null )  {^553^^^^^549^564^[REPLACE] if  ( info.getDeprecationReason (  )  != null )  {^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[ADD]^return info.getDeprecationReason (  ) ;^553^554^555^^^549^564^[ADD] if  ( info.getDeprecationReason (  )  != null )  { return info.getDeprecationReason (  ) ; }^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return info .isDeprecated (  )  ;^554^^^^^549^564^[REPLACE] return info.getDeprecationReason (  ) ;^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return^557^^^^^549^564^[REPLACE] return "";^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return info.isDeprecated (  ) ;^554^^^^^549^564^[REPLACE] return info.getDeprecationReason (  ) ;^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^ObjectType implicitProto = implicitProto.getImplicitPrototype (  ) ;^559^^^^^549^564^[REPLACE] ObjectType implicitProto = type.getImplicitPrototype (  ) ;^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^if  ( implicitProto == null )  {^560^^^^^549^564^[REPLACE] if  ( implicitProto != null )  {^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return getPropertyDeprecationInfo ( type, prop ) ;^561^^^^^549^564^[REPLACE] return getPropertyDeprecationInfo ( implicitProto, prop ) ;^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return false;^563^^^^^549^564^[REPLACE] return null;^[METHOD] getPropertyDeprecationInfo [TYPE] String [PARAMETER] ObjectType type String prop [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  ObjectType implicitProto  type  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  String prop  [TYPE]  JSDocInfo info  [TYPE]  int deprecatedDepth  methodDepth 
[REPLACE]^return ownerType == null ? null : type .dereference ( ownerType )  ;^570^^^^^569^571^[REPLACE] return type == null ? null : type.dereference (  ) ;^[METHOD] dereference [TYPE] JSType [PARAMETER] JSType type [CLASS] CheckAccessControls   [TYPE]  TypeValidator validator  [TYPE]  AbstractCompiler compiler  [TYPE]  JSType currentClass  lValueType  ownerType  type  [TYPE]  boolean false  true  [TYPE]  DiagnosticType BAD_PRIVATE_GLOBAL_ACCESS  BAD_PRIVATE_PROPERTY_ACCESS  BAD_PROTECTED_PROPERTY_ACCESS  DEPRECATED_CLASS  DEPRECATED_CLASS_REASON  DEPRECATED_NAME  DEPRECATED_NAME_REASON  DEPRECATED_PROP  DEPRECATED_PROP_REASON  PRIVATE_OVERRIDE  VISIBILITY_MISMATCH  [TYPE]  int deprecatedDepth  methodDepth 
