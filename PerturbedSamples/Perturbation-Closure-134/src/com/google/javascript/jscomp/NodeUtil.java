[REPLACE]^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  = null ;^49^50^51^52^^49^56^[REPLACE] private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS = new HashSet<String> ( Arrays.asList ( "Array", "Date",^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^public static final String CONSTANT_MARKER  = null ;^58^^^^^^^[REPLACE] public static final String CONSTANT_MARKER = "$$constant";^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^final Map<String, Node> vars ;^1633^^^^^^^[REPLACE] final Map<String, Node> vars = Maps.newLinkedHashMap (  ) ;^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^final  boolean  name;^1731^^^^^^^[REPLACE] final String name;^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^int type;^1747^^^^^^^[REPLACE] final int type;^ [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  
[REPLACE]^this.name =  CONSTANT_MARKER;^1734^^^^^1733^1735^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^this.type =  null;^1750^^^^^1749^1751^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] NodeUtil$MatchNodeType(int) [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^if  (  "NaN".equals ( name )  )  {^84^85^^^^69^101^[REPLACE] if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^}  if  ( "Infinity".indexOf ( CONSTANT_MARKER )  )  {^89^^^^^69^101^[REPLACE] } else if  ( "Infinity".equals ( name )  )  {^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^90^^^^^69^101^[REPLACE] return true;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^88^^^^^84^91^[REPLACE] return false;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^} else if  ( "Infinity".indexOf ( name )  )  {^89^^^^^69^101^[REPLACE] } else if  ( "Infinity".equals ( name )  )  {^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newString (  ) .length (  )  > 0;^72^^^^^69^101^[REPLACE] return n.getString (  ) .length (  )  > 0;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )   ;^75^^^^^69^101^[REPLACE] return n.getDouble (  )  != 0;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^80^^^^^69^101^[REPLACE] return false;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^88^^^^^69^101^[REPLACE] return false;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^98^^^^^69^101^[REPLACE] return true;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^String name = n.newString (  ) ;^83^^^^^69^101^[REPLACE] String name = n.getString (  ) ;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return ;^100^^^^^69^101^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getBooleanValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^if  ( longValue  ||  value )  {^121^^^^^109^136^[REPLACE] if  ( longValue == value )  {^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[ADD]^return Long.toString ( longValue ) ;return Double.toString ( n.getDouble (  )  ) ;^121^122^123^124^125^109^136^[ADD] if  ( longValue == value )  { return Long.toString ( longValue ) ; } else { return Double.toString ( n.getDouble (  )  ) ; }^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return Double.toString ( n.getType (  )  ) ;^124^^^^^121^125^[REPLACE] return Double.toString ( n.getDouble (  )  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return   longValue   ;^122^^^^^109^136^[REPLACE] return Long.toString ( longValue ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return parent.getString (  ) ;^114^^^^^109^136^[REPLACE] return n.getString (  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return Double.toString ( n .getType (  )   ) ;^124^^^^^109^136^[REPLACE] return Double.toString ( n.getDouble (  )  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return Node.tokenToName ( n.getNext (  )  ) ;^130^^^^^109^136^[REPLACE] return Node.tokenToName ( n.getType (  )  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return !isFunctionAnonymous ( n ) ;^133^^^^^109^136^[REPLACE] return "undefined";^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^double value = n.getType (  ) ;^117^^^^^109^136^[REPLACE] double value = n.getDouble (  ) ;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[ADD]^long longValue =  ( long )  value;^117^118^^^^109^136^[ADD] double value = n.getDouble (  ) ; long longValue =  ( long )  value;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^int len = s.length (  ) ;^118^^^^^109^136^[REPLACE] long longValue =  ( long )  value;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^return this;^135^^^^^109^136^[REPLACE] return null;^[METHOD] getStringValue [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  Node n  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  long longValue 
[REPLACE]^String parentame = n.getFirstChild (  ) .getString (  ) ;^155^^^^^154^171^[REPLACE] String name = n.getFirstChild (  ) .getString (  ) ;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.newString (  ) ;^160^^^^^154^171^[REPLACE] return parent.getString (  ) ;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.getFirstChild (  )  .getParent (  )  ;^165^^^^^154^171^[REPLACE] return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return name ! =  name ;^169^^^^^154^171^[REPLACE] return name != null && name.length (  )  != 0 ? name : null;^[METHOD] getFunctionName [TYPE] String [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return false;^184^^^^^176^197^[REPLACE] return true;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return isImmutableValue ( n.getLastChild (  )  ) ;^186^^^^^176^197^[REPLACE] return isImmutableValue ( n.getFirstChild (  )  ) ;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return "undefined".indexOf ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^[REPLACE] return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^String name = n .newString (  )  ;^188^^^^^176^197^[REPLACE] String name = n.getString (  ) ;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^196^^^^^176^197^[REPLACE] return false;^[METHOD] isImmutableValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^if  ( isLiteralValue ( child )  )  {^214^^^^^205^223^[REPLACE] if  ( !isLiteralValue ( child )  )  {^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[ADD]^return false;^214^215^216^^^205^223^[ADD] if  ( !isLiteralValue ( child )  )  { return false; }^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^return true;^215^^^^^205^223^[REPLACE] return false;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^for  ( Node child = n.getFirstChild (  ) ; child == null;^212^^^^^205^223^[REPLACE] for  ( Node child = n.getFirstChild (  ) ; child != null;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[ADD]^^214^215^216^^^205^223^[ADD] if  ( !isLiteralValue ( child )  )  { return false; }^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^child =  null.getNext (  )  )  {^213^^^^^205^223^[REPLACE] child = child.getNext (  )  )  {^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[ADD]^^213^214^215^^^205^223^[ADD] child = child.getNext (  )  )  { if  ( !isLiteralValue ( child )  )  { return false;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^return false;^218^^^^^205^223^[REPLACE] return true;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^return !isFunctionAnonymous ( n ) ;^221^^^^^205^223^[REPLACE] return isImmutableValue ( n ) ;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^for  ( Node child = n.getLastChild (  ) ; child != null;^212^^^^^205^223^[REPLACE] for  ( Node child = n.getFirstChild (  ) ; child != null;^[METHOD] isLiteralValue [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  n 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^251^^^^^231^256^[REPLACE] if  ( val.isQualifiedName (  )  )  {^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[ADD]^return defines.contains ( val.getQualifiedName (  )  ) ;^251^252^253^^^231^256^[ADD] if  ( val.isQualifiedName (  )  )  { return defines.contains ( val.getQualifiedName (  )  ) ; }^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return null.contains ( val.getQualifiedName (  )  ) ;^252^^^^^231^256^[REPLACE] return defines.contains ( val.getQualifiedName (  )  ) ;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return false;^237^^^^^231^256^[REPLACE] return true;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return isValidDefineValue ( val.getLastChild (  ) , defines ) ;^246^^^^^231^256^[REPLACE] return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return defines.contains ( val .getParent (  )   ) ;^252^^^^^231^256^[REPLACE] return defines.contains ( val.getQualifiedName (  )  ) ;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^return true;^255^^^^^231^256^[REPLACE] return false;^[METHOD] isValidDefineValue [TYPE] boolean [PARAMETER] Node val String> defines [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node val 
[REPLACE]^if  ( block.getType (  )   ==  Token.BLOCK )  {^264^^^^^263^274^[REPLACE] if  ( block.getType (  )  != Token.BLOCK )  {^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^return true;^265^^^^^263^274^[REPLACE] return false;^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^if  ( n.newNumber (  )   ==  Token.EMPTY )  {^269^^^^^263^274^[REPLACE] if  ( n.getType (  )  != Token.EMPTY )  {^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REMOVE]^if  (  ( block.getType (  )  )  !=  ( BLOCK )  )  {     return false; }^269^^^^^263^274^[REMOVE] ^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^return true;^270^^^^^263^274^[REPLACE] return false;^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^for  ( Node n = block.getFirstChild (  ) ; n == null; n = n.getNext (  )  )  {^268^^^^^263^274^[REPLACE] for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[ADD]^^268^269^270^271^^263^274^[ADD] for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  { if  ( n.getType (  )  != Token.EMPTY )  { return false; }^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^if  ( n.getType (  )   ==  Token.EMPTY )  {^269^^^^^263^274^[REPLACE] if  ( n.getType (  )  != Token.EMPTY )  {^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[ADD]^return false;^269^270^271^^^263^274^[ADD] if  ( n.getType (  )  != Token.EMPTY )  { return false; }^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^for  ( Node n =  block.getFirstChild (  ) ; null !^268^^^^^263^274^[REPLACE] for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^for  ( Node n = block.getLastChild (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^[REPLACE] for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^return false;^273^^^^^263^274^[REPLACE] return true;^[METHOD] isEmptyBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  n 
[REPLACE]^return false;^312^^^^^281^317^[REPLACE] return true;^[METHOD] isSimpleOperatorType [TYPE] boolean [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return true;^315^^^^^281^317^[REPLACE] return false;^[METHOD] isSimpleOperatorType [TYPE] boolean [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return !isFunctionAnonymous ( n ) ;^326^^^^^325^327^[REPLACE] return new Node ( Token.EXPR_RESULT, child ) ;^[METHOD] newExpr [TYPE] Node [PARAMETER] Node child [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child 
[REPLACE]^return checkForStateChangeHelper ( n, false ) ;^336^^^^^335^337^[REPLACE] return checkForStateChangeHelper ( n, true ) ;^[METHOD] mayEffectMutableState [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return checkForStateChangeHelper ( n, true ) ;^343^^^^^342^344^[REPLACE] return checkForStateChangeHelper ( n, false ) ;^[METHOD] mayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^if  ( true )  {^384^^^^^353^478^[REPLACE] if  ( checkForNewObjects )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REMOVE]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^384^^^^^353^478^[REMOVE] ^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^385^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( n.getFirstChild (  )  == null ) return true;^391^392^^^^353^478^[REPLACE] if  ( n.getFirstChild (  )  != null ) return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^return true;break;^391^392^^394^^353^478^[ADD] if  ( n.getFirstChild (  )  != null ) return true; break;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^392^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( true )  {^406^^^^^353^478^[REPLACE] if  ( checkForNewObjects )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^407^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( current.isNoSideEffectsCall (  )  )  {^412^^^^^353^478^[REPLACE] if  ( n.isNoSideEffectsCall (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^break;^412^413^414^^^353^478^[ADD] if  ( n.isNoSideEffectsCall (  )  )  { break; }^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( Token.NAME  !=  constructor.getType (  )  )  {^418^^^^^353^478^[REPLACE] if  ( Token.NAME == constructor.getType (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REMOVE]^if  (  (  ( nameNode.getType (  )  )  ==  ( NAME )  )  &&  ( contains ( nameNode.getString (  )  )  )  )  {     return false; }^418^^^^^353^478^[REMOVE] ^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( name )  )  {^420^^^^^353^478^[REPLACE] if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^String className = n.getString (  ) ;^419^^^^^353^478^[REPLACE] String className = constructor.getString (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( current.isNoSideEffectsCall (  )  )  {^435^^^^^353^478^[REPLACE] if  ( n.isNoSideEffectsCall (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^435^436^^438^439^353^478^[ADD] if  ( n.isNoSideEffectsCall (  )  )  {  break; }^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( isSimpleOperatorType ( current.getType (  )  )  ) break;^443^444^^^^353^478^[REPLACE] if  ( isSimpleOperatorType ( n.getType (  )  )  ) break;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^break;^443^444^^446^^353^478^[ADD] if  ( isSimpleOperatorType ( n.getType (  )  )  ) break; if  ( isAssignmentOp ( n )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( NodeUtil.isAssignmentOp ( n )  )  {^446^^^^^353^478^[REPLACE] if  ( isAssignmentOp ( n )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^446^447^^^^353^478^[ADD] if  ( isAssignmentOp ( n )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  (  checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^353^478^[REPLACE] if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^455^^^^^451^456^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^459^^^^^353^478^[REPLACE] for  ( ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^current =  n.getFirstChild (  )  )  { }^462^^^^^353^478^[REPLACE] current = current.getFirstChild (  )  )  { }^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^455^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return ! ( isLiteralValue ( current )  ;^464^465^^^^353^478^[REPLACE] return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^Node current = current.getFirstChild (  ) ;^458^^^^^353^478^[REPLACE] Node current = n.getFirstChild (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  && checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^353^478^[REPLACE] if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^379^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return !isFunctionAnonymous ( current ) ;^402^^^^^353^478^[REPLACE] return !isFunctionAnonymous ( n ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^430^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^440^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return ! ( isLiteralValue ( current )  && current.getType (  )  ;^464^465^^^^353^478^[REPLACE] return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^468^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^Node constructor = current.getFirstChild (  ) ;^417^^^^^353^478^[REPLACE] Node constructor = n.getFirstChild (  ) ;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^if  ( checkForStateChangeHelper ( c, true )  )  {^472^^^^^353^478^[REPLACE] if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return false;^473^^^^^353^478^[REPLACE] return true;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^471^^^^^353^478^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[ADD]^^471^472^473^474^^353^478^[ADD] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  { return true; }^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^for  ( Node c =  n.getFirstChild (  ) ; null !^471^^^^^353^478^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^for  ( Node c = current.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^353^478^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^return true;^477^^^^^353^478^[REPLACE] return false;^[METHOD] checkForStateChangeHelper [TYPE] boolean [PARAMETER] Node n boolean checkForNewObjects [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean checkForNewObjects  false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  constructor  current  n 
[REPLACE]^Preconditions.checkArgument ( callNode .getString (  )    !=  Token.NEW, "Expected NEW node, got " + Token.name ( callNode^486^487^488^^^485^501^[REPLACE] Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( nameNode.getType (  )  )  ) ;^487^488^^^^485^501^[REPLACE] callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^487^488^^^^485^501^[ADD] callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^"Expected NEW node, got " + Token.name ( nameNode.getNext (  )  )  ) ;^488^^^^^485^501^[REPLACE] "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^488^^^^^485^501^[ADD] "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^"Expected NEW node, got " + Token.name ( nameNode .getString (  )   )  ) ;^488^^^^^485^501^[REPLACE] "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( nameNode.isNoSideEffectsCall (  )  )  {^490^^^^^485^501^[REPLACE] if  ( callNode.isNoSideEffectsCall (  )  )  {^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^491^^^^^485^501^[REPLACE] return false;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^Node nameNode = nameNode.getFirstChild (  ) ;^494^^^^^485^501^[REPLACE] Node nameNode = callNode.getFirstChild (  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^494^^^^^485^501^[ADD] Node nameNode = callNode.getFirstChild (  ) ;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  (  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^[REPLACE] if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^497^^^^^485^501^[REPLACE] return false;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;^500^^^^^485^501^[REPLACE] return true;^[METHOD] constructorCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^Preconditions.checkState ( callNode.getType (  )   ||  Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^[REPLACE] Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^callNode.newNumber (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( nameNode.getType (  )  )  ) ;^510^511^^^^508^537^[REPLACE] callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^510^511^^^^508^537^[ADD] callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^"Expected CALL node, got " + Token.name ( nameNode.getNext (  )  )  ) ;^511^^^^^508^537^[REPLACE] "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^"Expected CALL node, got " + Token.name ( nameNode.getType (  )  )  ) ;^511^^^^^508^537^[REPLACE] "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( nameNode.isNoSideEffectsCall (  )  )  {^513^^^^^508^537^[REPLACE] if  ( callNode.isNoSideEffectsCall (  )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^514^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^Node nameNode = nameNode.getLastChild (  ) ;^517^^^^^508^537^[REPLACE] Node nameNode = callNode.getFirstChild (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( nameNode.getType (  )   !=  Token.NAME )  {^520^^^^^508^537^[REPLACE] if  ( nameNode.getType (  )  == Token.NAME )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^520^521^522^523^524^508^537^[ADD] if  ( nameNode.getType (  )  == Token.NAME )  { String name = nameNode.getString (  ) ; if  ( name.equals ( "String" )  )  { return false; }^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( name.indexOf ( "String" )  )  {^522^^^^^508^537^[REPLACE] if  ( name.equals ( "String" )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^523^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String name = nameNode.newString (  ) ;^521^^^^^508^537^[REPLACE] String name = nameNode.getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( namespaceName.equals ( "String" )  )  {^522^^^^^508^537^[REPLACE] if  ( name.equals ( "String" )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String name = callNode.getString (  ) ;^521^^^^^508^537^[REPLACE] String name = nameNode.getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  (  nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^[REPLACE] if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^528^529^530^531^532^508^537^[ADD] if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ; if  ( namespaceName.equals ( "Math" )  )  { return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( name.equals ( "Math" )  )  {^531^^^^^528^534^[REPLACE] if  ( namespaceName.equals ( "Math" )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^return false;^531^532^533^^^528^534^[ADD] if  ( namespaceName.equals ( "Math" )  )  { return false; }^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^532^^^^^528^534^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String namespaceName = callNode.getLastChild (  ) .getString (  ) ;^530^^^^^528^534^[REPLACE] String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( namespaceName.indexOf ( "Math" )  )  {^531^^^^^508^537^[REPLACE] if  ( namespaceName.equals ( "Math" )  )  {^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[ADD]^^531^532^533^^^508^537^[ADD] if  ( namespaceName.equals ( "Math" )  )  { return false; }^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return true;^532^^^^^508^537^[REPLACE] return false;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^String namespaceName = callNode.getFirstChild (  ) .equals (  ) ;^530^^^^^508^537^[REPLACE] String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^return false;^536^^^^^508^537^[REPLACE] return true;^[METHOD] functionCallHasSideEffects [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  nameNode 
[REPLACE]^if  ( NodeUtil.isAssign ( n )  )  {^547^^^^^546^565^[REPLACE] if  ( NodeUtil.isAssignmentOp ( n )  )  {^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[ADD]^return true;^547^548^549^^^546^565^[ADD] if  ( NodeUtil.isAssignmentOp ( n )  )  { return true; }^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^548^^^^^546^565^[REPLACE] return true;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^558^^^^^546^565^[REPLACE] return true;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.detachChildren (  ) ;^561^^^^^546^565^[REPLACE] return n.hasChildren (  ) ;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^563^^^^^546^565^[REPLACE] return false;^[METHOD] nodeTypeMayHaveSideEffects [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^String name = nameNode.getString (  ) ;^572^^^^^571^574^[REPLACE] Set<String> emptySet = Collections.emptySet (  ) ;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return canBeSideEffected ( n, 1 ) ;^573^^^^^571^574^[REPLACE] return canBeSideEffected ( n, emptySet ) ;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^589^^^^^582^608^[REPLACE] return true;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return !NodeUtil.isName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^[REPLACE] return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return false;^598^^^^^582^608^[REPLACE] return true;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^if  ( canBeSideEffected ( c, true )  )  {^602^^^^^582^608^[REPLACE] if  ( canBeSideEffected ( c, knownConstants )  )  {^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return false;^603^^^^^582^608^[REPLACE] return true;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^601^^^^^582^608^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c =  n.getFirstChild (  ) ; null !^601^^^^^582^608^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^for  ( Node c = n.getLastChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^return true;^607^^^^^582^608^[REPLACE] return false;^[METHOD] canBeSideEffected [TYPE] boolean [PARAMETER] Node n String> knownConstants [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node c  n 
[REPLACE]^case Token.COMMA:  return 4;^629^^^^^627^702^[REPLACE] case Token.COMMA:  return 0;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.ASSIGN: return 3;^641^^^^^627^702^[REPLACE] case Token.ASSIGN: return 1;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.SHNE:   return 8;^642^^^^^627^702^[REPLACE] case Token.HOOK:   return 2;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.OR:     return 3L;^643^^^^^627^702^[REPLACE] case Token.OR:     return 3;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.AND:    return 4 << 1;^644^^^^^627^702^[REPLACE] case Token.AND:    return 4;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.BITOR:  return 5L;^645^^^^^627^702^[REPLACE] case Token.BITOR:  return 5;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.BITXOR: return 6L;^646^^^^^627^702^[REPLACE] case Token.BITXOR: return 6;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.BITAND: return 5;^647^^^^^627^702^[REPLACE] case Token.BITAND: return 7;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.AND:    return 4;^651^^^^^627^702^[REPLACE] case Token.SHNE:   return 8;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.IN:     return 4;^657^^^^^627^702^[REPLACE] case Token.IN:     return 9;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.URSH:   return 12;^660^^^^^627^702^[REPLACE] case Token.URSH:   return 10;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.ADD:    return 11L;^662^^^^^627^702^[REPLACE] case Token.ADD:    return 11;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.DIV:    return 10;^665^^^^^627^702^[REPLACE] case Token.DIV:    return 12;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^case Token.NEG:    return 13L;^675^^^^^627^702^[REPLACE] case Token.NEG:    return 13;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return 15L;^696^^^^^627^702^[REPLACE] return 15;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + ;^698^699^700^^^627^702^[REPLACE] default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[METHOD] precedence [TYPE] int [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return false;^717^^^^^710^721^[REPLACE] return true;^[METHOD] isAssociative [TYPE] boolean [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return true;^719^^^^^710^721^[REPLACE] return false;^[METHOD] isAssociative [TYPE] boolean [PARAMETER] int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type 
[REPLACE]^return false;^737^^^^^723^740^[REPLACE] return true;^[METHOD] isAssignmentOp [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^739^^^^^723^740^[REPLACE] return false;^[METHOD] isAssignmentOp [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.BITAND;^745^^^^^742^768^[REPLACE] return Token.BITOR;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.BITOR;^747^^^^^742^768^[REPLACE] return Token.BITXOR;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.BITOR;^749^^^^^742^768^[REPLACE] return Token.BITAND;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.MOD;^751^^^^^742^768^[REPLACE] return Token.LSH;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.MOD;^753^^^^^742^768^[REPLACE] return Token.RSH;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.RSH;^755^^^^^742^768^[REPLACE] return Token.URSH;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.MOD;^757^^^^^742^768^[REPLACE] return Token.ADD;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.MOD;^759^^^^^742^768^[REPLACE] return Token.SUB;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.MOD;^761^^^^^742^768^[REPLACE] return Token.MUL;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.MOD;^763^^^^^742^768^[REPLACE] return Token.DIV;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return Token.SUB;^765^^^^^742^768^[REPLACE] return Token.MOD;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return ;^767^^^^^742^768^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getOpFromAssignmentOp [TYPE] int [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )  == Token.EXPR_RESULT;^771^^^^^770^772^[REPLACE] return n.getType (  )  == Token.EXPR_RESULT;^[METHOD] isExpressionNode [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return containsType ( n, Token.CALL ) ;^778^^^^^777^779^[REPLACE] return containsType ( n, Token.FUNCTION ) ;^[METHOD] containsFunctionDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return containsType ( n, Token.FUNCTION ) ;^785^^^^^784^786^[REPLACE] return containsType ( n, Token.THIS ) ;^[METHOD] referencesThis [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^[REPLACE] return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[METHOD] isGet [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n .getString (  )    !=  Token.GETPROP;;^800^^^^^799^801^[REPLACE] return n.getType (  )  == Token.GETPROP;^[METHOD] isGetProp [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )  == Token.NAME;^807^^^^^806^808^[REPLACE] return n.getType (  )  == Token.NAME;^[METHOD] isName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )  == Token.NEW;^814^^^^^813^815^[REPLACE] return n.getType (  )  == Token.NEW;^[METHOD] isNew [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n .getString (  )   == Token.VAR;^821^^^^^820^822^[REPLACE] return n.getType (  )  == Token.VAR;^[METHOD] isVar [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getType (  )  == Token.NAME && n.getString (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^[REPLACE] return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[METHOD] isVarDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkState ( isName ( parent )  ) ;^841^^^^^840^850^[REPLACE] Preconditions.checkState ( isName ( n )  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[ADD]^Node parent = n.getParent (  ) ;^841^842^^^^840^850^[ADD] Preconditions.checkState ( isName ( n )  ) ; Node parent = n.getParent (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^Node parent = n .getString (  )  ;^842^^^^^840^850^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[ADD]^^842^^^^^840^850^[ADD] Node parent = n.getParent (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^843^^^^^840^850^[REPLACE] if  ( isVar ( parent )  )  {^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^}  if  ( isAssign ( parent )  || parent.getFirstChild (  )  == n )  {^845^^^^^840^850^[REPLACE] } else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[ADD]^}   return n.getNext (  ) ;return null;^845^846^847^848^849^840^850^[ADD] else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  { return n.getNext (  ) ; } else { return null; }^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return false;^848^^^^^840^850^[REPLACE] return null;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent .getParent (  )  ;^846^^^^^840^850^[REPLACE] return n.getNext (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n .getParent (  )  ;^846^^^^^840^850^[REPLACE] return n.getNext (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.getLastChild (  ) ;^844^^^^^840^850^[REPLACE] return n.getFirstChild (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^}  else {^845^^^^^840^850^[REPLACE] } else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.getParent (  ) ;^846^^^^^840^850^[REPLACE] return n.getNext (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n .getLastChild (  )  ;^844^^^^^840^850^[REPLACE] return n.getFirstChild (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.getParent (  ) ;^846^^^^^840^850^[REPLACE] return n.getNext (  ) ;^[METHOD] getAssignedValue [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.newNumber (  )  == Token.STRING;^856^^^^^855^857^[REPLACE] return n.getType (  )  == Token.STRING;^[METHOD] isString [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getType (  )  == Token.EXPR_RESULT && n.getLastChild (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^[REPLACE] return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[METHOD] isExprAssign [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n .getString (  )   == Token.ASSIGN;^875^^^^^874^876^[REPLACE] return n.getType (  )  == Token.ASSIGN;^[METHOD] isAssign [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^[REPLACE] return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[METHOD] isExprCall [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getType (  )  == Token.FOR && n.newNumber (  )  == 3;^894^895^^^^893^896^[REPLACE] return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[METHOD] isForIn [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^906^^^^^901^910^[REPLACE] return true;^[METHOD] isLoopStructure [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^908^^^^^901^910^[REPLACE] return false;^[METHOD] isLoopStructure [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n .getFirstChild (  )  ;^921^^^^^917^927^[REPLACE] return n.getLastChild (  ) ;^[METHOD] getLoopCodeBlock [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getLastChild (  ) ;^923^^^^^917^927^[REPLACE] return n.getFirstChild (  ) ;^[METHOD] getLoopCodeBlock [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^925^^^^^917^927^[REPLACE] return null;^[METHOD] getLoopCodeBlock [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^945^^^^^932^949^[REPLACE] return true;^[METHOD] isControlStructure [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return true;^947^^^^^932^949^[REPLACE] return false;^[METHOD] isControlStructure [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return parent.newNumber (  )  == n;^961^^^^^955^979^[REPLACE] return parent.getLastChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent .getLastChild (  )    ||  n;^963^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent .getLastChild (  )   != n;^965^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  != n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.getFirstChild (  )  == n || parent .getFirstChild (  )   == n;^967^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.getFirstChild (  )  == n;^969^^^^^955^979^[REPLACE] return parent.getLastChild (  )  == n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.newNumber (  )  != n;^972^^^^^955^979^[REPLACE] return parent.getFirstChild (  )  != n;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return false;^974^^^^^955^979^[REPLACE] return true;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return true;^977^^^^^955^979^[REPLACE] return false;^[METHOD] isControlStructureCodeBlock [TYPE] boolean [PARAMETER] Node parent Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n .getLastChild (  )  ;^990^^^^^986^1005^[REPLACE] return n.getFirstChild (  ) ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getFirstChild (  ) ;^992^^^^^986^1005^[REPLACE] return n.getLastChild (  ) ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return false;^996^^^^^986^1005^[REPLACE] return null;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getFirstChild (  )  .getParent (  )  ;^998^^^^^986^1005^[REPLACE] return n.getFirstChild (  ) .getNext (  ) ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return this;^1002^^^^^986^1005^[REPLACE] return null;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return ;^1000^^^^^986^1005^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[ADD]^^1000^^^^^986^1005^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return ;^1004^^^^^986^1005^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getConditionExpression [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^1011^^^^^1010^1012^[REPLACE] return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[METHOD] isStatementBlock [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^Node parent = parent.getParent (  ) ;^1018^^^^^1017^1032^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] isStatement [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^Preconditions.checkState ( n == null ) ;^1023^^^^^1017^1032^[REPLACE] Preconditions.checkState ( parent != null ) ;^[METHOD] isStatement [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return false;^1028^^^^^1017^1032^[REPLACE] return true;^[METHOD] isStatement [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return true;^1030^^^^^1017^1032^[REPLACE] return false;^[METHOD] isStatement [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return n.newNumber (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^[REPLACE] return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[METHOD] isSwitchCase [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^if  ( n != null && n.getType (  )  != Token.NAME )  {^1041^^^^^1040^1053^[REPLACE] if  ( n != null && n.getType (  )  == Token.NAME )  {^[METHOD] isLabelName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^if  ( n  ||  parent .getLastChild (  )   )  {^1047^^^^^1040^1053^[REPLACE] if  ( n == parent.getFirstChild (  )  )  {^[METHOD] isLabelName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return false;^1048^^^^^1040^1053^[REPLACE] return true;^[METHOD] isLabelName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^Node parent = n.getString (  ) ;^1042^^^^^1040^1053^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] isLabelName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^if  ( n  && parent (  )  )  {^1047^^^^^1040^1053^[REPLACE] if  ( n == parent.getFirstChild (  )  )  {^[METHOD] isLabelName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^Node parent = parent.getParent (  ) ;^1042^^^^^1040^1053^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] isLabelName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return true;^1052^^^^^1040^1053^[REPLACE] return false;^[METHOD] isLabelName [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^return parent.newNumber (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^[REPLACE] return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[METHOD] isTryFinallyNode [TYPE] boolean [PARAMETER] Node parent Node child [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node child  parent 
[REPLACE]^if  (  isSwitchCase ( node ) && isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1062^1098^[REPLACE] if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1064^1065^1066^^1068^1062^1098^[ADD] if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  { parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  else {^1069^^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.VAR )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}   parent.removeChild ( node ) ;^1069^1070^1071^1072^^1062^1098^[ADD] else if  ( parent.getType (  )  == Token.VAR )  { if  ( parent.hasMoreThanOneChild (  )  )  { parent.removeChild ( node ) ; } else {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( node.getType (  )   &&  Token.BLOCK )  {^1078^^^^^1062^1098^[REPLACE] } else if  ( node.getType (  )  == Token.BLOCK )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( parent.getType (  )  == Token.LABEL ) {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}   parent.removeChild ( node ) ;^1082^1083^^1085^^1062^1098^[ADD] else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  { parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^return ;^1095^1096^^^^1088^1097^[REPLACE] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^node.tokenToName (  )  + " of "+ parent.toString (  )  ) ;^1096^^^^^1088^1097^[REPLACE] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^node.toString (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1088^1097^[REPLACE] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.addChildAfter ( node, new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^[REPLACE] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^return ;^1095^1096^^^^1062^1098^[REPLACE] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .removeChild ( parent , node )  ;^1085^^^^^1082^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( node.getString (  ) , parent ) ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( node.getParent (  ) , parent ) ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^return parent.getLastChild (  )  == n;^1096^^^^^1088^1097^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^node.hasChildren (  ) ;^1081^^^^^1062^1098^[REPLACE] node.detachChildren (  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  else {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.newNumber (  )  == Token.FOR ) {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}^1088^1089^^^^1062^1098^[ADD] else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^throw new IllegalStateException ( "Invalid attempt to remove node: " + ;^1095^1096^^^^1088^1097^[REPLACE] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .replaceChild ( parent )  ;^1093^^^^^1088^1097^[REPLACE] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^throw new IllegalStateException ( "Invalid attempt to remove node: " + ;^1095^1096^^^^1062^1098^[REPLACE] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.removeChild ( block ) ;^1085^^^^^1082^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( parent.getString (  ) , parent ) ;^1087^^^^^1082^1097^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  else {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1095^1096^^^^1088^1097^[ADD] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^1093^^^^^1088^1097^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^1070^^^^^1062^1098^[REPLACE] if  ( parent.hasMoreThanOneChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^parent.removeChild ( node ) ;parent.removeChild ( node ) ;^1070^1071^1072^^1074^1062^1098^[ADD] if  ( parent.hasMoreThanOneChild (  )  )  { parent.removeChild ( node ) ; } else { parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .removeChild ( parent , parent )  ;^1074^^^^^1070^1077^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1074^^^^^1070^1077^[ADD] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( node.getParent (  ) , parent ) ;^1076^^^^^1070^1077^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( parent.getString (  ) , parent ) ;^1076^^^^^1070^1077^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .removeChild ( parent , node )  ;^1071^^^^^1062^1098^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^for  ( Node child = n.getFirstChild (  ) ; child != null;^1076^^^^^1070^1077^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  else {^1078^^^^^1062^1098^[REPLACE] } else if  ( node.getType (  )  == Token.BLOCK )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^}   node.detachChildren (  ) ;^1078^1079^^1081^1082^1062^1098^[ADD] else if  ( node.getType (  )  == Token.BLOCK )  {  node.detachChildren (  ) ; } else if  ( parent.getType (  )  == Token.LABEL^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.LABEL || node == parent.getLastChild (  )  )  {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1085^^^^^1082^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^for  ( Node child = n.getFirstChild (  ) ; child != null;^1087^^^^^1082^1097^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1096^^^^^1088^1097^[ADD] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  (  node == parent.getLastChild (  )  )  {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  (  parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^return parent.getLastChild (  )  == n;^1085^^^^^1082^1097^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1087^^^^^1082^1097^[ADD] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .replaceChild ( node )  ;^1093^^^^^1088^1097^[REPLACE] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1095^1096^^^^1062^1098^[ADD] throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1068^^^^^1064^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.LABEL ) {^1082^1083^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^} else if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 4 - 0 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^node.tokenToName (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1088^1097^[REPLACE] node.toString (  )  + " of "+ parent.toString (  )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REMOVE]^return parent.getLastChild (  )  == n;^1081^^^^^1062^1098^[REMOVE] ^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.FOR ) {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1093^^^^^1088^1097^[ADD] parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 2 )  {^1088^1089^^^^1062^1098^[REPLACE] } else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1074^^^^^1070^1077^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^removeChild ( node.getString (  ) , parent ) ;^1076^^^^^1070^1077^[REPLACE] removeChild ( parent.getParent (  ) , parent ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1071^^^^^1062^1098^[ADD] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^if  ( parent.hasOneChild (  )  )  {^1070^^^^^1062^1098^[REPLACE] if  ( parent.hasMoreThanOneChild (  )  )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.removeChild ( block ) ;^1074^^^^^1070^1077^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent.replaceChild ( node ) ;^1071^^^^^1062^1098^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^}  if  ( node.getType (  )   !=  Token.BLOCK )  {^1078^^^^^1062^1098^[REPLACE] } else if  ( node.getType (  )  == Token.BLOCK )  {^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1081^^^^^1062^1098^[ADD] node.detachChildren (  ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^parent .removeChild ( node , parent )  ;^1085^^^^^1082^1097^[REPLACE] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[ADD]^^1085^^^^^1082^1097^[ADD] parent.removeChild ( node ) ;^[METHOD] removeChild [TYPE] void [PARAMETER] Node parent Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node  parent 
[REPLACE]^Preconditions.checkState ( block.getType (  )   &&  Token.BLOCK ) ;^1105^^^^^1104^1124^[REPLACE] Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Preconditions.checkState ( previous.getType (  )  == Token.BLOCK ) ;^1105^^^^^1104^1124^[REPLACE] Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node parent = previous .getString (  )  ;^1106^^^^^1104^1124^[REPLACE] Node parent = block.getParent (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^while  ( block.detachChildren (  )  )  {^1111^^^^^1104^1124^[REPLACE] while  ( block.hasChildren (  )  )  {^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^^1111^1112^^^^1104^1124^[ADD] while  ( block.hasChildren (  )  )  { Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^previous =  null;^1114^^^^^1104^1124^[REPLACE] previous = child;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^^1114^^^^^1104^1124^[ADD] previous = child;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node child = previous .getFirstChild (  )  ;^1112^^^^^1104^1124^[REPLACE] Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^if  ( NodeUtil.isStatement ( previous )  )  {^1109^^^^^1104^1124^[REPLACE] if  ( NodeUtil.isStatementBlock ( parent )  )  {^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^}  if  ( parent.getType (  )  == Token.LABEL ) {^1118^^^^^1104^1124^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^}   parent.replaceChild ( block, block.removeFirstChild (  )  ) ;return true;return false;^1118^1119^1120^1121^1122^1104^1124^[ADD] else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  { parent.replaceChild ( block, block.removeFirstChild (  )  ) ; return true; } else { return false;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return true;^1122^^^^^1104^1124^[REPLACE] return false;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return false;^1120^^^^^1104^1124^[REPLACE] return true;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node child = previous.removeFirstChild (  ) ;^1112^^^^^1104^1124^[REPLACE] Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return false;^1117^^^^^1104^1124^[REPLACE] return true;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node previous = previous;^1110^^^^^1104^1124^[REPLACE] Node previous = block;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^^1110^^^^^1104^1124^[ADD] Node previous = block;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node child = block .getFirstChild (  )  ;^1112^^^^^1104^1124^[REPLACE] Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^^1112^^^^^1104^1124^[ADD] Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^}  if  (  block.hasOneChild (  )  )  {^1118^^^^^1104^1124^[REPLACE] } else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REMOVE]^if  (  ( block.getType (  )  )  !=  ( BLOCK )  )  {     return false; }^1118^^^^^1104^1124^[REMOVE] ^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^Node child = previous.getFirstChild (  ) ;^1112^^^^^1104^1124^[REPLACE] Node child = block.removeFirstChild (  ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[ADD]^^1112^1113^^^^1104^1124^[ADD] Node child = block.removeFirstChild (  ) ; parent.addChildAfter ( child, previous ) ;^[METHOD] tryMergeBlock [TYPE] boolean [PARAMETER] Node block [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node block  child  parent  previous 
[REPLACE]^return node.getType (  )  == Token.THIS;^1130^^^^^1129^1131^[REPLACE] return n.getType (  )  == Token.CALL;^[METHOD] isCall [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )  == Token.FUNCTION;^1137^^^^^1136^1138^[REPLACE] return n.getType (  )  == Token.FUNCTION;^[METHOD] isFunction [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^isFunction ( fn )  ;^1144^^^^^1143^1146^[REPLACE] Preconditions.checkArgument ( isFunction ( fn )  ) ;^[METHOD] getFunctionBody [TYPE] Node [PARAMETER] Node fn [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node fn 
[REPLACE]^Preconditions.checkArgument ( isFunction ( function )  ) ;^1144^^^^^1143^1146^[REPLACE] Preconditions.checkArgument ( isFunction ( fn )  ) ;^[METHOD] getFunctionBody [TYPE] Node [PARAMETER] Node fn [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node fn 
[ADD]^^1144^^^^^1143^1146^[ADD] Preconditions.checkArgument ( isFunction ( fn )  ) ;^[METHOD] getFunctionBody [TYPE] Node [PARAMETER] Node fn [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node fn 
[REPLACE]^return fn.getFirstChild (  ) ;^1145^^^^^1143^1146^[REPLACE] return fn.getLastChild (  ) ;^[METHOD] getFunctionBody [TYPE] Node [PARAMETER] Node fn [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node fn 
[REPLACE]^return node.newNumber (  )  == Token.THIS;^1152^^^^^1151^1153^[REPLACE] return node.getType (  )  == Token.THIS;^[METHOD] isThis [TYPE] boolean [PARAMETER] Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node node 
[REPLACE]^return containsType ( n, Token.FUNCTION ) ;^1159^^^^^1158^1160^[REPLACE] return containsType ( n, Token.CALL ) ;^[METHOD] containsCall [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return n.getType (  )  ;^1168^^^^^1167^1169^[REPLACE] return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[METHOD] isFunctionDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n .getString (  )  .getType (  )  == Token.SCRIPT || n^1177^1178^1179^^^1176^1180^[REPLACE] return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[METHOD] isHoistedFunctionDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return   isFunctionAnonymous ( n ) ;^1189^^^^^1188^1190^[REPLACE] return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[METHOD] isAnonymousFunction [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^return !isFunctionAnonymous ( n ) ;^1216^^^^^1215^1217^[REPLACE] return !isStatement ( n ) ;^[METHOD] isFunctionAnonymous [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkArgument ( isFunction ( fn )  ) ;^1224^^^^^1223^1229^[REPLACE] Preconditions.checkArgument ( isFunction ( function )  ) ;^[METHOD] isVarArgsFunction [TYPE] boolean [PARAMETER] Node function [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node function 
[REPLACE]^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not (  NodeUtil.new Node ( VAR, nodeName )   )  ) ;^1225^1226^1227^1228^^1223^1229^[REPLACE] return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[METHOD] isVarArgsFunction [TYPE] boolean [PARAMETER] Node function [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  name  namespaceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node function 
[REPLACE]^if  ( callNode.getType (  )   !=  Token.CALL )  {^1237^^^^^1236^1248^[REPLACE] if  ( callNode.getType (  )  == Token.CALL )  {^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[ADD]^^1237^1238^1239^1240^^1236^1248^[ADD] if  ( callNode.getType (  )  == Token.CALL )  { Node functionIndentifyingExpression = callNode.getFirstChild (  ) ; if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  { Node last = functionIndentifyingExpression.getLastChild (  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^1239^^^^^1236^1248^[REPLACE] if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[ADD]^Node last = functionIndentifyingExpression.getLastChild (  ) ;String propName = last.getString (  ) ;return  ( propName.equals ( methodName )  ) ;^1239^1240^1241^1242^1243^1236^1248^[ADD] if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  { Node last = functionIndentifyingExpression.getLastChild (  ) ; if  ( last != null && last.getType (  )  == Token.STRING )  { String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^if  ( last != null && last.getType (  )  != Token.STRING )  {^1241^^^^^1236^1248^[REPLACE] if  ( last != null && last.getType (  )  == Token.STRING )  {^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^return  ( propName.indexOf ( methodName )  ) ;^1243^^^^^1236^1248^[REPLACE] return  ( propName.equals ( methodName )  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^String propName = functionIndentifyingExpression.newString (  ) ;^1242^^^^^1236^1248^[REPLACE] String propName = last.getString (  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^Node last = last.getLastChild (  ) ;^1240^^^^^1236^1248^[REPLACE] Node last = functionIndentifyingExpression.getLastChild (  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^String propName = functionIndentifyingExpression.getString (  ) ;^1242^^^^^1236^1248^[REPLACE] String propName = last.getString (  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^if  (  last.getType (  )  != Token.STRING )  {^1241^^^^^1236^1248^[REPLACE] if  ( last != null && last.getType (  )  == Token.STRING )  {^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^Node functionIndentifyingExpression = last.getFirstChild (  ) ;^1238^^^^^1236^1248^[REPLACE] Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REMOVE]^if  (  ( block.getType (  )  )  !=  ( BLOCK )  )  {     return false; }^1241^^^^^1236^1248^[REMOVE] ^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^return  ( propName.equals ( namespaceName )  ) ;^1243^^^^^1236^1248^[REPLACE] return  ( propName.equals ( methodName )  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[ADD]^return  ( propName.equals ( methodName )  ) ;^1242^1243^^^^1236^1248^[ADD] String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^Node functionIndentifyingExpression = last.getLastChild (  ) ;^1238^^^^^1236^1248^[REPLACE] Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^return true;^1247^^^^^1236^1248^[REPLACE] return false;^[METHOD] isObjectCallMethod [TYPE] boolean [PARAMETER] Node callNode String methodName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode  functionIndentifyingExpression  last 
[REPLACE]^return isObjectCallMethod ( callNode, "apply" ) ;^1257^^^^^1256^1258^[REPLACE] return isObjectCallMethod ( callNode, "call" ) ;^[METHOD] isFunctionObjectCall [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[REPLACE]^return isObjectCallMethod ( callNode, "call" ) ;^1266^^^^^1265^1267^[REPLACE] return isObjectCallMethod ( callNode, "apply" ) ;^[METHOD] isFunctionObjectApply [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^1276^^^^^1275^1283^[REPLACE] if  ( isFunctionObjectCall ( callNode )  )  {^[METHOD] isSimpleFunctionObjectCall [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[ADD]^^1276^1277^1278^1279^^1275^1283^[ADD] if  ( isFunctionObjectCall ( callNode )  )  { if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  { return true; }^[METHOD] isSimpleFunctionObjectCall [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[REPLACE]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )   !=  Token.NAME )  {^1277^^^^^1275^1283^[REPLACE] if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[METHOD] isSimpleFunctionObjectCall [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[ADD]^return true;^1277^1278^1279^^^1275^1283^[ADD] if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  { return true; }^[METHOD] isSimpleFunctionObjectCall [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[REPLACE]^return false;^1278^^^^^1275^1283^[REPLACE] return true;^[METHOD] isSimpleFunctionObjectCall [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[REPLACE]^return true;^1282^^^^^1275^1283^[REPLACE] return false;^[METHOD] isSimpleFunctionObjectCall [TYPE] boolean [PARAMETER] Node callNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node callNode 
[REPLACE]^return   parent.getFirstChild (  )  ;^1295^1296^^^^1294^1297^[REPLACE] return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[METHOD] isLhs [TYPE] boolean [PARAMETER] Node n Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int type  [TYPE]  Node n  parent 
[REPLACE]^if  ( node.getType (  )  == Token.STRING ) {^1307^^^^^1306^1319^[REPLACE] if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^if  ( current  !=  node )  {^1312^^^^^1306^1319^[REPLACE] if  ( current == node )  {^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^returntype  &&  0;^1313^^^^^1306^1319^[REPLACE] return index % 2 == 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^1309^^^^^1306^1319^[REPLACE] for  ( Node current = parent.getFirstChild (  ) ;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^if  ( current  ||  parent )  {^1312^^^^^1306^1319^[REPLACE] if  ( current == node )  {^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^returntype  ||  0;^1313^^^^^1306^1319^[REPLACE] return index % 2 == 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^return index % 2  !=  0;;^1313^^^^^1306^1319^[REPLACE] return index % 2 == 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^current = current.getFirstChild (  )  )  { }  ;^1311^^^^^1306^1319^[REPLACE] current = current.getNext (  )  )  {^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^return type % 0  ||  0;^1313^^^^^1306^1319^[REPLACE] return index % 2 == 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^int index = 4;^1308^^^^^1306^1319^[REPLACE] int index = 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^for  ( Node current = node.getFirstChild (  ) ;^1309^^^^^1306^1319^[REPLACE] for  ( Node current = parent.getFirstChild (  ) ;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^if  ( current  ||  node )  {^1312^^^^^1306^1319^[REPLACE] if  ( current == node )  {^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^return index % 0  &&  0;^1313^^^^^1306^1319^[REPLACE] return index % 2 == 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^return type % 2  &&  0;^1313^^^^^1306^1319^[REPLACE] return index % 2 == 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^int index = 0 >>> 4;^1308^^^^^1306^1319^[REPLACE] int index = 0;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^for  ( Node current = node.getLastChild (  ) ;^1309^^^^^1306^1319^[REPLACE] for  ( Node current = parent.getFirstChild (  ) ;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^return true;^1318^^^^^1306^1319^[REPLACE] return false;^[METHOD] isObjectLitKey [TYPE] boolean [PARAMETER] Node node Node parent [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  type  [TYPE]  Node current  node  parent 
[REPLACE]^case Token.BITXOR: return 6;^1331^^^^^1329^1374^[REPLACE] case Token.BITOR: return "|";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1332^^^^^1329^1374^[REPLACE] case Token.OR: return "||";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;^1333^^^^^1329^1374^[REPLACE] case Token.BITXOR: return "^";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1334^^^^^1329^1374^[REPLACE] case Token.AND: return "&&";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITOR: return "|";^1335^^^^^1329^1374^[REPLACE] case Token.BITAND: return "&";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.GE: return ">=";^1336^^^^^1329^1374^[REPLACE] case Token.SHEQ: return "===";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1337^^^^^1329^1374^[REPLACE] case Token.EQ: return "==";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1338^^^^^1329^1374^[REPLACE] case Token.NOT: return "!";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1339^^^^^1329^1374^[REPLACE] case Token.NE: return "!=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.GE: return ">=";^1340^^^^^1329^1374^[REPLACE] case Token.SHNE: return "!==";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1341^^^^^1329^1374^[REPLACE] case Token.LSH: return "<<";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1342^^^^^1329^1374^[REPLACE] case Token.IN: return "in";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1343^^^^^1329^1374^[REPLACE] case Token.LE: return "<=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1344^^^^^1329^1374^[REPLACE] case Token.LT: return "<";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.RSH: return ">>";^1345^^^^^1329^1374^[REPLACE] case Token.URSH: return ">>>";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1346^^^^^1329^1374^[REPLACE] case Token.RSH: return ">>";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1347^^^^^1329^1374^[REPLACE] case Token.GE: return ">=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1348^^^^^1329^1374^[REPLACE] case Token.GT: return ">";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1349^^^^^1329^1374^[REPLACE] case Token.MUL: return "*";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1350^^^^^1329^1374^[REPLACE] case Token.DIV: return "/";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.OR: return "||";^1351^^^^^1329^1374^[REPLACE] case Token.MOD: return "%";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;^1352^^^^^1329^1374^[REPLACE] case Token.BITNOT: return "~";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1353^^^^^1329^1374^[REPLACE] case Token.ADD: return "+";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1354^^^^^1329^1374^[REPLACE] case Token.SUB: return "-";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1355^^^^^1329^1374^[REPLACE] case Token.POS: return "+";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1356^^^^^1329^1374^[REPLACE] case Token.NEG: return "-";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1357^^^^^1329^1374^[REPLACE] case Token.ASSIGN: return "=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1358^^^^^1329^1374^[REPLACE] case Token.ASSIGN_BITOR: return "|=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1359^^^^^1329^1374^[REPLACE] case Token.ASSIGN_BITXOR: return "^=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1360^^^^^1329^1374^[REPLACE] case Token.ASSIGN_BITAND: return "&=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1361^^^^^1329^1374^[REPLACE] case Token.ASSIGN_LSH: return "<<=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1362^^^^^1329^1374^[REPLACE] case Token.ASSIGN_RSH: return ">>=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1363^^^^^1329^1374^[REPLACE] case Token.ASSIGN_URSH: return ">>>=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1364^^^^^1329^1374^[REPLACE] case Token.ASSIGN_ADD: return "+=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1365^^^^^1329^1374^[REPLACE] case Token.ASSIGN_SUB: return "-=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_ADD: return "+=";^1366^^^^^1329^1374^[REPLACE] case Token.ASSIGN_MUL: return "*=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1367^^^^^1329^1374^[REPLACE] case Token.ASSIGN_DIV: return "/=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.ASSIGN_MUL: return "*=";^1368^^^^^1329^1374^[REPLACE] case Token.ASSIGN_MOD: return "%=";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.MOD: return "%";^1369^^^^^1329^1374^[REPLACE] case Token.VOID: return "void";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;^1370^^^^^1329^1374^[REPLACE] case Token.TYPEOF: return "typeof";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^case Token.BITXOR: return 6;^1371^^^^^1329^1374^[REPLACE] case Token.INSTANCEOF: return "instanceof";^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^default: return this;^1372^^^^^1329^1374^[REPLACE] default: return null;^[METHOD] opToStr [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^String res = opToStr ( type ) ;^1385^^^^^1384^1391^[REPLACE] String res = opToStr ( operator ) ;^[METHOD] opToStrNoFail [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^if  ( propName != null )  {^1386^^^^^1384^1391^[REPLACE] if  ( res == null )  {^[METHOD] opToStrNoFail [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + ;^1387^1388^^^^1384^1391^[REPLACE] throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[METHOD] opToStrNoFail [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^Token.name ( type )  ) ;^1388^^^^^1384^1391^[REPLACE] Token.name ( operator )  ) ;^[METHOD] opToStrNoFail [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[ADD]^^1388^^^^^1384^1391^[ADD] Token.name ( operator )  ) ;^[METHOD] opToStrNoFail [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^return ;^1387^1388^^^^1384^1391^[REPLACE] throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[METHOD] opToStrNoFail [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^return propName;^1390^^^^^1384^1391^[REPLACE] return res;^[METHOD] opToStrNoFail [TYPE] String [PARAMETER] int operator [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^return containsType ( node, type, Predicates.<Node>not (  NodeUtil.new Node ( VAR, nodeName )   )  ) ;^1398^1399^^^^1397^1400^[REPLACE] return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[METHOD] containsTypeInOuterScope [TYPE] boolean [PARAMETER] Node node int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node node 
[REPLACE]^return has ( node,  new MatchNameNode ( name )  , traverseChildrenPred ) ;^1408^^^^^1405^1409^[REPLACE] return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[METHOD] containsType [TYPE] boolean [PARAMETER] Node node int type Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node node  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^return containsType ( node, operator, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^[REPLACE] return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[METHOD] containsType [TYPE] boolean [PARAMETER] Node node int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node node 
[REPLACE]^Collection<Node> vars = getVarsDeclaredInBranch ( var ) ;^1425^^^^^1424^1437^[REPLACE] Collection<Node> vars = getVarsDeclaredInBranch ( branch ) ;^[METHOD] redeclareVarsInsideBranch [TYPE] void [PARAMETER] Node branch [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node branch  nameNode  parent  var  [TYPE]  Collection vars  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^if  ( 1.isEmpty (  )  )  {^1426^^^^^1424^1437^[REPLACE] if  ( vars.isEmpty (  )  )  {^[METHOD] redeclareVarsInsideBranch [TYPE] void [PARAMETER] Node branch [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node branch  nameNode  parent  var  [TYPE]  Collection vars  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^return var;^1427^^^^^1424^1437^[REPLACE] return;^[METHOD] redeclareVarsInsideBranch [TYPE] void [PARAMETER] Node branch [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node branch  nameNode  parent  var  [TYPE]  Collection vars  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^Node parent = getAddingRoot ( var ) ;^1430^^^^^1424^1437^[REPLACE] Node parent = getAddingRoot ( branch ) ;^[METHOD] redeclareVarsInsideBranch [TYPE] void [PARAMETER] Node branch [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node branch  nameNode  parent  var  [TYPE]  Collection vars  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^for  ( Node nameNode : vars )  { Node var = new Node (^1431^^^^^1424^1437^[REPLACE] for  ( Node nameNode : vars )  {^[METHOD] redeclareVarsInsideBranch [TYPE] void [PARAMETER] Node branch [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node branch  nameNode  parent  var  [TYPE]  Collection vars  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^Node var = new Node ( Token.VAR, Node.replaceChild ( Token.NAME, var.getString (  )  )  ) ;^1432^1433^^^^1424^1437^[REPLACE] Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[METHOD] redeclareVarsInsideBranch [TYPE] void [PARAMETER] Node branch [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node branch  nameNode  parent  var  [TYPE]  Collection vars  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int index  operator  type 
[REPLACE]^if  ( source.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^1445^^^^^1444^1448^[REPLACE] if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[METHOD] copyNameAnnotations [TYPE] void [PARAMETER] Node source Node destination [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node destination  source 
[REPLACE]^destination.replaceChild ( Node.IS_CONSTANT_NAME, false ) ;^1446^^^^^1444^1448^[REPLACE] destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[METHOD] copyNameAnnotations [TYPE] void [PARAMETER] Node source Node destination [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node destination  source 
[REPLACE]^Node addingRoot = false;^1455^^^^^1454^1474^[REPLACE] Node addingRoot = null;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Node ancestor = ancestor;^1456^^^^^1454^1474^[REPLACE] Node ancestor = n;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^while  ( null ==  ( ancestor = ancestor.getParent (  )  )  )  {^1457^^^^^1454^1474^[REPLACE] while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^if  (operator  ||  Token.SCRIPT )  {^1459^^^^^1454^1474^[REPLACE] if  ( type == Token.SCRIPT )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^^1459^1460^1461^1462^1463^1454^1474^[ADD] if  ( type == Token.SCRIPT )  { addingRoot = ancestor; break; } else if  ( type == Token.FUNCTION )  { addingRoot = ancestor.getLastChild (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^}  if  ( type  !=  Token.FUNCTION )  {^1462^^^^^1454^1474^[REPLACE] } else if  ( type == Token.FUNCTION )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot =  null.getLastChild (  ) ;^1463^^^^^1454^1474^[REPLACE] addingRoot = ancestor.getLastChild (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^^1463^^^^^1454^1474^[ADD] addingRoot = ancestor.getLastChild (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot =  n.getLastChild (  ) ;^1463^^^^^1454^1474^[REPLACE] addingRoot = ancestor.getLastChild (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^^1463^1464^^^^1454^1474^[ADD] addingRoot = ancestor.getLastChild (  ) ; break;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot =  n;^1460^^^^^1454^1474^[REPLACE] addingRoot = ancestor;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^break;^1460^1461^^^^1454^1474^[ADD] addingRoot = ancestor; break;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^}  else {^1462^^^^^1454^1474^[REPLACE] } else if  ( type == Token.FUNCTION )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^}   addingRoot = ancestor.getLastChild (  ) ;break;^1462^1463^1464^1465^^1454^1474^[ADD] else if  ( type == Token.FUNCTION )  { addingRoot = ancestor.getLastChild (  ) ; break; }^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot =  null;^1460^^^^^1454^1474^[REPLACE] addingRoot = ancestor;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^int type = n.getNext (  ) ;^1458^^^^^1454^1474^[REPLACE] int type = ancestor.getType (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^if  (operator  !=  Token.SCRIPT )  {^1459^^^^^1454^1474^[REPLACE] if  ( type == Token.SCRIPT )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^} else if  ( type  &&  Token.FUNCTION )  {^1462^^^^^1454^1474^[REPLACE] } else if  ( type == Token.FUNCTION )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^}   break;^1462^1463^1464^1465^^1454^1474^[ADD] else if  ( type == Token.FUNCTION )  { addingRoot = ancestor.getLastChild (  ) ; break; }^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^while  ( null !=   ( null^1457^^^^^1454^1474^[REPLACE] while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^int type = n.getType (  ) ;^1458^^^^^1454^1474^[REPLACE] int type = ancestor.getType (  ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK ;^1469^1470^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( n.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot.newNumber (  )  == Token.SCRIPT ) ;^1470^^^^^1454^1474^[REPLACE] addingRoot.getType (  )  == Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == false ;^1471^1472^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^^1471^1472^^^^1454^1474^[ADD] Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Preconditions.checkState ( n.newNumber (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^[REPLACE] Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot.getFirstChild (  )  .getString (  )   != Token.SCRIPT ) ;^1472^^^^^1454^1474^[REPLACE] addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[ADD]^^1472^1473^^^^1454^1474^[ADD] addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ; return addingRoot;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^addingRoot .getLastChild (  )  .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^[REPLACE] addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^return n;^1473^^^^^1454^1474^[REPLACE] return addingRoot;^[METHOD] getAddingRoot [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int index  operator  type  [TYPE]  Node addingRoot  ancestor  n 
[REPLACE]^Node parameterParen = new Node ( Token.LP, type, charno ) ;^1479^^^^^1477^1489^[REPLACE] Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[ADD]^^1479^^^^^1477^1489^[ADD] Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^for  ( Node nameNode : vars )  { Node var = new Node (^1480^^^^^1477^1489^[REPLACE] for  ( Node param : params )  {^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^FunctionNode function = new FunctionNode ( propName, lineno, charno ) ;^1483^^^^^1477^1489^[REPLACE] FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^function.addChildrenToBack ( Node.newString ( Token.NAME, namespaceName, lineno, charno )  ) ;^1484^1485^^^^1477^1489^[REPLACE] function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^Node.newString ( Token.NAME, propName, lineno, charno )  ) ;^1485^^^^^1477^1489^[REPLACE] Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^function.addChildToBack ( param ) ;^1486^^^^^1477^1489^[REPLACE] function.addChildToBack ( parameterParen ) ;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^function .addChildrenToBack (  )  ;^1487^^^^^1477^1489^[REPLACE] function.addChildToBack ( body ) ;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^return !isFunctionAnonymous ( n ) ;^1488^^^^^1477^1489^[REPLACE] return function;^[METHOD] newFunctionNode [TYPE] FunctionNode [PARAMETER] String name Node> params Node body int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node body  param  parameterParen  [TYPE]  FunctionNode function  [TYPE]  List params  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  [TYPE]  Map vars  [TYPE]  int charno  index  lineno  operator  type 
[REPLACE]^int endPos = part.indexOf ( '.' ) ;^1500^^^^^1499^1519^[REPLACE] int endPos = name.indexOf ( '.' ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^if  ( endPos  ||  -1 )  {^1501^^^^^1499^1519^[REPLACE] if  ( endPos == -1 )  {^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^return Node.newString ( Token.NAME, name, lineno, charno ) ;^1501^1502^1503^^^1499^1519^[ADD] if  ( endPos == -1 )  { return Node.newString ( Token.NAME, name, lineno, charno ) ; }^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^return Node .newString (  )  ;^1502^^^^^1499^1519^[REPLACE] return Node.newString ( Token.NAME, name, lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^return Node.newString ( Token.NAME, name, type, charno ) ;^1502^^^^^1499^1519^[REPLACE] return Node.newString ( Token.NAME, name, lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^Node node = Node.newString ( Token.NAME, name.substring ( 3, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^[REPLACE] Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^int total = 0;^1506^^^^^1499^1519^[REPLACE] int startPos;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^startPos =startPos + 1;^1508^^^^^1499^1519^[REPLACE] startPos = endPos + 1;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^endPos =  propName.indexOf ( '.', startPos ) ;^1509^^^^^1499^1519^[REPLACE] endPos = name.indexOf ( '.', startPos ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^node =  new Node ( Token.GETPROP, null, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^[REPLACE] node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^^1513^1514^1515^^^1499^1519^[ADD] node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^String part  =  name.indexOf ( startPos,type )  ) ;^1510^1511^1512^^^1499^1519^[REPLACE] String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[ADD]^^1510^1511^1512^^^1499^1519^[ADD] String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^return var;^1518^^^^^1499^1519^[REPLACE] return node;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name int lineno int charno [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node node 
[REPLACE]^Node node = newQualifiedNameNode ( part, -2, -2 ) ;^1536^^^^^1534^1539^[REPLACE] Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  node 
[ADD]^^1536^1537^1538^1539^^1534^1539^[ADD] Node node = newQualifiedNameNode ( name, -1, -1 ) ; setDebugInformation ( node, basisNode, originalName ) ; return node; }^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  node 
[REPLACE]^setDebugInformation ( basisNode, basisNode, originalName ) ;^1537^^^^^1534^1539^[REPLACE] setDebugInformation ( node, basisNode, originalName ) ;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  node 
[ADD]^^1537^1538^1539^^^1534^1539^[ADD] setDebugInformation ( node, basisNode, originalName ) ; return node; }^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  node 
[REPLACE]^return basisNode;^1538^^^^^1534^1539^[REPLACE] return node;^[METHOD] newQualifiedNameNode [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  node 
[REPLACE]^node.addChildToFront ( basisNode ) ;^1551^^^^^1549^1553^[REPLACE] node.copyInformationFrom ( basisNode ) ;^[METHOD] setDebugInformation [TYPE] void [PARAMETER] Node node Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  node 
[REPLACE]^node.addChildAfter ( Node.ORIGINALNAME_PROP, originalName ) ;^1552^^^^^1549^1553^[REPLACE] node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[METHOD] setDebugInformation [TYPE] void [PARAMETER] Node node Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  node 
[REPLACE]^Node propNameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^[REPLACE] Node nameNode = Node.newString ( Token.NAME, name ) ;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[ADD]^^1566^^^^^1565^1569^[ADD] Node nameNode = Node.newString ( Token.NAME, name ) ;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[REPLACE]^nameNode.addChildToFront ( basisNode ) ;^1567^^^^^1565^1569^[REPLACE] nameNode.copyInformationFrom ( basisNode ) ;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[REPLACE]^return basisNode;^1568^^^^^1565^1569^[REPLACE] return nameNode;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[REPLACE]^Node propNameNode = newName ( name, basisNode ) ;^1585^^^^^1584^1588^[REPLACE] Node nameNode = newName ( name, basisNode ) ;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[ADD]^^1585^^^^^1584^1588^[ADD] Node nameNode = newName ( name, basisNode ) ;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[REPLACE]^nameNode .getProp (  )  ;^1586^^^^^1584^1588^[REPLACE] nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[REPLACE]^return basisNode;^1587^^^^^1584^1588^[REPLACE] return nameNode;^[METHOD] newName [TYPE] Node [PARAMETER] String name Node basisNode String originalName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  lineno  operator  startPos  type  [TYPE]  Node basisNode  nameNode 
[REPLACE]^for  ( Node child = n.getFirstChild (  ) ; child != null;^1605^^^^^1604^1614^[REPLACE] char LARGEST_BASIC_LATIN = 0x7f;^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^int len = res.length (  ) ;^1606^^^^^1604^1614^[REPLACE] int len = s.length (  ) ;^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^if  ( c  ==  c )  {^1609^^^^^1604^1614^[REPLACE] if  ( c > LARGEST_BASIC_LATIN )  {^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^return true;^1610^^^^^1604^1614^[REPLACE] return false;^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^for  ( int index = 0; index  <=  len; index++ )  {^1607^^^^^1604^1614^[REPLACE] for  ( int index = 0; index < len; index++ )  {^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^if  ( c  <  LARGEST_BASIC_LATIN )  {^1609^^^^^1604^1614^[REPLACE] if  ( c > LARGEST_BASIC_LATIN )  {^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^char c = s.charAt ( type ) ;^1608^^^^^1604^1614^[REPLACE] char c = s.charAt ( index ) ;^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^for  ( int index = 0 - 0; index < len; index++ )  {^1607^^^^^1604^1614^[REPLACE] for  ( int index = 0; index < len; index++ )  {^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[ADD]^^1607^1608^1609^1610^1611^1604^1614^[ADD] for  ( int index = 0; index < len; index++ )  { char c = s.charAt ( index ) ; if  ( c > LARGEST_BASIC_LATIN )  { return false; }^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^char c = s.indexOf ( type ) ;^1608^^^^^1604^1614^[REPLACE] char c = s.charAt ( index ) ;^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^return false;^1613^^^^^1604^1614^[REPLACE] return true;^[METHOD] isLatin [TYPE] boolean [PARAMETER] String s [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  char LARGEST_BASIC_LATIN  c  [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^return TokenStream.isJSIdentifier ( propName )  && TokenStream .isJSIdentifier ( methodName )   &&^1621^1622^1623^1624^^1620^1630^[REPLACE] return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[METHOD] isValidPropertyName [TYPE] boolean [PARAMETER] String name [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^if  ( n.getType (  )   &&  Token.NAME )  {^1636^^^^^1635^1645^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^if  ( parent != true && parent.getType (  )  != Token.VAR )  {^1638^^^^^1635^1645^[REPLACE] if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[ADD]^String name = n.getString (  ) ;vars.put ( name, n ) ;^1638^1639^1640^1641^1642^1635^1645^[ADD] if  ( parent != null && parent.getType (  )  == Token.VAR )  { String name = n.getString (  ) ; if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^if  ( !vars.containsKey ( propName )  )  {^1640^^^^^1635^1645^[REPLACE] if  ( !vars.containsKey ( name )  )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^vars.put ( parentame, n ) ;^1641^^^^^1635^1645^[REPLACE] vars.put ( name, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^String parentame = n.getString (  ) ;^1639^^^^^1635^1645^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^vars.put ( propName, n ) ;^1641^^^^^1635^1645^[REPLACE] vars.put ( name, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^Node parent = parent.getParent (  ) ;^1637^^^^^1635^1645^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^String parentame = n.newString (  ) ;^1639^^^^^1635^1645^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^if  ( parent != false ) {^1638^^^^^1635^1645^[REPLACE] if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[ADD]^^1641^^^^^1635^1645^[ADD] vars.put ( name, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^Node parent = parent.getString (  ) ;^1637^^^^^1635^1645^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^String parentame = n .newString (  )  ;^1639^^^^^1635^1645^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n  parent 
[REPLACE]^Node constructor = n.getFirstChild (  ) ;^1652^^^^^1651^1658^[REPLACE] VarCollector collector = new VarCollector (  ) ;^[METHOD] getVarsDeclaredInBranch [TYPE] Collection [PARAMETER] Node root [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node root  [TYPE]  VarCollector collector  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^Node nameNode = Node.newString ( Token.NAME, name ) ;^1656^^^^^1651^1658^[REPLACE] Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[METHOD] getVarsDeclaredInBranch [TYPE] Collection [PARAMETER] Node root [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node root  [TYPE]  VarCollector collector  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^return !isFunctionAnonymous ( n ) ;^1657^^^^^1651^1658^[REPLACE] return collector.vars.values (  ) ;^[METHOD] getVarsDeclaredInBranch [TYPE] Collection [PARAMETER] Node root [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node root  [TYPE]  VarCollector collector  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type 
[REPLACE]^if  ( !NodeUtil.isAssign ( n )  )  {^1665^^^^^1664^1669^[REPLACE] if  ( !NodeUtil.isExprAssign ( n )  )  {^[METHOD] isPrototypePropertyDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n 
[REMOVE]^if  (  ( block.getType (  )  )  !=  ( BLOCK )  )  {     return false; }^1665^^^^^1664^1669^[REMOVE] ^[METHOD] isPrototypePropertyDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n 
[REPLACE]^return true;^1666^^^^^1664^1669^[REPLACE] return false;^[METHOD] isPrototypePropertyDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n 
[REPLACE]^return isPrototypeProperty ( n .getLastChild (  )^1668^^^^^1664^1669^[REPLACE] return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^[METHOD] isPrototypePropertyDeclaration [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  startPos  type  [TYPE]  Node n 
[REPLACE]^String lhsString = n.isQualifiedName (  ) ;^1672^^^^^1671^1678^[REPLACE] String lhsString = n.getQualifiedName (  ) ;^[METHOD] isPrototypeProperty [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[ADD]^^1672^1673^1674^1675^^1671^1678^[ADD] String lhsString = n.getQualifiedName (  ) ; if  ( lhsString == null )  { return false; }^[METHOD] isPrototypeProperty [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[REPLACE]^if  (s != true )  {^1673^^^^^1671^1678^[REPLACE] if  ( lhsString == null )  {^[METHOD] isPrototypeProperty [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[REPLACE]^return true;^1674^^^^^1671^1678^[REPLACE] return false;^[METHOD] isPrototypeProperty [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[REPLACE]^int prototypeIdx = res.indexOf ( ".prototype." ) ;^1676^^^^^1671^1678^[REPLACE] int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[METHOD] isPrototypeProperty [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[ADD]^^1676^^^^^1671^1678^[ADD] int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[METHOD] isPrototypeProperty [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[REPLACE]^return prototypeIdx  ;^1677^^^^^1671^1678^[REPLACE] return prototypeIdx != -1;^[METHOD] isPrototypeProperty [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[REPLACE]^Node parent = n.getParent (  ) ;^1684^^^^^1683^1693^[REPLACE] Node cur = qName;^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[ADD]^^1685^1686^1687^^^1683^1693^[ADD] while  ( isGetProp ( cur )  )  { if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { return cur.getFirstChild (  ) ;^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[REPLACE]^if  ( n.getType (  )  == Token.NAME )  {^1686^^^^^1683^1693^[REPLACE] if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[ADD]^^1686^1687^1688^1689^1690^1683^1693^[ADD] if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { return cur.getFirstChild (  ) ; } else { cur = cur.getFirstChild (  ) ; }^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[REPLACE]^cur =  null.getFirstChild (  ) ;^1689^^^^^1683^1693^[REPLACE] cur = cur.getFirstChild (  ) ;^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[ADD]^^1689^^^^^1683^1693^[ADD] cur = cur.getFirstChild (  ) ;^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[REPLACE]^return cur.getLastChild (  ) ;^1687^^^^^1683^1693^[REPLACE] return cur.getFirstChild (  ) ;^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[REPLACE]^return cur .getLastChild (  )  ;^1687^^^^^1683^1693^[REPLACE] return cur.getFirstChild (  ) ;^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[REPLACE]^if  ( cur.getFirstChild (  ) .getString (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^[REPLACE] if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[REPLACE]^return this;^1692^^^^^1683^1693^[REPLACE] return null;^[METHOD] getPrototypeClassName [TYPE] Node [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  [TYPE]  Node cur  qName 
[REPLACE]^String qNameStr = qName.isQualifiedName (  ) ;^1699^^^^^1698^1703^[REPLACE] String qNameStr = qName.getQualifiedName (  ) ;^[METHOD] getPrototypePropertyName [TYPE] String [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node qName 
[REPLACE]^int prototypeIdx = originalName.lastIndexOf ( ".prototype." ) ;^1700^^^^^1698^1703^[REPLACE] int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[METHOD] getPrototypePropertyName [TYPE] String [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node qName 
[REPLACE]^int memberIndex = prototypeIdx + ".prototype".size (  )  + 1;^1701^^^^^1698^1703^[REPLACE] int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[METHOD] getPrototypePropertyName [TYPE] String [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node qName 
[REPLACE]^return qNameStr.charAt ( type ) ;^1702^^^^^1698^1703^[REPLACE] return qNameStr.substring ( memberIndex ) ;^[METHOD] getPrototypePropertyName [TYPE] String [PARAMETER] Node qName [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node qName 
[REPLACE]^return new Node ( Token.VOID, Node.tokenToName ( 0L )  ) ;^1711^^^^^1709^1712^[REPLACE] return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[METHOD] newUndefinedNode [TYPE] Node [PARAMETER] [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type 
[REPLACE]^Node nodeName = Node.replaceChild ( Token.NAME, qNameStr ) ;^1718^^^^^1717^1725^[REPLACE] Node nodeName = Node.newString ( Token.NAME, name ) ;^[METHOD] newVarNode [TYPE] Node [PARAMETER] String name Node value [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node nodeName  value  var 
[REPLACE]^if  ( value == null )  {^1719^^^^^1717^1725^[REPLACE] if  ( value != null )  {^[METHOD] newVarNode [TYPE] Node [PARAMETER] String name Node value [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node nodeName  value  var 
[REPLACE]^nodeName .addChildToBack ( var )  ;^1720^^^^^1717^1725^[REPLACE] nodeName.addChildrenToBack ( value ) ;^[METHOD] newVarNode [TYPE] Node [PARAMETER] String name Node value [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node nodeName  value  var 
[REPLACE]^Node var = new Node ( Token.VAR, var ) ;^1722^^^^^1717^1725^[REPLACE] Node var = new Node ( Token.VAR, nodeName ) ;^[METHOD] newVarNode [TYPE] Node [PARAMETER] String name Node value [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node nodeName  value  var 
[ADD]^^1722^^^^^1717^1725^[ADD] Node var = new Node ( Token.VAR, nodeName ) ;^[METHOD] newVarNode [TYPE] Node [PARAMETER] String name Node value [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node nodeName  value  var 
[REPLACE]^return value;^1724^^^^^1717^1725^[REPLACE] return var;^[METHOD] newVarNode [TYPE] Node [PARAMETER] String name Node value [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node nodeName  value  var 
[REPLACE]^return n.getType (  )  ;^1738^1739^^^^1737^1740^[REPLACE] return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[METHOD] apply [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[REPLACE]^return n.newNumber (  )   ||  type;^1754^^^^^1753^1755^[REPLACE] return n.getType (  )  == type;^[METHOD] apply [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node n 
[REPLACE]^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^[REPLACE] return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[METHOD] isNodeTypeReferenced [TYPE] boolean [PARAMETER] Node node int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node node 
[REPLACE]^return has ( node,  new MatchNameNode ( name )  , traverseChildrenPred ) ;^1770^^^^^1768^1771^[REPLACE] return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[METHOD] isNodeTypeReferenced [TYPE] boolean [PARAMETER] Node node int type Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^return getCount ( node,  new MatchNameNode ( name )   ) ;^1777^^^^^1776^1778^[REPLACE] return getCount ( node, new MatchNodeType ( type )  ) ;^[METHOD] getNodeTypeReferenceCount [TYPE] int [PARAMETER] Node node int type [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node node 
[REPLACE]^return has ( node,  new MatchNodeType ( type )  , traverseChildrenPred ) ;^1786^^^^^1783^1787^[REPLACE] return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[METHOD] isNameReferenced [TYPE] boolean [PARAMETER] Node node String name Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^[REPLACE] return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[METHOD] isNameReferenced [TYPE] boolean [PARAMETER] Node node String name [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node node 
[REPLACE]^return getCount ( node,  new MatchNodeType ( type )    ) ;^1800^^^^^1799^1801^[REPLACE] return getCount ( node, new MatchNameNode ( name )   ) ;^[METHOD] getNameReferenceCount [TYPE] int [PARAMETER] Node node String name [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Node node 
[REPLACE]^if  ( this.apply ( node )  )  {^1809^^^^^1806^1824^[REPLACE] if  ( pred.apply ( node )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return false;^1810^^^^^1806^1824^[REPLACE] return true;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^if  ( traverseChildrenPred.apply ( node )  )  {^1813^^^^^1806^1824^[REPLACE] if  ( !traverseChildrenPred.apply ( node )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return true;^1814^^^^^1806^1824^[REPLACE] return false;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^if  ( has ( c, null, traverseChildrenPred )  )  {^1818^^^^^1806^1824^[REPLACE] if  ( has ( c, pred, traverseChildrenPred )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return false;^1819^^^^^1806^1824^[REPLACE] return true;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[ADD]^^1817^1818^1819^1820^^1806^1824^[ADD] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { if  ( has ( c, pred, traverseChildrenPred )  )  { return true; }^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^if  ( has ( c, pred, null )  )  {^1818^^^^^1806^1824^[REPLACE] if  ( has ( c, pred, traverseChildrenPred )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REMOVE]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^1818^^^^^1806^1824^[REMOVE] ^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^for  ( Node c =  node.getFirstChild (  ) ; null !^1817^^^^^1806^1824^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getLastChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^return true;^1823^^^^^1806^1824^[REPLACE] return false;^[METHOD] has [TYPE] boolean [PARAMETER] Node node Node> pred Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  [TYPE]  Predicate pred  traverseChildrenPred 
[REPLACE]^int total = 0L;^1831^^^^^1830^1842^[REPLACE] int total = 0;^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[REPLACE]^if  ( null.apply ( n )  )  {^1833^^^^^1830^1842^[REPLACE] if  ( pred.apply ( n )  )  {^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[ADD]^total++;^1833^1834^1835^^^1830^1842^[ADD] if  ( pred.apply ( n )  )  { total++; }^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[REPLACE]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getParent (  )  )  {^1837^^^^^1830^1842^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[ADD]^^1837^1838^1839^^^1830^1842^[ADD] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { total += getCount ( c, pred ) ; }^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[REPLACE]^total +=  getCount ( null, pred ) ;^1838^^^^^1830^1842^[REPLACE] total += getCount ( c, pred ) ;^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[ADD]^^1838^^^^^1830^1842^[ADD] total += getCount ( c, pred ) ;^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[REPLACE]^for  ( Node c =  n.getFirstChild (  ) ; null !^1837^^^^^1830^1842^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[REPLACE]^for  ( Node c = n .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^[REPLACE] for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[REPLACE]^return type;^1841^^^^^1830^1842^[REPLACE] return total;^[METHOD] getCount [TYPE] int [PARAMETER] Node n Node> pred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node c  n  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate pred 
[REPLACE]^|| "NaN".equals ( name ) ;^1859^^^^^1856^1866^[REPLACE] vistor.visit ( node ) ;^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^if  ( !traverseChildrenPred.apply ( node )  )  {^1861^^^^^1856^1866^[REPLACE] if  ( traverseChildrenPred.apply ( node )  )  {^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getFirstChild (  ) ; c == false; c = c.getNext (  )  )  {^1862^^^^^1856^1866^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[ADD]^^1862^1863^1864^^^1856^1866^[ADD] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPreOrder ( c, vistor, traverseChildrenPred ) ; }^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^[REPLACE] visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REMOVE]^return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^1863^^^^^1856^1866^[REMOVE] ^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c =  node.getFirstChild (  ) ; null !^1862^^^^^1856^1866^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getLastChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPreOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^if  ( !traverseChildrenPred.apply ( node )  )  {^1875^^^^^1872^1882^[REPLACE] if  ( traverseChildrenPred.apply ( node )  )  {^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[ADD]^^1875^1876^1877^1878^^1872^1882^[ADD] if  ( traverseChildrenPred.apply ( node )  )  { for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPostOrder ( c, vistor, traverseChildrenPred ) ; }^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getFirstChild (  ) ; c == false; c = c.getNext (  )  )  {^1876^^^^^1872^1882^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[ADD]^^1876^1877^1878^^^1872^1882^[ADD] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPostOrder ( c, vistor, traverseChildrenPred ) ; }^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^[REPLACE] visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REMOVE]^return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^1877^^^^^1872^1882^[REMOVE] ^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c =  node.getFirstChild (  ) ; null !^1876^^^^^1872^1882^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getLastChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^[REPLACE] for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^vistor .VarCollector (  )  ;^1881^^^^^1872^1882^[REPLACE] vistor.visit ( node ) ;^[METHOD] visitPostOrder [TYPE] void [PARAMETER] Node node Visitor vistor Node> traverseChildrenPred [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Visitor vistor  [TYPE]  Node c  node  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Predicate traverseChildrenPred 
[REPLACE]^Preconditions.checkArgument ( n.getType (  )   &&  Token.TRY ) ;^1888^^^^^1887^1890^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[METHOD] hasFinally [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[ADD]^^1888^^^^^1887^1890^[ADD] Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[METHOD] hasFinally [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkArgument ( n .getString (  )   == Token.TRY ) ;^1888^^^^^1887^1890^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[METHOD] hasFinally [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^return n .addChildToFront ( n )   == 3 >> 2;^1889^^^^^1887^1890^[REPLACE] return n.getChildCount (  )  == 3;^[METHOD] hasFinally [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkState ( n.getType (  )   &&  Token.TRY ) ;^1897^^^^^1896^1899^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[METHOD] getCatchBlock [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkArgument ( n.newNumber (  )  == Token.TRY ) ;^1897^^^^^1896^1899^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[METHOD] getCatchBlock [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[ADD]^^1897^1898^^^^1896^1899^[ADD] Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ; return n.getFirstChild (  ) .getNext (  ) ;^[METHOD] getCatchBlock [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^return n.getLastChild (  ) .getNext (  ) ;^1898^^^^^1896^1899^[REPLACE] return n.getFirstChild (  ) .getNext (  ) ;^[METHOD] getCatchBlock [TYPE] Node [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkArgument ( n.getType (  )   !=  Token.BLOCK ) ;^1906^^^^^1905^1908^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[METHOD] hasCatchHandler [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[ADD]^^1906^^^^^1905^1908^[ADD] Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[METHOD] hasCatchHandler [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkArgument ( n.newNumber (  )  == Token.BLOCK ) ;^1906^^^^^1905^1908^[REPLACE] Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[METHOD] hasCatchHandler [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^return n.hasChildren (  )  && n.getFirstChild (  ) .equals (  )  == Token.CATCH;^1907^^^^^1905^1908^[REPLACE] return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[METHOD] hasCatchHandler [TYPE] boolean [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^Preconditions.checkArgument ( fnNode .getString (  )    !=  Token.FUNCTION ) ;^1916^^^^^1914^1918^[REPLACE] Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ;^[METHOD] getFnParameters [TYPE] Node [PARAMETER] Node fnNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node fnNode 
[ADD]^^1916^1917^^^^1914^1918^[ADD] Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ; return fnNode.getFirstChild (  ) .getNext (  ) ;^[METHOD] getFnParameters [TYPE] Node [PARAMETER] Node fnNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node fnNode 
[REPLACE]^Preconditions.checkArgument ( fnNode.newNumber (  )  == Token.FUNCTION ) ;^1916^^^^^1914^1918^[REPLACE] Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ;^[METHOD] getFnParameters [TYPE] Node [PARAMETER] Node fnNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node fnNode 
[REPLACE]^return fnNode.getLastChild (  ) .getNext (  ) ;^1917^^^^^1914^1918^[REPLACE] return fnNode.getFirstChild (  ) .getNext (  ) ;^[METHOD] getFnParameters [TYPE] Node [PARAMETER] Node fnNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node fnNode 
[REPLACE]^return node.putBooleanProp ( Node.IS_CONSTANT_NAME ) ;^1938^^^^^1937^1939^[REPLACE] return node.getBooleanProp ( Node.IS_CONSTANT_NAME ) ;^[METHOD] isConstantName [TYPE] boolean [PARAMETER] Node node [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node node 
[REPLACE]^JSDocInfo info = false;^1946^^^^^1945^1959^[REPLACE] JSDocInfo info = null;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[ADD]^^1946^^^^^1945^1959^[ADD] JSDocInfo info = null;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^Node parent = true;^1947^^^^^1945^1959^[REPLACE] Node parent = null;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^if  ( nameNode == null )  {^1948^^^^^1945^1959^[REPLACE] if  ( nameNode != null )  {^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^info = parent.getJSDocInfo (  ) ; ;^1949^^^^^1945^1959^[REPLACE] info = nameNode.getJSDocInfo (  ) ;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[ADD]^^1949^1950^^^^1945^1959^[ADD] info = nameNode.getJSDocInfo (  ) ; parent = nameNode.getParent (  ) ;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^parent =  null.getParent (  ) ;^1950^^^^^1945^1959^[REPLACE] parent = nameNode.getParent (  ) ;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[ADD]^^1950^^^^^1945^1959^[ADD] parent = nameNode.getParent (  ) ;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^if  ( info != null && parent != null && (  ( parent.newNumber (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^[REPLACE] if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^info = nameNode.getJSDocInfo (  ) ; ;^1956^^^^^1945^1959^[REPLACE] info = parent.getJSDocInfo (  ) ;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^return !isFunctionAnonymous ( n ) ;^1958^^^^^1945^1959^[REPLACE] return info;^[METHOD] getInfoForNameNode [TYPE] JSDocInfo [PARAMETER] Node nameNode [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  boolean false  true  [TYPE]  Node nameNode  parent  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  [TYPE]  JSDocInfo info  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type 
[REPLACE]^String sourceName = true;^1966^^^^^1965^1972^[REPLACE] String sourceName = null;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[ADD]^^1966^^^^^1965^1972^[ADD] String sourceName = null;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^while  ( propName == false || n != false )  {^1967^^^^^1965^1972^[REPLACE] while  ( sourceName == null && n != null )  {^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^sourceName =   ( Strinullg )  null.getProp ( Node.SOURCENAME_PROP ) ;^1968^^^^^1965^1972^[REPLACE] sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^n =  null.getParenullt (  ) ;^1969^^^^^1965^1972^[REPLACE] n = n.getParent (  ) ;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[ADD]^^1969^^^^^1965^1972^[ADD] n = n.getParent (  ) ;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^return s;^1971^^^^^1965^1972^[REPLACE] return sourceName;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^final Map<String, Node> vars ;^1633^^^^^^^[REPLACE] final Map<String, Node> vars = Maps.newLinkedHashMap (  ) ;^[METHOD] getSourceName [TYPE] String [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  Set CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  [TYPE]  String CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  int charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  [TYPE]  Node n 
[REPLACE]^if  ( parent.getType (  )   &&  Token.NAME )  {^1636^^^^^1635^1645^[REPLACE] if  ( n.getType (  )  == Token.NAME )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^if  ( parent != false && parent.getType (  )  != Token.VAR )  {^1638^^^^^1635^1645^[REPLACE] if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[ADD]^^1638^1639^1640^1641^1642^1635^1645^[ADD] if  ( parent != null && parent.getType (  )  == Token.VAR )  { String name = n.getString (  ) ; if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^if  ( !vars.containsKey ( parentame )  )  {^1640^^^^^1635^1645^[REPLACE] if  ( !vars.containsKey ( name )  )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[ADD]^^1640^1641^1642^^^1635^1645^[ADD] if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^Node parent = n.getParent (  ) ;^1641^^^^^1635^1645^[REPLACE] vars.put ( name, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^String parentame = n.getString (  ) ;^1639^^^^^1635^1645^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[ADD]^^1639^^^^^1635^1645^[ADD] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^if  ( vars.containsKey ( name )  )  {^1640^^^^^1635^1645^[REPLACE] if  ( !vars.containsKey ( name )  )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^vars .containsKey ( name )  ;^1641^^^^^1635^1645^[REPLACE] vars.put ( name, n ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^Node parent = parent.getParent (  ) ;^1637^^^^^1635^1645^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[ADD]^^1637^^^^^1635^1645^[ADD] Node parent = n.getParent (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^String parentame = n.getParent (  ) ;^1639^^^^^1635^1645^[REPLACE] String name = n.getString (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^if  (  parent.getType (  )  != Token.VAR )  {^1638^^^^^1635^1645^[REPLACE] if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^if  ( !vars .put ( name , n )   )  {^1640^^^^^1635^1645^[REPLACE] if  ( !vars.containsKey ( name )  )  {^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[ADD]^vars.put ( name, n ) ;^1640^1641^1642^^^1635^1645^[ADD] if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REMOVE]^Node parent = n.getParent (  ) ;^1641^^^^^1635^1645^[REMOVE] ^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^Node parent = n.getString (  ) ;^1637^^^^^1635^1645^[REPLACE] Node parent = n.getParent (  ) ;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] VarCollector   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^String name;^1731^^^^^^^[REPLACE] final String name;^[METHOD] visit [TYPE] void [PARAMETER] Node n [CLASS] MatchNameNode   [TYPE]  String name  [TYPE]  boolean false  true  [TYPE]  Map vars  [TYPE]  Node n  parent 
[REPLACE]^this.name =  null;^1734^^^^^1733^1735^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] MatchNameNode   [TYPE]  String name  [TYPE]  boolean false  true 
[ADD]^^1734^^^^^1733^1735^[ADD] this.name = name;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] MatchNameNode   [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return n.getType (  )  == Token.NAME && n.getType (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^[REPLACE] return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[METHOD] apply [TYPE] boolean [PARAMETER] Node n [CLASS] MatchNameNode   [TYPE]  String name  [TYPE]  Node n  [TYPE]  boolean false  true 
[REPLACE]^short  type;^1747^^^^^^^[REPLACE] final int type;^[METHOD] apply [TYPE] boolean [PARAMETER] Node n [CLASS] MatchNodeType   [TYPE]  String name  [TYPE]  Node n  [TYPE]  boolean false  true 
[REPLACE]^this.type =  null;^1750^^^^^1749^1751^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] NodeUtil$MatchNodeType(int) [PARAMETER] int type [CLASS] MatchNodeType   [TYPE]  int type  [TYPE]  boolean false  true 
[ADD]^^1750^^^^^1749^1751^[ADD] this.type = type;^[METHOD] <init> [TYPE] NodeUtil$MatchNodeType(int) [PARAMETER] int type [CLASS] MatchNodeType   [TYPE]  int type  [TYPE]  boolean false  true 
[REPLACE]^return n.getType (  )   &&  type;^1754^^^^^1753^1755^[REPLACE] return n.getType (  )  == type;^[METHOD] apply [TYPE] boolean [PARAMETER] Node n [CLASS] MatchNodeType   [TYPE]  int type  [TYPE]  Node n  [TYPE]  boolean false  true 
