[REPLACE]^private  Node jsRoot;^36^^^^^^^[REPLACE] private final Node jsRoot;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private  boolean trackGzippedSize;^37^^^^^^^[REPLACE] private final boolean trackGzippedSize;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final RecentChange codeChange  = null ;^41^^^^^^^[REPLACE] private final RecentChange codeChange = new RecentChange (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private int curCodeSizeEstimate  = null ;^43^^^^^^^[REPLACE] private int curCodeSizeEstimate = -1;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private int curZippedCodeSizeEstimate = -4;^44^^^^^^^[REPLACE] private int curZippedCodeSizeEstimate = -1;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private Deque<String> currentRunningPass ;^46^^^^^^^[REPLACE] private Deque<String> currentRunningPass = new ArrayDeque<String> (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final Map<String, Long> runtimeRecord ;^49^^^^^^^[REPLACE] private final Map<String, Long> runtimeRecord = Maps.newHashMap (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final Map<String, Integer> codeSizeRecord  = null ;^52^^^^^^^[REPLACE] private final Map<String, Integer> codeSizeRecord = Maps.newHashMap (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final Map<String, Integer> zippedCodeSizeRecord ;^55^^^^^^^[REPLACE] private final Map<String, Integer> zippedCodeSizeRecord = Maps.newHashMap (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private  boolean trackGzippedSize;^144^^^^^^^[REPLACE] private final boolean trackGzippedSize;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private int size ;^145^^^^^^^[REPLACE] private int size = 0;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private char lastChar ;^146^^^^^^^[REPLACE] private char lastChar = '\0';^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private final ByteArrayOutputStream output  = null ;^147^^^^^^^[REPLACE] private final ByteArrayOutputStream output = new ByteArrayOutputStream (  ) ;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^private  GZIPOutputStream stream;^148^^^^^^^[REPLACE] private final GZIPOutputStream stream;^ [CLASS] PerformanceTracker CodeSizeEstimatePrinter  
[REPLACE]^this.jsRoot =  null;^58^^^^^57^60^[REPLACE] this.jsRoot = jsRoot;^[METHOD] <init> [TYPE] Node,boolean) [PARAMETER] Node jsRoot boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[ADD]^^58^^^^^57^60^[ADD] this.jsRoot = jsRoot;^[METHOD] <init> [TYPE] Node,boolean) [PARAMETER] Node jsRoot boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^this.trackGzippedSize =  true;^59^^^^^57^60^[REPLACE] this.trackGzippedSize = trackGzippedSize;^[METHOD] <init> [TYPE] Node,boolean) [PARAMETER] Node jsRoot boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^this.trackGzippedSize =  true;^151^^^^^150^158^[REPLACE] this.trackGzippedSize = trackGzippedSize;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[ADD]^stream = new GZIPOutputStream ( output ) ;^153^154^155^156^157^150^158^[ADD] try { stream = new GZIPOutputStream ( output ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^stream  =  stream ;^154^^^^^150^158^[REPLACE] stream = new GZIPOutputStream ( output ) ;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[ADD]^^154^^^^^150^158^[ADD] stream = new GZIPOutputStream ( output ) ;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^return ;^156^^^^^150^158^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^return cp;^63^^^^^62^64^[REPLACE] return codeChange;^[METHOD] getCodeChangeHandler [TYPE] CodeChangeHandler [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^currentRunningPass .pop (  )  ;^67^^^^^66^69^[REPLACE] currentRunningPass.push ( passName ) ;^[METHOD] recordPassStart [TYPE] void [PARAMETER] String passName [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^codeChange .RecentChange (  )  ;^68^^^^^66^69^[REPLACE] codeChange.reset (  ) ;^[METHOD] recordPassStart [TYPE] void [PARAMETER] String passName [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[ADD]^^68^^^^^66^69^[ADD] codeChange.reset (  ) ;^[METHOD] recordPassStart [TYPE] void [PARAMETER] String passName [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size 
[REPLACE]^String currentPassName = currentRunningPass .push ( true )  ;^78^^^^^77^96^[REPLACE] String currentPassName = currentRunningPass.pop (  ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^if  ( passName.equals ( currentPassName )  )  {^79^^^^^77^96^[REPLACE] if  ( !passName.equals ( currentPassName )  )  {^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^return ;^80^^^^^77^96^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[ADD]^^80^^^^^77^96^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^Long total = runtimeRecord.get ( currentPassName ) ;^82^^^^^77^96^[REPLACE] Long total = runtimeRecord.get ( passName ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^if  ( total != null )  {^83^^^^^77^96^[REPLACE] if  ( total == null )  {^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^total = 0;^84^^^^^77^96^[REPLACE] total = 0L;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^total = total.longValue (  )   !=  result;^86^^^^^77^96^[REPLACE] total = total.longValue (  )  + result;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^runtimeRecord.put ( currentPassName, total ) ;^87^^^^^77^96^[REPLACE] runtimeRecord.put ( passName, total ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REMOVE]^return ImmutableMap.copyOf ( zippedCodeSizeRecord ) ;^87^^^^^77^96^[REMOVE] ^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^if  ( codeChange .RecentChange (  )   )  {^89^^^^^77^96^[REPLACE] if  ( codeChange.hasCodeChanged (  )  )  {^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[ADD]^CodeSizeEstimatePrinter printer = estimateCodeSize ( jsRoot ) ;printer.calcSize (  ) , passName, codeSizeRecord ) ;^89^90^91^92^93^77^96^[ADD] if  ( codeChange.hasCodeChanged (  )  )  { CodeSizeEstimatePrinter printer = estimateCodeSize ( jsRoot ) ; curCodeSizeEstimate = recordSizeChange ( curCodeSizeEstimate, printer.calcSize (  ) , passName, codeSizeRecord ) ; curZippedCodeSizeEstimate = recordSizeChange ( curZippedCodeSizeEstimate,^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^curCodeSizeEstimate =  recordSizeChange ( curCodeSizeEstimate, null.calcSize (  ) , passName, codeSizeRecord ) ;^91^92^^^^77^96^[REPLACE] curCodeSizeEstimate = recordSizeChange ( curCodeSizeEstimate, printer.calcSize (  ) , passName, codeSizeRecord ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^curZippedCodeSizeEstimate =  recordSizeChange ( curZippedCodeSizeEstimate, null.calcZippedSize (  ) , passName, zippedCodeSizeRecord ) ;^93^94^^^^77^96^[REPLACE] curZippedCodeSizeEstimate = recordSizeChange ( curZippedCodeSizeEstimate, printer.calcZippedSize (  ) , passName, zippedCodeSizeRecord ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^CodeSizeEstimatePrinter cp = new CodeSizeEstimatePrinter ( trackGzippedSize ) ;^90^^^^^77^96^[REPLACE] CodeSizeEstimatePrinter printer = estimateCodeSize ( jsRoot ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[ADD]^^91^92^^^^77^96^[ADD] curCodeSizeEstimate = recordSizeChange ( curCodeSizeEstimate, printer.calcSize (  ) , passName, codeSizeRecord ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[ADD]^^93^94^^^^77^96^[ADD] curZippedCodeSizeEstimate = recordSizeChange ( curZippedCodeSizeEstimate, printer.calcZippedSize (  ) , passName, zippedCodeSizeRecord ) ;^[METHOD] recordPassStop [TYPE] void [PARAMETER] String passName long result [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Node jsRoot  [TYPE]  ByteArrayOutputStream output  [TYPE]  String currentPassName  passName  [TYPE]  CodeSizeEstimatePrinter printer  [TYPE]  Deque currentRunningPass  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  size  [TYPE]  long result  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  Long total  [TYPE]  Map codeSizeRecord  runtimeRecord  zippedCodeSizeRecord 
[REPLACE]^if  ( oldSize  ==  -1 )  {^105^^^^^103^118^[REPLACE] if  ( oldSize != -1 )  {^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^if  ( delta  <= oldSize )  {^108^^^^^103^118^[REPLACE] if  ( delta > 0 )  {^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[ADD]^^108^109^110^111^112^103^118^[ADD] if  ( delta > 0 )  { if  ( reduction == null )  { reduction = delta; } else { reduction = reduction + delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^if  ( reduction != true )  {^109^^^^^103^118^[REPLACE] if  ( reduction == null )  {^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^reduction = reduction  ==  delta;^112^^^^^103^118^[REPLACE] reduction = reduction + delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^reduction =  oldSize;^110^^^^^103^118^[REPLACE] reduction = delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^reduction = reduction  ^  delta;^112^^^^^103^118^[REPLACE] reduction = reduction + delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^if  ( reduction != this  )  {^109^^^^^103^118^[REPLACE] if  ( reduction == null )  {^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REMOVE]^if  ( delta > 0 )  {     if  ( reduction == null )  {         reduction = delta;     }else {         reduction = reduction + delta;     }     record.put ( passName, reduction ) ; }^109^^^^^103^118^[REMOVE] ^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^reduction = reduction  >  delta;^112^^^^^103^118^[REPLACE] reduction = reduction + delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[ADD]^^112^^^^^103^118^[ADD] reduction = reduction + delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^reduction = reduction  <=  delta;^112^^^^^103^118^[REPLACE] reduction = reduction + delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^int delta =size - newSize;^106^^^^^103^118^[REPLACE] int delta = oldSize - newSize;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^Integer reduction = null.get ( passName ) ;^107^^^^^103^118^[REPLACE] Integer reduction = record.get ( passName ) ;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[ADD]^^107^^^^^103^118^[ADD] Integer reduction = record.get ( passName ) ;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^if  ( delta  != oldSize )  {^108^^^^^103^118^[REPLACE] if  ( delta > 0 )  {^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^if  ( reduction != null )  {^109^^^^^103^118^[REPLACE] if  ( reduction == null )  {^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^reduction = reduction  &&  delta;^112^^^^^103^118^[REPLACE] reduction = reduction + delta;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[ADD]^^106^107^^^^103^118^[ADD] int delta = oldSize - newSize; Integer reduction = record.get ( passName ) ;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^Integer reduction = true.get ( passName ) ;^107^^^^^103^118^[REPLACE] Integer reduction = record.get ( passName ) ;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^return size;^117^^^^^103^118^[REPLACE] return newSize;^[METHOD] recordSizeChange [TYPE] int [PARAMETER] int oldSize int newSize String passName Integer> record [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  Integer reduction  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String passName  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^return   runtimeRecord   ;^122^^^^^121^123^[REPLACE] return ImmutableMap.copyOf ( runtimeRecord ) ;^[METHOD] getRuntimeRecord [TYPE] ImmutableMap [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^return   codeSizeRecord   ;^126^^^^^125^127^[REPLACE] return ImmutableMap.copyOf ( codeSizeRecord ) ;^[METHOD] getCodeSizeRecord [TYPE] ImmutableMap [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^return   zippedCodeSizeRecord   ;^130^^^^^129^131^[REPLACE] return ImmutableMap.copyOf ( zippedCodeSizeRecord ) ;^[METHOD] getZippedCodeSizeRecord [TYPE] ImmutableMap [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^CodeSizeEstimatePrinter printer = estimateCodeSize ( jsRoot ) ;^134^^^^^133^138^[REPLACE] CodeSizeEstimatePrinter cp = new CodeSizeEstimatePrinter ( trackGzippedSize ) ;^[METHOD] estimateCodeSize [TYPE] PerformanceTracker$CodeSizeEstimatePrinter [PARAMETER] Node root [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  CodeGenerator cg  [TYPE]  CodeSizeEstimatePrinter cp  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^CodeSizeEstimatePrinter cp = new CodeSizeEstimatePrinter ( trackGzippedSize ) ;^135^^^^^133^138^[REPLACE] CodeGenerator cg = new CodeGenerator ( cp ) ;^[METHOD] estimateCodeSize [TYPE] PerformanceTracker$CodeSizeEstimatePrinter [PARAMETER] Node root [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  CodeGenerator cg  [TYPE]  CodeSizeEstimatePrinter cp  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[ADD]^^135^136^^^^133^138^[ADD] CodeGenerator cg = new CodeGenerator ( cp ) ; cg.add ( root ) ;^[METHOD] estimateCodeSize [TYPE] PerformanceTracker$CodeSizeEstimatePrinter [PARAMETER] Node root [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  CodeGenerator cg  [TYPE]  CodeSizeEstimatePrinter cp  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^cg .CodeGenerator ( cp )  ;^136^^^^^133^138^[REPLACE] cg.add ( root ) ;^[METHOD] estimateCodeSize [TYPE] PerformanceTracker$CodeSizeEstimatePrinter [PARAMETER] Node root [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  CodeGenerator cg  [TYPE]  CodeSizeEstimatePrinter cp  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^return codeChange;^137^^^^^133^138^[REPLACE] return cp;^[METHOD] estimateCodeSize [TYPE] PerformanceTracker$CodeSizeEstimatePrinter [PARAMETER] Node root [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  CodeGenerator cg  [TYPE]  CodeSizeEstimatePrinter cp  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  newSize  oldSize  size 
[REPLACE]^int len = str .getBytes (  )  ;^162^^^^^161^174^[REPLACE] int len = str.length (  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^if  ( len  ==  0 )  {^163^^^^^161^174^[REPLACE] if  ( len > 0 )  {^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^if  ( !passName.equals ( currentPassName )  )  {^166^^^^^161^174^[REPLACE] if  ( trackGzippedSize )  {^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[ADD]^stream.write ( str.getBytes (  )  ) ;^167^168^169^170^171^161^174^[ADD] try { stream.write ( str.getBytes (  )  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^stream.write ( str.length (  )  ) ;^168^^^^^161^174^[REPLACE] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return ;^170^^^^^161^174^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^int len = str.length (  ) ;^168^^^^^161^174^[REPLACE] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^size +=  newSize;^164^^^^^161^174^[REPLACE] size += len;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^lastChar = str.charAt ( len -oldSize ) ;^165^^^^^161^174^[REPLACE] lastChar = str.charAt ( len - 1 ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[ADD]^^168^^^^^161^174^[ADD] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[ADD]^^169^170^^^^161^174^[ADD] catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^stream.write ( str .equals ( this )   ) ;^168^^^^^161^174^[REPLACE] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REMOVE]^CodeSizeEstimatePrinter printer = estimateCodeSize ( jsRoot ) ;^168^^^^^161^174^[REMOVE] ^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^lastChar = str.charAt ( len -newSize ) ;^165^^^^^161^174^[REPLACE] lastChar = str.charAt ( len - 1 ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return codeChange;^178^^^^^177^179^[REPLACE] return lastChar;^[METHOD] getLastChar [TYPE] char [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return codeChange;^182^^^^^181^183^[REPLACE] return size;^[METHOD] calcSize [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^if  ( !passName.equals ( currentPassName )  )  {^186^^^^^185^198^[REPLACE] if  ( trackGzippedSize )  {^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return -0;^196^^^^^185^198^[REPLACE] return -1;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[ADD]^stream.finish (  ) ;stream.flush (  ) ;stream.close (  ) ;return output.size (  ) ;^187^188^189^190^191^185^198^[ADD] try { stream.finish (  ) ; stream.flush (  ) ; stream.close (  ) ; return output.size (  ) ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return output.ByteArrayOutputStream (  ) ;^191^^^^^185^198^[REPLACE] return output.size (  ) ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return ;^193^^^^^185^198^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return -1 - 4;^196^^^^^185^198^[REPLACE] return -1;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return -3;^202^^^^^201^203^[REPLACE] return -1;^[METHOD] getCurrentBufferLength [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return -4;^207^^^^^206^208^[REPLACE] return -1;^[METHOD] getCurrentCharIndex [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^return -4;^212^^^^^211^213^[REPLACE] return -1;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] PerformanceTracker CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private  boolean trackGzippedSize;^144^^^^^^^[REPLACE] private final boolean trackGzippedSize;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private int size  = null ;^145^^^^^^^[REPLACE] private int size = 0;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private char lastChar  = null ;^146^^^^^^^[REPLACE] private char lastChar = '\0';^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^private  ByteArrayOutputStream output = new ByteArrayOutputStream (  ) ;^147^^^^^^^[REPLACE] private final ByteArrayOutputStream output = new ByteArrayOutputStream (  ) ;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  RecentChange codeChange  [TYPE]  GZIPOutputStream stream  [TYPE]  Node jsRoot  root  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  Deque currentRunningPass  [TYPE]  Map codeSizeRecord  record  runtimeRecord  zippedCodeSizeRecord  [TYPE]  int curCodeSizeEstimate  curZippedCodeSizeEstimate  delta  len  newSize  oldSize  size 
[REPLACE]^this.trackGzippedSize =  true;^151^^^^^150^158^[REPLACE] this.trackGzippedSize = trackGzippedSize;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int size 
[ADD]^stream = new GZIPOutputStream ( output ) ;^153^154^155^156^157^150^158^[ADD] try { stream = new GZIPOutputStream ( output ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int size 
[REPLACE]^stream  =  stream ;^154^^^^^150^158^[REPLACE] stream = new GZIPOutputStream ( output ) ;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int size 
[REPLACE]^stream ;^154^^^^^150^158^[REPLACE] stream = new GZIPOutputStream ( output ) ;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int size 
[REPLACE]^return ;^156^^^^^150^158^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int size 
[ADD]^^155^156^^^^150^158^[ADD] catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] <init> [TYPE] PerformanceTracker$CodeSizeEstimatePrinter(boolean) [PARAMETER] boolean trackGzippedSize [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int size 
[REPLACE]^int len = str.getBytes (  ) ;^162^^^^^161^174^[REPLACE] int len = str.length (  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^if  ( len  ==  0 )  {^163^^^^^161^174^[REPLACE] if  ( len > 0 )  {^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^if  ( len > 0 )  {^166^^^^^161^174^[REPLACE] if  ( trackGzippedSize )  {^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[ADD]^stream.write ( str.getBytes (  )  ) ;^167^168^169^170^171^161^174^[ADD] try { stream.write ( str.getBytes (  )  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^stream.write ( str.length (  )  ) ;^168^^^^^161^174^[REPLACE] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^return ;^170^^^^^161^174^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^int len = str.length (  ) ;^168^^^^^161^174^[REPLACE] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[ADD]^^168^^^^^161^174^[ADD] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^size +=  null;^164^^^^^161^174^[REPLACE] size += len;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[ADD]^^164^^^^^161^174^[ADD] size += len;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^lastChar = str.charAt ( len  ||  1 ) ;^165^^^^^161^174^[REPLACE] lastChar = str.charAt ( len - 1 ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[ADD]^^165^^^^^161^174^[ADD] lastChar = str.charAt ( len - 1 ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[ADD]^^166^167^168^169^170^161^174^[ADD] if  ( trackGzippedSize )  { try { stream.write ( str.getBytes (  )  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^stream.write ( str .length (  )   ) ;^168^^^^^161^174^[REPLACE] stream.write ( str.getBytes (  )  ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^lastChar = str.charAt ( len  <=  1 ) ;^165^^^^^161^174^[REPLACE] lastChar = str.charAt ( len - 1 ) ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[ADD]^^170^^^^^161^174^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] append [TYPE] void [PARAMETER] String str [CLASS] CodeSizeEstimatePrinter   [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  GZIPOutputStream stream  [TYPE]  char lastChar  [TYPE]  ByteArrayOutputStream output  [TYPE]  String str  [TYPE]  IOException e  [TYPE]  int len  size 
[REPLACE]^return size;^178^^^^^177^179^[REPLACE] return lastChar;^[METHOD] getLastChar [TYPE] char [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return output.size (  ) ;^182^^^^^181^183^[REPLACE] return size;^[METHOD] calcSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^if  ( len > 0 )  {^186^^^^^185^198^[REPLACE] if  ( trackGzippedSize )  {^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return -1 >> 4;^196^^^^^185^198^[REPLACE] return -1;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[ADD]^stream.finish (  ) ;stream.flush (  ) ;stream.close (  ) ;return output.size (  ) ;^187^188^189^190^191^185^198^[ADD] try { stream.finish (  ) ; stream.flush (  ) ; stream.close (  ) ; return output.size (  ) ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return size;^191^^^^^185^198^[REPLACE] return output.size (  ) ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return ;^193^^^^^185^198^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return output .ByteArrayOutputStream (  )  ;^191^^^^^185^198^[REPLACE] return output.size (  ) ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return -4;^196^^^^^185^198^[REPLACE] return -1;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[ADD]^^193^^^^^185^198^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] calcZippedSize [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  IOException e  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return -1 / 2;^202^^^^^201^203^[REPLACE] return -1;^[METHOD] getCurrentBufferLength [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return -1 - 0;^207^^^^^206^208^[REPLACE] return -1;^[METHOD] getCurrentCharIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
[REPLACE]^return -4;^212^^^^^211^213^[REPLACE] return -1;^[METHOD] getCurrentLineIndex [TYPE] int [PARAMETER] [CLASS] CodeSizeEstimatePrinter   [TYPE]  char lastChar  [TYPE]  boolean false  trackGzippedSize  true  [TYPE]  ByteArrayOutputStream output  [TYPE]  GZIPOutputStream stream  [TYPE]  int len  size 
