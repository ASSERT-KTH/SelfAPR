[REPLACE]^Node subclassNode;^244^^^^^^^[REPLACE] final Node subclassNode;^[METHOD] <init> [TYPE] CodingConvention$SubclassType() [PARAMETER] [CLASS] SubclassRelationship   [TYPE]  SubclassType INHERITS  MIXIN  [TYPE]  boolean false  true 
[REPLACE]^this.type =  null;^251^^^^^249^256^[REPLACE] this.type = type;^[METHOD] <init> [TYPE] Node) [PARAMETER] SubclassType type Node subclassNode Node superclassNode [CLASS] SubclassRelationship   [TYPE]  String subclassName  superclassName  [TYPE]  boolean false  true  [TYPE]  SubclassType type  [TYPE]  Node subclassNode  superclassNode 
[ADD]^^251^^^^^249^256^[ADD] this.type = type;^[METHOD] <init> [TYPE] Node) [PARAMETER] SubclassType type Node subclassNode Node superclassNode [CLASS] SubclassRelationship   [TYPE]  String subclassName  superclassName  [TYPE]  boolean false  true  [TYPE]  SubclassType type  [TYPE]  Node subclassNode  superclassNode 
[REPLACE]^this.superclassNode = superclassNode; ;^252^^^^^249^256^[REPLACE] this.subclassNode = subclassNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] SubclassType type Node subclassNode Node superclassNode [CLASS] SubclassRelationship   [TYPE]  String subclassName  superclassName  [TYPE]  boolean false  true  [TYPE]  SubclassType type  [TYPE]  Node subclassNode  superclassNode 
[REPLACE]^this.subclassNode = subclassNode; ;^253^^^^^249^256^[REPLACE] this.superclassNode = superclassNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] SubclassType type Node subclassNode Node superclassNode [CLASS] SubclassRelationship   [TYPE]  String subclassName  superclassName  [TYPE]  boolean false  true  [TYPE]  SubclassType type  [TYPE]  Node subclassNode  superclassNode 
[REPLACE]^this.superclassName = superclassNode.getQualifiedName (  ) ; ;^254^^^^^249^256^[REPLACE] this.subclassName = subclassNode.getQualifiedName (  ) ;^[METHOD] <init> [TYPE] Node) [PARAMETER] SubclassType type Node subclassNode Node superclassNode [CLASS] SubclassRelationship   [TYPE]  String subclassName  superclassName  [TYPE]  boolean false  true  [TYPE]  SubclassType type  [TYPE]  Node subclassNode  superclassNode 
[REPLACE]^this.subclassName = subclassNode.getQualifiedName (  ) ; ;^255^^^^^249^256^[REPLACE] this.superclassName = superclassNode.getQualifiedName (  ) ;^[METHOD] <init> [TYPE] Node) [PARAMETER] SubclassType type Node subclassNode Node superclassNode [CLASS] SubclassRelationship   [TYPE]  String subclassName  superclassName  [TYPE]  boolean false  true  [TYPE]  SubclassType type  [TYPE]  Node subclassNode  superclassNode 
[REPLACE]^char  delegateBase;^267^^^^^^^[REPLACE] final String delegateBase;^[METHOD] <init> [TYPE] Node) [PARAMETER] SubclassType type Node subclassNode Node superclassNode [CLASS] DelegateRelationship   [TYPE]  String subclassName  superclassName  [TYPE]  boolean false  true  [TYPE]  SubclassType type  [TYPE]  Node subclassNode  superclassNode 
[REPLACE]^this.delegateBase =  delegator;^273^^^^^272^275^[REPLACE] this.delegateBase = delegateBase;^[METHOD] <init> [TYPE] String) [PARAMETER] String delegateBase String delegator [CLASS] DelegateRelationship   [TYPE]  String delegateBase  delegator  [TYPE]  boolean false  true 
[REPLACE]^this.delegator =  delegateBase;^274^^^^^272^275^[REPLACE] this.delegator = delegator;^[METHOD] <init> [TYPE] String) [PARAMETER] String delegateBase String delegator [CLASS] DelegateRelationship   [TYPE]  String delegateBase  delegator  [TYPE]  boolean false  true 
[REPLACE]^this.typeName =  null;^290^^^^^289^292^[REPLACE] this.typeName = typeName;^[METHOD] <init> [TYPE] Node) [PARAMETER] String typeName Node objectNode [CLASS] ObjectLiteralCast   [TYPE]  Node objectNode  [TYPE]  String typeName  [TYPE]  boolean false  true 
[REPLACE]^this.objectNode =  null;^291^^^^^289^292^[REPLACE] this.objectNode = objectNode;^[METHOD] <init> [TYPE] Node) [PARAMETER] String typeName Node objectNode [CLASS] ObjectLiteralCast   [TYPE]  Node objectNode  [TYPE]  String typeName  [TYPE]  boolean false  true 
