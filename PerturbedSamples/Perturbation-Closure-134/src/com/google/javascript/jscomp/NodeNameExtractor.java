[REPLACE]^private  String delimiter;^33^^^^^^^[REPLACE] private final char delimiter;^ [CLASS] NodeNameExtractor  
[REPLACE]^private  short  nextUniqueInt = 0;^34^^^^^^^[REPLACE] private int nextUniqueInt = 0;^ [CLASS] NodeNameExtractor  
[REPLACE]^this.delimiter =  null;^37^^^^^36^38^[REPLACE] this.delimiter = delimiter;^[METHOD] <init> [TYPE] NodeNameExtractor(char) [PARAMETER] char delimiter [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  int nextUniqueInt  [TYPE]  boolean false  true 
[ADD]^^37^^^^^36^38^[ADD] this.delimiter = delimiter;^[METHOD] <init> [TYPE] NodeNameExtractor(char) [PARAMETER] char delimiter [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  int nextUniqueInt  [TYPE]  boolean false  true 
[REPLACE]^if  ( "prototype".equals ( nameInsideBrackets )  )  {^58^^^^^48^95^[REPLACE] if  ( "prototype".equals ( rhsOfDotName )  )  {^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REMOVE]^if  ( "prototype".equals ( nameInsideBrackets )  )  {     return nameOutsideBrackets +  ( delimiter ) ; }else {     return  ( nameOutsideBrackets +  ( delimiter )  )  + nameInsideBrackets; }^58^^^^^48^95^[REMOVE] ^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return lhsOfDotName + delimiter +nameOutsideBrackets;^61^^^^^58^62^[REPLACE] return lhsOfDotName + delimiter + rhsOfDotName;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return rhsOfDotName + delimiter;^59^^^^^48^95^[REPLACE] return lhsOfDotName + delimiter;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^if  ( "prototype".equals ( rhsOfDotName )  )  {^68^^^^^48^95^[REPLACE] if  ( "prototype".equals ( nameInsideBrackets )  )  {^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return rhsOfDotName + delimiter + nameInsideBrackets;^71^^^^^68^72^[REPLACE] return nameOutsideBrackets + delimiter + nameInsideBrackets;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return rhsOfDotName + delimiter;^69^^^^^48^95^[REPLACE] return nameOutsideBrackets + delimiter;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^if  ( sb.length (  )  + 2 > 0 )  {^88^^^^^48^95^[REPLACE] if  ( sb.length (  )  > 0 )  {^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ;^89^^^^^48^95^[REPLACE] sb.append ( delimiter ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^for  ( Node child = node.getFirstChild (  ) ; child == null;^86^^^^^48^95^[REPLACE] for  ( Node child = node.getFirstChild (  ) ; child != null;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^if  ( sb.length (  )  - 2 > 0  )  {^88^^^^^86^92^[REPLACE] if  ( sb.length (  )  > 0 )  {^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[ADD]^sb.append ( delimiter ) ;^88^89^90^^^86^92^[ADD] if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ; }^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ;^89^^^^^86^92^[REPLACE] sb.append ( delimiter ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^child =  null.getNext (  )  )  {^87^^^^^48^95^[REPLACE] child = child.getNext (  )  )  {^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[ADD]^^87^88^89^^^48^95^[ADD] child = child.getNext (  )  )  { if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return outsideBrackets .getFirstChild (  )  ;^52^^^^^48^95^[REPLACE] return functionNameNode.getString (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return lhsOfDotName  ||  delimiter;^59^^^^^48^95^[REPLACE] return lhsOfDotName + delimiter;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return lhsOfDotName + delimiter +nameOutsideBrackets;^61^^^^^48^95^[REPLACE] return lhsOfDotName + delimiter + rhsOfDotName;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return nameOutsideBrackets + delimiter +rhsOfDotName;^71^^^^^48^95^[REPLACE] return nameOutsideBrackets + delimiter + nameInsideBrackets;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return rhsOfDot.getType (  ) ;^74^^^^^48^95^[REPLACE] return node.getString (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return TokenStream.isJSIdentifier ( outsideBrackets.getType (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^48^95^[REPLACE] return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return   node   ;^79^^^^^48^95^[REPLACE] return NodeUtil.getStringValue ( node ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return "null";^81^^^^^48^95^[REPLACE] return "this";^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return getName ( rhsOfDot.getString (  )  ) ;^83^^^^^48^95^[REPLACE] return getName ( node.getFirstChild (  )  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^return sb .StringBuilder (  )  ;^93^^^^^48^95^[REPLACE] return sb.toString (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^Node functionNameNode = rhsOfDot.getFirstChild (  ) ;^51^^^^^48^95^[REPLACE] Node functionNameNode = node.getFirstChild (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^Node lhsOfDot = rhsOfDot.getFirstChild (  ) ;^54^^^^^48^95^[REPLACE] Node lhsOfDot = node.getFirstChild (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^Node rhsOfDot = rhsOfDot.getNext (  ) ;^55^^^^^48^95^[REPLACE] Node rhsOfDot = lhsOfDot.getNext (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^String nodeName = getName ( lhsOfDot ) ;^56^^^^^48^95^[REPLACE] String lhsOfDotName = getName ( lhsOfDot ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[ADD]^^56^^^^^48^95^[ADD] String lhsOfDotName = getName ( lhsOfDot ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^String outsideBracketsName = getName ( rhsOfDot ) ;^57^^^^^48^95^[REPLACE] String rhsOfDotName = getName ( rhsOfDot ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^Node outsideBrackets = outsideBrackets.getFirstChild (  ) ;^64^^^^^48^95^[REPLACE] Node outsideBrackets = node.getFirstChild (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^Node insideBrackets = lhsOfDot.getNext (  ) ;^65^^^^^48^95^[REPLACE] Node insideBrackets = outsideBrackets.getNext (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^String nameOutsideBrackets = getName ( rhsOfDot ) ;^66^^^^^48^95^[REPLACE] String nameOutsideBrackets = getName ( outsideBrackets ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[ADD]^^66^^^^^48^95^[ADD] String nameOutsideBrackets = getName ( outsideBrackets ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^String nameInsideBrackets = getName ( rhsOfDot ) ;^67^^^^^48^95^[REPLACE] String nameInsideBrackets = getName ( insideBrackets ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[ADD]^^67^^^^^48^95^[ADD] String nameInsideBrackets = getName ( insideBrackets ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^Node outsideBrackets = node.getFirstChild (  ) ;^85^^^^^48^95^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[ADD]^^85^^^^^48^95^[ADD] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
[REPLACE]^for  ( Node child = rhsOfDot .getString (  )  ; child != null;^86^^^^^48^95^[REPLACE] for  ( Node child = node.getFirstChild (  ) ; child != null;^[METHOD] getName [TYPE] String [PARAMETER] Node node [CLASS] NodeNameExtractor   [TYPE]  char delimiter  [TYPE]  String lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int nextUniqueInt  [TYPE]  Node child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot 
