[REPLACE]^static final long serialVersionUID  = null ;^52^^^^^^^[REPLACE] static final long serialVersionUID = 4174889037736658296L;^ [CLASS] ObjArray  
[REPLACE]^private  long  size;^387^^^^^^^[REPLACE] private int size;^ [CLASS] ObjArray  
[REPLACE]^private  final  long  FIELDS_STORE_SIZE = 5L;^391^^^^^^^[REPLACE] private static final int FIELDS_STORE_SIZE = 5;^ [CLASS] ObjArray  
[REPLACE]^return i;^58^^^^^56^59^[REPLACE] return sealed;^[METHOD] isSealed [TYPE] boolean [PARAMETER] [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  size  [TYPE]  Object[] data 
[REPLACE]^sealed = false;^63^^^^^61^64^[REPLACE] sealed = true;^[METHOD] seal [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  size  [TYPE]  Object[] data 
[ADD]^^63^^^^^61^64^[ADD] sealed = true;^[METHOD] seal [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  size  [TYPE]  Object[] data 
[REPLACE]^return size  ||  0;^68^^^^^66^69^[REPLACE] return size == 0;^[METHOD] isEmpty [TYPE] boolean [PARAMETER] [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  size  [TYPE]  Object[] data 
[REPLACE]^case 4: return f4;^73^^^^^71^74^[REPLACE] return size;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  size  [TYPE]  Object[] data 
[REPLACE]^} else if  ( newSize > N )  {^78^^^^^76^91^[REPLACE] if   (" ")  ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^78^^^^^76^91^[REPLACE] if   (" ")  ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (" ")  ; if  ( sealed )  throw onSeledMutation (  ) ;^79^^^^^76^91^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^79^^^^^76^91^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^80^^^^^76^91^[REPLACE] int N = size;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize  >=  N )  {^81^^^^^76^91^[REPLACE] if  ( newSize < N )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[ADD]^^81^82^83^84^^76^91^[ADD] if  ( newSize < N )  { for  ( int i = newSize; i != N; ++i )  { setImpl ( i, null ) ; }^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^}  if  ( newSize  <=  N )  {^85^^^^^76^91^[REPLACE] } else if  ( newSize > N )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[ADD]^}   ensureCapacity ( newSize ) ;^85^86^87^88^^76^91^[ADD] else if  ( newSize > N )  { if  ( newSize > FIELDS_STORE_SIZE )  { ensureCapacity ( newSize ) ; }^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( size  !=  FIELDS_STORE_SIZE )  {^86^^^^^76^91^[REPLACE] if  ( newSize > FIELDS_STORE_SIZE )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REMOVE]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^86^^^^^76^91^[REMOVE] ^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^ensureCapacity ( size ) ;^87^^^^^76^91^[REPLACE] ensureCapacity ( newSize ) ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize  >=  FIELDS_STORE_SIZE )  {^86^^^^^76^91^[REPLACE] if  ( newSize > FIELDS_STORE_SIZE )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[ADD]^ensureCapacity ( newSize ) ;^86^87^88^^^76^91^[ADD] if  ( newSize > FIELDS_STORE_SIZE )  { ensureCapacity ( newSize ) ; }^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[ADD]^^87^^^^^76^91^[ADD] ensureCapacity ( newSize ) ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( int i = newSize; i  ==  N; ++i )  {^82^^^^^76^91^[REPLACE] for  ( int i = newSize; i != N; ++i )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^setImpl ( size, true ) ;^83^^^^^76^91^[REPLACE] setImpl ( i, null ) ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REMOVE]^setImpl ( i, obj ) ;^83^^^^^76^91^[REMOVE] ^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( int i = size; i != N; ++i )  {^82^^^^^76^91^[REPLACE] for  ( int i = newSize; i != N; ++i )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[ADD]^^82^83^84^^^76^91^[ADD] for  ( int i = newSize; i != N; ++i )  { setImpl ( i, null ) ; }^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^}  else {^85^^^^^76^91^[REPLACE] } else if  ( newSize > N )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize  <  FIELDS_STORE_SIZE )  {^86^^^^^76^91^[REPLACE] if  ( newSize > FIELDS_STORE_SIZE )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize  < size )  {^86^^^^^76^91^[REPLACE] if  ( newSize > FIELDS_STORE_SIZE )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( sizent i = newSize; i  ==  N; ++i )  {^82^^^^^76^91^[REPLACE] for  ( int i = newSize; i != N; ++i )  {^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^setImpl ( size, this ) ;^83^^^^^76^91^[REPLACE] setImpl ( i, null ) ;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size =  i;^90^^^^^76^91^[REPLACE] size = newSize;^[METHOD] setSize [TYPE] void [PARAMETER] int newSize [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if ((0  <= index && index < size)) throw onInvalidIndex(index, size);^95^^^^^93^97^[REPLACE] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[METHOD] get [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^95^^^^^93^97^[REPLACE] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[METHOD] get [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( ! ( 0 <= size && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^[REPLACE] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[METHOD] get [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; ;^95^^^^^93^97^[REPLACE] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[METHOD] get [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^95^96^97^^^93^97^[ADD] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; return getImpl ( index ) ; }^[METHOD] get [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return getImpl ( N - 1 ) ;^96^^^^^93^97^[REPLACE] return getImpl ( index ) ;^[METHOD] get [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if ((0 <= index && index < size)) throw onInvalidIndex(index, size);^101^^^^^99^104^[REPLACE] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^101^102^103^104^^99^104^[ADD] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; if  ( sealed )  throw onSeledMutation (  ) ; setImpl ( index, value ) ; }^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^101^^^^^99^104^[REPLACE] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( ! ( 0 <= size && index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^[REPLACE] if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (" ")  ; if  ( sealed )  throw onSeledMutation (  ) ;^102^^^^^99^104^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^102^103^104^^^99^104^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; setImpl ( index, value ) ; }^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^102^^^^^99^104^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^setImpl ( index, value ) ;^102^103^104^^^99^104^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; setImpl ( index, value ) ; }^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^setImpl ( i, obj ) ;^103^^^^^99^104^[REPLACE] setImpl ( index, value ) ;^[METHOD] set [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: return f4;^110^^^^^107^117^[REPLACE] case 0: return f0;^[METHOD] getImpl [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: return f4;^111^^^^^107^117^[REPLACE] case 1: return f1;^[METHOD] getImpl [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: return f4;^112^^^^^107^117^[REPLACE] case 2: return f2;^[METHOD] getImpl [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: return f4;^113^^^^^107^117^[REPLACE] case 3: return f3;^[METHOD] getImpl [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 3: return f3;^114^^^^^107^117^[REPLACE] case 4: return f4;^[METHOD] getImpl [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return data[index -size];^116^^^^^107^117^[REPLACE] return data[index - FIELDS_STORE_SIZE];^[METHOD] getImpl [TYPE] Object [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 2: f2 = value; break; ;^123^^^^^120^131^[REPLACE] case 0: f0 = value; break;^[METHOD] setImpl [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 2: f2 = value; break; ;^124^^^^^120^131^[REPLACE] case 1: f1 = value; break;^[METHOD] setImpl [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: f4 = value; break; ;^125^^^^^120^131^[REPLACE] case 2: f2 = value; break;^[METHOD] setImpl [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 2: f2 = value; break; ;^126^^^^^120^131^[REPLACE] case 3: f3 = value; break;^[METHOD] setImpl [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^126^127^^^^120^131^[ADD] case 3: f3 = value; break; case 4: f4 = value; break;^[METHOD] setImpl [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 2: f2 = value; break; ;^127^^^^^120^131^[REPLACE] case 4: f4 = value; break;^[METHOD] setImpl [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^default: data[index  <=  FIELDS_STORE_SIZE] = value;^128^^^^^120^131^[REPLACE] default: data[index - FIELDS_STORE_SIZE] = value;^[METHOD] setImpl [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object f0  f1  f2  f3  f4  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^135^^^^^133^143^[REPLACE] int N = size;^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( current != obj ) {^138^^^^^133^143^[REPLACE] if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return size;^139^^^^^133^143^[REPLACE] return i;^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( int i = 0; i  ==  N; ++i )  {^136^^^^^133^143^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( current != obj ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^[REPLACE] if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^Object current = getImpl ( size ) ;^137^^^^^133^143^[REPLACE] Object current = getImpl ( i ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^137^^^^^133^143^[ADD] Object current = getImpl ( i ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( int i = 0 * 0; i != N; ++i )  {^136^^^^^133^143^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return -1 << 3;^142^^^^^133^143^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( current != obj ) {^150^^^^^145^155^[REPLACE] if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return size;^151^^^^^145^155^[REPLACE] return i;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for (int size = size; i  ==  0;) {^147^^^^^145^155^[REPLACE] for  ( int i = size; i != 0; )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( current != obj ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^[REPLACE] if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^Object current = getImpl ( size ) ;^149^^^^^145^155^[REPLACE] Object current = getImpl ( i ) ;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( int i = size; i != 0; )  { --i;^147^^^^^145^155^[REPLACE] for  ( int i = size; i != 0; )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^149^^^^^145^155^[ADD] Object current = getImpl ( i ) ;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return -1L;^154^^^^^145^155^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] Object obj [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^159^^^^^157^162^[REPLACE] int N = size;^[METHOD] peek [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^159^160^^^^157^162^[ADD] int N = size; if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[METHOD] peek [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize  !=  0 )  throw onEmptyStackTopRead (  ) ;^160^^^^^157^162^[REPLACE] if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[METHOD] peek [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^160^161^162^^^157^162^[ADD] if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; return getImpl ( N - 1 ) ; }^[METHOD] peek [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( sealed )  throw onSeledMutation (  ) ; ;^160^^^^^157^162^[REPLACE] if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[METHOD] peek [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return getImpl ( index ) ;^161^^^^^157^162^[REPLACE] return getImpl ( N - 1 ) ;^[METHOD] peek [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (" ")  ; if  ( sealed )  throw onSeledMutation (  ) ;^167^^^^^165^184^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REMOVE]^if  ( N >=  ( FIELDS_STORE_SIZE )  )  {     ensureCapacity (  ( N + 1 )  ) ; }^167^^^^^165^184^[REMOVE] ^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^167^^^^^165^184^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^167^168^169^170^^165^184^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; int N = size; --N; Object top;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^167^^^^^165^184^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^168^^^^^165^184^[REPLACE] int N = size;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^Object tmp;^170^^^^^165^184^[REPLACE] Object top;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^170^^^^^165^184^[ADD] Object top;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: top = f4; f4 = null; break; ;^173^^^^^165^184^[REPLACE] case 0: top = f0; f0 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^173^^^^^165^184^[ADD] case 0: top = f0; f0 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 0: top = f0; f0 = false; break;^173^^^^^165^184^[REPLACE] case 0: top = f0; f0 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: top = f4; f4 = null; break; ;^174^^^^^165^184^[REPLACE] case 1: top = f1; f1 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 1: top = f1; f1 = this; break;^174^^^^^165^184^[REPLACE] case 1: top = f1; f1 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: top = f4; f4 = null; break; ;^175^^^^^165^184^[REPLACE] case 2: top = f2; f2 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^175^^^^^165^184^[ADD] case 2: top = f2; f2 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 2: top = f2; f2 = false; break;^175^^^^^165^184^[REPLACE] case 2: top = f2; f2 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: top = f4; f4 = null; break; ;^176^^^^^165^184^[REPLACE] case 3: top = f3; f3 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 3: top = f3; f3 = null; break; ;^177^^^^^165^184^[REPLACE] case 4: top = f4; f4 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: top = f4; f4 = false; break;^177^^^^^165^184^[REPLACE] case 4: top = f4; f4 = null; break;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^top = data[N -newSize];^179^^^^^165^184^[REPLACE] top = data[N - FIELDS_STORE_SIZE];^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^179^^^^^165^184^[ADD] top = data[N - FIELDS_STORE_SIZE];^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^data[N -newSize] = null;^180^^^^^165^184^[REPLACE] data[N - FIELDS_STORE_SIZE] = null;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^172^^^^^165^184^[REPLACE] case -1: throw onEmptyStackTopRead (  ) ;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^172^^^^^165^184^[ADD] case -1: throw onEmptyStackTopRead (  ) ;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size = 0; ;^182^^^^^165^184^[REPLACE] size = N;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^182^^^^^165^184^[ADD] size = N;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^case 4: return f4;^183^^^^^165^184^[REPLACE] return top;^[METHOD] pop [TYPE] Object [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^toArray ( array, 0 ) ;^188^^^^^186^189^[REPLACE] add ( value ) ;^[METHOD] push [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (" ")  ; if  ( sealed )  throw onSeledMutation (  ) ;^193^^^^^191^200^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^193^194^195^196^197^191^200^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; int N = size; if  ( N >= FIELDS_STORE_SIZE )  { ensureCapacity ( N + 1 ) ; }^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^193^^^^^191^200^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^194^^^^^191^200^[REPLACE] int N = size;^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^194^^^^^191^200^[ADD] int N = size;^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N  !=  FIELDS_STORE_SIZE )  {^195^^^^^191^200^[REPLACE] if  ( N >= FIELDS_STORE_SIZE )  {^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REMOVE]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^195^^^^^191^200^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^ensureCapacity (newSize + 1 ) ;^196^^^^^191^200^[REPLACE] ensureCapacity ( N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size = N +newSize;^198^^^^^191^200^[REPLACE] size = N + 1;^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^setImpl ( N, current ) ;^199^^^^^191^200^[REPLACE] setImpl ( N, value ) ;^[METHOD] add [TYPE] void [PARAMETER] Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^205^^^^^204^237^[REPLACE] int N = size;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (  ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^204^237^[REPLACE] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^206^207^208^209^210^204^237^[ADD] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0:^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; ;^206^^^^^204^237^[REPLACE] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^206^^^^^204^237^[REPLACE] if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (" ")  ; if  ( sealed )  throw onSeledMutation (  ) ;^207^^^^^204^237^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^207^^^^^204^237^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^Object tmp;^207^208^209^210^211^204^237^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^207^^^^^204^237^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^Object top;^208^^^^^204^237^[REPLACE] Object tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^208^^^^^204^237^[ADD] Object tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N  ||  0 * 0 )  { f0 * 0 = value; break; }^211^^^^^204^237^[REPLACE] if  ( N == 0 )  { f0 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  { f0 = null; break; } f0 = f1; ;^211^^^^^204^237^[REPLACE] if  ( N == 0 )  { f0 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^tmp = f0; f0 = value; value = tmp;^211^212^213^214^^204^237^[ADD] if  ( N == 0 )  { f0 = value; break; } tmp = f0; f0 = value; value = tmp; case 1: if  ( N == 1 )  { f1 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N  &&  1 )  { f1 = value; break; }^214^^^^^204^237^[REPLACE] if  ( N == 1 )  { f1 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^tmp = f1; f1 = value; value = tmp;^214^215^216^217^^204^237^[ADD] if  ( N == 1 )  { f1 = value; break; } tmp = f1; f1 = value; value = tmp; case 2: if  ( N == 2 )  { f2 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 1 )  { f1 = null; break; } f1 = f2; ;^214^^^^^204^237^[REPLACE] if  ( N == 1 )  { f1 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N  &&  2 )  { f2 = current; break; }^217^^^^^204^237^[REPLACE] if  ( N == 2 )  { f2 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 2 )  { f2 = null; break; } f2 = f3; ;^217^^^^^204^237^[REPLACE] if  ( N == 2 )  { f2 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (newSize  ||  3 )  { f3 = value; break; }^220^^^^^204^237^[REPLACE] if  ( N == 3 )  { f3 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 3 )  { f3 = null; break; } f3 = f4; ;^220^^^^^204^237^[REPLACE] if  ( N == 3 )  { f3 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^tmp = f3; f3 = value; value = tmp;^220^221^222^223^^204^237^[ADD] if  ( N == 3 )  { f3 = value; break; } tmp = f3; f3 = value; value = tmp; case 4: if  ( N == 4 )  { f4 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (newSize  ||  4 )  { f4 = current; break; }^223^^^^^204^237^[REPLACE] if  ( N == 4 )  { f4 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N =^223^^^^^204^237^[REPLACE] if  ( N == 4 )  { f4 = value; break; }^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^tmp = f4; f4 = value; value = tmp;index = FIELDS_STORE_SIZE;^223^224^^226^227^204^237^[ADD] if  ( N == 4 )  { f4 = value; break; } tmp = f4; f4 = value; value = tmp; index = FIELDS_STORE_SIZE; default:^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( size  == size )  {^229^^^^^204^237^[REPLACE] if  ( index != N )  {^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^System.arraycopy ( data, index  &&  FIELDS_STORE_SIZE, data, index  &&  FIELDS_STORE_SIZE + 1, N  &&  index ) ;^230^231^232^^^204^237^[REPLACE] System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp = f1; f1 = value; value = tmp; ;^212^^^^^204^237^[REPLACE] tmp = f0; f0 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp = f2; f2 = value; value = tmp; ;^215^^^^^204^237^[REPLACE] tmp = f1; f1 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^215^^^^^204^237^[ADD] tmp = f1; f1 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp = f1; f1 = value; value = tmp; ;^218^^^^^204^237^[REPLACE] tmp = f2; f2 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^218^^^^^204^237^[ADD] tmp = f2; f2 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp = f1; f1 = value; value = tmp; ;^221^^^^^204^237^[REPLACE] tmp = f3; f3 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^tmp = f1; f1 = value; value = tmp; ;^224^^^^^204^237^[REPLACE] tmp = f4; f4 = value; value = tmp;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^index  =  index ;^226^^^^^204^237^[REPLACE] index = FIELDS_STORE_SIZE;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^data[index -size] = value;^234^^^^^204^237^[REPLACE] data[index - FIELDS_STORE_SIZE] = value;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^234^^^^^204^237^[ADD] data[index - FIELDS_STORE_SIZE] = value;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size =newSize + 1;^236^^^^^204^237^[REPLACE] size = N + 1;^[METHOD] add [TYPE] void [PARAMETER] int index Object value [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^242^^^^^241^273^[REPLACE] int N = size;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  (  ( true && true )  )  throw onInvalidIndex ( index, newSize ) ;^243^^^^^241^273^[REPLACE] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; ;^243^^^^^241^273^[REPLACE] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( ! ( 0 <= index && index < newSize )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^241^273^[REPLACE] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^243^244^245^246^247^241^273^[ADD] if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ; if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0:^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (" ")  ; if  ( sealed )  throw onSeledMutation (  ) ;^244^^^^^241^273^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^244^245^246^247^248^241^273^[ADD] if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^244^^^^^241^273^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N !=newSize )  { f0 = null; break; }^248^^^^^241^273^[REPLACE] if  ( N == 0 )  { f0 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^f0 = f1;^248^249^250^251^^241^273^[ADD] if  ( N == 0 )  { f0 = null; break; } f0 = f1; case 1: if  ( N == 1 )  { f1 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 2 )  { f2 = null; break; } f2 = f3; ;^248^^^^^241^273^[REPLACE] if  ( N == 0 )  { f0 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize != 1 / 2 )  { f1 / 2 = null; break; }^251^^^^^241^273^[REPLACE] if  ( N == 1 )  { f1 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 1 )  { f1 = true; break; }^251^^^^^241^273^[REPLACE] if  ( N == 1 )  { f1 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^f1 = f2;^251^252^253^254^^241^273^[ADD] if  ( N == 1 )  { f1 = null; break; } f1 = f2; case 2: if  ( N == 2 )  { f2 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N != 2 )  { f2 = null; break; }^254^^^^^241^273^[REPLACE] if  ( N == 2 )  { f2 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^254^255^256^257^^241^273^[ADD] if  ( N == 2 )  { f2 = null; break; } f2 = f3; case 3: if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 2 )  { f2 = this; break; }^254^^^^^241^273^[REPLACE] if  ( N == 2 )  { f2 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^f2 = f3;^254^255^256^257^^241^273^[ADD] if  ( N == 2 )  { f2 = null; break; } f2 = f3; case 3: if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N !=newSize )  { f3 = null; break; }^257^^^^^241^273^[REPLACE] if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 3 )  { f3 = false; break; }^257^^^^^241^273^[REPLACE] if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( newSize != 5 )  { f5 = null; break; }^260^^^^^241^273^[REPLACE] if  ( N == 4 )  { f4 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^260^261^^263^264^241^273^[ADD] if  ( N == 4 )  { f4 = null; break; } f4 = data[0]; index = FIELDS_STORE_SIZE; default:^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 2 )  { f2 = null; break; } f2 = f3; ;^260^^^^^241^273^[REPLACE] if  ( N == 4 )  { f4 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^f4 = data[0];index = FIELDS_STORE_SIZE;^260^261^^263^264^241^273^[ADD] if  ( N == 4 )  { f4 = null; break; } f4 = data[0]; index = FIELDS_STORE_SIZE; default:^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( size  ==  newSize )  {^265^^^^^241^273^[REPLACE] if  ( index != N )  {^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^265^266^267^268^269^241^273^[ADD] if  ( index != N )  { System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^System.arraycopy ( data, index -size + 1, data, index - FIELDS_STORE_SIZE, newSize - index ) ;^266^267^268^^^241^273^[REPLACE] System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  { f0 = true; break; }^248^^^^^241^273^[REPLACE] if  ( N == 0 )  { f0 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f3 = f4; ;^249^^^^^241^273^[REPLACE] f0 = f1;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f3 = f4; ;^252^^^^^241^273^[REPLACE] f1 = f2;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 2 )  { f2 = true; break; }^254^^^^^241^273^[REPLACE] if  ( N == 2 )  { f2 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f3 = f4; ;^255^^^^^241^273^[REPLACE] f2 = f3;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^255^^^^^241^273^[ADD] f2 = f3;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 3 )  { f3 = true; break; }^257^^^^^241^273^[REPLACE] if  ( N == 3 )  { f3 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f1 = f2; ;^258^^^^^241^273^[REPLACE] f3 = f4;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^258^^^^^241^273^[ADD] f3 = f4;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 4 )  { f4 = true; break; }^260^^^^^241^273^[REPLACE] if  ( N == 4 )  { f4 = null; break; }^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^f4 = data[0L];^261^^^^^241^273^[REPLACE] f4 = data[0];^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^261^^^^^241^273^[ADD] f4 = data[0];^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^index ;^263^^^^^241^273^[REPLACE] index = FIELDS_STORE_SIZE;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[ADD]^^263^^^^^241^273^[ADD] index = FIELDS_STORE_SIZE;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^data[N -newSize] = null;^270^^^^^241^273^[REPLACE] data[N - FIELDS_STORE_SIZE] = null;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size = 0; ;^272^^^^^241^273^[REPLACE] size = N;^[METHOD] remove [TYPE] void [PARAMETER] int index [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if   (" ")  ; if  ( sealed )  throw onSeledMutation (  ) ;^277^^^^^275^283^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REMOVE]^if  ( N >=  ( FIELDS_STORE_SIZE )  )  {     ensureCapacity (  ( N + 1 )  ) ; }^277^^^^^275^283^[REMOVE] ^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^277^^^^^275^283^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^return ;^277^^^^^275^283^[REPLACE] if  ( sealed )  throw onSeledMutation (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^int alloc = data.length;^278^^^^^275^283^[REPLACE] int N = size;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( int i = 3; i  ==  N; ++i )  {^279^^^^^275^283^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^setImpl ( i, true ) ;^280^^^^^275^283^[REPLACE] setImpl ( i, null ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REMOVE]^setImpl ( i, obj ) ;^280^^^^^275^283^[REMOVE] ^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^for  ( int i = 0 + 4; i != N; ++i )  {^279^^^^^275^283^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^size = N; ;^282^^^^^275^283^[REPLACE] size = 0;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] data 
[REPLACE]^Object current = getImpl ( i ) ;^287^^^^^285^290^[REPLACE] Object[] array = new Object[size];^[METHOD] toArray [TYPE] Object[] [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] array  data 
[REPLACE]^toArray ( array, 4 ) ;^288^^^^^285^290^[REPLACE] toArray ( array, 0 ) ;^[METHOD] toArray [TYPE] Object[] [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] array  data 
[REPLACE]^return data;^289^^^^^285^290^[REPLACE] return array;^[METHOD] toArray [TYPE] Object[] [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] array  data 
[REPLACE]^toArray ( array, 2 ) ;^294^^^^^292^295^[REPLACE] toArray ( array, 0 ) ;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  size  [TYPE]  Object[] array  data 
[REPLACE]^int alloc = data.length;^300^^^^^298^312^[REPLACE] int N = size;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[REPLACE]^case 5: array[offset  ^  4] = f4;^305^^^^^298^312^[REPLACE] case 5: array[offset + 4] = f4;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[ADD]^case 4: array[offset + 3] = f3;^305^306^^^^298^312^[ADD] case 5: array[offset + 4] = f4; case 4: array[offset + 3] = f3;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[REPLACE]^case 4: array[offset  |  2] = f2;^306^^^^^298^312^[REPLACE] case 4: array[offset + 3] = f3;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[ADD]^^306^^^^^298^312^[ADD] case 4: array[offset + 3] = f3;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[REPLACE]^case 3: array[offset  ^  3] = f3;^307^^^^^298^312^[REPLACE] case 3: array[offset + 2] = f2;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[REPLACE]^case 2: array[offset +size] = f0 ;^308^^^^^298^312^[REPLACE] case 2: array[offset + 1] = f1;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[REPLACE]^case 1: array[offset +size] = f0;^309^^^^^298^312^[REPLACE] case 1: array[offset + 0] = f0;^[METHOD] toArray [TYPE] void [PARAMETER] Object[] array int offset [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  [TYPE]  Object[] array  data 
[REPLACE]^int required = newSize -size;^316^^^^^315^343^[REPLACE] int required = minimalCapacity - FIELDS_STORE_SIZE;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^if   (" ")  ;^316^317^^^^315^343^[ADD] int required = minimalCapacity - FIELDS_STORE_SIZE; if   (" ")  ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^} else if  ( newSize > N )  {^317^^^^^315^343^[REPLACE] if   (" ")  ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^return ;^317^^^^^315^343^[REPLACE] if   (" ")  ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( data != null )  {^318^^^^^315^343^[REPLACE] if  ( data == null )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REMOVE]^if  ( alloc < required )  {     if  ( alloc <=  ( FIELDS_STORE_SIZE )  )  {         alloc =  ( FIELDS_STORE_SIZE )  * 2;     }else {         alloc *= 2;     }     if  ( alloc < required )  {         alloc = required;     }     Object[] tmp = new Object[alloc];     if  (  ( size )  >  ( FIELDS_STORE_SIZE )  )  {         arraycopy ( data, 0, tmp, 0,  (  ( size )  -  ( FIELDS_STORE_SIZE )  )  ) ;     }     data = tmp; }^318^^^^^315^343^[REMOVE] ^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  (minimalCapacity  ==  required )  {^326^^^^^318^342^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^326^327^328^329^330^318^342^[ADD] if  ( alloc < required )  { if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( minimalCapacity  >= minimalCapacity )  {^327^^^^^318^342^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 3;^330^^^^^318^342^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc = FIELDS_STORE_SIZE  ;^328^^^^^318^342^[REPLACE] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  <=  required )  {^332^^^^^318^342^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  size;^333^^^^^318^342^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^333^^^^^318^342^[ADD] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if (size  <=  offset) {^336^^^^^318^342^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^336^337^338^339^^318^342^[ADD] if  ( size > FIELDS_STORE_SIZE )  { System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ; }^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 0, tmp, 0,required - FIELDS_STORE_SIZE);^337^338^^^^318^342^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^328^^^^^318^342^[ADD] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  null;^333^^^^^318^342^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^data =  null;^340^^^^^318^342^[REPLACE] data = tmp;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^Object obj = is.readObject (  ) ;^335^^^^^318^342^[REPLACE] Object[] tmp = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  (minimalCapacity  ==  FIELDS_STORE_SIZE )  {^327^^^^^318^342^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 2L;^330^^^^^318^342^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  ==  size )  {^332^^^^^318^342^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if (size  <=  FIELDS_STORE_SIZE) {^336^^^^^318^342^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 0 , tmp, 0 , size  ^  FIELDS_STORE_SIZE);^337^338^^^^318^342^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 2 + 4;^330^^^^^318^342^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int N = size;^325^^^^^318^342^[REPLACE] int alloc = data.length;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^335^^^^^318^342^[ADD] Object[] tmp = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  <=  required )  {^320^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  size;^321^^^^^315^343^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^data =  new Object[minimalCapacity];^323^^^^^315^343^[REPLACE] data = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int alloc = FIELDS_STORE_SIZE  ;^319^^^^^315^343^[REPLACE] int alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  (minimalCapacity  >  required )  {^320^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  null;^321^^^^^315^343^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( minimalCapacity  >  size )  {^326^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  >  FIELDS_STORE_SIZE )  {^327^^^^^315^343^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 1;^330^^^^^327^331^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc = FIELDS_STORE_SIZE  ;^328^^^^^315^343^[REPLACE] alloc = FIELDS_STORE_SIZE * 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( alloc  >=  required )  {^332^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  size;^333^^^^^315^343^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if (size  <=  FIELDS_STORE_SIZE) {^336^^^^^315^343^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^336^337^338^339^^315^343^[ADD] if  ( size > FIELDS_STORE_SIZE )  { System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ; }^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 2, tmp, 2,required - FIELDS_STORE_SIZE);^337^338^^^^315^343^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 4;^330^^^^^315^343^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[ADD]^^330^^^^^315^343^[ADD] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^data =  null;^340^^^^^315^343^[REPLACE] data = tmp;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^Object obj = is.readObject (  ) ;^335^^^^^315^343^[REPLACE] Object[] tmp = new Object[alloc];^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  ( minimalCapacity  ==  FIELDS_STORE_SIZE )  {^327^^^^^315^343^[REPLACE] if  ( alloc <= FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 4;^330^^^^^327^331^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if  (minimalCapacity  >=  required )  {^332^^^^^315^343^[REPLACE] if  ( alloc < required )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^if (size  ==  FIELDS_STORE_SIZE) {^336^^^^^315^343^[REPLACE] if  ( size > FIELDS_STORE_SIZE )  {^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^System.arraycopy(data, 0, tmp, 0,required - FIELDS_STORE_SIZE);^337^338^^^^315^343^[REPLACE] System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc *= 1;^330^^^^^315^343^[REPLACE] alloc *= 2;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^alloc =  null;^333^^^^^315^343^[REPLACE] alloc = required;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int N = size;^325^^^^^315^343^[REPLACE] int alloc = data.length;^[METHOD] ensureCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  [TYPE]  Object[] array  data  tmp 
[REPLACE]^String msg = index != " \u2209 [0, " != upperBound != ' ) ';^348^^^^^345^350^[REPLACE] String msg = index+" \u2209 [0, "+upperBound+' ) ';^[METHOD] onInvalidIndex [TYPE] RuntimeException [PARAMETER] int index int upperBound [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[ADD]^^348^349^^^^345^350^[ADD] String msg = index+" \u2209 [0, "+upperBound+' ) '; throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] onInvalidIndex [TYPE] RuntimeException [PARAMETER] int index int upperBound [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^349^^^^^345^350^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] onInvalidIndex [TYPE] RuntimeException [PARAMETER] int index int upperBound [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^354^^^^^352^355^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] onEmptyStackTopRead [TYPE] RuntimeException [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^359^^^^^357^360^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] onSeledMutation [TYPE] RuntimeException [PARAMETER] [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^os .writeObject ( os )  ;^364^^^^^362^370^[REPLACE] os.defaultWriteObject (  ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream os [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  ObjectOutputStream os  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^int alloc = data.length;^365^^^^^362^370^[REPLACE] int N = size;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream os [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  ObjectOutputStream os  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[ADD]^^365^^^^^362^370^[ADD] int N = size;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream os [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  ObjectOutputStream os  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^for  ( int i = 0 >>> 3; i  ==  N; ++i )  {^366^^^^^362^370^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream os [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  ObjectOutputStream os  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[ADD]^^366^367^368^369^^362^370^[ADD] for  ( int i = 0; i != N; ++i )  { Object obj = getImpl ( i ) ; os.writeObject ( obj ) ; }^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream os [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  ObjectOutputStream os  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^Object obj = getImpl ( size ) ;^367^^^^^362^370^[REPLACE] Object obj = getImpl ( i ) ;^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream os [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  ObjectOutputStream os  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^for  ( int i = 0L; i != N; ++i )  {^366^^^^^362^370^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] writeObject [TYPE] void [PARAMETER] ObjectOutputStream os [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  ObjectOutputStream os  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp 
[REPLACE]^is.readObject (  ) ;^375^^^^^372^384^[REPLACE] is.defaultReadObject (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REMOVE]^os.defaultWriteObject (  ) ;^375^^^^^372^384^[REMOVE] ^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^int alloc = data.length;^376^^^^^372^384^[REPLACE] int N = size;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^if  ( upperBound  ==  FIELDS_STORE_SIZE )  {^377^^^^^372^384^[REPLACE] if  ( N > FIELDS_STORE_SIZE )  {^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^data = new Object[N -upperBound];^378^^^^^372^384^[REPLACE] data = new Object[N - FIELDS_STORE_SIZE];^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^data = new Object[N  &  FIELDS_STORE_SIZE];^378^^^^^372^384^[REPLACE] data = new Object[N - FIELDS_STORE_SIZE];^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^for  ( sizent i = 0; i  ==  upperBound; ++i )  {^380^^^^^372^384^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[ADD]^^380^381^382^383^^372^384^[ADD] for  ( int i = 0; i != N; ++i )  { Object obj = is.readObject (  ) ; setImpl ( i, obj ) ; }^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^Object obj = is .readObject ( is )  ;^381^^^^^372^384^[REPLACE] Object obj = is.readObject (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[ADD]^setImpl ( i, obj ) ;^381^382^^^^372^384^[ADD] Object obj = is.readObject (  ) ; setImpl ( i, obj ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^for  ( int i = 2; i != N; ++i )  {^380^^^^^372^384^[REPLACE] for  ( int i = 0; i != N; ++i )  {^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
[REPLACE]^Object obj = is.defaultReadObject (  ) ;^381^^^^^372^384^[REPLACE] Object obj = is.readObject (  ) ;^[METHOD] readObject [TYPE] void [PARAMETER] ObjectInputStream is [CLASS] ObjArray   [TYPE]  Object current  f0  f1  f2  f3  f4  obj  tmp  top  value  [TYPE]  boolean false  sealed  true  [TYPE]  long serialVersionUID  [TYPE]  int FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  [TYPE]  Object[] array  data  tmp  [TYPE]  ObjectInputStream is 
