[REPLACE]^public static final int ONLY_BODY_FLAG  = null ;^83^^^^^^^[REPLACE] public static final int ONLY_BODY_FLAG = 1 << 0;^ [CLASS] Decompiler  
[REPLACE]^public static final  long  TO_SOURCE_FLAG = 1 << 1;^88^^^^^^^[REPLACE] public static final int TO_SOURCE_FLAG = 1 << 1;^ [CLASS] Decompiler  
[REPLACE]^public static final int INITIAL_INDENT_PROP  = null ;^93^^^^^^^[REPLACE] public static final int INITIAL_INDENT_PROP = 1;^ [CLASS] Decompiler  
[REPLACE]^public static final int INDENT_GAP_PROP = 2 % 3;^98^^^^^^^[REPLACE] public static final int INDENT_GAP_PROP = 2;^ [CLASS] Decompiler  
[REPLACE]^public static final int CASE_GAP_PROP ;^103^^^^^^^[REPLACE] public static final int CASE_GAP_PROP = 3;^ [CLASS] Decompiler  
[REPLACE]^private static final int FUNCTION_END ;^107^^^^^^^[REPLACE] private static final int FUNCTION_END = Token.LAST_TOKEN + 1;^ [CLASS] Decompiler  
[REPLACE]^private char[] sourceBuffer ;^901^^^^^^^[REPLACE] private char[] sourceBuffer = new char[128];^ [CLASS] Decompiler  
[REPLACE]^private static final boolean printSource ;^908^^^^^^^[REPLACE] private static final boolean printSource = false;^ [CLASS] Decompiler  
[REPLACE]^return sourceToString ( 3 ) ;^111^^^^^109^112^[REPLACE] return sourceToString ( 0 ) ;^[METHOD] getEncodedSource [TYPE] String [PARAMETER] [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^return offset + length;^116^^^^^114^117^[REPLACE] return sourceTop;^[METHOD] getCurrentOffset [TYPE] int [PARAMETER] [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^int offset = getCurrentOffset (  ) ;^121^^^^^119^125^[REPLACE] int savedOffset = getCurrentOffset (  ) ;^[METHOD] markFunctionStart [TYPE] int [PARAMETER] int functionType [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionType  savedOffset  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^addToken ( Token.NAME ) ;^122^^^^^119^125^[REPLACE] addToken ( Token.FUNCTION ) ;^[METHOD] markFunctionStart [TYPE] int [PARAMETER] int functionType [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionType  savedOffset  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char ) FUNCTION_END ) ;^123^^^^^119^125^[REPLACE] append (  ( char ) functionType ) ;^[METHOD] markFunctionStart [TYPE] int [PARAMETER] int functionType [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionType  savedOffset  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^return functionType;^124^^^^^119^125^[REPLACE] return savedOffset;^[METHOD] markFunctionStart [TYPE] int [PARAMETER] int functionType [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionType  savedOffset  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^int savedOffset = getCurrentOffset (  ) ;^129^^^^^127^132^[REPLACE] int offset = getCurrentOffset (  ) ;^[METHOD] markFunctionEnd [TYPE] int [PARAMETER] int functionStart [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char ) functionType ) ;^130^^^^^127^132^[REPLACE] append (  ( char ) FUNCTION_END ) ;^[METHOD] markFunctionEnd [TYPE] int [PARAMETER] int functionStart [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^return sourceTop;^131^^^^^127^132^[REPLACE] return offset;^[METHOD] markFunctionEnd [TYPE] int [PARAMETER] int functionStart [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  (  (true && token <= Token.LAST_TOKEN )  ) throw new IllegalArgumentException  (" ")  ;^136^137^^^^134^140^[REPLACE] if  ( ! ( 0 <= token && token <= Token.LAST_TOKEN )  ) throw new IllegalArgumentException  (" ")  ;^[METHOD] addToken [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^throw new RuntimeException  (" ")  ; ;^137^^^^^134^140^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addToken [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^137^^^^^134^140^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addToken [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char ) Token.EOL ) ;^139^^^^^134^140^[REPLACE] append (  ( char ) token ) ;^[METHOD] addToken [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  (  ( 0 <= token && token <= Token.LAST_TOKEN )  ) throw new IllegalArgumentException  (" ")  ;^144^145^^^^142^149^[REPLACE] if  ( ! ( 0 <= token && token <= Token.LAST_TOKEN )  ) throw new IllegalArgumentException  (" ")  ;^[METHOD] addEOL [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^return ;^145^^^^^142^149^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addEOL [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^throw new RuntimeException  (" ")  ; ;^145^^^^^142^149^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addEOL [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char ) Token.EOL ) ;^147^^^^^142^149^[REPLACE] append (  ( char ) token ) ;^[METHOD] addEOL [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char ) token ) ;^148^^^^^142^149^[REPLACE] append (  ( char ) Token.EOL ) ;^[METHOD] addEOL [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^148^^^^^142^149^[ADD] append (  ( char ) Token.EOL ) ;^[METHOD] addEOL [TYPE] void [PARAMETER] int token [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^addToken ( Token.NUMBER ) ;^153^^^^^151^155^[REPLACE] addToken ( Token.NAME ) ;^[METHOD] addName [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^153^^^^^151^155^[ADD] addToken ( Token.NAME ) ;^[METHOD] addName [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'S' ) ;^154^^^^^151^155^[REPLACE] appendString ( str ) ;^[METHOD] addName [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^154^^^^^151^155^[ADD] appendString ( str ) ;^[METHOD] addName [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'S' ) ;^159^^^^^157^161^[REPLACE] addToken ( Token.STRING ) ;^[METHOD] addString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^159^^^^^157^161^[ADD] addToken ( Token.STRING ) ;^[METHOD] addString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'S' ) ;^160^^^^^157^161^[REPLACE] appendString ( str ) ;^[METHOD] addString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^addToken ( Token.NAME ) ;^165^^^^^163^167^[REPLACE] addToken ( Token.REGEXP ) ;^[METHOD] addRegexp [TYPE] void [PARAMETER] String regexp String flags [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String flags  regexp  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^appendString ( '/' + regexp + '/' +regexp ) ;^166^^^^^163^167^[REPLACE] appendString ( '/' + regexp + '/' + flags ) ;^[METHOD] addRegexp [TYPE] void [PARAMETER] String regexp String flags [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String flags  regexp  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^addToken ( Token.NAME ) ;^171^^^^^170^220^[REPLACE] addToken ( Token.NUMBER ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^long lbits;^190^^^^^170^220^[REPLACE] long lbits =  ( long ) n;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[ADD]^^190^^^^^170^220^[ADD] long lbits =  ( long ) n;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  ==  n )  {^191^^^^^170^220^[REPLACE] if  ( lbits != n )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  >  0 )  Kit.codeBug (  ) ;^204^^^^^191^219^[REPLACE] if  ( lbits < 0 )  Kit.codeBug (  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  >  Character.MAX_VALUE )  {^208^^^^^191^219^[REPLACE] if  ( lbits <= Character.MAX_VALUE )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'S' ) ;^213^^^^^208^218^[REPLACE] append ( 'J' ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[ADD]^^213^^^^^208^218^[ADD] append ( 'J' ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  >=  48 )  ) ;^214^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 48 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  ==  32 )  ) ;^215^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 32 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  <  16 )  ) ;^216^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 16 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'S' ) ;^217^^^^^208^218^[REPLACE] append (  ( char ) lbits ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'D' ) ;^209^^^^^191^219^[REPLACE] append ( 'S' ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'S' ) ;^210^^^^^191^219^[REPLACE] append (  ( char ) lbits ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^lbits =  Double.doubleToLonullgBits ( null ) ;^194^^^^^170^220^[REPLACE] lbits = Double.doubleToLongBits ( n ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  >=  0 )  Kit.codeBug (  ) ;^204^^^^^170^220^[REPLACE] if  ( lbits < 0 )  Kit.codeBug (  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[ADD]^^204^205^^^^170^220^[ADD] if  ( lbits < 0 )  Kit.codeBug (  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( lbits  >  Character.MAX_VALUE )  {^208^^^^^170^220^[REPLACE] if  ( lbits <= Character.MAX_VALUE )  {^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  !=  48L )  ) ;^214^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 48 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  <  32 )  ) ;^215^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 32 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[ADD]^^215^^^^^208^218^[ADD] append (  ( char )  ( lbits >> 32 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append (  ( char )  ( lbits  ==  16 )  ) ;^216^^^^^208^218^[REPLACE] append (  ( char )  ( lbits >> 16 )  ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'D' ) ;^209^^^^^170^220^[REPLACE] append ( 'S' ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^append ( 'S' ) ;^210^^^^^170^220^[REPLACE] append (  ( char ) lbits ) ;^[METHOD] addNumber [TYPE] void [PARAMETER] double n [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  offset  savedOffset  sourceTop  token  [TYPE]  double n  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer 
[REPLACE]^int L = str .getChars ( INDENT_GAP_PROP , lengthEncodingSize , sourceBuffer , functionType )  ;^224^^^^^222^243^[REPLACE] int L = str.length (  ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^int lengthEncodingSize = 0 ;^225^^^^^222^243^[REPLACE] int lengthEncodingSize = 1;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( L  !=  0x8000 )  {^226^^^^^222^243^[REPLACE] if  ( L >= 0x8000 )  {^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^lengthEncodingSize = 0 ;^227^^^^^222^243^[REPLACE] lengthEncodingSize = 2;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^227^^^^^222^243^[ADD] lengthEncodingSize = 2;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^int nextTop = sourceTop + length + 4EncodingSize + TO_SOURCE_FLAG;^229^^^^^222^243^[REPLACE] int nextTop = sourceTop + lengthEncodingSize + L;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( nextTop > sourceBuffer.length - 5 )  {^230^^^^^222^243^[REPLACE] if  ( nextTop > sourceBuffer.length )  {^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^increaseSourceCapacity ( sourceTop ) ;^231^^^^^222^243^[REPLACE] increaseSourceCapacity ( nextTop ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( L  !=  0x8000 )  {^233^^^^^222^243^[REPLACE] if  ( L >= 0x8000 )  {^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^233^234^^236^237^222^243^[ADD] if  ( L >= 0x8000 )  {  sourceBuffer[sourceTop] =  ( char )  ( 0x8000 |  ( L >>> 16 )  ) ; ++sourceTop;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^sourceBuffer[sourceTop] =  ( char )  ( 0x8000 &  ( L >>> 16 )  ) ;^236^^^^^222^243^[REPLACE] sourceBuffer[sourceTop] =  ( char )  ( 0x8000 |  ( L >>> 16 )  ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^236^237^^^^222^243^[ADD] sourceBuffer[sourceTop] =  ( char )  ( 0x8000 |  ( L >>> 16 )  ) ; ++sourceTop;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^sourceBuffer[sourceTop] = c; ;^239^^^^^222^243^[REPLACE] sourceBuffer[sourceTop] =  ( char ) L;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^str.getChars ( 4, L, sourceBuffer, sourceTop ) ;^241^^^^^222^243^[REPLACE] str.getChars ( 0, L, sourceBuffer, sourceTop ) ;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^sourceTop =  functionType;^242^^^^^222^243^[REPLACE] sourceTop = nextTop;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^242^^^^^222^243^[ADD] sourceTop = nextTop;^[METHOD] appendString [TYPE] void [PARAMETER] String str [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  String str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( sourceTop == sourceBuffer.length (  )  )  {^247^^^^^245^252^[REPLACE] if  ( sourceTop == sourceBuffer.length )  {^[METHOD] append [TYPE] void [PARAMETER] char c [CLASS] Decompiler   [TYPE]  char c  [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^increaseSourceCapacity (savedOffset + 1 ) ;^248^^^^^245^252^[REPLACE] increaseSourceCapacity ( sourceTop + 1 ) ;^[METHOD] append [TYPE] void [PARAMETER] char c [CLASS] Decompiler   [TYPE]  char c  [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[ADD]^^248^^^^^245^252^[ADD] increaseSourceCapacity ( sourceTop + 1 ) ;^[METHOD] append [TYPE] void [PARAMETER] char c [CLASS] Decompiler   [TYPE]  char c  [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^sourceBuffer[sourceTop] =  ( char ) L; ;^250^^^^^245^252^[REPLACE] sourceBuffer[sourceTop] = c;^[METHOD] append [TYPE] void [PARAMETER] char c [CLASS] Decompiler   [TYPE]  char c  [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer 
[REPLACE]^if  ( minimalCapacity <= sourceBuffer.length (  )  )  Kit.codeBug (  ) ;^257^^^^^254^265^[REPLACE] if  ( minimalCapacity <= sourceBuffer.length )  Kit.codeBug (  ) ;^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^257^258^259^260^261^254^265^[ADD] if  ( minimalCapacity <= sourceBuffer.length )  Kit.codeBug (  ) ; int newCapacity = sourceBuffer.length * 2; if  ( newCapacity < minimalCapacity )  { newCapacity = minimalCapacity; }^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int newCapacity = sourceBuffer.length %  0  * 0 ;^258^^^^^254^265^[REPLACE] int newCapacity = sourceBuffer.length * 2;^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( newCapacity  ==  minimalCapacity )  {^259^^^^^254^265^[REPLACE] if  ( newCapacity < minimalCapacity )  {^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^newCapacity =  nextTop;^260^^^^^254^265^[REPLACE] newCapacity = minimalCapacity;^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^newCapacity =  sourceTop;^260^^^^^254^265^[REPLACE] newCapacity = minimalCapacity;^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^char type = source.charAt ( offset ) ;^262^^^^^254^265^[REPLACE] char[] tmp = new char[newCapacity];^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^System.arraycopy ( sourceBuffer, 1, tmp, 1, sourceTop ) ;^263^^^^^254^265^[REPLACE] System.arraycopy ( sourceBuffer, 0, tmp, 0, sourceTop ) ;^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sourceBuffer =  null;^264^^^^^254^265^[REPLACE] sourceBuffer = tmp;^[METHOD] increaseSourceCapacity [TYPE] void [PARAMETER] int minimalCapacity [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (true && sourceTop < offset )  Kit.codeBug (  ) ;^269^^^^^267^271^[REPLACE] if  ( offset < 0 || sourceTop < offset )  Kit.codeBug (  ) ;^[METHOD] sourceToString [TYPE] String [PARAMETER] int offset [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return new String ( sourceBuffer, offset,newCapacity - offset ) ;^270^^^^^267^271^[REPLACE] return new String ( sourceBuffer, offset, sourceTop - offset ) ;^[METHOD] sourceToString [TYPE] String [PARAMETER] int offset [CLASS] Decompiler   [TYPE]  boolean false  printSource  true  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  functionStart  functionType  lengthEncodingSize  minimalCapacity  newCapacity  nextTop  offset  savedOffset  sourceTop  token  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int length = tokenname.length (  ) ;^292^^^^^291^830^[REPLACE] int length = source.length (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( length %  2 == 0 )  { return ""; }^293^^^^^291^830^[REPLACE] if  ( length == 0 )  { return ""; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int indent = properties.getInt ( INITIAL_INDENT_PROP, 2 ) ;^295^^^^^291^830^[REPLACE] int indent = properties.getInt ( INITIAL_INDENT_PROP, 0 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( newLine )  {^296^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^296^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int indentGap = properties.getInt ( INDENT_GAP_PROP, 5 ) ;^297^^^^^291^830^[REPLACE] int indentGap = properties.getInt ( INDENT_GAP_PROP, 4 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( newLine )  {^298^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^298^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^298^299^300^^302^291^830^[ADD] if   (" ")  ; int caseGap = properties.getInt ( CASE_GAP_PROP, 2 ) ; if   (" ")  ; StringBuffer result = new StringBuffer (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int caseGap = properties.getInt ( CASE_GAP_PROP, 3 ) ;^299^^^^^291^830^[REPLACE] int caseGap = properties.getInt ( CASE_GAP_PROP, 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( newLine )  {^300^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^300^^^^^291^830^[REPLACE] if   (" ")  ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int L = str.length (  ) ;^302^^^^^291^830^[REPLACE] StringBuffer result = new StringBuffer (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^boolean justFunctionBody =  ( 0 !=  ( flags & Decompiler.ONLY_BODY_FLAG )  ) ;^302^303^^^^291^830^[ADD] StringBuffer result = new StringBuffer (  ) ; boolean justFunctionBody =  ( 0 !=  ( flags & Decompiler.ONLY_BODY_FLAG )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^boolean justFunctionBody =  ( 4  ==   ( flags & Decompiler.ONLY_BODY_FLAG )  ) ;^303^^^^^291^830^[REPLACE] boolean justFunctionBody =  ( 0 !=  ( flags & Decompiler.ONLY_BODY_FLAG )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^303^^^^^291^830^[ADD] boolean justFunctionBody =  ( 0 !=  ( flags & Decompiler.ONLY_BODY_FLAG )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^boolean toSource =  ( 0 - 3  ==   ( flags & Decompiler.TO_SOURCE_FLAG )  ) ;^304^^^^^291^830^[REPLACE] boolean toSource =  ( 0 !=  ( flags & Decompiler.TO_SOURCE_FLAG )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^304^^^^^291^830^[ADD] boolean toSource =  ( 0 !=  ( flags & Decompiler.TO_SOURCE_FLAG )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( !toSource )  {^308^^^^^291^830^[REPLACE] if  ( printSource )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^308^309^310^^^291^830^[ADD] if  ( printSource )  { System.err.println ( "length:" + length ) ; for  ( int i = 0; i < length; ++i )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL != getNext ( source, length, i )  )  {^314^^^^^291^830^[REPLACE] if  ( Token.printNames )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^tokenname =  Token.name ( null.charAt ( i )  ) ;^315^^^^^291^830^[REPLACE] tokenname = Token.name ( source.charAt ( i )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^315^^^^^291^830^[ADD] tokenname = Token.name ( source.charAt ( i )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname != null )  {^317^^^^^291^830^[REPLACE] if  ( tokenname == null )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^tokenname  =  tokenname ;^318^^^^^291^830^[REPLACE] tokenname = "---";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( int i = 0; i < length - 3; ++i )  {^310^^^^^291^830^[REPLACE] for  ( int i = 0; i < length; ++i )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^314^315^316^^^291^830^[ADD] if  ( Token.printNames )  { tokenname = Token.name ( source.charAt ( i )  ) ; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (source != null )  {^317^^^^^291^830^[REPLACE] if  ( tokenname == null )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^tokenname = "---";^317^318^319^^^291^830^[ADD] if  ( tokenname == null )  { tokenname = "---"; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^tokenname ;^318^^^^^291^830^[REPLACE] tokenname = "---";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String tokenname = this;^313^^^^^291^830^[REPLACE] String tokenname = null;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String pad = tokenname.length (  )  /  2 > 7 ? "\t" : "\t\t";^320^321^322^^^291^830^[REPLACE] String pad = tokenname.length (  )  > 7 ? "\t" : "\t\t";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( int i = 0 ; i < length; ++i )  {^310^^^^^291^830^[REPLACE] for  ( int i = 0; i < length; ++i )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String tokenname = false;^313^^^^^291^830^[REPLACE] String tokenname = null;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String pad = source.size (  )  > 7 ? "\t" : "\t\t";^320^321^322^^^291^830^[REPLACE] String pad = tokenname.length (  )  > 7 ? "\t" : "\t\t";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^320^321^322^^^291^830^[ADD] String pad = tokenname.length (  )  > 7 ? "\t" : "\t\t";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^tokenname = Token.name ( source.charAt ( i )  ) ;^314^315^316^^^291^830^[ADD] if  ( Token.printNames )  { tokenname = Token.name ( source.charAt ( i )  ) ; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source != null )  {^317^^^^^291^830^[REPLACE] if  ( tokenname == null )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String pad = source.length (  )  %  0.5  > 0  ? "\t" : "\t\t";^320^321^322^^^291^830^[REPLACE] String pad = tokenname.length (  )  > 7 ? "\t" : "\t\t";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^318^^^^^291^830^[ADD] tokenname = "---";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String tokenname = true;^313^^^^^291^830^[REPLACE] String tokenname = null;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^313^^^^^291^830^[ADD] String tokenname = null;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String pad = tokenname.charAt (  )  *  0.5  > 7 ? "\t" : "\t\t";^320^321^322^^^291^830^[REPLACE] String pad = tokenname.length (  )  > 7 ? "\t" : "\t\t";^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int braceNesting = 1;^333^^^^^291^830^[REPLACE] int braceNesting = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^boolean afterFirstEOL = true;^334^^^^^291^830^[REPLACE] boolean afterFirstEOL = false;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^334^335^^^^291^830^[ADD] boolean afterFirstEOL = false; int i = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int i = 2;^335^^^^^291^830^[REPLACE] int i = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int braceNesting = 0;^336^^^^^291^830^[REPLACE] int topFunctionType;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname.length ( i )   &&  Token.SCRIPT )  {^337^^^^^291^830^[REPLACE] if  ( source.charAt ( i )  == Token.SCRIPT )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^337^338^339^340^341^291^830^[ADD] if  ( source.charAt ( i )  == Token.SCRIPT )  { ++i; topFunctionType = -1; } else { topFunctionType = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = source.charAt (topFunctionType + 1 ) ;^341^^^^^337^342^[REPLACE] topFunctionType = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = -4;^339^^^^^291^830^[REPLACE] topFunctionType = -1;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^339^^^^^291^830^[ADD] topFunctionType = -1;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = -1 / 0;^339^^^^^291^830^[REPLACE] topFunctionType = -1;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = source.charAt ( i +topFunctionType ) ;^341^^^^^291^830^[REPLACE] topFunctionType = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( toSource )  {^344^^^^^291^830^[REPLACE] if  ( !toSource )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (newCapacity  !=  FunctionNode.FUNCTION_EXPRESSION )  {^350^^^^^344^353^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.StringBuffer ( ' ( ' ) ;^351^^^^^344^353^[REPLACE] result.append ( ' ( ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REMOVE]^result.append ( '}' ) ;^351^^^^^344^353^[REMOVE] ^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( int j = 0; j  !=  indent; j++ ) result.append ( ' ' ) ;^347^348^^^^291^830^[REPLACE] for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( tokenname )  ;^348^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( int j = 0 % 3; j < indent; j++ ) result.append ( ' ' ) ;^347^348^^^^291^830^[REPLACE] for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( topFunctionType  !=  FunctionNode.FUNCTION_EXPRESSION )  {^350^^^^^291^830^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^result.append ( ' ( ' ) ;^350^351^352^^^291^830^[ADD] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  { result.append ( ' ( ' ) ; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .append ( null )  ;^351^^^^^291^830^[REPLACE] result.append ( ' ( ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^351^^^^^291^830^[ADD] result.append ( ' ( ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( int j = 0; j  >=  less; j++ ) result.append ( ' ' ) ;^347^348^^^^291^830^[REPLACE] for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( source )  ;^348^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^348^^^^^291^830^[ADD] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( int j = 1; j < indent; j++ ) result.append ( ' ' ) ;^347^348^^^^291^830^[REPLACE] for  ( int j = 0; j < indent; j++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^while  ( i < length + 5 )  {^355^^^^^291^830^[REPLACE] while  ( i < length )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL == getNext ( source, length - 1, i )  ) indent += nextToken;^410^411^^^^291^830^[REPLACE] if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent -= indentGap; ;^411^^^^^291^830^[REPLACE] indent += indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (true || braceNesting == 1 ) break;^421^422^^^^291^830^[REPLACE] if  ( justFunctionBody && braceNesting == 0 ) break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^break;result.append ( '}' ) ;^421^422^^424^^291^830^[ADD] if  ( justFunctionBody && braceNesting == 0 ) break; result.append ( '}' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.LC == getNext ( source, length - 4, i )  ) result.setLength ( ' ' ) ;^444^445^^^^291^830^[REPLACE] if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( source )  ;^445^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( true )  break;^457^^^^^291^830^[REPLACE] if  ( toSource )  break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( afterFirstEOL )  {^459^^^^^291^830^[REPLACE] if  ( !afterFirstEOL )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( true )  {^461^^^^^291^830^[REPLACE] if  ( justFunctionBody )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent += indentGap; ;^466^^^^^291^830^[REPLACE] indent -= indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^466^^^^^291^830^[ADD] indent -= indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^newLine = true;^467^^^^^291^830^[REPLACE] newLine = false;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^afterFirstEOL = false;^460^^^^^291^830^[REPLACE] afterFirstEOL = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL != getNext ( source, length, i )  )  {^461^^^^^291^830^[REPLACE] if  ( justFunctionBody )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^467^^^^^291^830^[ADD] newLine = false;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( toSource )  {^470^^^^^291^830^[REPLACE] if  ( newLine )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( '\n' ) ;^471^^^^^291^830^[REPLACE] result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( i + 1 < length - 2 )  {^478^^^^^291^830^[REPLACE] if  ( i + 1 < length )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken == Token.CASE && nextToken == Token.DEFAULT ) {^481^482^483^^^291^830^[REPLACE] if  ( nextToken == Token.CASE || nextToken == Token.DEFAULT ) {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^}  if  ( nextToken  !=  Token.RC )  {^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^else {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^int afterName = getSourceStringEnd ( source, i + 2 ) ;less = indentGap;^492^493^494^495^496^291^830^[ADD] else if  ( nextToken == Token.NAME )  { int afterName = getSourceStringEnd ( source, i + 2 ) ; if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   &&  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  token;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  topFunctionType;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionTypent afterName = getSourceStringEnd ( tokenname, i + 2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   !=  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^495^^^^^291^830^[ADD] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  length;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source,topFunctionType + 1 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  null;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^486^^^^^291^830^[ADD] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken  &&  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   &&  Token.COLON ) less = lengthEncodingSize;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  nextTop;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source,topFunctionType + 2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   ||  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  savedOffset;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  length;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  offset;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionTypent afterName = getSourceStringEnd ( source, i + 2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = nextTop - nextTop;^484^^^^^481^496^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^}  if  ( nextToken  ||  Token.RC )  {^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^492^493^494^495^496^291^830^[ADD] else if  ( nextToken == Token.NAME )  { int afterName = getSourceStringEnd ( source, i + 2 ) ; if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   || true ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  newCapacity;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source,topFunctionType + 2 << 3 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^493^^^^^291^830^[ADD] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^else if  ( nextToken  ||  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  minimalCapacity;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  null;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, i  &  2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   &&  Token.COLON ) less = topFunctionType;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  lengthEncodingSize;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( ;nextToken  ==  indent; less++ ) result.append ( ' ' ) ;^498^499^^^^291^830^[REPLACE] for  ( ; less < indent; less++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ' ) ;^499^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = nextTop - lengthEncodingSize;^484^^^^^291^830^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  topFunctionType;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int less = 4;^479^^^^^291^830^[REPLACE] int less = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int nextToken = source.length ( topFunctionType +topFunctionType ) ;^480^^^^^291^830^[REPLACE] int nextToken = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^480^^^^^291^830^[ADD] int nextToken = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken == Token.CASE ) {^481^482^483^^^291^830^[REPLACE] if  ( nextToken == Token.CASE || nextToken == Token.DEFAULT ) {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^} else if  ( nextToken  ||  Token.RC )  {^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^else if  (minimalCapacity  &&  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^494^495^496^^^291^830^[ADD] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  nextToken;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, i  <=  2 >> 4 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^less = indentGap;^494^495^496^^^291^830^[ADD] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, i +topFunctionType ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname.charAt ( afterName )   ||  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source .getChars ( functionStart , offset , tmp , minimalCapacity )    &&  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  nextToken;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = indentGap  &  caseGap;^484^^^^^481^496^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^} else if  ( nextToken  || minimalCapacity )  {^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (topFunctionType  !=  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( tokenname, i +topFunctionType ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   ||  Token.COLON ) less = topFunctionType;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( offset )   ||  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.NAME == getNext ( source, length %  2, i )  ) result.append ( ' ' ) ;^565^566^^^^291^830^[REPLACE] if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ' ) ;^566^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.NAME == getNext ( source, length *  2, i )  ) result.append ( ' ' ) ;^571^572^^^^291^830^[REPLACE] if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^result.append ( ' ' ) ;break;^571^572^573^^575^291^830^[ADD] if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ; break; case Token.CASE:^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( pad )  ;^572^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.SEMI != getNext ( source, length + 1, i )  ) result.append ( ' ' ) ;^585^586^^^^291^830^[REPLACE] if  ( Token.SEMI != getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( pad )  ;^586^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL != getNext ( source, length - 1, i )  )  {^595^^^^^291^830^[REPLACE] if  ( Token.EOL != getNext ( source, length, i )  )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ' ) ;^597^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL == getNext ( source, length + 4, topFunctionType )  )  result.append ( ':' ) ;^663^664^665^^^291^830^[REPLACE] if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^663^664^665^666^^291^830^[ADD] if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ; else^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.append ( " > " ) ;^668^^^^^291^830^[REPLACE] result.append ( " : " ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( pad )  ;^665^^^^^291^830^[REPLACE] result.append ( ':' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^665^^^^^291^830^[ADD] result.append ( ':' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( ;sourceTop  >  indent; less++ ) result.setLength ( ' ' ) ;^498^499^^^^291^830^[REPLACE] for  ( ; less < indent; less++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = printSourceString ( source, i + 1 - 2, false, result ) ;^361^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, false, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^361^^^^^291^830^[ADD] i = printSourceString ( source, i + 1, false, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source,topFunctionType + 1, false, result ) ;^368^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, false, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source, i +topFunctionType, true, result ) ;^372^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, true, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^372^373^^^^291^830^[ADD] i = printSourceString ( source, i + 1, true, result ) ; continue;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceNumber ( source, i +topFunctionType, result ) ;^376^^^^^291^830^[REPLACE] i = printSourceNumber ( source, i + 1, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent += indentGap; ;^428^^^^^291^830^[REPLACE] indent -= indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^428^429^^^^291^830^[ADD] indent -= indentGap; break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^indent += indentGap; ;^432^^^^^291^830^[REPLACE] indent -= indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^result.append ( ' ' ) ;^432^433^^^^291^830^[ADD] indent -= indentGap; result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^460^^^^^291^830^[ADD] afterFirstEOL = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = topFunctionType - token;^484^^^^^291^830^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^boolean newLine = false;^458^^^^^291^830^[REPLACE] boolean newLine = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^458^^^^^291^830^[ADD] boolean newLine = true;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int less = 3;^479^^^^^291^830^[REPLACE] int less = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int nextToken = source.length (topFunctionType + 1 ) ;^480^^^^^291^830^[REPLACE] int nextToken = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source,topFunctionType + 4 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^813^814^^^^291^830^[REPLACE] throw new RuntimeException ( "Token: " + Token.name ( source.charAt ( i )  )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL == getNext ( source, length (  ) , i )  ) indent += indentGap;^410^411^^^^291^830^[REPLACE] if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^410^411^412^413^^291^830^[ADD] if  ( Token.EOL == getNext ( source, length, i )  ) indent += indentGap; result.append ( '{' ) ; break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( true ||true ) break;^421^422^^^^291^830^[REPLACE] if  ( justFunctionBody && braceNesting == 0 ) break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.LC == getNext ( tokenname, length /  0.5 , i )  ) result.append ( ' ' ) ;^444^445^^^^291^830^[REPLACE] if  ( Token.LC == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ' ) ;^445^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^461^462^^^465^291^830^[ADD] if  ( justFunctionBody )  {  result.setLength ( 0 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^470^471^472^^^291^830^[ADD] if  ( newLine )  { result.append ( '\n' ) ; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( i + 1 < length /  2 )  {^478^^^^^291^830^[REPLACE] if  ( i + 1 < length )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^481^482^483^484^^291^830^[ADD] if  ( nextToken == Token.CASE || nextToken == Token.DEFAULT ) { less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^} else if  (newCapacity  ||  Token.RC )  {^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^}   less = indentGap;^485^486^487^^^291^830^[ADD] else if  ( nextToken == Token.RC )  { less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (offset  !=  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, i  <  2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  newCapacity;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (topFunctionType  ||  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  sourceTop;^495^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   && this ) less = token;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =newCapacity - caseGap;^484^^^^^481^496^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^}  else {^485^^^^^291^830^[REPLACE] } else if  ( nextToken == Token.RC )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source .getChars ( INITIAL_INDENT_PROP , nextTop , sourceBuffer , newCapacity )    != this ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source,topFunctionType + 2 * 4 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken  !=  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( ; less  >=  indent; less++ ) result.append ( ' ' ) ;^498^499^^^^291^830^[REPLACE] for  ( ; less < indent; less++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^499^^^^^291^830^[ADD] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = indentGap  >  caseGap;^484^^^^^291^830^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  lengthEncodingSize;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int less = 0L;^479^^^^^291^830^[REPLACE] int less = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^479^^^^^291^830^[ADD] int less = 0;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int nextToken = source.charAt (topFunctionType + 3 ) ;^480^^^^^291^830^[REPLACE] int nextToken = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionTypent afterName = getSourceStringEnd ( source, i + 3 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken  || savedOffset )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   !=  Token.COLON ) less = topFunctionType;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =  nextTop;^486^^^^^291^830^[REPLACE] less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   != this ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, topFunctionType  ^  2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname.charAt ( afterName )   != null ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int afterName = getSourceStringEnd ( source, topFunctionType +topFunctionType ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less =minimalCapacity - caseGap;^484^^^^^481^496^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^}^485^486^487^^^291^830^[ADD] else if  ( nextToken == Token.RC )  { less = indentGap; }^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( tokenname.charAt ( afterName )   &&  Token.COLON ) less = indentGap;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( nextToken  ||  Token.NAME )  {^492^^^^^291^830^[REPLACE] else if  ( nextToken == Token.NAME )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( source.charAt ( afterName )   !=  Token.COLON ) less = less;^494^495^^^^291^830^[REPLACE] if  ( source.charAt ( afterName )  == Token.COLON ) less = indentGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionTypent afterName = getSourceStringEnd ( source, topFunctionType + 2 ) ;^493^^^^^291^830^[REPLACE] int afterName = getSourceStringEnd ( source, i + 2 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.NAME == getNext ( source, length *  0.5 , i )  ) result.append ( ' ' ) ;^565^566^^^^291^830^[REPLACE] if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.NAME == getNext ( source, length - 1, i )  ) result.append ( ' ' ) ;^571^572^^^^291^830^[REPLACE] if  ( Token.NAME == getNext ( source, length, i )  ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( source )  ;^572^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^572^^^^^291^830^[ADD] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ' ) ;^586^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^break;^586^587^^^^291^830^[ADD] result.append ( ' ' ) ; break;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL != getNext ( source, length + 5, i )  )  {^595^^^^^291^830^[REPLACE] if  ( Token.EOL != getNext ( source, length, i )  )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( pad )  ;^597^^^^^291^830^[REPLACE] result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( Token.EOL == getNext ( source, length /  0.5 , i )  )  result.append ( ':' ) ;^663^664^665^^^291^830^[REPLACE] if  ( Token.EOL == getNext ( source, length, i )  )  result.append ( ':' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REMOVE]^result.append ( '}' ) ;^668^^^^^291^830^[REMOVE] ^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( tokenname )  ;^665^^^^^291^830^[REPLACE] result.append ( ':' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REMOVE]^result.append ( '}' ) ;^665^^^^^291^830^[REMOVE] ^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^for  ( ; sourceTop  >=  newCapacity; less++ ) result.append ( ' ' ) ;^498^499^^^^291^830^[REPLACE] for  ( ; less < indent; less++ ) result.append ( ' ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source, i  &&  4, false, result ) ;^361^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, false, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionType = printSourceString ( source, i + 1, false, result ) ;^368^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, false, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceString ( source,topFunctionType + 1, true, result ) ;^372^^^^^291^830^[REPLACE] i = printSourceString ( source, i + 1, true, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^372^^^^^291^830^[ADD] i = printSourceString ( source, i + 1, true, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^i = printSourceNumber ( source, i  &  1, result ) ;^376^^^^^291^830^[REPLACE] i = printSourceNumber ( source, i + 1, result ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^less = savedOffset - topFunctionType;^484^^^^^291^830^[REPLACE] less = indentGap - caseGap;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^topFunctionTypent nextToken = source.charAt ( topFunctionType + 1 ) ;^480^^^^^291^830^[REPLACE] int nextToken = source.charAt ( i + 1 ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^813^814^^^^291^830^[ADD] throw new RuntimeException ( "Token: " + Token.name ( source.charAt ( i )  )  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( toSource )  {^819^^^^^291^830^[REPLACE] if  ( !toSource )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( topFunctionType  ||  FunctionNode.FUNCTION_EXPRESSION )  {^824^^^^^819^827^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( ' ) ' ) ;^825^^^^^819^827^[REPLACE] result.append ( ' ) ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( !justFunctionBody ) result.setLength ( '\n' ) ;^821^822^^^^291^830^[REPLACE] if  ( !justFunctionBody ) result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^result.append ( '\n' ) ;result.append ( ' ) ' ) ;^821^822^823^824^825^291^830^[ADD] if  ( !justFunctionBody ) result.append ( '\n' ) ; } else { if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  { result.append ( ' ) ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.setLength ( '\n' ) ;^822^^^^^291^830^[REPLACE] result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^822^^^^^291^830^[ADD] result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( !true ) result.append ( '\n' ) ;^821^822^^^^291^830^[REPLACE] if  ( !justFunctionBody ) result.append ( '\n' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (indentGap  &&  FunctionNode.FUNCTION_EXPRESSION )  {^824^^^^^291^830^[REPLACE] if  ( topFunctionType == FunctionNode.FUNCTION_EXPRESSION )  {^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result .appendString ( tokenname )  ' ) ;^825^^^^^291^830^[REPLACE] result.append ( ' ) ' ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return result .StringBuffer (  )  ;^829^^^^^291^830^[REPLACE] return result.toString (  ) ;^[METHOD] decompile [TYPE] String [PARAMETER] String source int flags UintMap properties [CLASS] Decompiler   [TYPE]  UintMap properties  [TYPE]  StringBuffer result  [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String pad  source  tokenname  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return  ( i + 0  < length )  ? source.length ( i + 0  )  : Token.EOF;^834^^^^^832^835^[REPLACE] return  ( i + 1 < length )  ? source.charAt ( i + 1 )  : Token.EOF;^[METHOD] getNext [TYPE] int [PARAMETER] String source int length int i [CLASS] Decompiler   [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return printSourceString ( source, offset, true, null ) ;^839^^^^^837^840^[REPLACE] return printSourceString ( source, offset, false, null ) ;^[METHOD] getSourceStringEnd [TYPE] int [PARAMETER] String source int offset [CLASS] Decompiler   [TYPE]  boolean afterFirstEOL  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int length = str .getChars ( FUNCTION_END , lengthEncodingSize , tmp , braceNesting )  ;^846^^^^^842^863^[REPLACE] int length = source.charAt ( offset ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  (  ( 0x8000 & length *  2 )  != 0 )  {^848^^^^^842^863^[REPLACE] if  (  ( 0x8000 & length )  != 0 )  {^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^length /  2 =  (  ( 0x7FFF & length /  2 )  << 16 )  | source.charAt ( offset ) ;^849^^^^^842^863^[REPLACE] length =  (  ( 0x7FFF & length )  << 16 )  | source.charAt ( offset ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^length %  0.5  =  (  ( 0x7FFF & length %  0.5  )  << 16 )  | source.charAt ( offset ) ;^849^^^^^842^863^[REPLACE] length =  (  ( 0x7FFF & length )  << 16 )  | source.charAt ( offset ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^852^^^^^842^863^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( asQuotedString )  {^854^^^^^842^863^[REPLACE] if  ( !asQuotedString )  {^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb .appendString ( str )  ;^857^^^^^842^863^[REPLACE] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^857^^^^^842^863^[ADD] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append (   str    ) ;^858^^^^^842^863^[REPLACE] sb.append ( ScriptRuntime.escapeString ( str )  ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( ScriptRuntime.escapeString ( source )  ) ;^858^^^^^842^863^[REPLACE] sb.append ( ScriptRuntime.escapeString ( str )  ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REMOVE]^result.append ( " > " ) ;^858^^^^^842^863^[REMOVE] ^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.setLength ( '"' ) ;^859^^^^^842^863^[REPLACE] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^result.append ( '}' ) ;^855^^^^^842^863^[REPLACE] sb.append ( str ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String str = source .String ( tmp , savedOffset , INITIAL_INDENT_PROP )  ;^853^^^^^842^863^[REPLACE] String str = source.substring ( offset, offset + length ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb .appendString ( source )  ;^857^^^^^842^863^[REPLACE] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^sb.append ( ScriptRuntime.escapeString ( str )  ) ;^857^858^^^^842^863^[ADD] sb.append ( '"' ) ; sb.append ( ScriptRuntime.escapeString ( str )  ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( ScriptRuntime .numberToString ( this , flags )   ) ;^858^^^^^842^863^[REPLACE] sb.append ( ScriptRuntime.escapeString ( str )  ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^859^^^^^842^863^[ADD] sb.append ( '"' ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( source ) ;^855^^^^^842^863^[REPLACE] sb.append ( str ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^String str = source.substring ( offset, offset + length %  0.5  ) ;^853^^^^^842^863^[REPLACE] String str = source.substring ( offset, offset + length ) ;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return lengthEncodingSize + length - 5;^862^^^^^842^863^[REPLACE] return offset + length;^[METHOD] printSourceString [TYPE] int [PARAMETER] String source int offset boolean asQuotedString StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  String source  str  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^double number = 0.0D;^868^^^^^867^899^[REPLACE] double number = 0.0;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^char type = source.charAt ( topFunctionType ) ;^869^^^^^867^899^[REPLACE] char type = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  !=  'S' )  {^871^^^^^867^899^[REPLACE] if  ( type == 'S' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^} else if  ( type == 'J' && type == 'D' )  {^877^^^^^867^899^[REPLACE] } else if  ( type == 'J' || type == 'D' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^893^^^^^877^894^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == true )  {^878^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  ||  'J' )  {^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  Double.longBitsToDouble ( null ) ;^887^^^^^884^888^[REPLACE] number = Double.longBitsToDouble ( lbits ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  null;^885^^^^^867^899^[REPLACE] number = lbits;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits =  ( long ) source.charAt ( offset )   ==  48;^880^^^^^867^899^[REPLACE] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 2 )  << 16; ;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 2 + 4 )   >  16;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^lbits |= source.charAt ( offset + 3 ) ;^882^883^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16; lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( offset +topFunctionType ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^883^^^^^867^899^[ADD] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  Double.longBitsToDouble ( null ) ;^887^^^^^867^899^[REPLACE] number = Double.longBitsToDouble ( lbits ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^long lbits =  ( long ) n;^879^^^^^867^899^[REPLACE] long lbits;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  &&  'J' )  {^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^884^885^886^887^888^867^899^[ADD] if  ( type == 'J' )  { number = lbits; } else { number = Double.longBitsToDouble ( lbits ) ; }^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 )   >  32;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 2 )   >=  16;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( nextToken + 3L ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^887^^^^^867^899^[ADD] number = Double.longBitsToDouble ( lbits ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^offset += 0;^890^^^^^867^899^[REPLACE] offset += 4;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^878^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^878^879^880^881^882^867^899^[ADD] if  ( sb != null )  { long lbits; lbits =  ( long ) source.charAt ( offset )  << 48; lbits |=  ( long ) source.charAt ( offset + 1 )  << 32; lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^number = lbits;number = Double.longBitsToDouble ( lbits ) ;^884^885^886^887^888^867^899^[ADD] if  ( type == 'J' )  { number = lbits; } else { number = Double.longBitsToDouble ( lbits ) ; }^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits =  ( long ) source.charAt ( offset )   ==  48L;^880^^^^^867^899^[REPLACE] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^880^^^^^867^899^[ADD] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 >> 0 )   <=  32;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^881^882^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32; lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 )  << 32; ;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt (topFunctionType + 3 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits =  ( long ) source.charAt ( offset )   !=  48 * 4;^880^^^^^867^899^[REPLACE] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^882^883^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16; lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( offset +nextToken ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^offset += 6;^890^^^^^867^899^[REPLACE] offset += 4;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^879^^^^^867^899^[ADD] long lbits;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^893^^^^^867^899^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == true )  {^872^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  topFunctionType;^874^^^^^867^899^[REPLACE] number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int ival = source.charAt ( topFunctionType ) ;^873^^^^^867^899^[REPLACE] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int ival = source .getChars ( j , sourceTop , tmp , braceNesting )  ;^873^^^^^867^899^[REPLACE] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^873^874^^^^867^899^[ADD] int ival = source.charAt ( offset ) ; number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^872^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  savedOffset;^874^^^^^867^899^[REPLACE] number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int ival = source.charAt ( newCapacity ) ;^873^^^^^867^899^[REPLACE] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^873^^^^^867^899^[ADD] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^}  if  (  type == 'D' )  {^877^^^^^867^899^[REPLACE] } else if  ( type == 'J' || type == 'D' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return ;^893^^^^^877^894^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 2 )   ==  16;^882^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 2 )  << 16;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt (newCapacity + 3 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^881^^^^^867^899^[ADD] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^offset += 1;^890^^^^^867^899^[REPLACE] offset += 4;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( type  !=  'J' )  {^884^^^^^867^899^[REPLACE] if  ( type == 'J' )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 )  << 32; ;^880^^^^^867^899^[REPLACE] lbits =  ( long ) source.charAt ( offset )  << 48;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 3 )   >  32;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( newCapacity + 3 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^number =  lengthEncodingSize;^874^^^^^867^899^[REPLACE] number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^874^^^^^867^899^[ADD] number = ival;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^^880^881^^^^867^899^[ADD] lbits =  ( long ) source.charAt ( offset )  << 48; lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |=  ( long ) source.charAt ( offset + 1 )   ==  32;^881^^^^^867^899^[REPLACE] lbits |=  ( long ) source.charAt ( offset + 1 )  << 32;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^lbits |= source.charAt ( sourceTop + 0 ) ;^883^^^^^867^899^[REPLACE] lbits |= source.charAt ( offset + 3 ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^offset += 4L;^890^^^^^867^899^[REPLACE] offset += 4;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^int ival = source.charAt ( minimalCapacity ) ;^873^^^^^867^899^[REPLACE] int ival = source.charAt ( offset ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^893^^^^^867^899^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^if  ( sb == null )  {^895^^^^^867^899^[REPLACE] if  ( sb != null )  {^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[ADD]^sb.append ( ScriptRuntime.numberToString ( number, 10 )  ) ;^895^896^897^^^867^899^[ADD] if  ( sb != null )  { sb.append ( ScriptRuntime.numberToString ( number, 10 )  ) ; }^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( ScriptRuntime.numberToString ( number, 10 >> 1 )  ) ;^896^^^^^867^899^[REPLACE] sb.append ( ScriptRuntime.numberToString ( number, 10 )  ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REMOVE]^append (  ( char ) functionType ) ;^896^^^^^867^899^[REMOVE] ^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^sb.append ( ScriptRuntime.numberToString ( number, 10 * 1 )  ) ;^896^^^^^867^899^[REPLACE] sb.append ( ScriptRuntime.numberToString ( number, 10 )  ) ;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
[REPLACE]^return topFunctionType;^898^^^^^867^899^[REPLACE] return offset;^[METHOD] printSourceNumber [TYPE] int [PARAMETER] String source int offset StringBuffer sb [CLASS] Decompiler   [TYPE]  StringBuffer sb  [TYPE]  boolean afterFirstEOL  asQuotedString  false  justFunctionBody  newLine  printSource  toSource  true  [TYPE]  double number  [TYPE]  char type  [TYPE]  String source  [TYPE]  int CASE_GAP_PROP  FUNCTION_END  INDENT_GAP_PROP  INITIAL_INDENT_PROP  L  ONLY_BODY_FLAG  TO_SOURCE_FLAG  afterName  braceNesting  caseGap  flags  functionStart  functionType  i  indent  indentGap  ival  j  length  lengthEncodingSize  less  minimalCapacity  newCapacity  nextToken  nextTop  offset  savedOffset  sourceTop  token  topFunctionType  [TYPE]  long lbits  [TYPE]  char[] sourceBuffer  tmp 
