[REPLACE]^private static final long serialVersionUID ;^51^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AllType  
[REPLACE]^return visitor.caseAllType (  ) ;^54^^^^^53^55^[REPLACE] super ( registry ) ;^[METHOD] <init> [TYPE] JSTypeRegistry) [PARAMETER] JSTypeRegistry registry [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  true 
[REPLACE]^return   that.isUnknownType (  ) ;^64^^^^^63^65^[REPLACE] return that.isAllType (  )  || that.isUnknownType (  ) ;^[METHOD] isSubtype [TYPE] boolean [PARAMETER] JSType that [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  JSType that  [TYPE]  boolean false  true 
[REPLACE]^return false;^69^^^^^68^70^[REPLACE] return true;^[METHOD] isAllType [TYPE] boolean [PARAMETER] [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false;^75^^^^^73^76^[REPLACE] return true;^[METHOD] matchesStringContext [TYPE] boolean [PARAMETER] [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false;^81^^^^^79^82^[REPLACE] return true;^[METHOD] matchesObjectContext [TYPE] boolean [PARAMETER] [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return true;^86^^^^^85^87^[REPLACE] return false;^[METHOD] canBeCalled [TYPE] boolean [PARAMETER] [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return that;^91^^^^^90^92^[REPLACE] return UNKNOWN;^[METHOD] testForEquality [TYPE] TernaryValue [PARAMETER] JSType that [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  JSType that  [TYPE]  boolean false  true 
[REPLACE]^if  ( that .isAllType (  )   )  {^96^^^^^95^100^[REPLACE] if  ( that.isUnknownType (  )  )  {^[METHOD] getLeastSupertype [TYPE] JSType [PARAMETER] JSType that [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  JSType that  [TYPE]  boolean false  true 
[REPLACE]^return   JSTypeNative.UNKNOWN_TYPE   ;^97^^^^^95^100^[REPLACE] return registry.getNativeType ( JSTypeNative.UNKNOWN_TYPE ) ;^[METHOD] getLeastSupertype [TYPE] JSType [PARAMETER] JSType that [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  JSType that  [TYPE]  boolean false  true 
[REPLACE]^return null;^99^^^^^95^100^[REPLACE] return this;^[METHOD] getLeastSupertype [TYPE] JSType [PARAMETER] JSType that [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  JSType that  [TYPE]  boolean false  true 
[REPLACE]^return this;^104^^^^^103^105^[REPLACE] return that;^[METHOD] getGreatestSubtype [TYPE] JSType [PARAMETER] JSType that [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  JSType that  [TYPE]  boolean false  true 
[REPLACE]^return that;^109^^^^^108^110^[REPLACE] return "*";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false.caseAllType (  ) ;^114^^^^^113^115^[REPLACE] return visitor.caseAllType (  ) ;^[METHOD] visit [TYPE] <T> [PARAMETER] Visitor<T> visitor [CLASS] AllType   [TYPE]  Visitor visitor  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return that;^119^^^^^118^120^[REPLACE] return BooleanLiteralSet.BOTH;^[METHOD] getPossibleToBooleanOutcomes [TYPE] BooleanLiteralSet [PARAMETER] [CLASS] AllType   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
