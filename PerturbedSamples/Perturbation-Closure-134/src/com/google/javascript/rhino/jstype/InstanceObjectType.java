[REPLACE]^private static final long serialVersionUID  = null ;^54^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] InstanceObjectType  
[REPLACE]^private  FunctionType constructor;^56^^^^^^^[REPLACE] private final FunctionType constructor;^ [CLASS] InstanceObjectType  
[REPLACE]^this ( registry, constructor, true ) ;^59^^^^^58^60^[REPLACE] this ( registry, constructor, false ) ;^[METHOD] <init> [TYPE] FunctionType) [PARAMETER] JSTypeRegistry registry FunctionType constructor [CLASS] InstanceObjectType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^super ( registry, this, this, isNativeType ) ;^64^^^^^62^67^[REPLACE] super ( registry, null, null, isNativeType ) ;^[METHOD] <init> [TYPE] FunctionType,boolean) [PARAMETER] JSTypeRegistry registry FunctionType constructor boolean isNativeType [CLASS] InstanceObjectType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  isNativeType  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^constructor   ;^65^^^^^62^67^[REPLACE] Preconditions.checkNotNull ( constructor ) ;^[METHOD] <init> [TYPE] FunctionType,boolean) [PARAMETER] JSTypeRegistry registry FunctionType constructor boolean isNativeType [CLASS] InstanceObjectType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  isNativeType  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^this.constructor =  null;^66^^^^^62^67^[REPLACE] this.constructor = constructor;^[METHOD] <init> [TYPE] FunctionType,boolean) [PARAMETER] JSTypeRegistry registry FunctionType constructor boolean isNativeType [CLASS] InstanceObjectType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  isNativeType  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[ADD]^^66^^^^^62^67^[ADD] this.constructor = constructor;^[METHOD] <init> [TYPE] FunctionType,boolean) [PARAMETER] JSTypeRegistry registry FunctionType constructor boolean isNativeType [CLASS] InstanceObjectType   [TYPE]  JSTypeRegistry registry  [TYPE]  boolean false  isNativeType  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return getConstructor (  ) .hasReferenceName (  ) ;^71^^^^^70^72^[REPLACE] return getConstructor (  ) .getReferenceName (  ) ;^[METHOD] getReferenceName [TYPE] String [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .getReferenceName (  ) ;^76^^^^^75^77^[REPLACE] return getConstructor (  ) .hasReferenceName (  ) ;^[METHOD] hasReferenceName [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  && "Number".equals ( getReferenceName (  )  ) ;^81^^^^^80^82^[REPLACE] return getConstructor (  ) .getPrototype (  ) ;^[METHOD] getImplicitPrototype [TYPE] ObjectType [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .getReferenceName (  ) ;^86^^^^^85^87^[REPLACE] return constructor;^[METHOD] getConstructor [TYPE] FunctionType [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^ObjectType thatObj = ObjectType.cast (  ( JSType )  that ) ;^92^^^^^90^97^[REPLACE] ObjectType proto = getImplicitPrototype (  ) ;^[METHOD] defineProperty [TYPE] boolean [PARAMETER] String name JSType type boolean inferred boolean inExterns [CLASS] InstanceObjectType   [TYPE]  ObjectType proto  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  inExterns  inferred  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[ADD]^^92^^^^^90^97^[ADD] ObjectType proto = getImplicitPrototype (  ) ;^[METHOD] defineProperty [TYPE] boolean [PARAMETER] String name JSType type boolean inferred boolean inExterns [CLASS] InstanceObjectType   [TYPE]  ObjectType proto  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  inExterns  inferred  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^if  (  proto.hasOwnDeclaredProperty ( name )  )  {^93^^^^^90^97^[REPLACE] if  ( proto != null && proto.hasOwnDeclaredProperty ( name )  )  {^[METHOD] defineProperty [TYPE] boolean [PARAMETER] String name JSType type boolean inferred boolean inExterns [CLASS] InstanceObjectType   [TYPE]  ObjectType proto  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  inExterns  inferred  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return true;^94^^^^^90^97^[REPLACE] return false;^[METHOD] defineProperty [TYPE] boolean [PARAMETER] String name JSType type boolean inferred boolean inExterns [CLASS] InstanceObjectType   [TYPE]  ObjectType proto  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  inExterns  inferred  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return getConstructor (  ) .isNative (  )  && "Number".equals ( getReferenceName (  )  ) ;^96^^^^^90^97^[REPLACE] return super.defineProperty ( name, type, inferred, inExterns ) ;^[METHOD] defineProperty [TYPE] boolean [PARAMETER] String name JSType type boolean inferred boolean inExterns [CLASS] InstanceObjectType   [TYPE]  ObjectType proto  [TYPE]  String name  [TYPE]  JSType type  [TYPE]  boolean false  inExterns  inferred  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return constructor.hasReferenceName (  ) ;^101^^^^^100^102^[REPLACE] return constructor.getReferenceName (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  ;^106^^^^^105^107^[REPLACE] return getConstructor (  ) .isNative (  )  && "Object".equals ( getReferenceName (  )  ) ;^[METHOD] isTheObjectType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return false;^111^^^^^110^112^[REPLACE] return true;^[METHOD] isInstanceType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  ;^116^^^^^115^117^[REPLACE] return getConstructor (  ) .isNative (  )  && "Array".equals ( getReferenceName (  )  ) ;^[METHOD] isArrayType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  && "Number".equals ( getReferenceName (  )  ) ;^121^^^^^120^122^[REPLACE] return getConstructor (  ) .isNative (  )  && "String".equals ( getReferenceName (  )  ) ;^[METHOD] isStringObjectType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  || "Boolean".equals ( getReferenceName (  )  ) ;^126^^^^^125^127^[REPLACE] return getConstructor (  ) .isNative (  )  && "Boolean".equals ( getReferenceName (  )  ) ;^[METHOD] isBooleanObjectType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  && "Date".equals ( getReferenceName (  )  ) ;^131^^^^^130^132^[REPLACE] return getConstructor (  ) .isNative (  )  && "Number".equals ( getReferenceName (  )  ) ;^[METHOD] isNumberObjectType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  )  .hasReferenceName (  )   && "Date".equals ( getReferenceName (  )  ) ;^136^^^^^135^137^[REPLACE] return getConstructor (  ) .isNative (  )  && "Date".equals ( getReferenceName (  )  ) ;^[METHOD] isDateType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  ;^141^^^^^140^142^[REPLACE] return getConstructor (  ) .isNative (  )  && "RegExp".equals ( getReferenceName (  )  ) ;^[METHOD] isRegexpType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  && "Number".equals ( getReferenceName (  )  ) ;^146^^^^^145^147^[REPLACE] return hasReferenceName (  ) ;^[METHOD] isNominalType [TYPE] boolean [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^if  ( this  ||  that )  {^151^^^^^150^160^[REPLACE] if  ( this == that )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^} else if  (  this.isNominalType (  )  )  {^153^^^^^150^160^[REPLACE] } else if  ( that instanceof JSType && this.isNominalType (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[ADD]^}   ObjectType thatObj = ObjectType.cast (  ( JSType )  that ) ;return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ;^153^154^155^156^157^150^160^[ADD] else if  ( that instanceof JSType && this.isNominalType (  )  )  { ObjectType thatObj = ObjectType.cast (  ( JSType )  that ) ; if  ( thatObj != null && thatObj.isNominalType (  )  )  { return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^if  ( thatObj == null && thatObj.isNominalType (  )  )  {^155^^^^^150^160^[REPLACE] if  ( thatObj != null && thatObj.isNominalType (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return.hasReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ;^156^^^^^150^160^[REPLACE] return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return.isNominalType (  ) .equals ( thatObj.getReferenceName (  )  ) ;^156^^^^^150^160^[REPLACE] return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^ObjectType thatObj = ObjectType.isNominalType (  ( JSType )  that ) ;^154^^^^^150^160^[REPLACE] ObjectType thatObj = ObjectType.cast (  ( JSType )  that ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[ADD]^^154^^^^^150^160^[ADD] ObjectType thatObj = ObjectType.cast (  ( JSType )  that ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^if  (  thatObj.isNominalType (  )  )  {^155^^^^^150^160^[REPLACE] if  ( thatObj != null && thatObj.isNominalType (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[ADD]^return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ;^155^156^157^^^150^160^[ADD] if  ( thatObj != null && thatObj.isNominalType (  )  )  { return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return false;^152^^^^^150^160^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^}  if  ( ! that instanceof JSType && this.isNominalType (  )  )  {^153^^^^^150^160^[REPLACE] } else if  ( that instanceof JSType && this.isNominalType (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^if  ( thatObj == null ) {^155^^^^^150^160^[REPLACE] if  ( thatObj != null && thatObj.isNominalType (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[ADD]^^155^156^157^^^150^160^[ADD] if  ( thatObj != null && thatObj.isNominalType (  )  )  { return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return getReferenceName (  ) .equals ( thatObj .hasReferenceName (  )   ) ;^156^^^^^150^160^[REPLACE] return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^return true;^159^^^^^150^160^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object that [CLASS] InstanceObjectType   [TYPE]  ObjectType thatObj  [TYPE]  Object that  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor 
[REPLACE]^} else if  ( that instanceof JSType && this.isNominalType (  )  )  {^168^^^^^167^173^[REPLACE] if  ( hasReferenceName (  )  )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getReferenceName (  ) .equals ( thatObj.getReferenceName (  )  ) ;^171^^^^^167^173^[REPLACE] return super.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getReferenceName (  ) .equals (  ) ;^169^^^^^167^173^[REPLACE] return getReferenceName (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getReferenceName (  )  .hashCode (  )  ;^169^^^^^167^173^[REPLACE] return getReferenceName (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return super .hashCode (  )  ;^171^^^^^167^173^[REPLACE] return super.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
[REPLACE]^return getConstructor (  ) .isNative (  )  && "Number".equals ( getReferenceName (  )  ) ;^177^^^^^176^178^[REPLACE] return getConstructor (  ) .getImplementedInterfaces (  ) ;^[METHOD] getCtorImplementedInterfaces [TYPE] Iterable [PARAMETER] [CLASS] InstanceObjectType   [TYPE]  long serialVersionUID  [TYPE]  FunctionType constructor  [TYPE]  boolean false  true 
