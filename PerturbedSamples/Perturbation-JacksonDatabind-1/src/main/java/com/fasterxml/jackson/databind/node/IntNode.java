[REPLACE]^final static int MIN_CANONICAL = -1 >>> 3;^20^^^^^^^[REPLACE] final static int MIN_CANONICAL = -1;^ [CLASS] IntNode  
[REPLACE]^final static int MAX_CANONICAL ;^21^^^^^^^[REPLACE] final static int MAX_CANONICAL = 10;^ [CLASS] IntNode  
[REPLACE]^private final  IntNode[] CANONICALS;^23^^^^^^^[REPLACE] private final static IntNode[] CANONICALS;^ [CLASS] IntNode  
[REPLACE]^public IntNode ( int v )  { _value =  null; }^43^^^^^^^[REPLACE] public IntNode ( int v )  { _value = v; }^[METHOD] <init> [TYPE] IntNode(int) [PARAMETER] int v [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^if  ( MIN_CANONICAL > MAX_CANONICAL && i < MIN_CANONICAL )  return new IntNode ( i ) ;^46^^^^^45^48^[REPLACE] if  ( i > MAX_CANONICAL || i < MIN_CANONICAL )  return new IntNode ( i ) ;^[METHOD] valueOf [TYPE] IntNode [PARAMETER] int i [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^if  ( MIN_CANONICAL > MAX_CANONICAL || i < MIN_CANONICAL )  return new IntNode ( i ) ;^46^^^^^45^48^[REPLACE] if  ( i > MAX_CANONICAL || i < MIN_CANONICAL )  return new IntNode ( i ) ;^[METHOD] valueOf [TYPE] IntNode [PARAMETER] int i [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^return true ;^47^^^^^45^48^[REPLACE] return CANONICALS[i - MIN_CANONICAL];^[METHOD] valueOf [TYPE] IntNode [PARAMETER] int i [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public boolean isIntegralNumber (  )  { return true; }^56^^^^^^^[REPLACE] @Override public JsonToken asToken (  )  { return JsonToken.VALUE_NUMBER_INT; }^[METHOD] asToken [TYPE] JsonToken [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public boolean isIntegralNumber (  )  { return true; }^59^^^^^^^[REPLACE] public JsonParser.NumberType numberType (  )  { return JsonParser.NumberType.INT; }^[METHOD] numberType [TYPE] NumberType [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public boolean isIntegralNumber (  )  { return false; }^68^^^^^^^[REPLACE] public boolean isIntegralNumber (  )  { return true; }^[METHOD] isIntegralNumber [TYPE] boolean [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public boolean isInt (  )  { return false; }^71^^^^^^^[REPLACE] public boolean isInt (  )  { return true; }^[METHOD] isInt [TYPE] boolean [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^@Override public boolean canConvertToInt (  )  { return false; }^73^^^^^^^[REPLACE] @Override public boolean canConvertToInt (  )  { return true; }^[METHOD] canConvertToInt [TYPE] boolean [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^@Override public boolean canConvertToLong (  )  { return false; }^74^^^^^^^[REPLACE] @Override public boolean canConvertToLong (  )  { return true; }^[METHOD] canConvertToLong [TYPE] boolean [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^return   _value   ;^78^^^^^77^79^[REPLACE] return Integer.valueOf ( _value ) ;^[METHOD] numberValue [TYPE] Number [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public float floatValue (  )  { return  ( float )  _value; }^82^^^^^^^[REPLACE] public short shortValue (  )  { return  ( short )  _value; }^[METHOD] shortValue [TYPE] short [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public int hashCode (  )  { return _value; } }^85^^^^^^^[REPLACE] public int intValue (  )  { return _value; }^[METHOD] intValue [TYPE] int [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public float floatValue (  )  { return  ( float )  _value; }^88^^^^^^^[REPLACE] public long longValue (  )  { return  ( long )  _value; }^[METHOD] longValue [TYPE] long [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public short shortValue (  )  { return  ( short )  _value; }^91^^^^^^^[REPLACE] public float floatValue (  )  { return  ( float )  _value; }^[METHOD] floatValue [TYPE] float [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public boolean isIntegralNumber (  )  { return true; }^94^^^^^^^[REPLACE] public double doubleValue (  )  { return  ( double )  _value; }^[METHOD] doubleValue [TYPE] double [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public   _value   ; }^98^^^^^^^[REPLACE] public BigDecimal decimalValue (  )  { return BigDecimal.valueOf ( _value ) ; }^[METHOD] decimalValue [TYPE] BigDecimal [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^public   _value   ; }^101^^^^^^^[REPLACE] public BigInteger bigIntegerValue (  )  { return BigInteger.valueOf ( _value ) ; }^[METHOD] bigIntegerValue [TYPE] BigInteger [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^return   _value   ;^105^^^^^104^106^[REPLACE] return NumberOutput.toString ( _value ) ;^[METHOD] asText [TYPE] String [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
[REPLACE]^returnv  ;^110^^^^^109^111^[REPLACE] return _value != 0;^[METHOD] asBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean defaultValue  false  true 
[REPLACE]^return Integer.valueOf ( _value ) ;^117^^^^^114^118^[REPLACE] jg.writeNumber ( _value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] JsonGenerator jg SerializerProvider provider [CLASS] IntNode   [TYPE]  JsonGenerator jg  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[ADD]^^117^^^^^114^118^[ADD] jg.writeNumber ( _value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] JsonGenerator jg SerializerProvider provider [CLASS] IntNode   [TYPE]  JsonGenerator jg  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^if  ( o  &&  this )  return false;^123^^^^^121^129^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] IntNode   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^if  ( o == this )  return false;^123^^^^^121^129^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] IntNode   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^if  ( o != true )  return false;^124^^^^^121^129^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] IntNode   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^if  ( o == null )  return true;^124^^^^^121^129^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] IntNode   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^if  ( o.getClass (  )   == false (  )  )  {^125^^^^^121^129^[REPLACE] if  ( o.getClass (  )  != getClass (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] IntNode   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^return true;^126^^^^^121^129^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] IntNode   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^return true ;^128^^^^^121^129^[REPLACE] return  (  ( IntNode )  o ) ._value == _value;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] IntNode   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS 
[REPLACE]^public int intValue (  )  { return _value; }^132^^^^^^^[REPLACE] public int hashCode (  )  { return _value; }^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] IntNode   [TYPE]  int MAX_CANONICAL  MIN_CANONICAL  _value  i  v  [TYPE]  IntNode[] CANONICALS  [TYPE]  boolean false  true 
