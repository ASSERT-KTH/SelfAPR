[REPLACE]^protected final  short  _propertyName;^13^^^^^^^[REPLACE] protected final String _propertyName;^ [CLASS] ObjectIdInfo  
[REPLACE]^protected  Class<? extends ObjectIdGenerator<?>> _generator;^14^^^^^^^[REPLACE] protected final Class<? extends ObjectIdGenerator<?>> _generator;^ [CLASS] ObjectIdInfo  
[REPLACE]^protected  Class<?> _scope;^15^^^^^^^[REPLACE] protected final Class<?> _scope;^ [CLASS] ObjectIdInfo  
[REPLACE]^private final boolean _alwaysAsId;^16^^^^^^^[REPLACE] protected final boolean _alwaysAsId;^ [CLASS] ObjectIdInfo  
[REPLACE]^this ( prop, scope, gen, true ) ;^19^^^^^18^20^[REPLACE] this ( prop, scope, gen, false ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] String prop Class<?> scope ObjectIdGenerator<?>> gen [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  false  true  [TYPE]  String _propertyName  prop 
[REPLACE]^_propertyName =  null;^25^^^^^22^29^[REPLACE] _propertyName = prop;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] String prop Class<?> scope ObjectIdGenerator<?>> gen boolean alwaysAsId [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  true  [TYPE]  String _propertyName  prop 
[REPLACE]^_scope =  this;^26^^^^^22^29^[REPLACE] _scope = scope;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] String prop Class<?> scope ObjectIdGenerator<?>> gen boolean alwaysAsId [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  true  [TYPE]  String _propertyName  prop 
[REPLACE]^_generator =  this;^27^^^^^22^29^[REPLACE] _generator = gen;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] String prop Class<?> scope ObjectIdGenerator<?>> gen boolean alwaysAsId [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  true  [TYPE]  String _propertyName  prop 
[REPLACE]^_alwaysAsId =  false;^28^^^^^22^29^[REPLACE] _alwaysAsId = alwaysAsId;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] String prop Class<?> scope ObjectIdGenerator<?>> gen boolean alwaysAsId [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  true  [TYPE]  String _propertyName  prop 
[ADD]^^28^^^^^22^29^[ADD] _alwaysAsId = alwaysAsId;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] String prop Class<?> scope ObjectIdGenerator<?>> gen boolean alwaysAsId [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  true  [TYPE]  String _propertyName  prop 
[REPLACE]^if  ( _alwaysAsId  !=  state )  {^32^^^^^31^36^[REPLACE] if  ( _alwaysAsId == state )  {^[METHOD] withAlwaysAsId [TYPE] ObjectIdInfo [PARAMETER] boolean state [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
[REPLACE]^return null;^33^^^^^31^36^[REPLACE] return this;^[METHOD] withAlwaysAsId [TYPE] ObjectIdInfo [PARAMETER] boolean state [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
[REPLACE]^return new ObjectIdInfo ( _propertyName, _scope, _generator, true ) ;^35^^^^^31^36^[REPLACE] return new ObjectIdInfo ( _propertyName, _scope, _generator, state ) ;^[METHOD] withAlwaysAsId [TYPE] ObjectIdInfo [PARAMETER] boolean state [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
[REPLACE]^public Class<? extends ObjectIdGenerator<?>> getGeneratorType (  )  { return _generator; } public boolean getAlwaysAsId (  )  { return _alwaysAsId; }^38^^^^^^^[REPLACE] public String getPropertyName (  )  { return _propertyName; }^[METHOD] getPropertyName [TYPE] String [PARAMETER] [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
[REPLACE]^public Class<?> getScope (  )  { return _scope; } public Class<? extends ObjectIdGenerator<?>> getGeneratorType (  )  { return _generator; }^39^^^^^^^[REPLACE] public Class<?> getScope (  )  { return _scope; }^[METHOD] getScope [TYPE] Class [PARAMETER] [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
[REPLACE]^public Class<?> getScope (  )  { return _scope; } public Class<? extends ObjectIdGenerator<?>> getGeneratorType (  )  { return _generator; }^40^^^^^^^[REPLACE] public Class<? extends ObjectIdGenerator<?>> getGeneratorType (  )  { return _generator; }^[METHOD] getGeneratorType [TYPE] Class [PARAMETER] [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
[REPLACE]^public Class<? extends ObjectIdGenerator<?>> getGeneratorType (  )  { return _generator; } public boolean getAlwaysAsId (  )  { return _alwaysAsId; }^41^^^^^^^[REPLACE] public boolean getAlwaysAsId (  )  { return _alwaysAsId; }^[METHOD] getAlwaysAsId [TYPE] boolean [PARAMETER] [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
[REPLACE]^return "ObjectIdInfo: propName =  propName="+_propertyName +", scope="+ ( _scope ;^45^46^47^48^^44^49^[REPLACE] return "ObjectIdInfo: propName="+_propertyName +", scope="+ ( _scope == null ? "null" : _scope.getName (  )  ) +", generatorType="+ ( _generator == null ? "null" : _generator.getName (  )  ) +", alwaysAsId="+_alwaysAsId;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectIdInfo   [TYPE]  Class _generator  _scope  gen  scope  [TYPE]  boolean _alwaysAsId  alwaysAsId  false  state  true  [TYPE]  String _propertyName  prop 
