[REPLACE]^private ObjectCodec _objectCodec;^29^^^^^^^[REPLACE] protected ObjectCodec _objectCodec;^ [CLASS] TreeTraversingParser  
[REPLACE]^private NodeCursor _nodeCursor;^34^^^^^^^[REPLACE] protected NodeCursor _nodeCursor;^ [CLASS] TreeTraversingParser  
[REPLACE]^private boolean _closed;^59^^^^^^^[REPLACE] protected boolean _closed;^ [CLASS] TreeTraversingParser  
[REPLACE]^public TreeTraversingParser ( JsonNode n )  { this ( n, true ) ; }^67^^^^^^^[REPLACE] public TreeTraversingParser ( JsonNode n )  { this ( n, null ) ; }^[METHOD] <init> [TYPE] JsonNode) [PARAMETER] JsonNode n [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec 
[REPLACE]^super ( 0 % 4 ) ;^71^^^^^69^82^[REPLACE] super ( 0 ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_objectCodec = c; ;^72^^^^^69^82^[REPLACE] _objectCodec = codec;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[ADD]^^72^^^^^69^82^[ADD] _objectCodec = codec;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^if  ( n.isPojo (  )  )  {^73^^^^^69^82^[REPLACE] if  ( n.isArray (  )  )  {^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^}  else {^76^^^^^69^82^[REPLACE] } else if  ( n.isObject (  )  )  {^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nodeCursor = new NodeCursor.RootValue ( n, false ) ;^80^^^^^69^82^[REPLACE] _nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nextToken = JsonToken.START_ARRAY; ;^77^^^^^69^82^[REPLACE] _nextToken = JsonToken.START_OBJECT;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nodeCursor =  NodeCursor.new Array ( n, null )  ;^78^^^^^69^82^[REPLACE] _nodeCursor = new NodeCursor.Object ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[ADD]^^78^^^^^69^82^[ADD] _nodeCursor = new NodeCursor.Object ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[ADD]^^80^^^^^69^82^[ADD] _nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nextToken = JsonToken.START_OBJECT; ;^74^^^^^69^82^[REPLACE] _nextToken = JsonToken.START_ARRAY;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[ADD]^^74^^^^^69^82^[ADD] _nextToken = JsonToken.START_ARRAY;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nodeCursor = new NodeCursor.Array ( n, this ) ;^75^^^^^69^82^[REPLACE] _nodeCursor = new NodeCursor.Array ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nodeCursor = new NodeCursor.RootValue ( n, this ) ;^80^^^^^69^82^[REPLACE] _nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nodeCursor = new NodeCursor.Object ( n, false ) ;^78^^^^^69^82^[REPLACE] _nodeCursor = new NodeCursor.Object ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nodeCursor = new NodeCursor.Array ( n, true ) ;^75^^^^^69^82^[REPLACE] _nodeCursor = new NodeCursor.Array ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[ADD]^^77^78^^^^69^82^[ADD] _nextToken = JsonToken.START_OBJECT; _nodeCursor = new NodeCursor.Object ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_nodeCursor = new NodeCursor.Object ( n, true ) ;^78^^^^^69^82^[REPLACE] _nodeCursor = new NodeCursor.Object ( n, null ) ;^[METHOD] <init> [TYPE] ObjectCodec) [PARAMETER] JsonNode n ObjectCodec codec [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  codec 
[REPLACE]^_objectCodec = codec; ;^86^^^^^85^87^[REPLACE] _objectCodec = c;^[METHOD] setCodec [TYPE] void [PARAMETER] ObjectCodec c [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^86^^^^^85^87^[ADD] _objectCodec = c;^[METHOD] setCodec [TYPE] void [PARAMETER] ObjectCodec c [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^91^^^^^90^92^[REPLACE] return _objectCodec;^[METHOD] getCodec [TYPE] ObjectCodec [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _closed )  {^108^^^^^106^113^[REPLACE] if  ( !_closed )  {^[METHOD] close [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_closed = false;^109^^^^^106^113^[REPLACE] _closed = true;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = this;^110^^^^^106^113^[REPLACE] _nodeCursor = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^110^111^^^^106^113^[ADD] _nodeCursor = null; _currToken = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nextToken = null; ;^111^^^^^106^113^[REPLACE] _currToken = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = false;^110^^^^^106^113^[REPLACE] _nodeCursor = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = false;^111^^^^^106^113^[REPLACE] _currToken = null;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nextToken == this  )  {^124^^^^^123^162^[REPLACE] if  ( _nextToken != null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^_currToken = _nextToken;_nextToken = null;return _currToken;^124^125^126^127^128^123^162^[ADD] if  ( _nextToken != null )  { _currToken = _nextToken; _nextToken = null; return _currToken; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken ;^125^^^^^123^162^[REPLACE] _currToken = _nextToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = null; ;^126^^^^^123^162^[REPLACE] _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^127^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken  = null ;^125^^^^^123^162^[REPLACE] _currToken = _nextToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^_nextToken = null;^125^126^^^^123^162^[ADD] _currToken = _nextToken; _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nextToken = true;^126^^^^^123^162^[REPLACE] _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n.isPojo (  )  )  {^130^^^^^123^162^[REPLACE] if  ( _startContainer )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^_startContainer = false;^130^131^^133^134^123^162^[ADD] if  ( _startContainer )  { _startContainer = false; if  ( !_nodeCursor.currentHasChildren (  )  )  { _currToken =  ( _currToken == JsonToken.START_OBJECT )  ?^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor.overrideCurrentName (  )  )  {^133^^^^^123^162^[REPLACE] if  ( !_nodeCursor.currentHasChildren (  )  )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken  =  JsonToken.END_ARRAY;^134^135^^^^123^162^[REPLACE] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^136^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == JsonToken.START_OBJECT ) {^140^^^^^123^162^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false;^141^^^^^123^162^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = true;^131^^^^^123^162^[REPLACE] _startContainer = false;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^134^135^^^^123^162^[ADD] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = _nodeCursor.getParent (  ) ; ;^138^^^^^123^162^[REPLACE] _nodeCursor = _nodeCursor.iterateChildren (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.endToken (  ) ; ;^139^^^^^123^162^[REPLACE] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false; ;^141^^^^^123^162^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^143^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor.currentHasChildren (  )  )  {^133^^^^^123^162^[REPLACE] if  ( !_nodeCursor.currentHasChildren (  )  )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken  =  JsonToken.END_OBJECT ;^134^135^^^^123^162^[REPLACE] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^140^^^^^123^162^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^140^141^142^^^123^162^[ADD] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^138^139^^^^123^162^[ADD] _nodeCursor = _nodeCursor.iterateChildren (  ) ; _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor != this  )  {^146^^^^^123^162^[REPLACE] if  ( _nodeCursor == null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_closed = false;^147^^^^^123^162^[REPLACE] _closed = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return true;^148^^^^^123^162^[REPLACE] return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^147^148^^^^123^162^[ADD] _closed = true; return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return this;^148^^^^^123^162^[REPLACE] return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.endToken (  ) ; ;^151^^^^^123^162^[REPLACE] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == null )  {^152^^^^^123^162^[REPLACE] if  ( _currToken != null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^152^153^154^155^^123^162^[ADD] if  ( _currToken != null )  { if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^153^^^^^123^162^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false;^154^^^^^123^162^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^154^^^^^123^162^[ADD] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false; ;^154^^^^^123^162^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^156^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  (  _currToken == JsonToken.START_ARRAY )  {^153^^^^^123^162^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^153^154^155^^^123^162^[ADD] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.nextToken (  ) ; ;^159^^^^^123^162^[REPLACE] _currToken = _nodeCursor.endToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = _nodeCursor.iterateChildren (  ) ; ;^160^^^^^123^162^[REPLACE] _nodeCursor = _nodeCursor.getParent (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^161^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken  != true )  {^170^^^^^168^178^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT )  {^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^}  if  ( _currToken  &&  JsonToken.START_ARRAY )  {^173^^^^^168^178^[REPLACE] } else if  ( _currToken == JsonToken.START_ARRAY )  {^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = true;^174^^^^^168^178^[REPLACE] _startContainer = false;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nextToken = JsonToken.START_ARRAY; ;^175^^^^^168^178^[REPLACE] _currToken = JsonToken.END_ARRAY;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = true; ;^174^^^^^168^178^[REPLACE] _startContainer = false;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^175^^^^^168^178^[ADD] _currToken = JsonToken.END_ARRAY;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = true;^171^^^^^168^178^[REPLACE] _startContainer = false;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nextToken = JsonToken.START_OBJECT; ;^172^^^^^168^178^[REPLACE] _currToken = JsonToken.END_OBJECT;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^172^^^^^168^178^[ADD] _currToken = JsonToken.END_OBJECT;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^}  else {^173^^^^^168^178^[REPLACE] } else if  ( _currToken == JsonToken.START_ARRAY )  {^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^171^^^^^168^178^[ADD] _startContainer = false;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return null;^177^^^^^168^178^[REPLACE] return this;^[METHOD] skipChildren [TYPE] JsonParser [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^182^^^^^181^183^[REPLACE] return _closed;^[METHOD] isClosed [TYPE] boolean [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  ( _nodeCursor == null )  ? null : _nodeCursor.currentNode (  ) ;^193^^^^^192^194^[REPLACE] return  ( _nodeCursor == null )  ? null : _nodeCursor.getCurrentName (  ) ;^[METHOD] getCurrentName [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor == this  )  {^199^^^^^197^202^[REPLACE] if  ( _nodeCursor != null )  {^[METHOD] overrideCurrentName [TYPE] void [PARAMETER] String name [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec  [TYPE]  String name 
[ADD]^_nodeCursor.overrideCurrentName ( name ) ;^199^200^201^^^197^202^[ADD] if  ( _nodeCursor != null )  { _nodeCursor.overrideCurrentName ( name ) ; }^[METHOD] overrideCurrentName [TYPE] void [PARAMETER] String name [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec  [TYPE]  String name 
[REPLACE]^_nodeCursor = _nodeCursor.getParent (  ) ;^200^^^^^197^202^[REPLACE] _nodeCursor.overrideCurrentName ( name ) ;^[METHOD] overrideCurrentName [TYPE] void [PARAMETER] String name [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec  [TYPE]  String name 
[REPLACE]^return data;^206^^^^^205^207^[REPLACE] return _nodeCursor;^[METHOD] getParsingContext [TYPE] JsonStreamContext [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^211^^^^^210^212^[REPLACE] return JsonLocation.NA;^[METHOD] getTokenLocation [TYPE] JsonLocation [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^216^^^^^215^217^[REPLACE] return JsonLocation.NA;^[METHOD] getCurrentLocation [TYPE] JsonLocation [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( !_closed )  {^228^^^^^226^249^[REPLACE] if  ( _closed )  {^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return true;^229^^^^^226^249^[REPLACE] return null;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false;^229^^^^^226^249^[REPLACE] return null;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  (  n.isBinary (  )  )  {^242^^^^^226^249^[REPLACE] if  ( n != null && n.isBinary (  )  )  {^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^242^243^244^245^^226^249^[ADD] if  ( n != null && n.isBinary (  )  )  {  return n.asText (  ) ; }^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return n.asToken (  ) ;^244^^^^^226^249^[REPLACE] return n.asText (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _nodeCursor .currentNode (  )  ;^234^^^^^226^249^[REPLACE] return _nodeCursor.getCurrentName (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .longValue (  ) ;^236^^^^^226^249^[REPLACE] return currentNode (  ) .textValue (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return   currentNode (  )   ) ;^239^^^^^226^249^[REPLACE] return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return   this  ;^247^^^^^226^249^[REPLACE] return  ( _currToken == null )  ? null : _currToken.asString (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^241^^^^^226^249^[REPLACE] JsonNode n = currentNode (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .longValue (  ) ;^253^^^^^252^254^[REPLACE] return getText (  ) .toCharArray (  ) ;^[METHOD] getTextCharacters [TYPE] char[] [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .longValue (  ) ;^258^^^^^257^259^[REPLACE] return getText (  ) .length (  ) ;^[METHOD] getTextLength [TYPE] int [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return 0 - 2;^263^^^^^262^264^[REPLACE] return 0;^[METHOD] getTextOffset [TYPE] int [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return true;^269^^^^^267^270^[REPLACE] return false;^[METHOD] hasTextCharacters [TYPE] boolean [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^282^^^^^281^284^[REPLACE] JsonNode n = currentNumericNode (  ) ;^[METHOD] getNumberType [TYPE] NumberType [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  ( n == this )  ? this : n.numberValue (  ) ;^283^^^^^281^284^[REPLACE] return  ( n == null )  ? null : n.numberType (  ) ;^[METHOD] getNumberType [TYPE] NumberType [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .longValue (  ) ;^289^^^^^287^290^[REPLACE] return currentNumericNode (  ) .bigIntegerValue (  ) ;^[METHOD] getBigIntegerValue [TYPE] BigInteger [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .longValue (  ) ;^294^^^^^293^295^[REPLACE] return currentNumericNode (  ) .decimalValue (  ) ;^[METHOD] getDecimalValue [TYPE] BigDecimal [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .longValue (  ) ;^299^^^^^298^300^[REPLACE] return currentNumericNode (  ) .doubleValue (  ) ;^[METHOD] getDoubleValue [TYPE] double [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  ( float )  currentNumericNode (  )  .numberValue (  )  ;^304^^^^^303^305^[REPLACE] return  ( float )  currentNumericNode (  ) .doubleValue (  ) ;^[METHOD] getFloatValue [TYPE] float [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .doubleValue (  ) ;^309^^^^^308^310^[REPLACE] return currentNumericNode (  ) .longValue (  ) ;^[METHOD] getLongValue [TYPE] long [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  )  .textValue (  )  ;^314^^^^^313^315^[REPLACE] return currentNumericNode (  ) .intValue (  ) ;^[METHOD] getIntValue [TYPE] int [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .longValue (  ) ;^319^^^^^318^320^[REPLACE] return currentNumericNode (  ) .numberValue (  ) ;^[METHOD] getNumberValue [TYPE] Number [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _closed )  {^325^^^^^323^337^[REPLACE] if  ( !_closed )  {^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^JsonNode n = currentNode (  ) ;return  (  ( POJONode )  n ) .getPojo (  ) ;^325^326^327^328^329^323^337^[ADD] if  ( !_closed )  { JsonNode n = currentNode (  ) ; if  ( n != null )  { if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n == null )  {^327^^^^^323^337^[REPLACE] if  ( n != null )  {^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n.isBinary (  )  )  {^328^^^^^323^337^[REPLACE] if  ( n.isPojo (  )  )  {^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  (  ( POJONode )  n )  ._constructError ( null )  ;^329^^^^^323^337^[REPLACE] return  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n.isObject (  )  )  {^331^^^^^323^337^[REPLACE] if  ( n.isBinary (  )  )  {^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^return  (  ( BinaryNode )  n ) .binaryValue (  ) ;^331^332^333^^^323^337^[ADD] if  ( n.isBinary (  )  )  { return  (  ( BinaryNode )  n ) .binaryValue (  ) ; }^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  (  ( BinaryNode )  n )  ._throwInternal (  )  ;^332^^^^^323^337^[REPLACE] return  (  ( BinaryNode )  n ) .binaryValue (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  (  ( POJONode )  n ) ._throwInternal (  ) ;^329^^^^^323^337^[REPLACE] return  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^return  (  ( POJONode )  n ) .getPojo (  ) ;^328^329^330^^^323^337^[ADD] if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ; }^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n.isPojo (  )  )  {^331^^^^^323^337^[REPLACE] if  ( n.isBinary (  )  )  {^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  (  ( BinaryNode )  n ) ._throwInternal (  ) ;^332^^^^^323^337^[REPLACE] return  (  ( BinaryNode )  n ) .binaryValue (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^326^^^^^323^337^[REPLACE] JsonNode n = currentNode (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return  (  ( POJONode )  n )  ._constructError ( this )  ;^329^^^^^323^337^[REPLACE] return  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n .isArray (  )   )  {^331^^^^^323^337^[REPLACE] if  ( n.isBinary (  )  )  {^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^326^^^^^323^337^[ADD] JsonNode n = currentNode (  ) ;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false;^336^^^^^323^337^[REPLACE] return null;^[METHOD] getEmbeddedObject [TYPE] Object [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^350^^^^^346^367^[REPLACE] JsonNode n = currentNode (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n == null )  {^351^^^^^346^367^[REPLACE] if  ( n != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^byte[] data = n.binaryValue (  ) ;return data;^351^352^^354^355^346^367^[ADD] if  ( n != null )  { byte[] data = n.binaryValue (  ) ; if  ( data != null )  { return data;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( data == false )  {^354^^^^^346^367^[REPLACE] if  ( data != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^354^355^356^^^346^367^[ADD] if  ( data != null )  { return data; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _nodeCursor;^355^^^^^346^367^[REPLACE] return data;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n.isBinary (  )  )  {^358^^^^^346^367^[REPLACE] if  ( n.isPojo (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( ! ob instanceof byte[] )  {^360^^^^^346^367^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^361^^^^^346^367^[REPLACE] return  ( byte[] )  ob;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^Object ob =  (  ( POJONode )  n ) ._throwInternal (  ) ;^359^^^^^346^367^[REPLACE] Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^byte[] data = n.intValue (  ) ;^352^^^^^346^367^[REPLACE] byte[] data = n.binaryValue (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( data == null )  {^354^^^^^346^367^[REPLACE] if  ( data != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;return  ( byte[] )  ob;^358^359^360^361^362^346^367^[ADD] if  ( n.isPojo (  )  )  { Object ob =  (  ( POJONode )  n ) .getPojo (  ) ; if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^return  ( byte[] )  ob;^360^361^362^^^346^367^[ADD] if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^352^^^^^346^367^[ADD] byte[] data = n.binaryValue (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^Object ob =  (  ( POJONode )  n )  ._constructError ( null )  ;^359^^^^^346^367^[REPLACE] Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false;^366^^^^^346^367^[REPLACE] return null;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^byte[] data = n.binaryValue (  ) ;^374^^^^^371^380^[REPLACE] byte[] data = getBinaryValue ( b64variant ) ;^[METHOD] readBinaryValue [TYPE] int [PARAMETER] Base64Variant b64variant OutputStream out [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  OutputStream out  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^374^^^^^371^380^[ADD] byte[] data = getBinaryValue ( b64variant ) ;^[METHOD] readBinaryValue [TYPE] int [PARAMETER] Base64Variant b64variant OutputStream out [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  OutputStream out  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( data == null )  {^375^^^^^371^380^[REPLACE] if  ( data != null )  {^[METHOD] readBinaryValue [TYPE] int [PARAMETER] Base64Variant b64variant OutputStream out [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  OutputStream out  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;^377^^^^^371^380^[REPLACE] return data.length;^[METHOD] readBinaryValue [TYPE] int [PARAMETER] Base64Variant b64variant OutputStream out [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  OutputStream out  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return 0 << 4;^379^^^^^371^380^[REPLACE] return 0;^[METHOD] readBinaryValue [TYPE] int [PARAMETER] Base64Variant b64variant OutputStream out [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  OutputStream out  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _closed || _nodeCursor != false )  {^389^^^^^388^393^[REPLACE] if  ( _closed || _nodeCursor == null )  {^[METHOD] currentNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false;^390^^^^^388^393^[REPLACE] return null;^[METHOD] currentNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _nodeCursor.getCurrentName (  ) ;^392^^^^^388^393^[REPLACE] return _nodeCursor.currentNode (  ) ;^[METHOD] currentNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^398^^^^^395^404^[REPLACE] JsonNode n = currentNode (  ) ;^[METHOD] currentNumericNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  t  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n != null || !n.isNumber (  )  )  {^399^^^^^395^404^[REPLACE] if  ( n == null || !n.isNumber (  )  )  {^[METHOD] currentNumericNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  t  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonToken t  =  n.asToken (  ) ;^400^^^^^395^404^[REPLACE] JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^[METHOD] currentNumericNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  t  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return ;^401^^^^^395^404^[REPLACE] throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[METHOD] currentNumericNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  t  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^401^^^^^395^404^[ADD] throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[METHOD] currentNumericNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  t  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return 0;^403^^^^^395^404^[REPLACE] return n;^[METHOD] currentNumericNode [TYPE] JsonNode [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  t  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^super ( 0 ) ;^408^^^^^407^409^[REPLACE] _throwInternal (  ) ;^[METHOD] _handleEOF [TYPE] void [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  t  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
