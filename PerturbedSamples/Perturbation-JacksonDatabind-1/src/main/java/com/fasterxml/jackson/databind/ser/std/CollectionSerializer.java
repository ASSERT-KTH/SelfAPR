[REPLACE]^serializeContentsUsing ( value, jgen, provider, _elementSerializer ) ;^35^^^^^32^36^[REPLACE] super ( Collection.class, elemType, staticTyping, vts, property, valueSerializer ) ;^[METHOD] <init> [TYPE] JsonSerializer) [PARAMETER] JavaType elemType boolean staticTyping TypeSerializer vts BeanProperty property Object> valueSerializer [CLASS] CollectionSerializer   [TYPE]  JavaType elemType  [TYPE]  boolean false  staticTyping  true  [TYPE]  TypeSerializer vts  [TYPE]  JsonSerializer valueSerializer  [TYPE]  BeanProperty property 
[REMOVE]^serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^35^^^^^32^36^[REMOVE] ^[METHOD] <init> [TYPE] JsonSerializer) [PARAMETER] JavaType elemType boolean staticTyping TypeSerializer vts BeanProperty property Object> valueSerializer [CLASS] CollectionSerializer   [TYPE]  JavaType elemType  [TYPE]  boolean false  staticTyping  true  [TYPE]  TypeSerializer vts  [TYPE]  JsonSerializer valueSerializer  [TYPE]  BeanProperty property 
[REPLACE]^super ( src, property, vts, this ) ;^41^^^^^38^42^[REPLACE] super ( src, property, vts, valueSerializer ) ;^[METHOD] <init> [TYPE] JsonSerializer) [PARAMETER] CollectionSerializer src BeanProperty property TypeSerializer vts JsonSerializer<?> valueSerializer [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  TypeSerializer vts  [TYPE]  JsonSerializer valueSerializer  [TYPE]  CollectionSerializer src  [TYPE]  BeanProperty property 
[REPLACE]^return  new CollectionSerializer ( this, property, vts, elementSerializer )  ;^46^^^^^45^47^[REPLACE] return new CollectionSerializer ( _elementType, _staticTyping, vts, _property, _elementSerializer ) ;^[METHOD] _withValueTypeSerializer [TYPE] ContainerSerializer [PARAMETER] TypeSerializer vts [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  TypeSerializer vts 
[REPLACE]^return  new CollectionSerializer ( _elementType, _staticTyping, vts, _property, _elementSerializer )  ;^52^^^^^50^53^[REPLACE] return new CollectionSerializer ( this, property, vts, elementSerializer ) ;^[METHOD] withResolved [TYPE] CollectionSerializer [PARAMETER] BeanProperty property TypeSerializer vts JsonSerializer<?> elementSerializer [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  TypeSerializer vts  [TYPE]  JsonSerializer elementSerializer  [TYPE]  BeanProperty property 
[REPLACE]^return  ( value == this )  || value .hasSingleElement ( this )  ;^63^^^^^62^64^[REPLACE] return  ( value == null )  || value.isEmpty (  ) ;^[METHOD] isEmpty [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Collection value 
[REPLACE]^Iterator<?> it = false.iterator (  ) ;^68^^^^^67^74^[REPLACE] Iterator<?> it = value.iterator (  ) ;^[METHOD] hasSingleElement [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Collection value 
[REPLACE]^if  ( !it .next (  )   )  {^69^^^^^67^74^[REPLACE] if  ( !it.hasNext (  )  )  {^[METHOD] hasSingleElement [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Collection value 
[ADD]^return false;^69^70^71^^^67^74^[ADD] if  ( !it.hasNext (  )  )  { return false; }^[METHOD] hasSingleElement [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Collection value 
[REPLACE]^return true;^70^^^^^67^74^[REPLACE] return false;^[METHOD] hasSingleElement [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Collection value 
[REPLACE]^it.hasNext (  ) ;^72^^^^^67^74^[REPLACE] it.next (  ) ;^[METHOD] hasSingleElement [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Collection value 
[REMOVE]^Object elem = it.next (  ) ;^72^^^^^67^74^[REMOVE] ^[METHOD] hasSingleElement [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Collection value 
[REPLACE]^return  ( value == null )  || value.isEmpty (  ) ;^73^^^^^67^74^[REPLACE] return !it.hasNext (  ) ;^[METHOD] hasSingleElement [TYPE] boolean [PARAMETER] Collection<?> value [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Collection value 
[REPLACE]^if  ( _elementSerializer == false )  {^86^^^^^85^128^[REPLACE] if  ( _elementSerializer != null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^return false;^88^^^^^85^128^[REPLACE] return;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Iterator<?> it = null.iterator (  ) ;^90^^^^^85^128^[REPLACE] Iterator<?> it = value.iterator (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( it.hasNext (  )  )  {^91^^^^^85^128^[REPLACE] if  ( !it.hasNext (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^91^92^93^^^85^128^[ADD] if  ( !it.hasNext (  )  )  { return; }^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^return false;^92^^^^^85^128^[REPLACE] return;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^TypeSerializer typeSer = _valueTypeSerializer;^94^^^^^85^128^[REPLACE] PropertySerializerMap serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^94^^^^^85^128^[ADD] PropertySerializerMap serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^TypeSerializer typeSer = _valueTypeSerializer;^95^^^^^85^128^[REPLACE] final TypeSerializer typeSer = _valueTypeSerializer;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^int i = 4;^97^^^^^85^128^[REPLACE] int i = 0;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != null )  {^101^^^^^85^128^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( serializer != this )  {^106^^^^^101^121^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( serializer == null )  {^108^^^^^101^121^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^108^109^110^111^112^101^121^[ADD] if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ; } else { serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^112^^^^^101^121^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^109^110^^^^101^121^[REPLACE] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^109^110^^^^101^121^[ADD] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  =  serializers ;^114^^^^^101^121^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^112^^^^^101^121^[ADD] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^116^^^^^101^121^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer .serialize ( elem , jgen , provider )  ;^119^^^^^101^121^[REPLACE] serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^119^^^^^101^121^[ADD] serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser.serialize ( elem, jgen, provider ) ;^117^^^^^101^121^[REPLACE] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REMOVE]^serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^117^^^^^101^121^[REMOVE] ^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Class<?> cc = elem.Object (  ) ;^104^^^^^101^121^[REPLACE] Class<?> cc = elem.getClass (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^104^105^^^^101^121^[ADD] Class<?> cc = elem.getClass (  ) ; JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^JsonSerializer<Object> serializer = serializers.serializerFor ( null ) ;^105^^^^^101^121^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider.constructSpecializedType ( jgen ) ;^102^^^^^85^128^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^102^^^^^85^128^[ADD] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( serializer != null )  {^106^^^^^85^128^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( serializer == null )  {^108^^^^^85^128^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^112^^^^^108^113^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^112^^^^^108^113^[ADD] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^109^110^^^^85^128^[REPLACE] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^109^110^^^^85^128^[ADD] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^112^^^^^85^128^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  =  serializers ;^114^^^^^85^128^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != true )  {^116^^^^^85^128^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^119^^^^^116^120^[REPLACE] serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser.serialize ( elem, jgen, provider ) ;^117^^^^^85^128^[REPLACE] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^Object elem = it.next (  ) ;provider.defaultSerializeNull ( jgen ) ;^98^99^100^101^102^85^128^[ADD] try { do { Object elem = it.next (  ) ; if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^101^102^103^104^105^85^128^[ADD] if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { Class<?> cc = elem.getClass (  ) ; JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( serializer != null )  {^106^^^^^101^121^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^117^^^^^101^121^[ADD] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  = null ;^114^^^^^101^121^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^TypeSerializer typeSer = _valueTypeSerializer;^105^^^^^101^121^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider .constructSpecializedType ( null )  ;^102^^^^^85^128^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REMOVE]^serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^102^^^^^85^128^[REMOVE] ^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( null != null )  {^106^^^^^85^128^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^106^107^108^109^110^85^128^[ADD] if  ( serializer == null )  {  if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^108^109^110^111^112^85^128^[ADD] if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ; } else { serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^116^^^^^85^128^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^117^^^^^85^128^[ADD] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  = null ;^114^^^^^85^128^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = 1.next (  ) ;^100^^^^^85^128^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Class<?> cc = elem.Object (  ) ;^104^^^^^85^128^[REPLACE] Class<?> cc = elem.getClass (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^104^^^^^85^128^[ADD] Class<?> cc = elem.getClass (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^JsonSerializer<Object> serializer = serializers.serializerFor ( null ) ;^105^^^^^85^128^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = null.next (  ) ;^100^^^^^85^128^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^100^^^^^85^128^[ADD] Object elem = it.next (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^JsonSerializer<Object> serializer = serializers.serializerFor ( true ) ;^105^^^^^85^128^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Iterator<?> it = value.isEmpty (  ) ;^134^^^^^133^157^[REPLACE] Iterator<?> it = value.iterator (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( !it.hasNext (  )  )  {^135^^^^^133^157^[REPLACE] if  ( it.hasNext (  )  )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^TypeSerializer typeSer = _valueTypeSerializer;int i = 0;Object elem = it.next (  ) ;^135^136^137^138^139^133^157^[ADD] if  ( it.hasNext (  )  )  { TypeSerializer typeSer = _valueTypeSerializer; int i = 0; do { Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != this  )  {^141^^^^^133^157^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^144^^^^^133^157^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser .serialize ( elem , jgen , provider )  ;^147^^^^^133^157^[REPLACE] ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer.serialize ( elem, jgen, provider ) ;^145^^^^^133^157^[REPLACE] ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^145^^^^^133^157^[ADD] ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider .constructSpecializedType ( false )  ;^142^^^^^133^157^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^142^^^^^133^157^[ADD] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^147^^^^^133^157^[REPLACE] ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^147^^^^^133^157^[ADD] ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^provider.defaultSerializeNull ( jgen ) ;^140^141^142^143^144^133^157^[ADD] try { if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != null )  {^141^^^^^133^157^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^144^145^146^147^148^133^157^[ADD] if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ; } else { ser.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser .serializeWithType ( elem , jgen , provider , typeSer )  ;^145^^^^^133^157^[REPLACE] ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider.constructSpecializedType ( jgen ) ;^142^^^^^133^157^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != this )  {^144^^^^^133^157^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^final TypeSerializer typeSer = _valueTypeSerializer;^136^^^^^133^157^[REPLACE] TypeSerializer typeSer = _valueTypeSerializer;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^int i = 3;^137^^^^^133^157^[REPLACE] int i = 0;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = it.hasNext (  ) ;^139^^^^^133^157^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^provider.defaultSerializeNull ( jgen ) ;ser.serialize ( elem, jgen, provider ) ;^141^142^143^144^145^133^157^[ADD] if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider .constructSpecializedType ( null )  ;^142^^^^^133^157^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != true )  {^141^^^^^133^157^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REMOVE]^serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^142^^^^^133^157^[REMOVE] ^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != false )  {^144^^^^^133^157^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = this.next (  ) ;^139^^^^^133^157^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
