[REPLACE]^return createSchemaNode ( "string", true ) ;^26^^^^^^^[REPLACE] public SqlDateSerializer (  )  { super ( java.sql.Date.class ) ; }^[METHOD] <init> [TYPE] SqlDateSerializer() [PARAMETER] [CLASS] SqlDateSerializer   [TYPE]  boolean false  true 
[ADD]^^26^27^28^^^^^[ADD] public SqlDateSerializer (  )  { super ( java.sql.Date.class ) ; }  @Override^[METHOD] <init> [TYPE] SqlDateSerializer() [PARAMETER] [CLASS] SqlDateSerializer   [TYPE]  boolean false  true 
[REPLACE]^return createSchemaNode ( "string", true ) ;^32^^^^^29^33^[REPLACE] jgen.writeString ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] SqlDateSerializer   [TYPE]  boolean false  true  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  Date value 
[REPLACE]^JsonStringFormatVisitor v2  =  visitor.expectStringFormat ( typeHint ) ;^46^^^^^43^50^[REPLACE] JsonStringFormatVisitor v2 =  ( visitor == null )  ? null : visitor.expectStringFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] SqlDateSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonStringFormatVisitor v2 
[REPLACE]^if  ( v2 == null )  {^47^^^^^43^50^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] SqlDateSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonStringFormatVisitor v2 
[ADD]^v2.format ( JsonValueFormat.DATE_TIME ) ;^47^48^49^^^43^50^[ADD] if  ( v2 != null )  { v2.format ( JsonValueFormat.DATE_TIME ) ; }^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] SqlDateSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonStringFormatVisitor v2 
[REPLACE]^return createSchemaNode ( "string", true ) ;^48^^^^^43^50^[REPLACE] v2.format ( JsonValueFormat.DATE_TIME ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] SqlDateSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonStringFormatVisitor v2 
