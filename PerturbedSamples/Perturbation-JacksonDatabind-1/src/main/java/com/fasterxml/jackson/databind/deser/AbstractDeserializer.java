[REPLACE]^private static final long serialVersionUID = -3010349050434697698;^24^^^^^^^[REPLACE] private static final long serialVersionUID = -3010349050434697698L;^ [CLASS] AbstractDeserializer  
[REPLACE]^private final JavaType _baseType;^26^^^^^^^[REPLACE] protected final JavaType _baseType;^ [CLASS] AbstractDeserializer  
[REPLACE]^private final ObjectIdReader _objectIdReader;^28^^^^^^^[REPLACE] protected final ObjectIdReader _objectIdReader;^ [CLASS] AbstractDeserializer  
[REPLACE]^protected  Map<String, SettableBeanProperty> _backRefProperties;^30^^^^^^^[REPLACE] protected final Map<String, SettableBeanProperty> _backRefProperties;^ [CLASS] AbstractDeserializer  
[REPLACE]^protected  boolean _acceptString;^34^^^^^^^[REPLACE] protected final boolean _acceptString;^ [CLASS] AbstractDeserializer  
[REPLACE]^protected  boolean _acceptBoolean;^35^^^^^^^[REPLACE] protected final boolean _acceptBoolean;^ [CLASS] AbstractDeserializer  
[REPLACE]^private final boolean _acceptInt;^36^^^^^^^[REPLACE] protected final boolean _acceptInt;^ [CLASS] AbstractDeserializer  
[REPLACE]^private final boolean _acceptDouble;^37^^^^^^^[REPLACE] protected final boolean _acceptDouble;^ [CLASS] AbstractDeserializer  
[REPLACE]^_baseType =  null.getType (  ) ;^42^^^^^39^50^[REPLACE] _baseType = beanDesc.getType (  ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^_objectIdReader =  null.getObjectIdReader (  ) ;^43^^^^^39^50^[REPLACE] _objectIdReader = builder.getObjectIdReader (  ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[ADD]^^43^44^^^^39^50^[ADD] _objectIdReader = builder.getObjectIdReader (  ) ; _backRefProperties = backRefProps;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^_backRefProperties =  null;^44^^^^^39^50^[REPLACE] _backRefProperties = backRefProps;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^Object result = _deserializeIfNatural ( jp, ctxt ) ;^45^^^^^39^50^[REPLACE] Class<?> cls = _baseType.getRawClass (  ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^_acceptString =  null.isAssignableFrom ( String.class ) ;^46^^^^^39^50^[REPLACE] _acceptString = cls.isAssignableFrom ( String.class ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^_acceptDouble =  ( cls == Double.TYPE )  || cls.isAssignableFrom ( Double.class ) ; ;^47^^^^^39^50^[REPLACE] _acceptBoolean =  ( cls == Boolean.TYPE )  || cls.isAssignableFrom ( Boolean.class ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^_acceptInt =  ( cls == Integer.TYPE )   ==  cls.isAssignableFrom ( Integer.class ) ;^48^^^^^39^50^[REPLACE] _acceptInt =  ( cls == Integer.TYPE )  || cls.isAssignableFrom ( Integer.class ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^_acceptDouble =  ( cls == Double.TYPE )  ;^49^^^^^39^50^[REPLACE] _acceptDouble =  ( cls == Double.TYPE )  || cls.isAssignableFrom ( Double.class ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[ADD]^^49^^^^^39^50^[ADD] _acceptDouble =  ( cls == Double.TYPE )  || cls.isAssignableFrom ( Double.class ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] BeanDeserializerBuilder builder BeanDescription beanDesc SettableBeanProperty> backRefProps [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  BeanDeserializerBuilder builder  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  BeanDescription beanDesc  [TYPE]  Class cls  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID 
[REPLACE]^public boolean isCachable (  )  { return false; }^59^^^^^^^[REPLACE] public boolean isCachable (  )  { return true; }^[METHOD] isCachable [TYPE] boolean [PARAMETER] [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  ObjectIdReader _objectIdReader 
[REPLACE]^return Boolean.TRUE;^68^^^^^67^69^[REPLACE] return _objectIdReader;^[METHOD] getObjectIdReader [TYPE] ObjectIdReader [PARAMETER] [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  ObjectIdReader _objectIdReader 
[REPLACE]^return   null ;^77^^^^^75^78^[REPLACE] return  ( _backRefProperties == null )  ? null : _backRefProperties.get ( logicalName ) ;^[METHOD] findBackReference [TYPE] SettableBeanProperty [PARAMETER] String logicalName [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  String logicalName  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  ObjectIdReader _objectIdReader 
[REPLACE]^if  ( _objectIdReader == null )  {^93^^^^^87^107^[REPLACE] if  ( _objectIdReader != null )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == null && t.isScalarValue (  )  )  {^96^^^^^87^107^[REPLACE] if  ( t != null && t.isScalarValue (  )  )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getIntValue (  ) ;^97^^^^^87^107^[REPLACE] return _deserializeFromObjectId ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t = jp.getText (  ) ;^94^^^^^87^107^[REPLACE] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  (  t.isScalarValue (  )  )  {^96^^^^^87^107^[REPLACE] if  ( t != null && t.isScalarValue (  )  )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^return _deserializeFromObjectId ( jp, ctxt ) ;^96^97^98^^^87^107^[ADD] if  ( t != null && t.isScalarValue (  )  )  { return _deserializeFromObjectId ( jp, ctxt ) ; }^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object id = _objectIdReader.deserializer.deserialize ( jp, ctxt ) ;^102^^^^^87^107^[REPLACE] Object result = _deserializeIfNatural ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^102^^^^^87^107^[ADD] Object result = _deserializeIfNatural ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result == null )  {^103^^^^^87^107^[REPLACE] if  ( result != null )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Boolean.TRUE;^104^^^^^87^107^[REPLACE] return result;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getIntValue (  ) ;^106^^^^^87^107^[REPLACE] return typeDeserializer.deserializeTypedFromObject ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^114^115^^^^110^116^[REPLACE] throw ctxt.instantiationException  (" ")  , "abstract types either need to be mapped to concrete types, have custom deserializer, or be instantiated with additional type information" ) ;^[METHOD] deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt .findObjectId ( true )  ;^114^115^^^^110^116^[REPLACE] throw ctxt.instantiationException  (" ")  , "abstract types either need to be mapped to concrete types, have custom deserializer, or be instantiated with additional type information" ) ;^[METHOD] deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^114^115^^^^110^116^[ADD] throw ctxt.instantiationException  (" ")  , "abstract types either need to be mapped to concrete types, have custom deserializer, or be instantiated with additional type information" ) ;^[METHOD] deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _acceptInt )  {^136^^^^^127^163^[REPLACE] if  ( _acceptString )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^return jp.getText (  ) ;^136^137^138^^^127^163^[ADD] if  ( _acceptString )  { return jp.getText (  ) ; }^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getIntValue (  ) ;^137^^^^^127^163^[REPLACE] return jp.getText (  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _acceptString )  {^141^^^^^127^163^[REPLACE] if  ( _acceptInt )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getDoubleValue (  ) ;^142^^^^^127^163^[REPLACE] return jp.getIntValue (  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _acceptBoolean )  {^147^^^^^127^163^[REPLACE] if  ( _acceptDouble )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return   jp.getDoubleValue (  )  ;^148^^^^^127^163^[REPLACE] return Double.valueOf ( jp.getDoubleValue (  )  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _acceptDouble )  {^152^^^^^127^163^[REPLACE] if  ( _acceptBoolean )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Boolean.FALSE;^153^^^^^127^163^[REPLACE] return Boolean.TRUE;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _acceptDouble )  {^157^^^^^127^163^[REPLACE] if  ( _acceptBoolean )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^return Boolean.FALSE;^157^158^159^^^127^163^[ADD] if  ( _acceptBoolean )  { return Boolean.FALSE; }^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Boolean.TRUE;^158^^^^^127^163^[REPLACE] return Boolean.FALSE;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Double.valueOf ( jp .getIntValue (  )   ) ;^148^^^^^127^163^[REPLACE] return Double.valueOf ( jp.getDoubleValue (  )  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return this;^162^^^^^127^163^[REPLACE] return null;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object id = _objectIdReader._deserializeIfNaturalr.deserialize ( jp, ctxt ) ;^172^^^^^169^180^[REPLACE] Object id = _objectIdReader.deserializer.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^172^^^^^169^180^[ADD] Object id = _objectIdReader.deserializer.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^ReadableObjectId roid = ctxt .instantiationException ( null )  ;^173^^^^^169^180^[REPLACE] ReadableObjectId roid = ctxt.findObjectId ( id, _objectIdReader.generator ) ;^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Class<?> cls = _baseType.getRawClass (  ) ;^175^^^^^169^180^[REPLACE] Object pojo = roid.item;^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( pojo != null )  {^176^^^^^169^180^[REPLACE] if  ( pojo == null )  {^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^177^^^^^169^180^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^177^^^^^169^180^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Boolean.TRUE;^179^^^^^169^180^[REPLACE] return pojo;^[METHOD] _deserializeFromObjectId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  ReadableObjectId roid  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Object id  pojo  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
