[REPLACE]^private static final long serialVersionUID ;^27^^^^^^^[REPLACE] private static final long serialVersionUID = 5345570420394408290L;^ [CLASS] AsArrayTypeDeserializer  
[REPLACE]^tb.writeStartObject (  ) ;^32^^^^^29^33^[REPLACE] super ( bt, idRes, typePropertyName, typeIdVisible, defaultImpl ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] JavaType bt TypeIdResolver idRes String typePropertyName boolean typeIdVisible Class<?> defaultImpl [CLASS] AsArrayTypeDeserializer   [TYPE]  JavaType bt  [TYPE]  Class defaultImpl  [TYPE]  String typePropertyName  [TYPE]  boolean false  true  typeIdVisible  [TYPE]  long serialVersionUID  [TYPE]  TypeIdResolver idRes 
[REPLACE]^tb.writeFieldName ( _typePropertyName ) ;^36^^^^^35^37^[REPLACE] super ( src, property ) ;^[METHOD] <init> [TYPE] BeanProperty) [PARAMETER] AsArrayTypeDeserializer src BeanProperty property [CLASS] AsArrayTypeDeserializer   [TYPE]  AsArrayTypeDeserializer src  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  BeanProperty property 
[REPLACE]^if  ( prop  ||  _property )  {^41^^^^^40^45^[REPLACE] if  ( prop == _property )  {^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsArrayTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[ADD]^return this;^41^42^43^^^40^45^[ADD] if  ( prop == _property )  { return this; }^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsArrayTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[REPLACE]^return null;^42^^^^^40^45^[REPLACE] return this;^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsArrayTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[REPLACE]^return new AsArrayTypeDeserializer ( null, prop ) ;^44^^^^^40^45^[REPLACE] return new AsArrayTypeDeserializer ( this, prop ) ;^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsArrayTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[REPLACE]^return value;^49^^^^^48^50^[REPLACE] return As.WRAPPER_ARRAY;^[METHOD] getTypeInclusion [TYPE] As [PARAMETER] [CLASS] AsArrayTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return value;^59^^^^^56^60^[REPLACE] return _deserialize ( jp, ctxt ) ;^[METHOD] deserializeTypedFromArray [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return value;^69^^^^^66^70^[REPLACE] return _deserialize ( jp, ctxt ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return value;^76^^^^^73^77^[REPLACE] return _deserialize ( jp, ctxt ) ;^[METHOD] deserializeTypedFromScalar [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return value;^83^^^^^80^84^[REPLACE] return _deserialize ( jp, ctxt ) ;^[METHOD] deserializeTypedFromAny [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^boolean hadStartArray = jp.getCurrentToken (  ) ;^100^^^^^97^121^[REPLACE] boolean hadStartArray = jp.isExpectedStartArrayToken (  ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object value = deser.deserialize ( jp, ctxt ) ;^101^^^^^97^121^[REPLACE] String typeId = _locateTypeId ( jp, ctxt ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^101^102^^^^97^121^[ADD] String typeId = _locateTypeId ( jp, ctxt ) ; JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object value = deser.deserialize ( jp, ctxt ) ;^102^^^^^97^121^[REPLACE] JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _typeIdVisible ) {^104^^^^^97^121^[REPLACE] if  ( _typeIdVisible && jp.getCurrentToken (  )  == JsonToken.START_OBJECT )  {^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp =  JsonParserSequence.createFlattened ( null.asParser ( jp ) , jp ) ;^111^^^^^97^121^[REPLACE] jp = JsonParserSequence.createFlattened ( tb.asParser ( jp ) , jp ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^TokenBuffer tb = new TokenBuffer ( false ) ;^107^^^^^97^121^[REPLACE] TokenBuffer tb = new TokenBuffer ( null ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^111^112^^^^97^121^[ADD] jp = JsonParserSequence.createFlattened ( tb.asParser ( jp ) , jp ) ; jp.nextToken (  ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object value = null.deserialize ( jp, ctxt ) ;^114^^^^^97^121^[REPLACE] Object value = deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^114^^^^^97^121^[ADD] Object value = deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  (  jp.nextToken (  )  != JsonToken.END_ARRAY )  {^116^^^^^97^121^[REPLACE] if  ( hadStartArray && jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^116^117^118^119^^97^121^[ADD] if  ( hadStartArray && jp.nextToken (  )  != JsonToken.END_ARRAY )  { throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ; }^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^117^118^^^^97^121^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt .wrongTokenException ( jp , typeId )  ;^117^118^^^^97^121^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result;^120^^^^^97^121^[REPLACE] return value;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^126^^^^^123^145^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _defaultImpl == null )  {^129^^^^^123^145^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result;^130^^^^^123^145^[REPLACE] return _idResolver.idFromBaseType (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^132^^^^^123^145^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^132^^^^^123^145^[ADD] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _defaultImpl == this )  {^129^^^^^123^145^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t = jp.getText (  ) ;^135^^^^^123^145^[REPLACE] JsonToken t = jp.nextToken (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ||  JsonToken.VALUE_STRING )  {^136^^^^^123^145^[REPLACE] if  ( t == JsonToken.VALUE_STRING )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return value;^139^^^^^123^145^[REPLACE] return result;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String result = jp .getCurrentToken (  )  ;^137^^^^^123^145^[REPLACE] String result = jp.getText (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String result = jp.nextToken (  ) ;^137^^^^^123^145^[REPLACE] String result = jp.getText (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _defaultImpl == null )  {^141^^^^^123^145^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^return _idResolver.idFromBaseType (  ) ;^141^142^143^^^123^145^[ADD] if  ( _defaultImpl != null )  { return _idResolver.idFromBaseType (  ) ; }^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result;^142^^^^^123^145^[REPLACE] return _idResolver.idFromBaseType (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^144^^^^^123^145^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb.writeStartObject (  ) ;^144^^^^^123^145^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^144^^^^^123^145^[ADD] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
