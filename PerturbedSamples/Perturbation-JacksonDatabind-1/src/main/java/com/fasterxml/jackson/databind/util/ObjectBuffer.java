[REPLACE]^final static int INITIAL_CHUNK_SIZE  = null ;^17^^^^^^^[REPLACE] final static int INITIAL_CHUNK_SIZE = 12;^ [CLASS] ObjectBuffer Node  
[REPLACE]^final static int SMALL_CHUNK_SIZE  = null ;^23^^^^^^^[REPLACE] final static int SMALL_CHUNK_SIZE =  ( 1 << 14 ) ;^ [CLASS] ObjectBuffer Node  
[REPLACE]^final static int MAX_CHUNK_SIZE =  ( 1 - 2 << 1 - 28 ) ;^31^^^^^^^[REPLACE] final static int MAX_CHUNK_SIZE =  ( 1 << 18 ) ;^ [CLASS] ObjectBuffer Node  
[REPLACE]^private  long  _bufferedEntryCount;^43^^^^^^^[REPLACE] private int _bufferedEntryCount;^ [CLASS] ObjectBuffer Node  
[REPLACE]^_data =  null;^237^^^^^236^238^[REPLACE] _data = data;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] Object[] data [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  [TYPE]  Object[] _data  _freeBuffer  data  [TYPE]  Node _bufferHead  _bufferTail  _next 
[ADD]^^237^^^^^236^238^[ADD] _data = data;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] Object[] data [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  [TYPE]  Object[] _data  _freeBuffer  data  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^_bufferTail.linkNext ( next ) ;^73^^^^^71^78^[REPLACE] _reset (  ) ;^[METHOD] resetAndStart [TYPE] Object[] [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  [TYPE]  Object[] _data  _freeBuffer  data  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^if  ( _freeBuffer != this  )  {^74^^^^^71^78^[REPLACE] if  ( _freeBuffer == null )  {^[METHOD] resetAndStart [TYPE] Object[] [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  [TYPE]  Object[] _data  _freeBuffer  data  [TYPE]  Node _bufferHead  _bufferTail  _next 
[ADD]^^74^75^76^^^71^78^[ADD] if  ( _freeBuffer == null )  { return new Object[INITIAL_CHUNK_SIZE]; }^[METHOD] resetAndStart [TYPE] Object[] [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  [TYPE]  Object[] _data  _freeBuffer  data  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^return new Object[len];^75^^^^^71^78^[REPLACE] return new Object[INITIAL_CHUNK_SIZE];^[METHOD] resetAndStart [TYPE] Object[] [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  [TYPE]  Object[] _data  _freeBuffer  data  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^return  ( _freeBuffer == null )  ? 0 : _freeBuffer.length;^77^^^^^71^78^[REPLACE] return _freeBuffer;^[METHOD] resetAndStart [TYPE] Object[] [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  [TYPE]  Object[] _data  _freeBuffer  data  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^Node next = new Node ( _freeBuffer ) ;^96^^^^^94^112^[REPLACE] Node next = new Node ( fullChunk ) ;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^if  ( _bufferHead != true )  {^97^^^^^94^112^[REPLACE] if  ( _bufferHead == null )  {^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferTail =  _next;^101^^^^^94^112^[REPLACE] _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferHead = _bufferTail = null; ;^98^^^^^94^112^[REPLACE] _bufferHead = _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^^98^^^^^94^112^[ADD] _bufferHead = _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^int len = curr.length;^103^^^^^94^112^[REPLACE] int len = fullChunk.length;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferedEntryCount = 0; ;^104^^^^^94^112^[REPLACE] _bufferedEntryCount += len;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^if  ( _bufferedEntryCount  >=  SMALL_CHUNK_SIZE )  {^106^^^^^94^112^[REPLACE] if  ( len < SMALL_CHUNK_SIZE )  {^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^len += len;len +=  ( len >> 2 ) ;^106^107^108^109^110^94^112^[ADD] if  ( len < SMALL_CHUNK_SIZE )  { len += len; } else { len +=  ( len >> 2 ) ; }^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^len +=  (SMALL_CHUNK_SIZE  <=  2 ) ;^109^^^^^94^112^[REPLACE] len +=  ( len >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^^109^^^^^94^112^[ADD] len +=  ( len >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^ptr += len; ;^107^^^^^94^112^[REPLACE] len += len;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^len +=  ( len  ==  2 ) ;^109^^^^^94^112^[REPLACE] len +=  ( len >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^return new Object[INITIAL_CHUNK_SIZE];^111^^^^^94^112^[REPLACE] return new Object[len];^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^int totalSize = lastChunkEntries +totalSize;^126^^^^^124^130^[REPLACE] int totalSize = lastChunkEntries + _bufferedEntryCount;^[METHOD] completeAndClearBuffer [TYPE] Object[] [PARAMETER] Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^T[] result =  ( T[] )  Array.newInstance ( componentType, totalSize ) ;^127^^^^^124^130^[REPLACE] Object[] result = new Object[totalSize];^[METHOD] completeAndClearBuffer [TYPE] Object[] [PARAMETER] Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_copyTo ( result, totalSize, fullChunk, lastChunkEntries ) ;^128^^^^^124^130^[REPLACE] _copyTo ( result, totalSize, lastChunk, lastChunkEntries ) ;^[METHOD] completeAndClearBuffer [TYPE] Object[] [PARAMETER] Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^return lastChunk;^129^^^^^124^130^[REPLACE] return result;^[METHOD] completeAndClearBuffer [TYPE] Object[] [PARAMETER] Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^int totalSize =totalSize + _bufferedEntryCount;^142^^^^^140^148^[REPLACE] int totalSize = lastChunkEntries + _bufferedEntryCount;^[METHOD] completeAndClearBuffer [TYPE] <T> [PARAMETER] Object[] lastChunk int lastChunkEntries Class<T> componentType [CLASS] ObjectBuffer Node   [TYPE]  Class componentType  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next  [TYPE]  T[] result 
[REPLACE]^T[] result =  ( T[] )  Array.newInstance ( null, totalSize ) ;^144^^^^^140^148^[REPLACE] T[] result =  ( T[] )  Array.newInstance ( componentType, totalSize ) ;^[METHOD] completeAndClearBuffer [TYPE] <T> [PARAMETER] Object[] lastChunk int lastChunkEntries Class<T> componentType [CLASS] ObjectBuffer Node   [TYPE]  Class componentType  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next  [TYPE]  T[] result 
[ADD]^^144^^^^^140^148^[ADD] T[] result =  ( T[] )  Array.newInstance ( componentType, totalSize ) ;^[METHOD] completeAndClearBuffer [TYPE] <T> [PARAMETER] Object[] lastChunk int lastChunkEntries Class<T> componentType [CLASS] ObjectBuffer Node   [TYPE]  Class componentType  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next  [TYPE]  T[] result 
[REPLACE]^System.arraycopy ( lastChunk, 0, resultArray, ptr, lastChunkEntries ) ;^145^^^^^140^148^[REPLACE] _copyTo ( result, totalSize, lastChunk, lastChunkEntries ) ;^[METHOD] completeAndClearBuffer [TYPE] <T> [PARAMETER] Object[] lastChunk int lastChunkEntries Class<T> componentType [CLASS] ObjectBuffer Node   [TYPE]  Class componentType  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next  [TYPE]  T[] result 
[REPLACE]^_bufferTail.linkNext ( next ) ;^146^^^^^140^148^[REPLACE] _reset (  ) ;^[METHOD] completeAndClearBuffer [TYPE] <T> [PARAMETER] Object[] lastChunk int lastChunkEntries Class<T> componentType [CLASS] ObjectBuffer Node   [TYPE]  Class componentType  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next  [TYPE]  T[] result 
[ADD]^^146^^^^^140^148^[ADD] _reset (  ) ;^[METHOD] completeAndClearBuffer [TYPE] <T> [PARAMETER] Object[] lastChunk int lastChunkEntries Class<T> componentType [CLASS] ObjectBuffer Node   [TYPE]  Class componentType  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next  [TYPE]  T[] result 
[REPLACE]^return _freeBuffer;^147^^^^^140^148^[REPLACE] return result;^[METHOD] completeAndClearBuffer [TYPE] <T> [PARAMETER] Object[] lastChunk int lastChunkEntries Class<T> componentType [CLASS] ObjectBuffer Node   [TYPE]  Class componentType  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  next  [TYPE]  T[] result 
[REPLACE]^for  ( Node n = _bufferHead; n == false; n = n.next (  )  )  {^152^^^^^150^162^[REPLACE] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( int i = 0, len = curr.length + 2; i < len; ++i )  {^154^^^^^150^162^[REPLACE] for  ( int i = 0, len = curr.length; i < len; ++i )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^154^155^156^^^150^162^[ADD] for  ( int i = 0, len = curr.length; i < len; ++i )  { resultList.add ( curr[i] ) ; }^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^result  curr[i]   ;^155^^^^^150^162^[REPLACE] resultList.add ( curr[i] ) ;^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^Object[] curr = next.next (  ) ;^153^^^^^150^162^[REPLACE] Object[] curr = n.getData (  ) ;^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^153^^^^^150^162^[ADD] Object[] curr = n.getData (  ) ;^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( int i = 0 , len = curr.length; i < len; ++i )  {^154^^^^^150^162^[REPLACE] for  ( int i = 0, len = curr.length; i < len; ++i )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( int i = 0, len = result.length; i < len; ++i )  {^154^^^^^150^162^[REPLACE] for  ( int i = 0, len = curr.length; i < len; ++i )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( int i = 0, len = result.length (  ) ; i < len; ++i )  {^154^^^^^150^162^[REPLACE] for  ( int i = 0, len = curr.length; i < len; ++i )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node n =  _bufferHead; next !^152^^^^^150^162^[REPLACE] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  { Object[] curr = n.getData (  ) ;^152^^^^^150^162^[REPLACE] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^152^153^154^155^156^150^162^[ADD] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  { Object[] curr = n.getData (  ) ; for  ( int i = 0, len = curr.length; i < len; ++i )  { resultList.add ( curr[i] ) ; }^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^Object[] curr = next.getData (  ) ;^153^^^^^150^162^[REPLACE] Object[] curr = n.getData (  ) ;^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( int i = 0; i  >  totalSize; ++i )  {^159^^^^^150^162^[REPLACE] for  ( int i = 0; i < lastChunkEntries; ++i )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^result  lastChunk[i]   ;^160^^^^^150^162^[REPLACE] resultList.add ( lastChunk[i] ) ;^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( int i = 4; i < lastChunkEntries; ++i )  {^159^^^^^150^162^[REPLACE] for  ( int i = 0; i < lastChunkEntries; ++i )  {^[METHOD] completeAndClearBuffer [TYPE] void [PARAMETER] Object[] lastChunk int lastChunkEntries Object> resultList [CLASS] ObjectBuffer Node   [TYPE]  List resultList  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return  ( _freeBuffer == null )  ? 0 : _freeBuffer.length %  2;^172^^^^^170^173^[REPLACE] return  ( _freeBuffer == null )  ? 0 : _freeBuffer.length;^[METHOD] initialCapacity [TYPE] int [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^public Node next (  )  { return _next; }^179^^^^^^^[REPLACE] public int bufferedSize (  )  { return _bufferedEntryCount; }^[METHOD] bufferedSize [TYPE] int [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^if  ( _bufferTail == true )  {^190^^^^^187^196^[REPLACE] if  ( _bufferTail != null )  {^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_freeBuffer  = null ;^191^^^^^187^196^[REPLACE] _freeBuffer = _bufferTail.getData (  ) ;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_freeBuffer  =  _freeBuffer ;^191^^^^^187^196^[REPLACE] _freeBuffer = _bufferTail.getData (  ) ;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_bufferHead = _bufferTail = this;^194^^^^^187^196^[REPLACE] _bufferHead = _bufferTail = null;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_bufferHead = _bufferTail = true;^194^^^^^187^196^[REPLACE] _bufferHead = _bufferTail = null;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_bufferedEntryCount = 2;^195^^^^^187^196^[REPLACE] _bufferedEntryCount = 0;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^int ptr = 0 - 0;^201^^^^^198^216^[REPLACE] int ptr = 0;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^201^^^^^198^216^[ADD] int ptr = 0;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Nodenext = _bufferHead; n == null; n = n.next (  )  )  {^203^^^^^198^216^[REPLACE] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^203^204^205^206^207^198^216^[ADD] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  { Object[] curr = n.getData (  ) ; int len = curr.length; System.arraycopy ( curr, 0, resultArray, ptr, len ) ; ptr += len;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^len += len; ;^207^^^^^198^216^[REPLACE] ptr += len;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^Object[] curr = next.getData (  ) ;^204^^^^^198^216^[REPLACE] Object[] curr = n.getData (  ) ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^int ptr = 0;^205^^^^^198^216^[REPLACE] int len = curr.length;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node n =  _bufferHead; null !^203^^^^^198^216^[REPLACE] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  { Object[] curr = n.getData (  ) ;^203^^^^^198^216^[REPLACE] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^Object[] curr = next.next (  ) ;^204^^^^^198^216^[REPLACE] Object[] curr = n.getData (  ) ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^204^^^^^198^216^[ADD] Object[] curr = n.getData (  ) ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^int len = result.length;^205^^^^^198^216^[REPLACE] int len = curr.length;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^System.arraycopy ( lastChunk, 4, resultArray, ptr, lastChunkEntries ) ;^209^^^^^198^216^[REPLACE] System.arraycopy ( lastChunk, 0, resultArray, ptr, lastChunkEntries ) ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^ptr +=  totalSize;^210^^^^^198^216^[REPLACE] ptr += lastChunkEntries;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^210^^^^^198^216^[ADD] ptr += lastChunkEntries;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^if  ( ptr  == lastChunkEntries )  {^213^^^^^198^216^[REPLACE] if  ( ptr != totalSize )  {^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return ;^214^^^^^198^216^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^public Node next (  )  { return _next; }^240^^^^^^^[REPLACE] public Object[] getData (  )  { return _data; }^[METHOD] getData [TYPE] Object[] [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^public Object[] getData (  )  { return _data; }^242^^^^^^^[REPLACE] public Node next (  )  { return _next; }^[METHOD] next [TYPE] ObjectBuffer$Node [PARAMETER] [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^if  (next == true )  {^246^^^^^244^250^[REPLACE] if  ( _next != null )  {^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return ;^247^^^^^244^250^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_next =  n;^249^^^^^244^250^[REPLACE] _next = next;^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^Object[] _data;^232^^^^^^^[REPLACE] final Object[] _data;^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_data =  null;^237^^^^^236^238^[REPLACE] _data = data;^[METHOD] <init> [TYPE] Object[]) [PARAMETER] Object[] data [CLASS] Node   [TYPE]  Object[] _data  data  [TYPE]  Node _next  [TYPE]  boolean false  true 
[REPLACE]^public Node next (  )  { return _next; }^240^^^^^^^[REPLACE] public Object[] getData (  )  { return _data; }^[METHOD] getData [TYPE] Object[] [PARAMETER] [CLASS] Node   [TYPE]  Object[] _data  data  [TYPE]  Node _next  [TYPE]  boolean false  true 
[REPLACE]^public Object[] getData (  )  { return _data; }^242^^^^^^^[REPLACE] public Node next (  )  { return _next; }^[METHOD] next [TYPE] ObjectBuffer$Node [PARAMETER] [CLASS] Node   [TYPE]  Object[] _data  data  [TYPE]  Node _next  [TYPE]  boolean false  true 
[REPLACE]^if  ( _next == null )  {^246^^^^^244^250^[REPLACE] if  ( _next != null )  {^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] Node   [TYPE]  Object[] _data  data  [TYPE]  Node _next  next  [TYPE]  boolean false  true 
[REPLACE]^return ;^247^^^^^244^250^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] Node   [TYPE]  Object[] _data  data  [TYPE]  Node _next  next  [TYPE]  boolean false  true 
[REPLACE]^_next =  null;^249^^^^^244^250^[REPLACE] _next = next;^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] Node   [TYPE]  Object[] _data  data  [TYPE]  Node _next  next  [TYPE]  boolean false  true 
