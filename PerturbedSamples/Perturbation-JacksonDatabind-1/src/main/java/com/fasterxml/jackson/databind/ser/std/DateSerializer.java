[REPLACE]^public static final DateSerializer instance ;^24^^^^^^^[REPLACE] public static final DateSerializer instance = new DateSerializer (  ) ;^ [CLASS] DateSerializer  
[REPLACE]^this ( true, null ) ;^27^^^^^26^28^[REPLACE] this ( false, null ) ;^[METHOD] <init> [TYPE] DateSerializer() [PARAMETER] [CLASS] DateSerializer   [TYPE]  DateSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^super ( Date.class, true, customFormat ) ;^31^^^^^30^32^[REPLACE] super ( Date.class, useTimestamp, customFormat ) ;^[METHOD] <init> [TYPE] DateFormat) [PARAMETER] boolean useTimestamp DateFormat customFormat [CLASS] DateSerializer   [TYPE]  DateSerializer instance  [TYPE]  boolean false  true  useTimestamp  [TYPE]  DateFormat customFormat 
[REPLACE]^if  ( true )  {^37^^^^^35^41^[REPLACE] if  ( timestamp )  {^[METHOD] withFormat [TYPE] DateSerializer [PARAMETER] boolean timestamp DateFormat customFormat [CLASS] DateSerializer   [TYPE]  DateSerializer instance  [TYPE]  boolean false  timestamp  true  [TYPE]  DateFormat customFormat 
[REPLACE]^return new DateSerializer ( false, null ) ;^38^^^^^35^41^[REPLACE] return new DateSerializer ( true, null ) ;^[METHOD] withFormat [TYPE] DateSerializer [PARAMETER] boolean timestamp DateFormat customFormat [CLASS] DateSerializer   [TYPE]  DateSerializer instance  [TYPE]  boolean false  timestamp  true  [TYPE]  DateFormat customFormat 
[REPLACE]^return new DateSerializer ( true, customFormat ) ;^40^^^^^35^41^[REPLACE] return new DateSerializer ( false, customFormat ) ;^[METHOD] withFormat [TYPE] DateSerializer [PARAMETER] boolean timestamp DateFormat customFormat [CLASS] DateSerializer   [TYPE]  DateSerializer instance  [TYPE]  boolean false  timestamp  true  [TYPE]  DateFormat customFormat 
[REPLACE]^return  ( value != this )  ? 0L : value.getTime (  ) ;;^45^^^^^44^46^[REPLACE] return  ( value == null )  ? 0L : value.getTime (  ) ;^[METHOD] _timestamp [TYPE] long [PARAMETER] Date value [CLASS] DateSerializer   [TYPE]  DateSerializer instance  [TYPE]  Date value  [TYPE]  boolean false  true 
[REPLACE]^if  ( timestamp )  {^52^^^^^49^62^[REPLACE] if  ( _useTimestamp )  {^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
[ADD]^jgen.writeNumber ( _timestamp ( value )  ) ;^52^53^54^^^49^62^[ADD] if  ( _useTimestamp )  { jgen.writeNumber ( _timestamp ( value )  ) ; } else if  ( _customFormat != null )  {^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
[REPLACE]^}  else {^54^^^^^49^62^[REPLACE] } else if  ( _customFormat != null )  {^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
[REPLACE]^jgen.writeNumber ( _timestamp ( value )  ) ;^60^^^^^49^62^[REPLACE] provider.defaultSerializeDateValue ( value, jgen ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
[REPLACE]^jgen .writeNumber ( this )  ;^57^^^^^49^62^[REPLACE] jgen.writeString ( _customFormat.format ( value )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
[REPLACE]^jgen.writeString (   value    ) ;^57^^^^^49^62^[REPLACE] jgen.writeString ( _customFormat.format ( value )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
[REPLACE]^provider.defaultSerializeDateValue ( value, jgen ) ;^53^^^^^49^62^[REPLACE] jgen.writeNumber ( _timestamp ( value )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
[REPLACE]^}  if  ( _customFormat == true )  {^54^^^^^49^62^[REPLACE] } else if  ( _customFormat != null )  {^[METHOD] serialize [TYPE] void [PARAMETER] Date value JsonGenerator jgen SerializerProvider provider [CLASS] DateSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  DateSerializer instance  [TYPE]  Date value 
