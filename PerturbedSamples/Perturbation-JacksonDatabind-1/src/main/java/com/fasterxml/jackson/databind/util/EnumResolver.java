[REPLACE]^private static final long serialVersionUID ;^15^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] EnumResolver  
[REPLACE]^protected  Class<T> _enumClass;^17^^^^^^^[REPLACE] protected final Class<T> _enumClass;^ [CLASS] EnumResolver  
[REPLACE]^private final T[] _enums;^19^^^^^^^[REPLACE] protected final T[] _enums;^ [CLASS] EnumResolver  
[REPLACE]^_enumClass =  null;^25^^^^^23^28^[REPLACE] _enumClass = enumClass;^[METHOD] <init> [TYPE] Class,T [PARAMETER] Class<T> enumClass T[] enums String, T> map [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[ADD]^^25^^^^^23^28^[ADD] _enumClass = enumClass;^[METHOD] <init> [TYPE] Class,T [PARAMETER] Class<T> enumClass T[] enums String, T> map [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^_enums =  null;^26^^^^^23^28^[REPLACE] _enums = enums;^[METHOD] <init> [TYPE] Class,T [PARAMETER] Class<T> enumClass T[] enums String, T> map [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^_enumsById =  null;^27^^^^^23^28^[REPLACE] _enumsById = map;^[METHOD] <init> [TYPE] Class,T [PARAMETER] Class<T> enumClass T[] enums String, T> map [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^ET[] enumValues = null.getName (  ) ;^36^^^^^34^45^[REPLACE] ET[] enumValues = enumCls.getEnumConstants (  ) ;^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[REPLACE]^if  ( enumValues != null )  {^37^^^^^34^45^[REPLACE] if  ( enumValues == null )  {^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[REPLACE]^return ;^38^^^^^34^45^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[REPLACE]^return constructUsingMethod ( enumCls, accessor ) ;^38^^^^^34^45^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[ADD]^^38^^^^^34^45^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^40^^^^^34^45^[REPLACE] HashMap<String, ET> map = new HashMap<String, ET> (  ) ;^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^41^^^^^34^45^[REPLACE] for  ( ET e : enumValues )  {^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[ADD]^^41^42^43^^^34^45^[ADD] for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ; }^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[REPLACE]^return new EnumResolver<ET> ( null, enumValues, map ) ;^44^^^^^34^45^[REPLACE] return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[METHOD] constructFor [TYPE] <ET [PARAMETER] Class<ET> enumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  ET e 
[REPLACE]^ET[] enumValues = false.getEnumConstants (  ) ;^53^^^^^51^61^[REPLACE] ET[] enumValues = enumCls.getEnumConstants (  ) ;^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^54^^^^^51^61^[REPLACE] HashMap<String, ET> map = new HashMap<String, ET> (  ) ;^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[ADD]^^54^^^^^51^61^[ADD] HashMap<String, ET> map = new HashMap<String, ET> (  ) ;^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[REPLACE]^for  ( int i = enumValues.length + 5; --i >= 0;  )  {^56^^^^^51^61^[REPLACE] for  ( int i = enumValues.length; --i >= 0;  )  {^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[REPLACE]^ET en = enumValues[i];^57^^^^^51^61^[REPLACE] ET e = enumValues[i];^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^56^^^^^51^61^[REPLACE] for  ( int i = enumValues.length; --i >= 0;  )  {^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[ADD]^^56^57^58^59^^51^61^[ADD] for  ( int i = enumValues.length; --i >= 0;  )  { ET e = enumValues[i]; map.put ( e.toString (  ) , e ) ; }^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[REPLACE]^return new EnumResolver<ET> ( this, enumValues, map ) ;^60^^^^^51^61^[REPLACE] return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[METHOD] constructUsingToString [TYPE] <ET [PARAMETER] Class<ET> enumCls [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  ET e 
[REPLACE]^ET[] enumValues = null.getEnumConstants (  ) ;^66^^^^^63^81^[REPLACE] ET[] enumValues = enumCls.getEnumConstants (  ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^67^^^^^63^81^[REPLACE] HashMap<String, ET> map = new HashMap<String, ET> (  ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^if  ( o == null )  {^73^^^^^63^81^[REPLACE] if  ( o != null )  {^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^map.get ( o.toString (  ) , en ) ;^74^^^^^63^81^[REPLACE] map.put ( o.toString (  ) , en ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[ADD]^^74^^^^^63^81^[ADD] map.put ( o.toString (  ) , en ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^map.put ( e.toString (  ) , e ) ;^74^^^^^63^81^[REPLACE] map.put ( o.toString (  ) , en ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^for  ( int i = enumValues.length /  0.5 ; --i >= 0;  )  {^69^^^^^63^81^[REPLACE] for  ( int i = enumValues.length; --i >= 0;  )  {^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[ADD]^Object o = accessor.invoke ( en ) ;map.put ( o.toString (  ) , en ) ;^71^72^73^74^75^63^81^[ADD] try { Object o = accessor.invoke ( en ) ; if  ( o != null )  { map.put ( o.toString (  ) , en ) ; }^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^72^^^^^63^81^[REPLACE] Object o = accessor.invoke ( en ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^ET e = enumValues[i];^70^^^^^63^81^[REPLACE] ET en = enumValues[i];^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^return ;^77^^^^^63^81^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[ADD]^^72^^^^^63^81^[ADD] Object o = accessor.invoke ( en ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^69^^^^^63^81^[REPLACE] for  ( int i = enumValues.length; --i >= 0;  )  {^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^return constructUsingMethod ( enumCls, accessor ) ;^80^^^^^63^81^[REPLACE] return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[METHOD] constructUsingMethod [TYPE] <ET [PARAMETER] Class<ET> enumCls Method accessor [CLASS] EnumResolver   [TYPE]  ET[] enumValues  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  T[] _enums  enums  [TYPE]  Class _enumClass  enumClass  enumCls  [TYPE]  Object o  [TYPE]  Method accessor  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  ET en 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^93^^^^^88^95^[REPLACE] Class<Enum> enumCls =  ( Class<Enum> )  rawEnumCls;^[METHOD] constructUnsafe [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^return constructFor ( null, ai ) ;^94^^^^^88^95^[REPLACE] return constructFor ( enumCls, ai ) ;^[METHOD] constructUnsafe [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls AnnotationIntrospector ai [CLASS] EnumResolver   [TYPE]  AnnotationIntrospector ai  [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^105^^^^^102^107^[REPLACE] Class<Enum> enumCls =  ( Class<Enum> )  rawEnumCls;^[METHOD] constructUnsafeUsingToString [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[ADD]^^105^106^^^^102^107^[ADD] Class<Enum> enumCls =  ( Class<Enum> )  rawEnumCls; return constructUsingToString ( enumCls ) ;^[METHOD] constructUnsafeUsingToString [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^return constructUsingToString ( true ) ;^106^^^^^102^107^[REPLACE] return constructUsingToString ( enumCls ) ;^[METHOD] constructUnsafeUsingToString [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^for  ( ET e : enumValues )  { map.put ( ai.findEnumValue ( e ) , e ) ;^117^^^^^114^119^[REPLACE] Class<Enum> enumCls =  ( Class<Enum> )  rawEnumCls;^[METHOD] constructUnsafeUsingMethod [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls Method accessor [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  Method accessor  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[ADD]^^117^^^^^114^119^[ADD] Class<Enum> enumCls =  ( Class<Enum> )  rawEnumCls;^[METHOD] constructUnsafeUsingMethod [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls Method accessor [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  Method accessor  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^return constructUsingMethod ( this, accessor ) ;^118^^^^^114^119^[REPLACE] return constructUsingMethod ( enumCls, accessor ) ;^[METHOD] constructUnsafeUsingMethod [TYPE] EnumResolver [PARAMETER] Class<?> rawEnumCls Method accessor [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  Method accessor  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^return constructUsingMethod ( enumCls, accessor ) ;^123^^^^^121^124^[REPLACE] return _enumsById.get ( key ) ;^[METHOD] findEnum [TYPE] T [PARAMETER] String key [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^if  ( index < 0 || index >= _enums.length + 3 )  {^128^^^^^126^132^[REPLACE] if  ( index < 0 || index >= _enums.length )  {^[METHOD] getEnum [TYPE] T [PARAMETER] int index [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  T[] _enums  enums 
[ADD]^^128^129^130^^^126^132^[ADD] if  ( index < 0 || index >= _enums.length )  { return null; }^[METHOD] getEnum [TYPE] T [PARAMETER] int index [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  T[] _enums  enums 
[REPLACE]^return false;^129^^^^^126^132^[REPLACE] return null;^[METHOD] getEnum [TYPE] T [PARAMETER] int index [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  T[] _enums  enums 
[REPLACE]^return null;^131^^^^^126^132^[REPLACE] return _enums[index];^[METHOD] getEnum [TYPE] T [PARAMETER] int index [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  T[] _enums  enums 
[REPLACE]^public int lastValidIndex (  )  { return _enums.length-1; } }^134^^^^^^^[REPLACE] public Class<T> getEnumClass (  )  { return _enumClass; }^[METHOD] getEnumClass [TYPE] Class [PARAMETER] [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
[REPLACE]^public int lastValidIndex (  )  { return _enums.length *  2-1; }^136^^^^^^^[REPLACE] public int lastValidIndex (  )  { return _enums.length-1; }^[METHOD] lastValidIndex [TYPE] int [PARAMETER] [CLASS] EnumResolver   [TYPE]  Class _enumClass  enumClass  enumCls  rawEnumCls  [TYPE]  boolean false  true  [TYPE]  HashMap _enumsById  map  [TYPE]  long serialVersionUID  [TYPE]  T[] _enums  enums 
