[REPLACE]^final static int INITIAL_CHUNK_SIZE = 3;^11^^^^^^^[REPLACE] final static int INITIAL_CHUNK_SIZE = 12;^ [CLASS] PrimitiveArrayBuilder Node  
[REPLACE]^static  long  SMALL_CHUNK_SIZE =  ( 1 << 14 ) ;^17^^^^^^^[REPLACE] final static int SMALL_CHUNK_SIZE =  ( 1 << 14 ) ;^ [CLASS] PrimitiveArrayBuilder Node  
[REPLACE]^final static int MAX_CHUNK_SIZE ;^25^^^^^^^[REPLACE] final static int MAX_CHUNK_SIZE =  ( 1 << 18 ) ;^ [CLASS] PrimitiveArrayBuilder Node  
[REPLACE]^private Node<T> _bufferTail;^33^^^^^^^[REPLACE] protected Node<T> _bufferTail;^ [CLASS] PrimitiveArrayBuilder Node  
[REPLACE]^protected  short  _bufferedEntryCount;^39^^^^^^^[REPLACE] protected int _bufferedEntryCount;^ [CLASS] PrimitiveArrayBuilder Node  
[REPLACE]^T _data;^146^^^^^^^[REPLACE] final T _data;^ [CLASS] PrimitiveArrayBuilder Node  
[REPLACE]^final  short  _dataLength;^151^^^^^^^[REPLACE] final int _dataLength;^ [CLASS] PrimitiveArrayBuilder Node  
[REPLACE]^_data =  null;^157^^^^^155^159^[REPLACE] _data = data;^[METHOD] <init> [TYPE] PrimitiveArrayBuilder$Node(T,int) [PARAMETER] T data int dataLen [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^_dataLength =  _bufferedEntryCount;^158^^^^^155^159^[REPLACE] _dataLength = dataLen;^[METHOD] <init> [TYPE] PrimitiveArrayBuilder$Node(T,int) [PARAMETER] T data int dataLen [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^_bufferTail.linkNext ( next ) ;^55^^^^^53^58^[REPLACE] _reset (  ) ;^[METHOD] resetAndStart [TYPE] T [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^return   _constructArray ( INITIAL_CHUNK_SIZE )  ;^56^57^^^^53^58^[REPLACE] return  ( _freeBuffer == null )  ? _constructArray ( INITIAL_CHUNK_SIZE )  : _freeBuffer;^[METHOD] resetAndStart [TYPE] T [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  [TYPE]  Node _bufferHead  _bufferTail  _next 
[REPLACE]^Node<T> next = new Node<T> ( _freeBuffer, fullChunkLength ) ;^65^^^^^63^81^[REPLACE] Node<T> next = new Node<T> ( fullChunk, fullChunkLength ) ;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^^65^^^^^63^81^[ADD] Node<T> next = new Node<T> ( fullChunk, fullChunkLength ) ;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^if  ( _bufferHead != null )  {^66^^^^^63^81^[REPLACE] if  ( _bufferHead == null )  {^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferTail =  true;^70^^^^^63^81^[REPLACE] _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferHead = _bufferTail = null; ;^67^^^^^63^81^[REPLACE] _bufferHead = _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^^67^^^^^63^81^[ADD] _bufferHead = _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferTail =  null;^70^^^^^63^81^[REPLACE] _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^^70^^^^^63^81^[ADD] _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferedEntryCount +=  nextLen;^72^^^^^63^81^[REPLACE] _bufferedEntryCount += fullChunkLength;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^int nextLen = nextLen;^73^^^^^63^81^[REPLACE] int nextLen = fullChunkLength;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^if  ( fullChunkLength  >  nextLen )  {^75^^^^^63^81^[REPLACE] if  ( nextLen < SMALL_CHUNK_SIZE )  {^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^nextLen += nextLen;nextLen +=  ( nextLen >> 2 ) ;^75^76^77^78^79^63^81^[ADD] if  ( nextLen < SMALL_CHUNK_SIZE )  { nextLen += nextLen; } else { nextLen +=  ( nextLen >> 2 ) ; }^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^nextLen +=  (fullChunkLength  >=  2 ) ;^78^^^^^63^81^[REPLACE] nextLen +=  ( nextLen >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^^78^^^^^63^81^[ADD] nextLen +=  ( nextLen >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^nextLen +=  fullChunkLength;^76^^^^^63^81^[REPLACE] nextLen += nextLen;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^nextLen +=  _dataLength;^76^^^^^63^81^[REPLACE] nextLen += nextLen;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^nextLen +=  ( nextLen  ==  2 * 0 ) ;^78^^^^^63^81^[REPLACE] nextLen +=  ( nextLen >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^return _constructArray ( fullChunkLength ) ;^80^^^^^63^81^[REPLACE] return _constructArray ( nextLen ) ;^[METHOD] appendCompletedChunk [TYPE] T [PARAMETER] T fullChunk int fullChunkLength [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  nextLen  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^int totalSize = lastChunkEntries  |  _bufferedEntryCount;^85^^^^^83^101^[REPLACE] int totalSize = lastChunkEntries + _bufferedEntryCount;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^T resultArray = _constructArray ( lastChunkEntries ) ;^86^^^^^83^101^[REPLACE] T resultArray = _constructArray ( totalSize ) ;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^int ptr = 0L;^88^^^^^83^101^[REPLACE] int ptr = 0;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^88^^^^^83^101^[ADD] int ptr = 0;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node<T> null = _bufferHead; n == null; n = n.next (  )  )  {^90^^^^^83^101^[REPLACE] for  ( Node<T> n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^ptr =  true.copyData ( resultArray, ptr ) ;^91^^^^^83^101^[REPLACE] ptr = n.copyData ( resultArray, ptr ) ;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node<T> n =  _bufferHead; null !^90^^^^^83^101^[REPLACE] for  ( Node<T> n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^ptr =  null.copyData ( resultArray, ptr ) ;^91^^^^^83^101^[REPLACE] ptr = n.copyData ( resultArray, ptr ) ;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node<T> n = _bufferHead; n != null; n = n.next (  )  )  { ptr = n.copyData ( resultArray, ptr ) ;^90^^^^^83^101^[REPLACE] for  ( Node<T> n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^System.arraycopy ( lastChunk, 4, resultArray, lastChunkEntries, lastChunkEntries ) ;^93^^^^^83^101^[REPLACE] System.arraycopy ( lastChunk, 0, resultArray, ptr, lastChunkEntries ) ;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^ptr += lastChunkEntries;^93^94^^^^83^101^[ADD] System.arraycopy ( lastChunk, 0, resultArray, ptr, lastChunkEntries ) ; ptr += lastChunkEntries;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^ptr +=  nextLen;^94^^^^^83^101^[REPLACE] ptr += lastChunkEntries;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^94^^^^^83^101^[ADD] ptr += lastChunkEntries;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^if  ( ptr  == nextLen )  {^97^^^^^83^101^[REPLACE] if  ( ptr != totalSize )  {^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return ;^98^^^^^83^101^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^98^^^^^83^101^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return lastChunk;^100^^^^^83^101^[REPLACE] return resultArray;^[METHOD] completeAndClearBuffer [TYPE] T [PARAMETER] T lastChunk int lastChunkEntries [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^if  ( _bufferTail == null )  {^120^^^^^117^126^[REPLACE] if  ( _bufferTail != null )  {^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_freeBuffer ;^121^^^^^117^126^[REPLACE] _freeBuffer = _bufferTail.getData (  ) ;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^121^^^^^117^126^[ADD] _freeBuffer = _bufferTail.getData (  ) ;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_bufferHead = _bufferTail = next; ;^124^^^^^117^126^[REPLACE] _bufferHead = _bufferTail = null;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^124^125^^^^117^126^[ADD] _bufferHead = _bufferTail = null; _bufferedEntryCount = 0;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_bufferedEntryCount = 0 >> 4;^125^^^^^117^126^[REPLACE] _bufferedEntryCount = 0;^[METHOD] _reset [TYPE] void [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^public Node<T> next (  )  { return _next; }^161^^^^^^^[REPLACE] public T getData (  )  { return _data; }^[METHOD] getData [TYPE] T [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^System.arraycopy ( _data, 3, dst, nextLen, _dataLength ) ;^165^^^^^163^168^[REPLACE] System.arraycopy ( _data, 0, dst, ptr, _dataLength ) ;^[METHOD] copyData [TYPE] int [PARAMETER] T dst int ptr [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^ptr + =  ptr +;^166^^^^^163^168^[REPLACE] ptr += _dataLength;^[METHOD] copyData [TYPE] int [PARAMETER] T dst int ptr [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return totalSize;^167^^^^^163^168^[REPLACE] return ptr;^[METHOD] copyData [TYPE] int [PARAMETER] T dst int ptr [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^public T getData (  )  { return _data; }^170^^^^^^^[REPLACE] public Node<T> next (  )  { return _next; }^[METHOD] next [TYPE] PrimitiveArrayBuilder$Node [PARAMETER] [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^if  ( _next == null )  {^174^^^^^172^178^[REPLACE] if  ( _next != null )  {^[METHOD] linkNext [TYPE] void [PARAMETER] Node<T> next [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return ;^175^^^^^172^178^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] linkNext [TYPE] void [PARAMETER] Node<T> next [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_next =  false;^177^^^^^172^178^[REPLACE] _next = next;^[METHOD] linkNext [TYPE] void [PARAMETER] Node<T> next [CLASS] PrimitiveArrayBuilder Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^int _dataLength;^151^^^^^^^[REPLACE] final int _dataLength;^[METHOD] linkNext [TYPE] void [PARAMETER] Node<T> next [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  _freeBuffer  data  dst  fullChunk  lastChunk  resultArray  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  _dataLength  dataLen  fullChunkLength  lastChunkEntries  len  nextLen  ptr  totalSize  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^_data =  null;^157^^^^^155^159^[REPLACE] _data = data;^[METHOD] <init> [TYPE] PrimitiveArrayBuilder$Node(T,int) [PARAMETER] T data int dataLen [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  [TYPE]  int _dataLength  dataLen  [TYPE]  Node _next 
[REPLACE]^_dataLength =  null;^158^^^^^155^159^[REPLACE] _dataLength = dataLen;^[METHOD] <init> [TYPE] PrimitiveArrayBuilder$Node(T,int) [PARAMETER] T data int dataLen [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  [TYPE]  int _dataLength  dataLen  [TYPE]  Node _next 
[REPLACE]^public Node<T> next (  )  { return _next; }^161^^^^^^^[REPLACE] public T getData (  )  { return _data; }^[METHOD] getData [TYPE] T [PARAMETER] [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  [TYPE]  int _dataLength  dataLen  [TYPE]  Node _next 
[REPLACE]^System.arraycopy ( _data, 0 * 4, dst, ptr, _dataLength ) ;^165^^^^^163^168^[REPLACE] System.arraycopy ( _data, 0, dst, ptr, _dataLength ) ;^[METHOD] copyData [TYPE] int [PARAMETER] T dst int ptr [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  dst  [TYPE]  int _dataLength  dataLen  ptr  [TYPE]  Node _next 
[REPLACE]^ptr +;^166^^^^^163^168^[REPLACE] ptr += _dataLength;^[METHOD] copyData [TYPE] int [PARAMETER] T dst int ptr [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  dst  [TYPE]  int _dataLength  dataLen  ptr  [TYPE]  Node _next 
[REPLACE]^return dataLen;^167^^^^^163^168^[REPLACE] return ptr;^[METHOD] copyData [TYPE] int [PARAMETER] T dst int ptr [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  dst  [TYPE]  int _dataLength  dataLen  ptr  [TYPE]  Node _next 
[REPLACE]^public T getData (  )  { return _data; }^170^^^^^^^[REPLACE] public Node<T> next (  )  { return _next; }^[METHOD] next [TYPE] PrimitiveArrayBuilder$Node [PARAMETER] [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  dst  [TYPE]  int _dataLength  dataLen  ptr  [TYPE]  Node _next 
[REPLACE]^if  ( _next == null )  {^174^^^^^172^178^[REPLACE] if  ( _next != null )  {^[METHOD] linkNext [TYPE] void [PARAMETER] Node<T> next [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  dst  [TYPE]  int _dataLength  dataLen  ptr  [TYPE]  Node _next  next 
[REPLACE]^return ;^175^^^^^172^178^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] linkNext [TYPE] void [PARAMETER] Node<T> next [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  dst  [TYPE]  int _dataLength  dataLen  ptr  [TYPE]  Node _next  next 
[REPLACE]^_next =  null;^177^^^^^172^178^[REPLACE] _next = next;^[METHOD] linkNext [TYPE] void [PARAMETER] Node<T> next [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  T _data  data  dst  [TYPE]  int _dataLength  dataLen  ptr  [TYPE]  Node _next  next 
