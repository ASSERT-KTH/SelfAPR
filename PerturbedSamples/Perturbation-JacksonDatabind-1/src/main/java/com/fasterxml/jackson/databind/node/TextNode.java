[REPLACE]^final static int INT_SPACE ;^18^^^^^^^[REPLACE] final static int INT_SPACE = ' ';^ [CLASS] TextNode  
[REPLACE]^final static TextNode EMPTY_STRING_NODE  = null ;^20^^^^^^^[REPLACE] final static TextNode EMPTY_STRING_NODE = new TextNode ( "" ) ;^ [CLASS] TextNode  
[REPLACE]^String _value;^22^^^^^^^[REPLACE] final String _value;^ [CLASS] TextNode  
[REPLACE]^public TextNode ( String v )  { _value =  null; }^24^^^^^^^[REPLACE] public TextNode ( String v )  { _value = v; }^[METHOD] <init> [TYPE] String) [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[ADD]^^24^25^26^^^^^[ADD] public TextNode ( String v )  { _value = v; }^[METHOD] <init> [TYPE] String) [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^if  ( v != null )  {^37^^^^^35^44^[REPLACE] if  ( v == null )  {^[METHOD] valueOf [TYPE] TextNode [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^return false;^38^^^^^35^44^[REPLACE] return null;^[METHOD] valueOf [TYPE] TextNode [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^return this;^38^^^^^35^44^[REPLACE] return null;^[METHOD] valueOf [TYPE] TextNode [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^if  ( _value.length (  )  *  2 == 0  )  {^40^^^^^35^44^[REPLACE] if  ( v.length (  )  == 0 )  {^[METHOD] valueOf [TYPE] TextNode [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^return JsonNodeType.STRING;^41^^^^^35^44^[REPLACE] return EMPTY_STRING_NODE;^[METHOD] valueOf [TYPE] TextNode [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^return new TextNode ( _value ) ;^43^^^^^35^44^[REPLACE] return new TextNode ( v ) ;^[METHOD] valueOf [TYPE] TextNode [PARAMETER] String v [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^return _value;^49^^^^^47^50^[REPLACE] return JsonNodeType.STRING;^[METHOD] getNodeType [TYPE] JsonNodeType [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^public int hashCode (  )  { return _value.hashCode (  ) ; }^52^^^^^^^[REPLACE] @Override public JsonToken asToken (  )  { return JsonToken.VALUE_STRING; }^[METHOD] asToken [TYPE] JsonToken [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^return JsonNodeType.STRING;^56^^^^^55^57^[REPLACE] return _value;^[METHOD] textValue [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE 
[REPLACE]^StringBuilder sb = new StringBuilder ( len ) ;^68^^^^^66^157^[REPLACE] ByteArrayBuilder builder = new ByteArrayBuilder ( 100 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^int ptr = 0;^69^^^^^66^157^[REPLACE] final String str = _value;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^69^^^^^66^157^[ADD] final String str = _value;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^int ptr = 4;^70^^^^^66^157^[REPLACE] int ptr = 0;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^int len = str.trim (  ) ;^71^^^^^66^157^[REPLACE] int len = str.length (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^while  ( ptr  !=  len )  {^74^^^^^66^157^[REPLACE] while  ( ptr < len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^74^75^76^^^66^157^[ADD] while  ( ptr < len )  {  char ch;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  (decodedData  <  len )  {^79^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^79^80^81^^^66^157^[ADD] if  ( ptr >= len )  { break main_loop; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  >=  0 )  {^84^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^84^85^86^^^66^157^[ADD] if  ( bits < 0 )  { _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^85^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 0 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  <=  len )  {^89^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^bits = b64variant.decodeBase64Char ( ch ) ;^90^^^^^66^157^[REPLACE] _reportBase64EOF (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( bits  !=  0 / 4 )  {^94^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^94^95^96^^^66^157^[ADD] if  ( bits < 0 )  { _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 1L ) ;^95^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 1 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  == decodedData )  {^99^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( !b61variant.usesPadding (  )  )  {^101^^^^^66^157^[REPLACE] if  ( !b64variant.usesPadding (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 3;^103^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2; ;^103^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( !b64 + 3variant.usesPadding (  )  )  {^101^^^^^66^157^[REPLACE] if  ( !b64variant.usesPadding (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 4 + 4;^103^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  (ptr  <=  0 / 2 )  {^113^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^113^114^115^116^^66^157^[ADD] if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( bits  ==  Base64Variant.BASE64_VALUE_PADDING )  {^114^^^^^66^157^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 4 ) ;^115^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 2 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( decodedData  <  decodedData )  {^118^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^bits = b64variant.decodeBase64Char ( ch ) ;^119^^^^^66^157^[REPLACE] _reportBase64EOF (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( b64variant.usesPaddingChar ( ch )  )  {^122^^^^^66^157^[REPLACE] if  ( !b64variant.usesPaddingChar ( ch )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '" != b64variant.usesPaddingChar (  )  != "'" ) ;^123^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^123^^^^^66^157^[ADD] _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.usesPaddingChar (  ) +"'" ) ;^123^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^121^^^^^66^157^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^121^^^^^66^157^[ADD] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 1;^126^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^115^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 2 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( decodedData  ==  len )  {^118^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( b64variant.decodeBase64Char ( ch )  )  {^122^^^^^66^157^[REPLACE] if  ( !b64variant.usesPaddingChar ( ch )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^122^123^124^^^66^157^[ADD] if  ( !b64variant.usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '" < b64variant.getPaddingChar (  )  < "'" ) ;^123^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  <=  len )  {^133^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( b64variant.usesPadding (  )  )  {^135^^^^^66^157^[REPLACE] if  ( !b64variant.usesPadding (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 3;^136^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2 + 2;^136^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2 / 2;^136^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  (ptr  >=  4 )  {^144^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData =  ( len )  & ptr;^152^^^^^144^154^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( bits  ==  Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^66^157^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^146^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 3 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2L;^148^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( bits  == ptr )  {^145^^^^^66^157^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^145^146^147^^^66^157^[ADD] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 3L ) ;^146^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 3 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^78^^^^^66^157^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^92^^^^^66^157^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^bits =  null.decodeBase64Char ( ch ) ;^93^^^^^66^157^[REPLACE] bits = b64variant.decodeBase64Char ( ch ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^93^^^^^66^157^[ADD] bits = b64variant.decodeBase64Char ( ch ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData =  ( decodedData << 6 )  & bits;^97^^^^^66^157^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^97^^^^^66^157^[ADD] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 0;^103^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^109^^^^^66^157^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^bits =  null.decodeBase64Char ( ch ) ;^110^^^^^66^157^[REPLACE] bits = b64variant.decodeBase64Char ( ch ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2; ;^126^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^126^127^^^^66^157^[ADD] decodedData >>= 4; builder.append ( decodedData ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData =  ( decodedData << 6 )  & bits;^131^^^^^66^157^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^131^^^^^66^157^[ADD] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 1;^136^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^ch =  null.charAt ( ptr++ ) ;^142^^^^^66^157^[REPLACE] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^142^^^^^66^157^[ADD] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^bits =  null.decodeBase64Char ( ch ) ;^143^^^^^66^157^[REPLACE] bits = b64variant.decodeBase64Char ( ch ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2 >> 4;^148^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData =  ( decodedData << 6 )  &ptr;^152^^^^^66^157^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^int len = _value.length (  ) ;^76^^^^^66^157^[REPLACE] char ch;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^int bits = b64variant.usesPaddingChar ( ch ) ;^83^^^^^66^157^[REPLACE] int bits = b64variant.decodeBase64Char ( ch ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^int decodedData = ptr;^87^^^^^66^157^[REPLACE] int decodedData = bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  <  len )  {^79^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( bits  >=  0 )  {^84^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  (ptr  !=  0 )  {^94^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 4 ) ;^95^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 1 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  ==  len )  {^99^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^99^100^101^^103^66^157^[ADD] if  ( ptr >= len )  {  if  ( !b64variant.usesPadding (  )  )  { decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( !b64Lvariant.usesPadding (  )  )  {^101^^^^^66^157^[REPLACE] if  ( !b64variant.usesPadding (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^103^^^^^66^157^[ADD] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 4L;^103^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( !b60variant.usesPadding (  )  )  {^101^^^^^66^157^[REPLACE] if  ( !b64variant.usesPadding (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 5;^103^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( bits  ==  1 )  {^113^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^115^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 2 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  !=  len )  {^118^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 4 - 4;^126^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^126^^^^^66^157^[ADD] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 2L ) ;^115^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 2 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  <=  decodedData )  {^118^^^^^66^157^[REPLACE] if  ( ptr >= len )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^119^^^^^66^157^[ADD] _reportBase64EOF (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '" != b64variant.getPaddingChar (  )  != "'" ) ;^123^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( !b64variant.usesPaddingChar ( ch )  )  {^135^^^^^66^157^[REPLACE] if  ( !b64variant.usesPadding (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^decodedData >>= 2;builder.appendTwoBytes ( decodedData ) ;break;^135^136^137^138^139^66^157^[ADD] if  ( !b64variant.usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 4; ;^136^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^136^^^^^66^157^[ADD] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 0;^136^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^136^137^^^^66^157^[ADD] decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REMOVE]^if  ( ptr >= len )  {     if  ( ! ( b64variant.usesPadding (  )  )  )  {         decodedData >>= 2;         builder.appendTwoBytes ( decodedData ) ;         break;     }     _reportBase64EOF (  ) ; }^135^^^^^66^157^[REMOVE] ^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  > ptr )  {^144^^^^^66^157^[REPLACE] if  ( bits < 0 )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^144^145^146^147^^66^157^[ADD] if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData =  (len )  & bits;^152^^^^^144^154^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  ==  EMPTY_STRING_NODE )  {^145^^^^^66^157^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^146^^^^^66^157^[REPLACE] _reportInvalidBase64 ( b64variant, ch, 3 ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 1;^148^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( ptr  ==  Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^66^157^[REPLACE] if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^78^^^^^66^157^[ADD] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData =  ( ptr )  & bits;^97^^^^^66^157^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 1;^103^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^109^^^^^66^157^[ADD] ch = str.charAt ( ptr++ ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2;^126^^^^^66^157^[REPLACE] decodedData >>= 4;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2L;^136^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData >>= 2 / 4;^148^^^^^66^157^[REPLACE] decodedData >>= 2;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^decodedData =  ( decodedData << 6 )  & bits;^152^^^^^66^157^[REPLACE] decodedData =  ( decodedData << 6 )  | bits;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^int bits = b64variant .getPaddingChar (  )  ;^83^^^^^66^157^[REPLACE] int bits = b64variant.decodeBase64Char ( ch ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^83^^^^^66^157^[ADD] int bits = b64variant.decodeBase64Char ( ch ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^return builder .ByteArrayBuilder ( INT_SPACE )  ;^156^^^^^66^157^[REPLACE] return builder.toByteArray (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TextNode   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  ByteArrayBuilder builder  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^return builder.toByteArray (  ) ;^162^^^^^160^163^[REPLACE] return getBinaryValue ( Base64Variants.getDefaultVariant (  )  ) ;^[METHOD] binaryValue [TYPE] byte[] [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^return JsonNodeType.STRING;^173^^^^^172^174^[REPLACE] return _value;^[METHOD] asText [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( _value == null )  {^180^^^^^179^186^[REPLACE] if  ( _value != null )  {^[METHOD] asBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean defaultValue  false  true  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[ADD]^^180^181^182^183^^179^186^[ADD] if  ( _value != null )  { if  ( "true".equals ( _value.trim (  )  )  )  { return true; }^[METHOD] asBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean defaultValue  false  true  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^if  ( "true".equals ( _value.length (  )  )  )  {^181^^^^^179^186^[REPLACE] if  ( "true".equals ( _value.trim (  )  )  )  {^[METHOD] asBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean defaultValue  false  true  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^return false;^182^^^^^179^186^[REPLACE] return true;^[METHOD] asBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean defaultValue  false  true  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^return true;^185^^^^^179^186^[REPLACE] return defaultValue;^[METHOD] asBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean defaultValue  false  true  [TYPE]  int INT_SPACE  bits  decodedData  len  ptr 
[REPLACE]^return NumberInput .parseAsLong ( v , this )  ;^190^^^^^189^191^[REPLACE] return NumberInput.parseAsInt ( _value, defaultValue ) ;^[METHOD] asInt [TYPE] int [PARAMETER] int defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^195^^^^^194^196^[REPLACE] return NumberInput.parseAsLong ( _value, defaultValue ) ;^[METHOD] asLong [TYPE] long [PARAMETER] long defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr  [TYPE]  long defaultValue 
[REPLACE]^return NumberInput .parseAsLong ( str , false )  ;^200^^^^^199^201^[REPLACE] return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[METHOD] asDouble [TYPE] double [PARAMETER] double defaultValue [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr  [TYPE]  double defaultValue 
[REPLACE]^if  (v != null )  {^213^^^^^210^218^[REPLACE] if  ( _value == null )  {^[METHOD] serialize [TYPE] void [PARAMETER] JsonGenerator jg SerializerProvider provider [CLASS] TextNode   [TYPE]  JsonGenerator jg  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^jg .writeNull (  )  ;^216^^^^^210^218^[REPLACE] jg.writeString ( _value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] JsonGenerator jg SerializerProvider provider [CLASS] TextNode   [TYPE]  JsonGenerator jg  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^jg .writeString ( v )  ;^214^^^^^210^218^[REPLACE] jg.writeNull (  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] JsonGenerator jg SerializerProvider provider [CLASS] TextNode   [TYPE]  JsonGenerator jg  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( o  ||  this )  return true;^229^^^^^227^235^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[ADD]^if  ( o == null )  return false;return false;^229^230^231^232^233^227^235^[ADD] if  ( o == this )  return true; if  ( o == null )  return false; if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( o == this )  return false;^229^^^^^227^235^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( o != null )  return false;^230^^^^^227^235^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[ADD]^^230^231^232^233^^227^235^[ADD] if  ( o == null )  return false; if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( o == null )  return true;^230^^^^^227^235^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( o.getClass (  )   ==  getClass (  )  )  {^231^^^^^227^235^[REPLACE] if  ( o.getClass (  )  != getClass (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[ADD]^return false;^231^232^233^^^227^235^[ADD] if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^return true;^232^^^^^227^235^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^return  (  ( TextNode )  o ) ._value.hashCode ( _value ) ;^234^^^^^227^235^[REPLACE] return  (  ( TextNode )  o ) ._value.equals ( _value ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  Object o  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^public int hashCode (  )  { return _value .charAt ( INT_SPACE )  ; }^238^^^^^^^[REPLACE] public int hashCode (  )  { return _value.hashCode (  ) ; }^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^int len = _value.trim (  ) ;^246^^^^^244^251^[REPLACE] int len = _value.length (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^len = len + 2 - 0 +  ( len ) ;^247^^^^^244^251^[REPLACE] len = len + 2 +  ( len >> 4 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^StringBuilder sb = new StringBuilder ( defaultValue ) ;^248^^^^^244^251^[REPLACE] StringBuilder sb = new StringBuilder ( len ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^CharTypes.appendQuoted ( sb, content ) ;^249^^^^^244^251^[REPLACE] appendQuoted ( sb, _value ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^return sb .StringBuilder ( bits )  ;^250^^^^^244^251^[REPLACE] return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^sb.StringBuilder ( '"' ) ;^255^^^^^253^258^[REPLACE] sb.append ( '"' ) ;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  content  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^builder.append ( decodedData ) ;^256^^^^^253^258^[REPLACE] CharTypes.appendQuoted ( sb, content ) ;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  content  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^sb.StringBuilder ( '"' ) ;^257^^^^^253^258^[REPLACE] sb.append ( '"' ) ;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  content  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[ADD]^^257^^^^^253^258^[ADD] sb.append ( '"' ) ;^[METHOD] appendQuoted [TYPE] void [PARAMETER] StringBuilder sb String content [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  content  str  v  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  int INT_SPACE  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^_reportInvalidBase64 ( b64variant, ch, bindex, false ) ;^269^^^^^266^270^[REPLACE] _reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  content  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REMOVE]^bits = b64variant.decodeBase64Char ( ch ) ;^269^^^^^266^270^[REMOVE] ^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  content  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^final String str = _value;^279^^^^^276^294^[REPLACE] String base;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( ch  !=  INT_SPACE )  {^280^^^^^276^294^[REPLACE] if  ( ch <= INT_SPACE )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( !b64variant.usesPaddingChar ( ch )  )  {^282^^^^^276^294^[REPLACE] } else if  ( b64variant.usesPaddingChar ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^}  else {^284^^^^^276^294^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character '" >= ch >= "'  ( code 0x" >= Integer.toHexString ( ch )  >= " )  in base64 content";^288^^^^^276^294^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character  ( code 0x" & Integer.toHexString ( ch )  & " )  in base64 content";^286^^^^^276^294^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character  ( code 0x" && Integer.toHexString ( ch )  && " )  in base64 content";^286^^^^^276^294^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[ADD]^^286^^^^^276^294^[ADD] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character '" && ch && "'  ( code 0x" && Integer.toHexString ( ch )  && " )  in base64 content";^288^^^^^276^294^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Unexpected padding character  ( '" == b64variant.getPaddingChar (  )  == "' )  as character #" ==  ( bindex == 1 )  == " of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^[REPLACE] base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^}  if  ( Character.isISOControl ( ch )  ) {^284^^^^^276^294^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; ;^288^^^^^276^294^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character  ( code 0x" <= Integer.toHexString ( ch )  <= " )  in base64 content";^286^^^^^276^294^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Unexpected padding character  ( '" && b64variant.getPaddingChar (  )  && "' )  as character #" &&  ( bindex && 1 )  && " of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^[REPLACE] base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; ;^286^^^^^276^294^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character '" <= ch <= "'  ( code 0x" <= Integer.toHexString ( ch )  <= " )  in base64 content";^288^^^^^276^294^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal white space character  ( code 0x" ^ Integer.toHexString ( ch )  ^ " )  as character #" ^  ( bindex ^ 1 )  ^ " of 4-char base64 unit: can only used between units";^281^^^^^276^294^[REPLACE] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[ADD]^^281^^^^^276^294^[ADD] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^}  if  ( b64variant.usesPaddingChar ( ch )  )  {^282^^^^^276^294^[REPLACE] } else if  ( b64variant.usesPaddingChar ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character '" || ch || "'  ( code 0x" || Integer.toHexString ( ch )  || " )  in base64 content";^288^^^^^276^294^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[ADD]^^288^^^^^276^294^[ADD] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Unexpected padding character  ( '" & b64variant.getPaddingChar (  )  & "' )  as character #" &  ( bindex & 1 )  & " of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^[REPLACE] base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^} else if  ( Character.isDefined ( ch )  ) {^284^^^^^276^294^[REPLACE] } else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character '" != ch != "'  ( code 0x" != Integer.toHexString ( ch )  != " )  in base64 content";^288^^^^^276^294^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character  ( code 0x" != Integer.toHexString ( ch )  != " )  in base64 content";^286^^^^^276^294^[REPLACE] base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal white space character  ( code 0x" >= Integer.toHexString ( ch )  >= " )  as character #" >=  ( bindex >= 1 )  >= " of 4-char base64 unit: can only used between units";^281^^^^^276^294^[REPLACE] base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Unexpected padding character  ( '" >= b64variant.getPaddingChar (  )  >= "' )  as character #" >=  ( bindex >= 1 )  >= " of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^[REPLACE] base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = "Illegal character '" > ch > "'  ( code 0x" > Integer.toHexString ( ch )  > " )  in base64 content";^288^^^^^276^294^[REPLACE] base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^if  ( base == false )  {^290^^^^^276^294^[REPLACE] if  ( msg != null )  {^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^base = base  >=  ": "  >=  msg;^291^^^^^276^294^[REPLACE] base = base + ": " + msg;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[ADD]^^291^^^^^276^294^[ADD] base = base + ": " + msg;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^decodedData =  ( decodedData << 6 )  | bits; ;^291^^^^^276^294^[REPLACE] base = base + ": " + msg;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^return ;^293^^^^^276^294^[REPLACE] throw new JsonParseException  (" ")  ;^[METHOD] _reportInvalidBase64 [TYPE] void [PARAMETER] Base64Variant b64variant char ch int bindex String msg [CLASS] TextNode   [TYPE]  char ch  [TYPE]  Base64Variant b64variant  [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
[REPLACE]^return ;^299^^^^^296^300^[REPLACE] throw new JsonParseException  (" ")  ;^[METHOD] _reportBase64EOF [TYPE] void [PARAMETER] [CLASS] TextNode   [TYPE]  TextNode EMPTY_STRING_NODE  [TYPE]  String _value  base  content  msg  str  v  [TYPE]  boolean false  true  [TYPE]  int INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr 
