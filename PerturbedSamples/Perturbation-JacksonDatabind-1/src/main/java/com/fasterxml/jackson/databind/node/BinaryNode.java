[REPLACE]^final static BinaryNode EMPTY_BINARY_NODE ;^17^^^^^^^[REPLACE] final static BinaryNode EMPTY_BINARY_NODE = new BinaryNode ( new byte[0] ) ;^ [CLASS] BinaryNode  
[REPLACE]^_data =  null;^23^^^^^21^24^[REPLACE] _data = data;^[METHOD] <init> [TYPE] BinaryNode(byte[]) [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^if  (  length + 1 == data.length + 1 )  {^28^^^^^26^34^[REPLACE] if  ( offset == 0 && length == data.length )  {^[METHOD] <init> [TYPE] BinaryNode(byte[],int,int) [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^_data =  new byte[null];^31^^^^^26^34^[REPLACE] _data = new byte[length];^[METHOD] <init> [TYPE] BinaryNode(byte[],int,int) [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^_data =  null;^29^^^^^26^34^[REPLACE] _data = data;^[METHOD] <init> [TYPE] BinaryNode(byte[],int,int) [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[ADD]^^31^^^^^26^34^[ADD] _data = new byte[length];^[METHOD] <init> [TYPE] BinaryNode(byte[],int,int) [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^if  ( data != false )  {^38^^^^^36^45^[REPLACE] if  ( data == null )  {^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^return true;^39^^^^^36^45^[REPLACE] return null;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^return this;^39^^^^^36^45^[REPLACE] return null;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^if  ( data.length (  )  == 0 )  {^41^^^^^36^45^[REPLACE] if  ( data.length == 0 )  {^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[ADD]^^41^42^43^^^36^45^[ADD] if  ( data.length == 0 )  { return EMPTY_BINARY_NODE; }^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^return JsonNodeType.BINARY;^42^^^^^36^45^[REPLACE] return EMPTY_BINARY_NODE;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^return  new BinaryNode ( _data, offset, length )  ;^44^^^^^36^45^[REPLACE] return new BinaryNode ( data ) ;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^if  ( _data != null )  {^49^^^^^47^56^[REPLACE] if  ( data == null )  {^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[ADD]^return null;^49^50^51^^^47^56^[ADD] if  ( data == null )  { return null; }^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^return false;^50^^^^^47^56^[REPLACE] return null;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^return this;^50^^^^^47^56^[REPLACE] return null;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^if  ( length + 1 == 0  )  {^52^^^^^47^56^[REPLACE] if  ( length == 0 )  {^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^return JsonNodeType.BINARY;^53^^^^^47^56^[REPLACE] return EMPTY_BINARY_NODE;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^return  new BinaryNode ( data )  ;^55^^^^^47^56^[REPLACE] return new BinaryNode ( data, offset, length ) ;^[METHOD] valueOf [TYPE] BinaryNode [PARAMETER] byte[] data int offset int length [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  int length  offset 
[REPLACE]^return EMPTY_BINARY_NODE;^61^^^^^59^62^[REPLACE] return JsonNodeType.BINARY;^[METHOD] getNodeType [TYPE] JsonNodeType [PARAMETER] [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^return EMPTY_BINARY_NODE;^70^^^^^65^71^[REPLACE] return JsonToken.VALUE_EMBEDDED_OBJECT;^[METHOD] asToken [TYPE] JsonToken [PARAMETER] [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^if  ( o == this )  return true;^79^^^^^^^[REPLACE] public byte[] binaryValue (  )  { return _data; }^[METHOD] binaryValue [TYPE] byte[] [PARAMETER] [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^return Base64Variants.getDefaultVariant (  )  .getBase64Variant (  )  ;^87^^^^^86^88^[REPLACE] return Base64Variants.getDefaultVariant (  ) .encode ( _data, false ) ;^[METHOD] asText [TYPE] String [PARAMETER] [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data, 0 , _data.length ) ;^94^95^^^^91^96^[REPLACE] jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data, 0, _data.length ) ;^[METHOD] serialize [TYPE] void [PARAMETER] JsonGenerator jg SerializerProvider provider [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  JsonGenerator jg  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[ADD]^^94^95^^^^91^96^[ADD] jg.writeBinary ( provider.getConfig (  ) .getBase64Variant (  ) , _data, 0, _data.length ) ;^[METHOD] serialize [TYPE] void [PARAMETER] JsonGenerator jg SerializerProvider provider [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  JsonGenerator jg  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^if  ( o  !=  this )  return false;^101^^^^^99^107^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^if  ( o == this )  return false;^101^^^^^99^107^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^if  ( o != this  )  return false;^102^^^^^99^107^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^if  ( o == null )  return true;^102^^^^^99^107^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^if  (this (  )   ==  getClass (  )  )  {^103^^^^^99^107^[REPLACE] if  ( o.getClass (  )  != getClass (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^return true;^104^^^^^99^107^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^return Arrays .equals ( o )  ._data, _data ) ;^106^^^^^99^107^[REPLACE] return Arrays.equals (  (  ( BinaryNode )  o ) ._data, _data ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  BinaryNode EMPTY_BINARY_NODE 
[REPLACE]^return  ( _data == null )  ? -1 : _data.length (  ) ;^111^^^^^110^112^[REPLACE] return  ( _data == null )  ? -1 : _data.length;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
[REPLACE]^return Base64Variants.getDefaultVariant (  ) .encode ( _data, false ) ;^121^^^^^119^122^[REPLACE] return Base64Variants.getDefaultVariant (  ) .encode ( _data, true ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BinaryNode   [TYPE]  byte[] _data  data  [TYPE]  BinaryNode EMPTY_BINARY_NODE  [TYPE]  boolean false  true 
