[REPLACE]^private static final char[] EMPTY_CHAR_ARRAY ;^41^^^^^^^[REPLACE] private static final char[] EMPTY_CHAR_ARRAY = new char[0];^ [CLASS] BinaryCodec  
[REPLACE]^private static final byte[] EMPTY_BYTE_ARRAY ;^44^^^^^^^[REPLACE] private static final byte[] EMPTY_BYTE_ARRAY = new byte[0];^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_0  = null ;^47^^^^^^^[REPLACE] private static final int BIT_0 = 1;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_1 ;^50^^^^^^^[REPLACE] private static final int BIT_1 = 0x02;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_2 = 0x01;^53^^^^^^^[REPLACE] private static final int BIT_2 = 0x04;^ [CLASS] BinaryCodec  
[REPLACE]^private static final  long  BIT_3 = 0x08L;^56^^^^^^^[REPLACE] private static final int BIT_3 = 0x08;^ [CLASS] BinaryCodec  
[REPLACE]^private static final  long  BIT_4 = 0x10;^59^^^^^^^[REPLACE] private static final int BIT_4 = 0x10;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int BIT_6 ;^65^^^^^^^[REPLACE] private static final int BIT_6 = 0x40;^ [CLASS] BinaryCodec  
[REPLACE]^private static   long  BIT_7 = 0x80;^68^^^^^^^[REPLACE] private static final int BIT_7 = 0x80;^ [CLASS] BinaryCodec  
[REPLACE]^private static final int[] BITS  = null ;^70^^^^^^^[REPLACE] private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^ [CLASS] BinaryCodec  
[REPLACE]^return toAsciiBytes ( EMPTY_BYTE_ARRAY ) ;^81^^^^^80^82^[REPLACE] return toAsciiBytes ( raw ) ;^[METHOD] encode [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^if  ( ! ! ( raw instanceof byte[] )  )  {^95^^^^^94^99^[REPLACE] if  ( ! ( raw instanceof byte[] )  )  {^[METHOD] encode [TYPE] Object [PARAMETER] Object raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object raw  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^throw new DecoderException  (" ")  ; ;^96^^^^^94^99^[REPLACE] throw new EncoderException  (" ")  ;^[METHOD] encode [TYPE] Object [PARAMETER] Object raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object raw  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return ;^96^^^^^94^99^[REPLACE] throw new EncoderException  (" ")  ;^[METHOD] encode [TYPE] Object [PARAMETER] Object raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object raw  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return fromAscii (  ( byte[] )  ascii ) ;^98^^^^^94^99^[REPLACE] return toAsciiChars (  ( byte[] )  raw ) ;^[METHOD] encode [TYPE] Object [PARAMETER] Object raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object raw  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^if  ( ascii != null )  {^112^^^^^111^125^[REPLACE] if  ( ascii == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[ADD]^^112^113^114^^^111^125^[ADD] if  ( ascii == null )  { return EMPTY_BYTE_ARRAY; }^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return EMPTY_CHAR_ARRAY;^113^^^^^111^125^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^if  ( ! ascii instanceof byte[] )  {^115^^^^^111^125^[REPLACE] if  ( ascii instanceof byte[] )  {^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return fromAscii (  ( char[] )  ascii ) ;^116^^^^^111^125^[REPLACE] return fromAscii (  ( byte[] )  ascii ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^if  ( ! ascii instanceof char[] )  {^118^^^^^111^125^[REPLACE] if  ( ascii instanceof char[] )  {^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return fromAscii (  ( byte[] )  ascii ) ;^119^^^^^111^125^[REPLACE] return fromAscii (  ( char[] )  ascii ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^if  ( ! ascii instanceof String )  {^121^^^^^111^125^[REPLACE] if  ( ascii instanceof String )  {^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[ADD]^^121^122^123^^^111^125^[ADD] if  ( ascii instanceof String )  { return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return fromAscii (  ( byte[] )  ascii ) ;^122^^^^^111^125^[REPLACE] return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return fromAscii (  (  ( String )  ascii )  .String ( EMPTY_CHAR_ARRAY )   ) ;^122^^^^^111^125^[REPLACE] return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return ;^124^^^^^111^125^[REPLACE] throw new DecoderException  (" ")  ;^[METHOD] decode [TYPE] Object [PARAMETER] Object ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  raw  [TYPE]  int[] BITS  [TYPE]  Object ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return fromAscii ( EMPTY_BYTE_ARRAY ) ;^136^^^^^135^137^[REPLACE] return fromAscii ( ascii ) ;^[METHOD] decode [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^if  ( ascii != null )  {^148^^^^^147^152^[REPLACE] if  ( ascii == null )  {^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] String ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  raw  [TYPE]  int[] BITS  [TYPE]  String ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[ADD]^return EMPTY_BYTE_ARRAY;^148^149^150^^^147^152^[ADD] if  ( ascii == null )  { return EMPTY_BYTE_ARRAY; }^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] String ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  raw  [TYPE]  int[] BITS  [TYPE]  String ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return EMPTY_CHAR_ARRAY;^149^^^^^147^152^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] String ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  raw  [TYPE]  int[] BITS  [TYPE]  String ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^return fromAscii (  ( byte[] )  ascii ) ;^151^^^^^147^152^[REPLACE] return fromAscii ( ascii.toCharArray (  )  ) ;^[METHOD] toByteArray [TYPE] byte[] [PARAMETER] String ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  raw  [TYPE]  int[] BITS  [TYPE]  String ascii  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  [TYPE]  char[] EMPTY_CHAR_ARRAY 
[REPLACE]^if  ( ascii == null ) {^167^^^^^166^184^[REPLACE] if  ( ascii == null || ascii.length == 0 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return EMPTY_CHAR_ARRAY;^168^^^^^166^184^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^byte[] l_raw = new byte[ascii.length + 4 >> 3];^171^^^^^166^184^[REPLACE] byte[] l_raw = new byte[ascii.length >> 3];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^171^^^^^166^184^[ADD] byte[] l_raw = new byte[ascii.length >> 3];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  ||  '1' )  {^178^^^^^166^184^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] | = null ;^179^^^^^166^184^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length *  0.5  - 1; ii < l_raw.length *  0.5 ; ii++, jj -= 8 )  {^176^^^^^166^184^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  !=  '1' )  {^178^^^^^166^184^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REMOVE]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^178^^^^^166^184^[REMOVE] ^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] | =  l_raw[ii] |;^179^^^^^166^184^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^179^^^^^166^184^[ADD] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0; bits < BITS.length %  2; ++bits )  {^177^^^^^166^184^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  && this )  {^178^^^^^166^184^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] |;^179^^^^^166^184^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length; ++bits )  {^177^^^^^166^184^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 0  )  {^176^^^^^166^184^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0 , jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length - 4 - 1; ii < l_raw.length - 4; ii++, jj -= 8 )  {^176^^^^^166^184^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^176^177^178^179^180^166^184^[ADD] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  { for  ( int bits = 0; bits < BITS.length; ++bits )  { if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return raw;^183^^^^^166^184^[REPLACE] return l_raw;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] char[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( EMPTY_BYTE_ARRAY == null ) {^194^^^^^193^211^[REPLACE] if  ( ascii == null || ascii.length == 0 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return EMPTY_CHAR_ARRAY;^195^^^^^193^211^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^byte[] l_raw = new byte[ascii.length (  )  >> 3];^198^^^^^193^211^[REPLACE] byte[] l_raw = new byte[ascii.length >> 3];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^198^^^^^193^211^[ADD] byte[] l_raw = new byte[ascii.length >> 3];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  !=  '1' )  {^205^^^^^193^211^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] | = null ;^206^^^^^193^211^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^206^^^^^193^211^[ADD] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length /  2 - 1; ii < l_raw.length /  2; ii++, jj -= 8 )  {^203^^^^^193^211^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^203^204^205^206^207^193^211^[ADD] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  { for  ( int bits = 0; bits < BITS.length; ++bits )  { if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  || null )  {^205^^^^^193^211^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^205^206^207^^^193^211^[ADD] if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] | =  l_raw[ii] |;^206^^^^^193^211^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length + 4; ++bits )  {^204^^^^^193^211^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^204^205^206^207^^193^211^[ADD] for  ( int bits = 0; bits < BITS.length; ++bits )  { if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - ii]  || false )  {^205^^^^^193^211^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^l_raw[ii] |= BITS[bits];^205^206^207^^^193^211^[ADD] if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_raw[ii] |;^206^^^^^193^211^[REPLACE] l_raw[ii] |= BITS[bits];^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length; ++bits )  {^204^^^^^193^211^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length - 5; ++bits )  {^204^^^^^193^211^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( ascii[jj - bits]  &&  '1' )  {^205^^^^^193^211^[REPLACE] if  ( ascii[jj - bits] == '1' )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 0  )  {^203^^^^^193^211^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0 , jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = ascii.length /  0.5  - 1; ii < l_raw.length /  0.5 ; ii++, jj -= 8 )  {^203^^^^^193^211^[REPLACE] for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return raw;^210^^^^^193^211^[REPLACE] return l_raw;^[METHOD] fromAscii [TYPE] byte[] [PARAMETER] byte[] ascii [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( raw == null || raw.length *  0.5  == 0 )  {^223^^^^^222^242^[REPLACE] if  ( raw == null || raw.length == 0 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REMOVE]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^223^^^^^222^242^[REMOVE] ^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return EMPTY_CHAR_ARRAY;^224^^^^^222^242^[REPLACE] return EMPTY_BYTE_ARRAY;^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^byte[] l_ascii = new byte[raw.length + 0  << 0 ];^227^^^^^222^242^[REPLACE] byte[] l_ascii = new byte[raw.length << 3];^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^227^^^^^222^242^[ADD] byte[] l_ascii = new byte[raw.length << 3];^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   !=  1 )  {^234^^^^^222^242^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  ^  bits] = '1';^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  |  bits] = '0';^235^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = l_ascii.length (  )  - 1; ii < raw.length (  ) ; ii++, jj -= 8 )  {^232^^^^^222^242^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^232^233^234^235^^222^242^[ADD] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  { for  ( int bits = 0; bits < BITS.length; ++bits )  { if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   !=  2 )  {^234^^^^^222^242^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj - bits] = '0'; ;^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length + 2; ++bits )  {^233^^^^^222^242^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^233^234^235^236^237^222^242^[ADD] for  ( int bits = 0; bits < BITS.length; ++bits )  { if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   ||  0 )  {^234^^^^^222^242^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  &&  bits] = '0';^235^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  ||  bits] = '1';^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^237^^^^^222^242^[ADD] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj - bits] = '1'; ;^235^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  !=  bits] = '1';^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length; ++bits )  {^233^^^^^222^242^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int bits = 0; bits < BITS.length *  0.5 ; ++bits )  {^233^^^^^222^242^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^l_ascii[jj - bits] = '0';l_ascii[jj - bits] = '1';^234^235^236^237^238^222^242^[ADD] if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1'; }^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  <=  bits] = '1';^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[ADD]^^235^^^^^222^242^[ADD] l_ascii[jj - bits] = '0';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  |  bits] = '1';^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 0  )  {^232^^^^^222^242^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^l_ascii[jj  ==  bits] = '1';^237^^^^^222^242^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0 , jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^for  ( int ii = 0, jj = l_ascii.length *  0.5  - 0 ; ii < raw.length *  0.5 ; ii++, jj -= 8 )  {^232^^^^^222^242^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^return raw;^241^^^^^222^242^[REPLACE] return l_ascii;^[METHOD] toAsciiBytes [TYPE] byte[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii 
[REPLACE]^if  ( l_raw == null || raw.length *  2 == 0 )  {^253^^^^^252^272^[REPLACE] if  ( raw == null || raw.length == 0 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^253^254^255^^^252^272^[ADD] if  ( raw == null || raw.length == 0 )  { return EMPTY_CHAR_ARRAY; }^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^return EMPTY_BYTE_ARRAY;^254^^^^^252^272^[REPLACE] return EMPTY_CHAR_ARRAY;^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^char[] l_ascii = new char[raw.length /  0.5  << 3];^257^^^^^252^272^[REPLACE] char[] l_ascii = new char[raw.length << 3];^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^257^^^^^252^272^[ADD] char[] l_ascii = new char[raw.length << 3];^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   ||  0 )  {^264^^^^^252^272^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj - bits] = '0'; ;^267^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  |  bits] = '0';^265^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int ii = 0 , jj = l_ascii.length - 1 - 1; ii < raw.length - 1; ii++, jj -= 8 )  {^262^^^^^252^272^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^262^263^264^265^^252^272^[ADD] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  { for  ( int bits = 0; bits < BITS.length; ++bits )  { if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   ||  BIT_0 )  {^264^^^^^252^272^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  ==  bits] = '1';^267^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^267^^^^^252^272^[ADD] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  >=  bits] = '0';^265^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^265^^^^^252^272^[ADD] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int bits = 0; bits < BITS.length - 3; ++bits )  {^263^^^^^252^272^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   !=  0 )  {^264^^^^^252^272^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  >=  bits] = '1';^267^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  ==  bits] = '0';^265^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  ^  bits] = '0';^265^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  <=  bits] = '0';^265^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  ||  bits] = '1';^267^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int bits = 0 ; bits < BITS.length; ++bits )  {^263^^^^^252^272^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[ADD]^^263^264^265^266^267^252^272^[ADD] for  ( int bits = 0; bits < BITS.length; ++bits )  { if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int bits = 0; bits < BITS.length + 3; ++bits )  {^263^^^^^252^272^[REPLACE] for  ( int bits = 0; bits < BITS.length; ++bits )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^if  (  ( raw[ii] & BITS[bits] )   &&  BIT_0L )  {^264^^^^^252^272^[REPLACE] if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  ^  bits] = '1';^267^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  <  bits] = '0';^265^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '0';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^l_ascii[jj  !=  bits] = '1';^267^^^^^252^272^[REPLACE] l_ascii[jj - bits] = '1';^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 0  )  {^262^^^^^252^272^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int ii = 0 , jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^for  ( int ii = 0, jj = l_ascii.length *  0.5  - 0 ; ii < raw.length *  0.5 ; ii++, jj -= 8 )  {^262^^^^^252^272^[REPLACE] for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^return ascii;^271^^^^^252^272^[REPLACE] return l_ascii;^[METHOD] toAsciiChars [TYPE] char[] [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
[REPLACE]^return new String ( toAsciiChars ( l_raw )  ) ;^283^^^^^282^284^[REPLACE] return new String ( toAsciiChars ( raw )  ) ;^[METHOD] toAsciiString [TYPE] String [PARAMETER] byte[] raw [CLASS] BinaryCodec   [TYPE]  byte[] EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  [TYPE]  int[] BITS  [TYPE]  boolean false  true  [TYPE]  int BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  [TYPE]  char[] EMPTY_CHAR_ARRAY  ascii  l_ascii 
