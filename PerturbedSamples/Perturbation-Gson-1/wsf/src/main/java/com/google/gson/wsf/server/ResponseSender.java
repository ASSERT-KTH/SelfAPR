[REPLACE]^private static final Logger logger ;^37^^^^^^^[REPLACE] private static final Logger logger = Logger.getLogger ( ResponseSender.class.getCanonicalName (  )  ) ;^ [CLASS] ResponseSender  
[REPLACE]^this.gson =  null;^42^^^^^41^43^[REPLACE] this.gson = gson;^[METHOD] <init> [TYPE] Gson) [PARAMETER] Gson gson [CLASS] ResponseSender   [TYPE]  Logger logger  [TYPE]  Gson gson  [TYPE]  boolean false  true 
[ADD]^^42^^^^^41^43^[ADD] this.gson = gson;^[METHOD] <init> [TYPE] Gson) [PARAMETER] Gson gson [CLASS] ResponseSender   [TYPE]  Logger logger  [TYPE]  Gson gson  [TYPE]  boolean false  true 
[ADD]^sendHeaders ( conn, response.getHeaders (  )  ) ;sendBody ( conn, response.getBody (  )  ) ;^46^47^48^49^50^45^52^[ADD] try { sendHeaders ( conn, response.getHeaders (  )  ) ; sendBody ( conn, response.getBody (  )  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] send [TYPE] void [PARAMETER] HttpServletResponse conn WebServiceResponse response [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  WebServiceResponse response  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  Logger logger 
[REPLACE]^sendHeaders ( conn, response.getBody (  )  ) ;^47^^^^^45^52^[REPLACE] sendHeaders ( conn, response.getHeaders (  )  ) ;^[METHOD] send [TYPE] void [PARAMETER] HttpServletResponse conn WebServiceResponse response [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  WebServiceResponse response  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  Logger logger 
[REPLACE]^sendBody ( conn, response.getHeaders (  )  ) ;^48^^^^^45^52^[REPLACE] sendBody ( conn, response.getBody (  )  ) ;^[METHOD] send [TYPE] void [PARAMETER] HttpServletResponse conn WebServiceResponse response [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  WebServiceResponse response  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  Logger logger 
[REPLACE]^return ;^50^^^^^45^52^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] send [TYPE] void [PARAMETER] HttpServletResponse conn WebServiceResponse response [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  WebServiceResponse response  [TYPE]  IOException e  [TYPE]  boolean false  true  [TYPE]  Logger logger 
[REPLACE]^HeaderMapSpec spec = responseParams.entrySet (  ) ;^55^^^^^54^64^[REPLACE] HeaderMapSpec spec = responseParams.getSpec (  ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[ADD]^^55^^^^^54^64^[ADD] HeaderMapSpec spec = responseParams.getSpec (  ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[REPLACE]^for  ( Map.Entry<String, Object> param : responseParams.entrySet (  )  )  { String paramName = param.getKey (  ) ;^56^^^^^54^64^[REPLACE] for  ( Map.Entry<String, Object> param : responseParams.entrySet (  )  )  {^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[REPLACE]^String nullName = param.getValue (  ) ;^57^^^^^54^64^[REPLACE] String paramName = param.getKey (  ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[ADD]^^57^58^^^^54^64^[ADD] String paramName = param.getKey (  ) ; Object paramValue = param.getValue (  ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[REPLACE]^Object trueValue = param .getKey (  )  ;^58^^^^^54^64^[REPLACE] Object paramValue = param.getValue (  ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[REPLACE]^Type paramType = spec.getTypeFor ( json ) ;^59^^^^^54^64^[REPLACE] Type paramType = spec.getTypeFor ( paramName ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[ADD]^^59^^^^^54^64^[ADD] Type paramType = spec.getTypeFor ( paramName ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[REPLACE]^String json = gson .toJson ( null )  ;^60^^^^^54^64^[REPLACE] String json = gson.toJson ( paramValue, paramType ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[ADD]^^60^^^^^54^64^[ADD] String json = gson.toJson ( paramValue, paramType ) ;^[METHOD] sendHeaders [TYPE] void [PARAMETER] HttpServletResponse conn HeaderMap responseParams [CLASS] ResponseSender   [TYPE]  Entry param  [TYPE]  Type paramType  [TYPE]  boolean false  true  [TYPE]  HeaderMap responseParams  [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  Object paramValue  [TYPE]  String json  paramName  [TYPE]  Logger logger  [TYPE]  HeaderMapSpec spec 
[REPLACE]^conn.getWriter (  ) .append ( json ) ;^67^^^^^66^72^[REPLACE] conn.setContentType ( responseBody.getContentType (  )  ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[REPLACE]^conn.setContentType ( responseBody.getCharacterEncoding (  )  ) ;^67^^^^^66^72^[REPLACE] conn.setContentType ( responseBody.getContentType (  )  ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[REPLACE]^conn.getWriter (  ) .append ( json ) ;^68^^^^^66^72^[REPLACE] conn.setCharacterEncoding ( responseBody.getCharacterEncoding (  )  ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[REPLACE]^conn.setCharacterEncoding ( responseBody.getContentType (  )  ) ;^68^^^^^66^72^[REPLACE] conn.setCharacterEncoding ( responseBody.getCharacterEncoding (  )  ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[REPLACE]^String json = gson.toJson ( paramValue, paramType ) ;^69^^^^^66^72^[REPLACE] String json = gson.toJson ( responseBody ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[ADD]^^69^^^^^66^72^[ADD] String json = gson.toJson ( responseBody ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[REPLACE]^logger.fine ( "RESPONSE BODY:"  >  json ) ;^70^^^^^66^72^[REPLACE] logger.fine ( "RESPONSE BODY:" + json ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[REPLACE]^conn.setContentType (  ) .append ( json ) ;^71^^^^^66^72^[REPLACE] conn.getWriter (  ) .append ( json ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[ADD]^^71^^^^^66^72^[ADD] conn.getWriter (  ) .append ( json ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
[REPLACE]^conn .setCharacterEncoding (  )  .append ( json ) ;^71^^^^^66^72^[REPLACE] conn.getWriter (  ) .append ( json ) ;^[METHOD] sendBody [TYPE] void [PARAMETER] HttpServletResponse conn ResponseBody responseBody [CLASS] ResponseSender   [TYPE]  Gson gson  [TYPE]  HttpServletResponse conn  [TYPE]  String json  [TYPE]  boolean false  true  [TYPE]  Logger logger  [TYPE]  ResponseBody responseBody 
