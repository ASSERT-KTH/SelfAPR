[REPLACE]^private  Appendable appendable;^141^^^^^^^[REPLACE] private final Appendable appendable;^ [CLASS] Streams AppendableWriter CurrentWrite  
[REPLACE]^private  CurrentWrite currentWrite = new CurrentWrite (  ) ;^142^^^^^^^[REPLACE] private final CurrentWrite currentWrite = new CurrentWrite (  ) ;^ [CLASS] Streams AppendableWriter CurrentWrite  
[REPLACE]^this.appendable =  null;^145^^^^^144^146^[REPLACE] this.appendable = appendable;^[METHOD] <init> [TYPE] Appendable) [PARAMETER] Appendable appendable [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^while  ( reader.peek (  )  )  {^52^^^^^36^81^[REPLACE] while  ( reader.hasNext (  )  )  {^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^array .JsonArray (  )  ;^53^^^^^36^81^[REPLACE] array.add ( parse ( reader )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^reader.endArray (  ) ;^53^^^^^36^81^[REPLACE] array.add ( parse ( reader )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^while  ( reader.peek (  )  )  {^60^^^^^36^81^[REPLACE] while  ( reader.hasNext (  )  )  {^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^array.add ( parse ( reader )  ) ;^61^^^^^36^81^[REPLACE] object.add ( reader.nextName (  ) , parse ( reader )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REMOVE]^String number = reader.nextString (  ) ;^61^^^^^36^81^[REMOVE] ^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^object.add ( reader.nextNull (  ) , parse ( reader )  ) ;^61^^^^^36^81^[REPLACE] object.add ( reader.nextName (  ) , parse ( reader )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^return new JsonPrimitive ( reader.nextString (  )  ) ;^37^38^39^40^41^36^81^[ADD] try { switch  ( reader.peek (  )  )  { case STRING: return new JsonPrimitive ( reader.nextString (  )  ) ; case NUMBER:^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^^52^53^^^^36^81^[ADD] while  ( reader.hasNext (  )  )  { array.add ( parse ( reader )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^^60^61^^^^36^81^[ADD] while  ( reader.hasNext (  )  )  { object.add ( reader.nextName (  ) , parse ( reader )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^object .JsonArray (  )   ) ;^61^^^^^36^81^[REPLACE] object.add ( reader.nextName (  ) , parse ( reader )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader.nextNull (  )  ) ;^40^^^^^36^81^[REPLACE] return new JsonPrimitive ( reader.nextString (  )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( JsonPrimitive .isNumber (  )   ) ;^43^^^^^36^81^[REPLACE] return new JsonPrimitive ( JsonPrimitive.stringToNumber ( number )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader.nextNull (  )  ) ;^45^^^^^36^81^[REPLACE] return new JsonPrimitive ( reader.nextBoolean (  )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader.nextBoolean (  )  ) ;^48^^^^^36^81^[REPLACE] return JsonNull.createJsonNull (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return chars[i];^56^^^^^36^81^[REPLACE] return array;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return chars[i];^64^^^^^36^81^[REPLACE] return object;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^String number = reader.nextNull (  ) ;^42^^^^^36^81^[REPLACE] String number = reader.nextString (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^JsonElement value = e.getValue (  ) ;^50^^^^^36^81^[REPLACE] JsonArray array = new JsonArray (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^JsonElement value = e.getValue (  ) ;^58^^^^^36^81^[REPLACE] JsonObject object = new JsonObject (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^throw new JsonSyntaxException  (" ")  ; ;^70^^^^^36^81^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^^70^^^^^36^81^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new   number    ) ;^43^^^^^36^81^[REPLACE] return new JsonPrimitive ( JsonPrimitive.stringToNumber ( number )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader .nextNull (  )   ) ;^45^^^^^36^81^[REPLACE] return new JsonPrimitive ( reader.nextBoolean (  )  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return new JsonPrimitive ( reader.nextBoolean (  )  ) ;^73^^^^^36^81^[REPLACE] return JsonNull.createJsonNull (  ) ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return ;^70^^^^^36^81^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^75^^^^^36^81^[REPLACE] throw new JsonSyntaxException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^return ;^77^^^^^36^81^[REPLACE] throw new JsonIOException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^79^^^^^36^81^[REPLACE] throw new JsonSyntaxException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[ADD]^^76^77^^^^36^81^[ADD] catch  ( IOException e )  { throw new JsonIOException  (" ")  ;^[METHOD] parse [TYPE] JsonElement [PARAMETER] JsonReader reader [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  JsonArray array  [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  EOFException e  [TYPE]  JsonReader reader  [TYPE]  JsonObject object  [TYPE]  NumberFormatException e  [TYPE]  String number  [TYPE]  IOException e  [TYPE]  char[] chars  [TYPE]  MalformedJsonException e 
[REPLACE]^if  (  element.isJsonNull (  )  )  {^88^^^^^87^130^[REPLACE] if  ( element == null || element.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^88^89^90^91^^87^130^[ADD] if  ( element == null || element.isJsonNull (  )  )  { if  ( serializeNulls )  { writer.nullValue (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if  ( element.isJsonObject (  )  )  {^93^^^^^87^130^[REPLACE] } else if  ( element.isJsonPrimitive (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  else {^103^^^^^87^130^[REPLACE] } else if  ( element.isJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}^103^104^105^^^87^130^[ADD] else if  ( element.isJsonArray (  )  )  { writer.beginArray (  ) ; for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( element.isJsonObject (  )  )  {^115^^^^^87^130^[REPLACE] } else if  ( element.isJsonObject (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^return ;^128^^^^^115^129^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^return JsonNull.createJsonNull (  ) ;^128^^^^^115^129^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^128^^^^^115^129^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  (  value.isJsonNull (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( e.isJsonNull (  )  )  {     writer.nullValue (  ) ;     continue; }^119^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^for  ( JsonElement e : element.getAsJsonArray (  )  )  {^117^^^^^87^130^[REPLACE] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = e .getKey (  )  ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls ) {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^117^118^119^120^121^87^130^[ADD] for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  { JsonElement value = e.getValue (  ) ; if  ( !serializeNulls && value.isJsonNull (  )  )  { continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = 0.getValue (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^throw new JsonSyntaxException  (" ")  ; ;^128^^^^^87^130^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( value.isJsonNull (  )  )  {^107^^^^^87^130^[REPLACE] if  ( e.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value (  ) ;^108^^^^^87^130^[REPLACE] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^108^109^^^^87^130^[ADD] writer.nullValue (  ) ; continue;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = e.getValue (  ) ;^105^^^^^87^130^[REPLACE] for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^writer.nullValue (  ) ;continue;^107^108^109^110^^87^130^[ADD] if  ( e.isJsonNull (  )  )  { writer.nullValue (  ) ; continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  else {^115^^^^^87^130^[REPLACE] } else if  ( element.isJsonObject (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^throw new JsonSyntaxException  (" ")  ; ;^128^^^^^115^129^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = this.getValue (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^118^^^^^87^130^[ADD] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( true && value.isJsonNull (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^continue;^119^120^121^^^87^130^[ADD] if  ( !serializeNulls && value.isJsonNull (  )  )  { continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = null.getValue (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( primitive .getAsNumber (  )   )  {^95^^^^^87^130^[REPLACE] if  ( primitive.isNumber (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^95^96^97^98^^87^130^[ADD] if  ( primitive.isNumber (  )  )  { writer.value ( primitive.getAsNumber (  )  ) ; } else if  ( primitive.isBoolean (  )  )  { writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( primitive.isBoolean (  )  )  {^97^^^^^87^130^[REPLACE] } else if  ( primitive.isBoolean (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}   writer.value ( primitive.getAsBoolean (  )  ) ;writer.value ( primitive.getAsString (  )  ) ;^97^98^99^100^101^87^130^[ADD] else if  ( primitive.isBoolean (  )  )  { writer.value ( primitive.getAsBoolean (  )  ) ; } else { writer.value ( primitive.getAsString (  )  ) ; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.getAsNumber (  )  ) ;^100^^^^^97^101^[REPLACE] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^100^^^^^97^101^[ADD] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.getAsNumber (  )  ) ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.isBoolean (  )  ) ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.getAsString (  )  ) ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive.isNumber (  )  ) ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^96^^^^^87^130^[ADD] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  else {^97^^^^^87^130^[REPLACE] } else if  ( primitive.isBoolean (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( primitive.isNumber (  )  )  {     writer.value ( primitive.getAsNumber (  )  ) ; }else     if  ( primitive.isBoolean (  )  )  {         writer.value ( primitive.getAsBoolean (  )  ) ;     }else {         writer.value ( primitive.getAsString (  )  ) ;     }^97^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonPrimitive primitive = value.getAsJsonPrimitive (  ) ;^94^^^^^87^130^[REPLACE] JsonPrimitive primitive = element.getAsJsonPrimitive (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^94^^^^^87^130^[ADD] JsonPrimitive primitive = element.getAsJsonPrimitive (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if  ( element.isJsonObject (  )  )  {^95^^^^^87^130^[REPLACE] if  ( primitive.isNumber (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer .nullValue (  )  ;^100^^^^^97^101^[REPLACE] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( primitive.isNumber (  )  )  { writer.value ( primitive.getAsNumber (  )  ) ;^100^^^^^97^101^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive .getAsNumber (  )   ) ;^100^^^^^97^101^[REPLACE] writer.value ( primitive.getAsString (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( element.isJsonArray (  )  )  {^103^^^^^87^130^[REPLACE] } else if  ( element.isJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if  ( element.isJsonPrimitive (  )  )  {^115^^^^^87^130^[REPLACE] } else if  ( element.isJsonObject (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}^115^116^117^118^^87^130^[ADD] else if  ( element.isJsonObject (  )  )  { writer.beginObject (  ) ; for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  { JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( true (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls && value.isJsonNull (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = 1.getValue (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( e.isJsonArray (  )  )  {^107^^^^^87^130^[REPLACE] if  ( e.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^107^108^109^110^^87^130^[ADD] if  ( e.isJsonNull (  )  )  { writer.nullValue (  ) ; continue; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer .value (  )  ;^108^^^^^87^130^[REPLACE] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}   writer.beginObject (  ) ;^115^116^117^118^^87^130^[ADD] else if  ( element.isJsonObject (  )  )  { writer.beginObject (  ) ; for  ( Map.Entry<String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  { JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls &&true (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = 0.getKey (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = false .getKey (  )  ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^return ;^128^^^^^87^130^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^} else if  ( element.isJsonObject (  )  )  {^89^^^^^87^130^[REPLACE] if  ( serializeNulls )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value (  ) ;^90^^^^^87^130^[REPLACE] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( true )  {^89^^^^^87^130^[REPLACE] if  ( serializeNulls )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^writer.nullValue (  ) ;^89^90^91^^^87^130^[ADD] if  ( serializeNulls )  { writer.nullValue (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( element.isJsonPrimitive (  )  )  {^93^^^^^87^130^[REPLACE] } else if  ( element.isJsonPrimitive (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^}   writer.beginArray (  ) ;^103^104^105^^^87^130^[ADD] else if  ( element.isJsonArray (  )  )  { writer.beginArray (  ) ; for  ( JsonElement e : element.getAsJsonArray (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( serializeNulls &&serializeNulls (  )  )  {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = true.getKey (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = true.getValue (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^return JsonNull.createJsonNull (  ) ;^108^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^105^106^107^108^109^87^130^[ADD] for  ( JsonElement e : element.getAsJsonArray (  )  )  {  if  ( e.isJsonNull (  )  )  { writer.nullValue (  ) ; continue;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( value.isJsonArray (  )  )  {^107^^^^^87^130^[REPLACE] if  ( e.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REMOVE]^if  ( element.isJsonArray (  )  )  {     writer.beginArray (  ) ;     for  ( JsonElement e : element.getAsJsonArray (  )  )  {         if  ( e.isJsonNull (  )  )  {             writer.nullValue (  ) ;             continue;         }         write ( e, serializeNulls, writer ) ;     }     writer.endArray (  ) ; }else     if  ( element.isJsonObject (  )  )  {         writer.beginObject (  ) ;         for  ( String, JsonElement> e : element.getAsJsonObject (  ) .entrySet (  )  )  {             JsonElement value = e.getValue (  ) ;             if  (  ( !serializeNulls )  &&  ( value.isJsonNull (  )  )  )  {                 continue;             }             writer.name ( e.getKey (  )  ) ;             write ( value, serializeNulls, writer ) ;         }         writer.endObject (  ) ;     }else {         throw new IllegalArgumentException (  ( "Couldn't write " +  ( element.getClass (  )  )  )  ) ;     }^115^^^^^87^130^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( true ) {^119^^^^^87^130^[REPLACE] if  ( !serializeNulls && value.isJsonNull (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = e.getKey (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^if  ( primitive.getAsNumber (  )  )  {^95^^^^^87^130^[REPLACE] if  ( primitive.isNumber (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive .isNumber (  )   ) ;^96^^^^^87^130^[REPLACE] writer.value ( primitive.getAsNumber (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^}  if  ( primitive.getAsBoolean (  )  )  {^97^^^^^87^130^[REPLACE] } else if  ( primitive.isBoolean (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^writer.value ( primitive .isBoolean (  )   ) ;^98^^^^^87^130^[REPLACE] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^98^^^^^87^130^[ADD] writer.value ( primitive.getAsBoolean (  )  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[ADD]^^108^^^^^87^130^[ADD] writer.nullValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^JsonElement value = false.getValue (  ) ;^118^^^^^87^130^[REPLACE] JsonElement value = e.getValue (  ) ;^[METHOD] write [TYPE] void [PARAMETER] JsonElement element boolean serializeNulls JsonWriter writer [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  Entry e  [TYPE]  boolean false  serializeNulls  true  [TYPE]  JsonPrimitive primitive  [TYPE]  JsonElement e  element  value  [TYPE]  Appendable appendable  [TYPE]  JsonWriter writer  [TYPE]  char[] chars 
[REPLACE]^return appendable instanceof Writer ?  ( ! Writer )  appendable : new AppendableWriter ( appendable ) ;^133^^^^^132^134^[REPLACE] return appendable instanceof Writer ?  ( Writer )  appendable : new AppendableWriter ( appendable ) ;^[METHOD] writerForAppendable [TYPE] Writer [PARAMETER] Appendable appendable [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^currentWrite.chars =  null;^149^^^^^148^151^[REPLACE] currentWrite.chars = chars;^[METHOD] write [TYPE] void [PARAMETER] char[] chars int offset int length [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int length  offset  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^appendable.append ( currentWrite, offset, offset + length + 2 ) ;^150^^^^^148^151^[REPLACE] appendable.append ( currentWrite, offset, offset + length ) ;^[METHOD] write [TYPE] void [PARAMETER] char[] chars int offset int length [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int length  offset  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^reader.endArray (  ) ;^154^^^^^153^155^[REPLACE] appendable.append (  ( char )  i ) ;^[METHOD] write [TYPE] void [PARAMETER] int i [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[ADD]^^154^^^^^153^155^[ADD] appendable.append (  ( char )  i ) ;^[METHOD] write [TYPE] void [PARAMETER] int i [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^return JsonNull.createJsonNull (  ) ;^166^^^^^165^167^[REPLACE] return chars.length;^[METHOD] length [TYPE] int [PARAMETER] [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^return object;^169^^^^^168^170^[REPLACE] return chars[i];^[METHOD] charAt [TYPE] char [PARAMETER] int i [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, start, end  ;^172^^^^^171^173^[REPLACE] return new String ( chars, start, end - start ) ;^[METHOD] subSequence [TYPE] CharSequence [PARAMETER] int start int end [CLASS] Streams AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int end  start  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^private  Appendable appendable;^141^^^^^^^[REPLACE] private final Appendable appendable;^[METHOD] subSequence [TYPE] CharSequence [PARAMETER] int start int end [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int end  start  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^private final CurrentWrite currentWrite  = null ;^142^^^^^^^[REPLACE] private final CurrentWrite currentWrite = new CurrentWrite (  ) ;^[METHOD] subSequence [TYPE] CharSequence [PARAMETER] int start int end [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int end  start  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^this.appendable =  null;^145^^^^^144^146^[REPLACE] this.appendable = appendable;^[METHOD] <init> [TYPE] Appendable) [PARAMETER] Appendable appendable [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^currentWrite.chars =  null;^149^^^^^148^151^[REPLACE] currentWrite.chars = chars;^[METHOD] write [TYPE] void [PARAMETER] char[] chars int offset int length [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int length  offset  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^appendable.append ( currentWrite, offset, offset + length (  )  ) ;^150^^^^^148^151^[REPLACE] appendable.append ( currentWrite, offset, offset + length ) ;^[METHOD] write [TYPE] void [PARAMETER] char[] chars int offset int length [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int length  offset  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REMOVE]^appendable.append (  ( char )  i ) ;^150^^^^^148^151^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] char[] chars int offset int length [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int length  offset  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^appendable.append ( currentWrite, offset, offset + length ) ;^154^^^^^153^155^[REPLACE] appendable.append (  ( char )  i ) ;^[METHOD] write [TYPE] void [PARAMETER] int i [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^return chars[i];^166^^^^^165^167^[REPLACE] return chars.length;^[METHOD] length [TYPE] int [PARAMETER] [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^return chars.length;^169^^^^^168^170^[REPLACE] return chars[i];^[METHOD] charAt [TYPE] char [PARAMETER] int i [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int i  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, start, end  |  start ) ;^172^^^^^171^173^[REPLACE] return new String ( chars, start, end - start ) ;^[METHOD] subSequence [TYPE] CharSequence [PARAMETER] int start int end [CLASS] AppendableWriter CurrentWrite   [TYPE]  CurrentWrite currentWrite  [TYPE]  boolean false  true  [TYPE]  int end  start  [TYPE]  Appendable appendable  [TYPE]  char[] chars 
[REPLACE]^return chars[i];^166^^^^^165^167^[REPLACE] return chars.length;^[METHOD] length [TYPE] int [PARAMETER] [CLASS] CurrentWrite   [TYPE]  char[] chars  [TYPE]  boolean false  true 
[REPLACE]^return chars.length;^169^^^^^168^170^[REPLACE] return chars[i];^[METHOD] charAt [TYPE] char [PARAMETER] int i [CLASS] CurrentWrite   [TYPE]  int i  [TYPE]  char[] chars  [TYPE]  boolean false  true 
[REPLACE]^return new String ( chars, start, end  &&  start ) ;^172^^^^^171^173^[REPLACE] return new String ( chars, start, end - start ) ;^[METHOD] subSequence [TYPE] CharSequence [PARAMETER] int start int end [CLASS] CurrentWrite   [TYPE]  int end  start  [TYPE]  char[] chars  [TYPE]  boolean false  true 
