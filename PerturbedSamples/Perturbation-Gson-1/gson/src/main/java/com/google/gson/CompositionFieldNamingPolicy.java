[REPLACE]^private  RecursiveFieldNamingPolicy[] fieldPolicies;^30^^^^^^^[REPLACE] private final RecursiveFieldNamingPolicy[] fieldPolicies;^ [CLASS] CompositionFieldNamingPolicy  
[REPLACE]^if  ( fieldNamingPolicies != null )  {^33^^^^^32^37^[REPLACE] if  ( fieldNamingPolicies == null )  {^[METHOD] <init> [TYPE] RecursiveFieldNamingPolicy[]) [PARAMETER]  fieldNamingPolicies [CLASS] CompositionFieldNamingPolicy   [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  boolean false  true 
[ADD]^^33^34^35^^^32^37^[ADD] if  ( fieldNamingPolicies == null )  { throw new NullPointerException  (" ")  ; }^[METHOD] <init> [TYPE] RecursiveFieldNamingPolicy[]) [PARAMETER]  fieldNamingPolicies [CLASS] CompositionFieldNamingPolicy   [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  boolean false  true 
[REPLACE]^return ;^34^^^^^32^37^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] RecursiveFieldNamingPolicy[]) [PARAMETER]  fieldNamingPolicies [CLASS] CompositionFieldNamingPolicy   [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  boolean false  true 
[ADD]^^34^^^^^32^37^[ADD] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] RecursiveFieldNamingPolicy[]) [PARAMETER]  fieldNamingPolicies [CLASS] CompositionFieldNamingPolicy   [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  boolean false  true 
[REPLACE]^this.fieldPolicies =  fieldPolicies;^36^^^^^32^37^[REPLACE] this.fieldPolicies = fieldNamingPolicies;^[METHOD] <init> [TYPE] RecursiveFieldNamingPolicy[]) [PARAMETER]  fieldNamingPolicies [CLASS] CompositionFieldNamingPolicy   [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  boolean false  true 
[REPLACE]^target =  null.translateName ( target, fieldType, annotations ) ;^42^^^^^40^45^[REPLACE] target = policy.translateName ( target, fieldType, annotations ) ;^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] CompositionFieldNamingPolicy   [TYPE]  Collection annotations  [TYPE]  Type fieldType  [TYPE]  String target  [TYPE]  boolean false  true  [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  RecursiveFieldNamingPolicy policy 
[REPLACE]^for  ( RecursiveFieldNamingPolicy policy : fieldPolicies )  { target = policy.translateName ( target, fieldType, annotations ) ;^41^^^^^40^45^[REPLACE] for  ( RecursiveFieldNamingPolicy policy : fieldPolicies )  {^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] CompositionFieldNamingPolicy   [TYPE]  Collection annotations  [TYPE]  Type fieldType  [TYPE]  String target  [TYPE]  boolean false  true  [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  RecursiveFieldNamingPolicy policy 
[ADD]^^41^42^43^^^40^45^[ADD] for  ( RecursiveFieldNamingPolicy policy : fieldPolicies )  { target = policy.translateName ( target, fieldType, annotations ) ; }^[METHOD] translateName [TYPE] String [PARAMETER] String target Type fieldType Annotation> annotations [CLASS] CompositionFieldNamingPolicy   [TYPE]  Collection annotations  [TYPE]  Type fieldType  [TYPE]  String target  [TYPE]  boolean false  true  [TYPE]  RecursiveFieldNamingPolicy[] fieldNamingPolicies  fieldPolicies  [TYPE]  RecursiveFieldNamingPolicy policy 
