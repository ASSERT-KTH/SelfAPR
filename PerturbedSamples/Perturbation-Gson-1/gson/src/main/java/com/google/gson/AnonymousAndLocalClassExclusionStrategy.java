[REPLACE]^return !Enum.class.isAssignableFrom ( clazz ) &&  ( clazz.isAnonymousClass (  )  || clazz.isLocalClass (  )  ) ;^28^^^^^27^29^[REPLACE] return isAnonymousOrLocal ( f.getDeclaredClass (  )  ) ;^[METHOD] shouldSkipField [TYPE] boolean [PARAMETER] FieldAttributes f [CLASS] AnonymousAndLocalClassExclusionStrategy   [TYPE]  boolean false  true  [TYPE]  FieldAttributes f 
[REPLACE]^return isAnonymousOrLocal ( null ) ;^32^^^^^31^33^[REPLACE] return isAnonymousOrLocal ( clazz ) ;^[METHOD] shouldSkipClass [TYPE] boolean [PARAMETER] Class<?> clazz [CLASS] AnonymousAndLocalClassExclusionStrategy   [TYPE]  boolean false  true  [TYPE]  Class clazz 
[REPLACE]^return !Enum.class.isAssignableFrom ( null ) &&  ( clazz .isLocalClass (  )   || clazz.isLocalClass (  )  ) ;^36^37^^^^35^38^[REPLACE] return !Enum.class.isAssignableFrom ( clazz ) &&  ( clazz.isAnonymousClass (  )  || clazz.isLocalClass (  )  ) ;^[METHOD] isAnonymousOrLocal [TYPE] boolean [PARAMETER] Class<?> clazz [CLASS] AnonymousAndLocalClassExclusionStrategy   [TYPE]  boolean false  true  [TYPE]  Class clazz 
