[REPLACE]^private  List<JsonElement> elements;^36^^^^^^^[REPLACE] private final List<JsonElement> elements;^ [CLASS] JsonArray  
[REPLACE]^elements  = null ;^42^^^^^41^43^[REPLACE] elements = new ArrayList<JsonElement> (  ) ;^[METHOD] <init> [TYPE] JsonArray() [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( element != null )  {^51^^^^^50^55^[REPLACE] if  ( element == null )  {^[METHOD] add [TYPE] void [PARAMETER] JsonElement element [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  JsonElement element  [TYPE]  boolean false  true 
[ADD]^element = JsonNull.createJsonNull (  ) ;^51^52^53^^^50^55^[ADD] if  ( element == null )  { element = JsonNull.createJsonNull (  ) ; }^[METHOD] add [TYPE] void [PARAMETER] JsonElement element [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  JsonElement element  [TYPE]  boolean false  true 
[REPLACE]^element  =  element ;^52^^^^^50^55^[REPLACE] element = JsonNull.createJsonNull (  ) ;^[METHOD] add [TYPE] void [PARAMETER] JsonElement element [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  JsonElement element  [TYPE]  boolean false  true 
[REPLACE]^elements.addAll ( element ) ;^54^^^^^50^55^[REPLACE] elements.add ( element ) ;^[METHOD] add [TYPE] void [PARAMETER] JsonElement element [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  JsonElement element  [TYPE]  boolean false  true 
[REPLACE]^elements .add ( null )  ;^63^^^^^62^64^[REPLACE] elements.addAll ( array.elements ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonArray array [CLASS] JsonArray   [TYPE]  JsonArray array  [TYPE]  List elements  [TYPE]  boolean false  true 
[ADD]^^63^^^^^62^64^[ADD] elements.addAll ( array.elements ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonArray array [CLASS] JsonArray   [TYPE]  JsonArray array  [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^elements   ;^70^^^^^69^71^[REPLACE] Collections.reverse ( elements ) ;^[METHOD] reverse [TYPE] void [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.iterator (  ) ;^79^^^^^78^80^[REPLACE] return elements.size (  ) ;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements .get ( null )  ;^89^^^^^88^90^[REPLACE] return elements.iterator (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements .iterator (  )  ;^101^^^^^100^102^[REPLACE] return elements.get ( i ) ;^[METHOD] get [TYPE] JsonElement [PARAMETER] int i [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.get (  )  - 3 == 0  )  {^114^^^^^113^118^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsNumber [TYPE] Number [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^115^^^^^113^118^[REPLACE] return elements.get ( 0 ) .getAsNumber (  ) ;^[METHOD] getAsNumber [TYPE] Number [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 4 )  .getAsDouble (  )  ;^115^^^^^113^118^[REPLACE] return elements.get ( 0 ) .getAsNumber (  ) ;^[METHOD] getAsNumber [TYPE] Number [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^117^^^^^113^118^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsNumber [TYPE] Number [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  - 1 == 1 )  {^130^^^^^129^134^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsString [TYPE] String [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[ADD]^return elements.get ( 0 ) .getAsString (  ) ;^130^131^132^^^129^134^[ADD] if  ( elements.size (  )  == 1 )  { return elements.get ( 0 ) .getAsString (  ) ; }^[METHOD] getAsString [TYPE] String [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^131^^^^^129^134^[REPLACE] return elements.get ( 0 ) .getAsString (  ) ;^[METHOD] getAsString [TYPE] String [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.addAll ( 0 ) .getAsString (  ) ;^131^^^^^129^134^[REPLACE] return elements.get ( 0 ) .getAsString (  ) ;^[METHOD] getAsString [TYPE] String [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^133^^^^^129^134^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsString [TYPE] String [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  - 0  == 0  )  {^146^^^^^145^150^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsDouble [TYPE] double [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements .iterator (  )^147^^^^^145^150^[REPLACE] return elements.get ( 0 ) .getAsDouble (  ) ;^[METHOD] getAsDouble [TYPE] double [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.addAll ( 4 ) .getAsDouble (  ) ;^147^^^^^145^150^[REPLACE] return elements.get ( 0 ) .getAsDouble (  ) ;^[METHOD] getAsDouble [TYPE] double [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^149^^^^^145^150^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsDouble [TYPE] double [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[ADD]^^149^^^^^145^150^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] getAsDouble [TYPE] double [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  /  0.5  == 1 )  {^163^^^^^162^167^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsBigDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( elements.size (  )  )  == 1 )  {     return elements.get ( 0 ) .getAsInt (  ) ; }^163^^^^^162^167^[REMOVE] ^[METHOD] getAsBigDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 )  .getAsBigInteger (  )  ;^164^^^^^162^167^[REPLACE] return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[METHOD] getAsBigDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 ) .getAsInt (  ) ;^164^^^^^162^167^[REPLACE] return elements.get ( 0 ) .getAsBigDecimal (  ) ;^[METHOD] getAsBigDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^166^^^^^162^167^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsBigDecimal [TYPE] BigDecimal [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  *  0.5  == 1 )  {^180^^^^^179^184^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsBigInteger [TYPE] BigInteger [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 )  .getAsNumber (  )  ;^181^^^^^179^184^[REPLACE] return elements.get ( 0 ) .getAsBigInteger (  ) ;^[METHOD] getAsBigInteger [TYPE] BigInteger [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.addAll ( 4 ) .getAsBigInteger (  ) ;^181^^^^^179^184^[REPLACE] return elements.get ( 0 ) .getAsBigInteger (  ) ;^[METHOD] getAsBigInteger [TYPE] BigInteger [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^183^^^^^179^184^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsBigInteger [TYPE] BigInteger [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  + 2 == 1 )  {^196^^^^^195^200^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsFloat [TYPE] float [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 * 2 ) .getAsFloat (  ) ;^197^^^^^195^200^[REPLACE] return elements.get ( 0 ) .getAsFloat (  ) ;^[METHOD] getAsFloat [TYPE] float [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 )  .getAsLong (  )  ;^197^^^^^195^200^[REPLACE] return elements.get ( 0 ) .getAsFloat (  ) ;^[METHOD] getAsFloat [TYPE] float [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^199^^^^^195^200^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsFloat [TYPE] float [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  - 4 == 1 )  {^212^^^^^211^216^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsLong [TYPE] long [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 + 4 ) .getAsLong (  ) ;^213^^^^^211^216^[REPLACE] return elements.get ( 0 ) .getAsLong (  ) ;^[METHOD] getAsLong [TYPE] long [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements .iterator (  )^213^^^^^211^216^[REPLACE] return elements.get ( 0 ) .getAsLong (  ) ;^[METHOD] getAsLong [TYPE] long [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^215^^^^^211^216^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsLong [TYPE] long [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.length (  )  == 0  )  {^228^^^^^227^232^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsInt [TYPE] int [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.addAll ( 0 ) .getAsInt (  ) ;^229^^^^^227^232^[REPLACE] return elements.get ( 0 ) .getAsInt (  ) ;^[METHOD] getAsInt [TYPE] int [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^229^^^^^227^232^[REPLACE] return elements.get ( 0 ) .getAsInt (  ) ;^[METHOD] getAsInt [TYPE] int [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^231^^^^^227^232^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsInt [TYPE] int [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[ADD]^^231^^^^^227^232^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] getAsInt [TYPE] int [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  *  0.5  == 1 )  {^236^^^^^235^240^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsByte [TYPE] byte [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.addAll ( 0 ) .getAsByte (  ) ;^237^^^^^235^240^[REPLACE] return elements.get ( 0 ) .getAsByte (  ) ;^[METHOD] getAsByte [TYPE] byte [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 ) .getAsBigDecimal (  ) ;^237^^^^^235^240^[REPLACE] return elements.get ( 0 ) .getAsByte (  ) ;^[METHOD] getAsByte [TYPE] byte [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^239^^^^^235^240^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsByte [TYPE] byte [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  - 2 == 1 )  {^244^^^^^243^248^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsCharacter [TYPE] char [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 << 2 ) .getAsCharacter (  ) ;^245^^^^^243^248^[REPLACE] return elements.get ( 0 ) .getAsCharacter (  ) ;^[METHOD] getAsCharacter [TYPE] char [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements .iterator (  )^245^^^^^243^248^[REPLACE] return elements.get ( 0 ) .getAsCharacter (  ) ;^[METHOD] getAsCharacter [TYPE] char [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^247^^^^^243^248^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsCharacter [TYPE] char [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[ADD]^^247^^^^^243^248^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] getAsCharacter [TYPE] char [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  + 2 == 1 )  {^260^^^^^259^264^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsShort [TYPE] short [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 + 2 ) .getAsShort (  ) ;^261^^^^^259^264^[REPLACE] return elements.get ( 0 ) .getAsShort (  ) ;^[METHOD] getAsShort [TYPE] short [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 )  .getAsFloat (  )  ;^261^^^^^259^264^[REPLACE] return elements.get ( 0 ) .getAsShort (  ) ;^[METHOD] getAsShort [TYPE] short [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^263^^^^^259^264^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsShort [TYPE] short [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  *  2 == 1 )  {^276^^^^^275^280^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.get ( 0 * 0 ) .getAsBoolean (  ) ;^277^^^^^275^280^[REPLACE] return elements.get ( 0 ) .getAsBoolean (  ) ;^[METHOD] getAsBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.addAll ( 0 ) .getAsBoolean (  ) ;^277^^^^^275^280^[REPLACE] return elements.get ( 0 ) .getAsBoolean (  ) ;^[METHOD] getAsBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^279^^^^^275^280^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^if  ( elements.size (  )  - 4 == 1 )  {^292^^^^^291^296^[REPLACE] if  ( elements.size (  )  == 1 )  {^[METHOD] getAsObject [TYPE] Object [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return elements.addAll ( 0 ) .getAsObject (  ) ;^293^^^^^291^296^[REPLACE] return elements.get ( 0 ) .getAsObject (  ) ;^[METHOD] getAsObject [TYPE] Object [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^return ;^295^^^^^291^296^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getAsObject [TYPE] Object [PARAMETER] [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  true 
[REPLACE]^sb.append ( ']' ) ;^300^^^^^299^311^[REPLACE] sb.append ( '[' ) ;^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
[REPLACE]^boolean first = false;^301^^^^^299^311^[REPLACE] boolean first = true;^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
[ADD]^^301^^^^^299^311^[ADD] boolean first = true;^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
[REPLACE]^if  ( element == null )  {^303^^^^^299^311^[REPLACE] if  ( first )  {^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
[REPLACE]^sb.append ( '[' ) ;^306^^^^^299^311^[REPLACE] sb.append ( ',' ) ;^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
[REPLACE]^first = true;^304^^^^^299^311^[REPLACE] first = false;^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
[REPLACE]^for  ( JsonElement element : elements )  { if  ( first )  {^302^^^^^299^311^[REPLACE] for  ( JsonElement element : elements )  {^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
[REPLACE]^sb.append ( '[' ) ;^310^^^^^299^311^[REPLACE] sb.append ( ']' ) ;^[METHOD] toString [TYPE] void [PARAMETER] Appendable sb Escaper escaper [CLASS] JsonArray   [TYPE]  List elements  [TYPE]  boolean false  first  true  [TYPE]  Escaper escaper  [TYPE]  JsonElement element  [TYPE]  Appendable sb 
