[REPLACE]^FIRST first;^30^^^^^^^[REPLACE] final FIRST first;^ [CLASS] Pair  
[REPLACE]^this.first =  null;^34^^^^^33^36^[REPLACE] this.first = first;^[METHOD] <init> [TYPE] Pair(FIRST,SECOND) [PARAMETER] FIRST first SECOND second [CLASS] Pair   [TYPE]  FIRST first  [TYPE]  SECOND second  [TYPE]  boolean false  true 
[ADD]^^34^^^^^33^36^[ADD] this.first = first;^[METHOD] <init> [TYPE] Pair(FIRST,SECOND) [PARAMETER] FIRST first SECOND second [CLASS] Pair   [TYPE]  FIRST first  [TYPE]  SECOND second  [TYPE]  boolean false  true 
[REPLACE]^this.second =  null;^35^^^^^33^36^[REPLACE] this.second = second;^[METHOD] <init> [TYPE] Pair(FIRST,SECOND) [PARAMETER] FIRST first SECOND second [CLASS] Pair   [TYPE]  FIRST first  [TYPE]  SECOND second  [TYPE]  boolean false  true 
[REPLACE]^return false ;^40^41^^^^39^42^[REPLACE] return 17 *  (  ( first != null )  ? first.hashCode (  )  : 0 ) + 17 *  (  ( second != null )  ? second.hashCode (  )  : 0 ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Pair   [TYPE]  FIRST first  [TYPE]  SECOND second  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! ! ( o instanceof Pair<?, ?> )  )  {^46^^^^^45^52^[REPLACE] if  ( ! ( o instanceof Pair<?, ?> )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Pair   [TYPE]  SECOND second  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  FIRST first  [TYPE]  Pair that 
[REPLACE]^return true;^47^^^^^45^52^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Pair   [TYPE]  SECOND second  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  FIRST first  [TYPE]  Pair that 
[REPLACE]^return   equal ( this.second, that.second ) ;^51^^^^^45^52^[REPLACE] return equal ( this.first, that.first )  && equal ( this.second, that.second ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] Pair   [TYPE]  SECOND second  [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  FIRST first  [TYPE]  Pair that 
[REPLACE]^return true ;^55^^^^^54^56^[REPLACE] return a == b ||  ( a != null && a.equals ( b )  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object a Object b [CLASS] Pair   [TYPE]  SECOND second  [TYPE]  Object a  b  [TYPE]  boolean false  true  [TYPE]  FIRST first 
[REPLACE]^return equal ( this.first, that.first )  && equal ( this.second, that.second ) ;^60^^^^^59^61^[REPLACE] return String.format ( "{%s,%s}", first, second ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Pair   [TYPE]  FIRST first  [TYPE]  SECOND second  [TYPE]  boolean false  true 
