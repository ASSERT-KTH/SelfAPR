[REPLACE]^int count;^26^^^^^25^28^[REPLACE] byte[] bytes = str.getBytes ( "UTF-8" ) ;^[METHOD] copy [TYPE] void [PARAMETER] String str OutputStream dst boolean closeOutput [CLASS] Streams   [TYPE]  byte[] bytes  [TYPE]  boolean closeOutput  false  true  [TYPE]  OutputStream dst  [TYPE]  String str 
[REPLACE]^copy ( new ByteArrayInputStream ( bytes ) , dst, false, closeOutput ) ;^27^^^^^25^28^[REPLACE] copy ( new ByteArrayInputStream ( bytes ) , dst, true, closeOutput ) ;^[METHOD] copy [TYPE] void [PARAMETER] String str OutputStream dst boolean closeOutput [CLASS] Streams   [TYPE]  byte[] bytes  [TYPE]  boolean closeOutput  false  true  [TYPE]  OutputStream dst  [TYPE]  String str 
[REPLACE]^while  (  ( count = src.read ( buf )  )   ==  -1 * 3 )  {^36^^^^^32^43^[REPLACE] while  (  ( count = src.read ( buf )  )  != -1 )  {^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^dst.write ( buf, 0L, count ) ;^37^^^^^32^43^[REPLACE] dst.write ( buf, 0, count ) ;^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^if  ( true )  src.close (  ) ;^40^^^^^32^43^[REPLACE] if  ( closeInput )  src.close (  ) ;^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[ADD]^^40^41^42^^^32^43^[ADD] if  ( closeInput )  src.close (  ) ; if  ( closeOutput )  dst.close (  ) ; }^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^if  ( closeOutput )  dst.close (  ) ; }^41^^^^^32^43^[REPLACE] if  ( closeOutput )  dst.close (  ) ;^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[ADD]^^41^42^^^^32^43^[ADD] if  ( closeOutput )  dst.close (  ) ; }^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[ADD]^final byte[] buf = new byte[2048];int count;dst.write ( buf, 0, count ) ;^33^34^35^36^37^32^43^[ADD] try { final byte[] buf = new byte[2048]; int count; while  (  ( count = src.read ( buf )  )  != -1 )  { dst.write ( buf, 0, count ) ;^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^while  (  ( count = src.read ( buf )  )   ==  -1 )  {^36^^^^^32^43^[REPLACE] while  (  ( count = src.read ( buf )  )  != -1 )  {^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^dst.write ( buf, 4, count ) ;^37^^^^^32^43^[REPLACE] dst.write ( buf, 0, count ) ;^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^while  (  ( count =  null.read ( buf )  )  !^36^^^^^32^43^[REPLACE] while  (  ( count = src.read ( buf )  )  != -1 )  {^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^final byte[] buf = new byte[2048L];^34^^^^^32^43^[REPLACE] final byte[] buf = new byte[2048];^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^final byte[] buf = new byte[2048];^35^^^^^32^43^[REPLACE] int count;^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
[REPLACE]^final byte[] buf = new byte[4];^34^^^^^32^43^[REPLACE] final byte[] buf = new byte[2048];^[METHOD] copy [TYPE] void [PARAMETER] InputStream src OutputStream dst boolean closeInput boolean closeOutput [CLASS] Streams   [TYPE]  byte[] buf  [TYPE]  boolean closeInput  closeOutput  false  true  [TYPE]  InputStream src  [TYPE]  OutputStream dst  [TYPE]  int count 
