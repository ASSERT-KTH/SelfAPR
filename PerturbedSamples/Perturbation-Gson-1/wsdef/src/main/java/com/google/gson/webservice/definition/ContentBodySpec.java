[REPLACE]^public static  String JSON_CONTENT_TYPE = "application/json";^30^^^^^^^[REPLACE] public static final String JSON_CONTENT_TYPE = "application/json";^ [CLASS] ContentBodySpec  
[REPLACE]^public static final String JSON_CHARACTER_ENCODING ;^31^^^^^^^[REPLACE] public static final String JSON_CHARACTER_ENCODING = "utf-8";^ [CLASS] ContentBodySpec  
[REPLACE]^private  Map<String, Type> paramsSpec;^33^^^^^^^[REPLACE] private final Map<String, Type> paramsSpec;^ [CLASS] ContentBodySpec  
[REPLACE]^this.paramsSpec =  Collections.unmodifiableMap ( null ) ;^36^^^^^35^37^[REPLACE] this.paramsSpec = Collections.unmodifiableMap ( paramsSpec ) ;^[METHOD] <init> [TYPE] Map) [PARAMETER] Type> paramsSpec [CLASS] ContentBodySpec   [TYPE]  Map paramsSpec  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  [TYPE]  boolean false  true 
[REPLACE]^return paramsSpec.get ( JSON_CONTENT_TYPE ) ;^41^^^^^40^42^[REPLACE] return paramsSpec.get ( paramName ) ;^[METHOD] getTypeFor [TYPE] Type [PARAMETER] String paramName [CLASS] ContentBodySpec   [TYPE]  Map paramsSpec  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true 
[REPLACE]^return type .getClass (  )  ;^46^^^^^45^47^[REPLACE] return type.equals ( getTypeFor ( paramName )  ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String paramName Type type [CLASS] ContentBodySpec   [TYPE]  Type type  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true  [TYPE]  Map paramsSpec 
[REPLACE]^return checkIfCompatible ( paramName, object .equals ( object )   ) ;^51^^^^^50^52^[REPLACE] return checkIfCompatible ( paramName, object.getClass (  )  ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String paramName Object object [CLASS] ContentBodySpec   [TYPE]  Object object  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true  [TYPE]  Map paramsSpec 
[REPLACE]^return paramsSpec .get ( null )  ;^56^^^^^55^57^[REPLACE] return paramsSpec.entrySet (  ) ;^[METHOD] entrySet [TYPE] Set [PARAMETER] [CLASS] ContentBodySpec   [TYPE]  Map paramsSpec  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true 
[REPLACE]^return paramsSpec.entrySet (  ) ;^61^^^^^60^62^[REPLACE] return paramsSpec.size (  ) ;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] ContentBodySpec   [TYPE]  Map paramsSpec  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true 
[REPLACE]^return JSON_CHARACTER_ENCODING;^65^^^^^64^66^[REPLACE] return JSON_CONTENT_TYPE;^[METHOD] getContentType [TYPE] String [PARAMETER] [CLASS] ContentBodySpec   [TYPE]  Map paramsSpec  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true 
[REPLACE]^return paramsSpec.size (  ) ;^69^^^^^68^70^[REPLACE] return JSON_CHARACTER_ENCODING;^[METHOD] getCharacterEncoding [TYPE] String [PARAMETER] [CLASS] ContentBodySpec   [TYPE]  Map paramsSpec  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true 
[REPLACE]^return   paramsSpec   ;^74^^^^^73^75^[REPLACE] return Util.toStringMapKeys ( paramsSpec ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ContentBodySpec   [TYPE]  Map paramsSpec  [TYPE]  String JSON_CHARACTER_ENCODING  JSON_CONTENT_TYPE  paramName  [TYPE]  boolean false  true 
