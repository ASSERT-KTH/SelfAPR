[REPLACE]^private  Map<String, Type> map = new LinkedHashMap<String, Type> (  ) ;^31^^^^^^^[REPLACE] private final Map<String, Type> map = new LinkedHashMap<String, Type> (  ) ;^ [CLASS] HeaderMapSpec Builder  
[REPLACE]^this.map =  this;^44^^^^^43^45^[REPLACE] this.map = map;^[METHOD] <init> [TYPE] Map) [PARAMETER] Type> map [CLASS] HeaderMapSpec Builder   [TYPE]  Map map  [TYPE]  boolean false  true 
[REPLACE]^return checkIfCompatible ( headerName, headerValue.getClass (  )  ) ;^34^^^^^33^35^[REPLACE] map.put ( headerName, headerType ) ;^[METHOD] put [TYPE] void [PARAMETER] String headerName Type headerType [CLASS] HeaderMapSpec Builder   [TYPE]  Type headerType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^return map.size (  ) ;^38^^^^^37^39^[REPLACE] return new HeaderMapSpec ( map ) ;^[METHOD] build [TYPE] HeaderMapSpec [PARAMETER] [CLASS] HeaderMapSpec Builder   [TYPE]  Map map  [TYPE]  boolean false  true 
[REPLACE]^return map .put ( 0 , null )  ;^49^^^^^48^50^[REPLACE] return map.get ( headerName ) ;^[METHOD] getTypeFor [TYPE] Type [PARAMETER] String headerName [CLASS] HeaderMapSpec Builder   [TYPE]  Map map  [TYPE]  String headerName  [TYPE]  boolean false  true 
[REPLACE]^return map.size (  ) ;^54^^^^^53^55^[REPLACE] return map.entrySet (  ) ;^[METHOD] entrySet [TYPE] Set [PARAMETER] [CLASS] HeaderMapSpec Builder   [TYPE]  Map map  [TYPE]  boolean false  true 
[REPLACE]^Class<?> rawClassOfHeader = TypeUtils.toRawClass ( typeOfHeader ) ;^59^^^^^58^66^[REPLACE] Type typeOfHeader = getTypeFor ( headerName ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Type targetType [CLASS] HeaderMapSpec Builder   [TYPE]  Type targetType  typeOfHeader  [TYPE]  Class rawClassOfHeader  rawClassOfTargetType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[ADD]^^59^^^^^58^66^[ADD] Type typeOfHeader = getTypeFor ( headerName ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Type targetType [CLASS] HeaderMapSpec Builder   [TYPE]  Type targetType  typeOfHeader  [TYPE]  Class rawClassOfHeader  rawClassOfTargetType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^if  ( typeOfHeader != null )  {^60^^^^^58^66^[REPLACE] if  ( typeOfHeader == null )  {^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Type targetType [CLASS] HeaderMapSpec Builder   [TYPE]  Type targetType  typeOfHeader  [TYPE]  Class rawClassOfHeader  rawClassOfTargetType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^return true;^61^^^^^58^66^[REPLACE] return false;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Type targetType [CLASS] HeaderMapSpec Builder   [TYPE]  Type targetType  typeOfHeader  [TYPE]  Class rawClassOfHeader  rawClassOfTargetType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^Class<?> rawClassOfHeader = TypeUtils.toRawClass ( targetType ) ;^63^^^^^58^66^[REPLACE] Class<?> rawClassOfHeader = TypeUtils.toRawClass ( typeOfHeader ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Type targetType [CLASS] HeaderMapSpec Builder   [TYPE]  Type targetType  typeOfHeader  [TYPE]  Class rawClassOfHeader  rawClassOfTargetType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^Class<?> rawClassOfTargetType = TypeUtils.toRawClass ( typeOfHeader ) ;^64^^^^^58^66^[REPLACE] Class<?> rawClassOfTargetType = TypeUtils.toRawClass ( targetType ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Type targetType [CLASS] HeaderMapSpec Builder   [TYPE]  Type targetType  typeOfHeader  [TYPE]  Class rawClassOfHeader  rawClassOfTargetType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^return rawClassOfHeader.isAssignableFrom ( null ) ;^65^^^^^58^66^[REPLACE] return rawClassOfHeader.isAssignableFrom ( rawClassOfTargetType ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Type targetType [CLASS] HeaderMapSpec Builder   [TYPE]  Type targetType  typeOfHeader  [TYPE]  Class rawClassOfHeader  rawClassOfTargetType  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^return new HeaderMapSpec ( map ) ;^70^^^^^69^71^[REPLACE] return checkIfCompatible ( headerName, headerValue.getClass (  )  ) ;^[METHOD] checkIfCompatible [TYPE] boolean [PARAMETER] String headerName Object headerValue [CLASS] HeaderMapSpec Builder   [TYPE]  Object headerValue  [TYPE]  String headerName  [TYPE]  boolean false  true  [TYPE]  Map map 
[REPLACE]^return   map   ;^75^^^^^74^76^[REPLACE] return Util.toStringMapKeys ( map ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] HeaderMapSpec Builder   [TYPE]  Map map  [TYPE]  boolean false  true 
[REPLACE]^return map .entrySet (  )  ;^80^^^^^79^81^[REPLACE] return map.size (  ) ;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] HeaderMapSpec Builder   [TYPE]  Map map  [TYPE]  boolean false  true 
[REPLACE]^private final Map<String, Type> map  = null ;^31^^^^^^^[REPLACE] private final Map<String, Type> map = new LinkedHashMap<String, Type> (  ) ;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] Builder   [TYPE]  Map map  [TYPE]  boolean false  true 
