[REPLACE]^private Object dataSource;^64^^^^^^^[REPLACE] private DataSource dataSource;^ [CLASS] DataManager  
[REPLACE]^String jndiName = config.getInteger ( "database.jndi" ) ;^79^^^^^77^117^[REPLACE] String jndiName = config.getString ( "database.jndi" ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( driverFile == null )  {^81^^^^^77^117^[REPLACE] if  ( jndiName != null )  {^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[ADD]^^81^82^83^^^77^117^[ADD] if  ( jndiName != null )  {  dataSource =  ( DataSource )  new InitialContext (  ) .lookup ( jndiName ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( maxPoolSize != 0  || ( driverFile == null )  {^88^^^^^81^116^[REPLACE] if  ( driverFile != null )  {^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^Method method = URLClassLoader.class .forName ( driver )  ;^90^^^^^81^116^[REPLACE] Method method = URLClassLoader.class.getDeclaredMethod ( "addURL", URL.class ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( driver == null )  {^96^^^^^81^116^[REPLACE] if  ( driver != null )  {^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^Class.forName ( jndiName ) ;^97^^^^^81^116^[REPLACE] Class.forName ( driver ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REMOVE]^( currentTimeMillis (  )  )  ;^97^^^^^81^116^[REMOVE] ^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( maxPoolSize  ==  0 )  {^110^^^^^81^116^[REPLACE] if  ( maxPoolSize != 0 )  {^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[ADD]^^110^111^112^^^81^116^[ADD] if  ( maxPoolSize != 0 )  { hikariConfig.setMaximumPoolSize ( maxPoolSize ) ; }^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^hikariConfig.setIdleTimeout ( maxPoolSize ) ;^111^^^^^81^116^[REPLACE] hikariConfig.setMaximumPoolSize ( maxPoolSize ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[ADD]^^111^^^^^81^116^[ADD] hikariConfig.setMaximumPoolSize ( maxPoolSize ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^dataSource =  new HikariDataSource ( null ) ;^114^^^^^81^116^[REPLACE] dataSource = new HikariDataSource ( hikariConfig ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^String driver = config.getString ( "database.driver" )  ;^87^^^^^81^116^[REPLACE] String driverFile = config.getString ( "database.driverFile" ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^Method method = URLClassLoader.class .forName ( jndiName )  ;^90^^^^^81^116^[REPLACE] Method method = URLClassLoader.class.getDeclaredMethod ( "addURL", URL.class ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^String driverFile = config.getString ( "database.driverFile" )  ;^95^^^^^81^116^[REPLACE] String driver = config.getString ( "database.driver" ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[ADD]^^100^^^^^81^116^[ADD] HikariConfig hikariConfig = new HikariConfig (  ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^int maxPoolSize = config .getString ( jndiName )  ;^108^^^^^81^116^[REPLACE] int maxPoolSize = config.getInteger ( "database.maxPoolSize" ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[ADD]^^83^^^^^77^117^[ADD] dataSource =  ( DataSource )  new InitialContext (  ) .lookup ( jndiName ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( driverFile == null  || maxPoolSize != 0  )  {^88^^^^^77^117^[REPLACE] if  ( driverFile != null )  {^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^Method method = URLClassLoader.class .forName ( driver )  ;^90^^^^^77^117^[REPLACE] Method method = URLClassLoader.class.getDeclaredMethod ( "addURL", URL.class ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( driver ==jndiName )  {^96^^^^^77^117^[REPLACE] if  ( driver != null )  {^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^Class.forName ( jndiName ) ;^97^^^^^77^117^[REPLACE] Class.forName ( driver ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( maxPoolSize  ==  0 )  {^110^^^^^77^117^[REPLACE] if  ( maxPoolSize != 0 )  {^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^hikariConfig.setIdleTimeout ( maxPoolSize ) ;^111^^^^^77^117^[REPLACE] hikariConfig.setMaximumPoolSize ( maxPoolSize ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[ADD]^^114^^^^^77^117^[ADD] dataSource = new HikariDataSource ( hikariConfig ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^String driver = config.getString ( "database.driver" )  ;^87^^^^^77^117^[REPLACE] String driverFile = config.getString ( "database.driverFile" ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^Method method = URLClassLoader.class .forName ( jndiName )  ;^90^^^^^77^117^[REPLACE] Method method = URLClassLoader.class.getDeclaredMethod ( "addURL", URL.class ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^String driver = config.getInteger ( "database.driver" ) ;^95^^^^^77^117^[REPLACE] String driver = config.getString ( "database.driver" ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^int maxPoolSize = config.getString ( "database.maxPoolSize" ) ;^108^^^^^77^117^[REPLACE] int maxPoolSize = config.getInteger ( "database.maxPoolSize" ) ;^[METHOD] initDatabase [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  URLClassLoader classLoader  [TYPE]  String driver  driverFile  jndiName  [TYPE]  Method method  [TYPE]  HikariConfig hikariConfig  [TYPE]  int maxPoolSize  [TYPE]  DataSource dataSource 
[REPLACE]^if  ( config.getString ( "database.changelog" )  )  {^129^^^^^127^146^[REPLACE] if  ( config.hasKey ( "database.changelog" )  )  {^[METHOD] initDatabaseSchema [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  Database database  [TYPE]  Liquibase liquibase  [TYPE]  ResourceAccessor resourceAccessor  [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  DataSource dataSource 
[REPLACE]^Database database = DatabaseFactory.getInstance (  ) .setObject ( config.getString ( "database.url" ) , config.getString ( "database.user" ) , config.getString ( "database.password" ) ,^133^134^135^136^^127^146^[REPLACE] Database database = DatabaseFactory.getInstance (  ) .openDatabase ( config.getString ( "database.url" ) , config.getString ( "database.user" ) , config.getString ( "database.password" ) ,^[METHOD] initDatabaseSchema [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  Database database  [TYPE]  Liquibase liquibase  [TYPE]  ResourceAccessor resourceAccessor  [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  DataSource dataSource 
[ADD]^^139^140^^^^127^146^[ADD] Liquibase liquibase = new Liquibase ( config.getString ( "database.changelog" ) , resourceAccessor, database ) ;^[METHOD] initDatabaseSchema [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  Database database  [TYPE]  Liquibase liquibase  [TYPE]  ResourceAccessor resourceAccessor  [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  DataSource dataSource 
[ADD]^^131^^^^^127^146^[ADD] ResourceAccessor resourceAccessor = new FileSystemResourceAccessor (  ) ;^[METHOD] initDatabaseSchema [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  Database database  [TYPE]  Liquibase liquibase  [TYPE]  ResourceAccessor resourceAccessor  [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  DataSource dataSource 
[REPLACE]^Database database = DatabaseFactory.getInstance (  ) .openDatabase ( config .getString ( true , 0 )  , config^133^134^135^136^^127^146^[REPLACE] Database database = DatabaseFactory.getInstance (  ) .openDatabase ( config.getString ( "database.url" ) , config.getString ( "database.user" ) , config.getString ( "database.password" ) ,^[METHOD] initDatabaseSchema [TYPE] void [PARAMETER] [CLASS] DataManager   [TYPE]  Database database  [TYPE]  Liquibase liquibase  [TYPE]  ResourceAccessor resourceAccessor  [TYPE]  boolean false  true  [TYPE]  Config config  [TYPE]  DataSource dataSource 
