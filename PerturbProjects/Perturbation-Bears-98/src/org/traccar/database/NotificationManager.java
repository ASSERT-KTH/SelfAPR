[REPLACE]^private final Map<Long, Set<Notification>> userNotifications  = null ;^40^^^^^^^[REPLACE] private final Map<Long, Set<Notification>> userNotifications = new HashMap<> (  ) ;^ [CLASS] NotificationManager  
[REPLACE]^private final Object notificationsLock = new ReentrantObject (  ) ;^42^^^^^^^[REPLACE] private final ReadWriteLock notificationsLock = new ReentrantReadWriteLock (  ) ;^ [CLASS] NotificationManager  
[ADD]^dataManager.addEvent ( event ) ;Log.warning ( error ) ;^50^51^52^53^54^49^74^[ADD] try { dataManager.addEvent ( event ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^dataManager.addNotification ( event ) ;^51^^^^^49^74^[REPLACE] dataManager.addEvent ( event ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Set<Long> users = Context.getPermissionsManager (  ) .getDeviceUsers ( event.getGeofenceId (  )  ) ;^56^^^^^49^74^[REPLACE] Set<Long> users = Context.getPermissionsManager (  ) .getDeviceUsers ( event.getDeviceId (  )  ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  (  Context.getGeofenceManager (  )  != null && Context.getGeofenceManager (  ) .checkGeofence ( userId, event.getGeofenceId (  )  )  )  {^58^59^^^^49^74^[REPLACE] if  ( event.getGeofenceId (  )  == 0 || Context.getGeofenceManager (  )  != null && Context.getGeofenceManager (  ) .checkGeofence ( userId, event.getGeofenceId (  )  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^^58^59^60^61^^49^74^[ADD] if  ( event.getGeofenceId (  )  == 0 || Context.getGeofenceManager (  )  != null && Context.getGeofenceManager (  ) .checkGeofence ( userId, event.getGeofenceId (  )  )  )  { Notification notification = getUserNotificationByType ( userId, event.getType (  )  ) ; if  ( notification != null )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification == false )  {^61^^^^^58^69^[REPLACE] if  ( notification != null )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.setWeb (   )  || notification.getMail (  )  )  )  {^62^^^^^58^69^[REPLACE] if  ( notification.getWeb (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^Context.getConnectionManager (  ) .updateEvent ( userId, event ) ;^62^63^64^^^58^69^[ADD] if  ( notification.getWeb (  )  )  { Context.getConnectionManager (  ) .updateEvent ( userId, event ) ; }^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.getWeb (  )  || ( notification.getMail (  )  )  {^65^^^^^58^69^[REPLACE] if  ( notification.getMail (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Notification notification = getUserNotificationByType ( userId, event.getDeviceId (  )  ) ;^60^^^^^58^69^[REPLACE] Notification notification = getUserNotificationByType ( userId, event.getType (  )  ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification == false )  {^61^^^^^49^74^[REPLACE] if  ( notification != null )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.getWeb (   )  && notification.getMail (  )  )  )  {^62^^^^^49^74^[REPLACE] if  ( notification.getWeb (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Context.getConnectionManager (  )  .updateEvent ( event , position )  ;^63^^^^^49^74^[REPLACE] Context.getConnectionManager (  ) .updateEvent ( userId, event ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^getPermissionsManager (  )  ;^63^^^^^49^74^[REPLACE] Context.getConnectionManager (  ) .updateEvent ( userId, event ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.setMail (  )  )  {^65^^^^^49^74^[REPLACE] if  ( notification.getMail (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.setWeb (  )  )  {^62^^^^^49^74^[REPLACE] if  ( notification.getWeb (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^getConnectionManager (  )  ;^63^^^^^49^74^[REPLACE] Context.getConnectionManager (  ) .updateEvent ( userId, event ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^^57^58^59^60^^49^74^[ADD] for  ( long userId : users )  { if  ( event.getGeofenceId (  )  == 0 || Context.getGeofenceManager (  )  != null && Context.getGeofenceManager (  ) .checkGeofence ( userId, event.getGeofenceId (  )  )  )  { Notification notification = getUserNotificationByType ( userId, event.getType (  )  ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( event.getGeofenceId (  )  != 0 || Context.getGeofenceManager (  )  != null && Context.getGeofenceManager (  ) .checkGeofence ( userId, event.getGeofenceId (  )  )  )  {^58^59^^^^49^74^[REPLACE] if  ( event.getGeofenceId (  )  == 0 || Context.getGeofenceManager (  )  != null && Context.getGeofenceManager (  ) .checkGeofence ( userId, event.getGeofenceId (  )  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.getWeb (  )  || ( notification == this )  {^61^^^^^58^69^[REPLACE] if  ( notification != null )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.setWeb (  )  )  {^62^^^^^58^69^[REPLACE] if  ( notification.getWeb (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.setMail (  )  )  {^65^^^^^58^69^[REPLACE] if  ( notification.getMail (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Notification notification = getUserNotificationByType ( userId, event .getDeviceId (  )   ) ;^60^^^^^58^69^[REPLACE] Notification notification = getUserNotificationByType ( userId, event.getType (  )  ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification == true )  {^61^^^^^49^74^[REPLACE] if  ( notification != null )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^^61^62^63^64^^49^74^[ADD] if  ( notification != null )  { if  ( notification.getWeb (  )  )  { Context.getConnectionManager (  ) .updateEvent ( userId, event ) ; }^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.getWeb (   )  || notification.getMail (  )  )  )  {^62^^^^^49^74^[REPLACE] if  ( notification.getWeb (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Context .getPermissionsManager (  )  .updateEvent ( userId, event ) ;^63^^^^^49^74^[REPLACE] Context.getConnectionManager (  ) .updateEvent ( userId, event ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^^63^^^^^49^74^[ADD] Context.getConnectionManager (  ) .updateEvent ( userId, event ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.getMail (   )  && notification.getWeb (  )  )  )  {^65^^^^^49^74^[REPLACE] if  ( notification.getMail (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Context.getPermissionsManager (  ) .updateEvent ( userId, event ) ;^63^^^^^49^74^[REPLACE] Context.getConnectionManager (  ) .updateEvent ( userId, event ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( notification.getWeb (  )  && ( notification.getMail (  )  )  {^65^^^^^49^74^[REPLACE] if  ( notification.getMail (  )  )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^NotificationMail.sendMailAsync ( userId, event, position ) ;^65^66^67^^^49^74^[ADD] if  ( notification.getMail (  )  )  { NotificationMail.sendMailAsync ( userId, event, position ) ; }^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^^66^67^^^^49^74^[ADD] NotificationMail.sendMailAsync ( userId, event, position ) ; }^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Notification cachedNotification = getUserNotificationByType ( notification.getUserId (  ) , notification.getType (  )  )  ;^60^^^^^49^74^[REPLACE] Notification notification = getUserNotificationByType ( userId, event.getType (  )  ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( Context.getGeofenceManager (   )  && notification.getMail (  )  )  == true )  {^71^^^^^49^74^[REPLACE] if  ( Context.getEventForwarder (  )  != null )  {^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^Context.getGeofenceManager (  ) .forwardEvent ( event, position ) ;^72^^^^^49^74^[REPLACE] Context.getEventForwarder (  ) .forwardEvent ( event, position ) ;^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[ADD]^^72^73^^^^49^74^[ADD] Context.getEventForwarder (  ) .forwardEvent ( event, position ) ; }^[METHOD] updateEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] NotificationManager   [TYPE]  Set users  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Position position  [TYPE]  SQLException error  [TYPE]  Event event  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long userId  [TYPE]  Notification notification 
[REPLACE]^if  ( dataManager == null )  {^99^^^^^98^114^[REPLACE] if  ( dataManager != null )  {^[METHOD] refresh [TYPE] void [PARAMETER] [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification notification 
[ADD]^notificationsLock.writeLock (  ) .lock (  ) ;userNotifications.clear (  ) ;^100^101^102^103^104^102^107^[ADD] try { notificationsLock.writeLock (  ) .lock (  ) ; try { userNotifications.clear (  ) ; for  ( Notification notification : dataManager.getNotifications (  )  )  {^[METHOD] refresh [TYPE] void [PARAMETER] [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification notification 
[ADD]^userNotifications.clear (  ) ;getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ;^102^103^104^105^106^102^107^[ADD] try { userNotifications.clear (  ) ; for  ( Notification notification : dataManager.getNotifications (  )  )  { getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ; }^[METHOD] refresh [TYPE] void [PARAMETER] [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification notification 
[REPLACE]^for  ( Notification notification : dataManager .addNotification ( notification )   )  {^104^^^^^102^107^[REPLACE] for  ( Notification notification : dataManager.getNotifications (  )  )  {^[METHOD] refresh [TYPE] void [PARAMETER] [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification notification 
[REPLACE]^Notification cachedNotification = getUserNotificationByType ( cachedNotification.getUserId (  ) , notification.getType (  )  ) ;^131^^^^^130^178^[REPLACE] Notification cachedNotification = getUserNotificationByType ( notification.getUserId (  ) , notification.getType (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^if  (notification == null )  {^132^^^^^130^178^[REPLACE] if  ( cachedNotification != null )  {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^}  else {^165^^^^^130^178^[REPLACE] } else if  ( notification.getWeb (  )  || notification.getMail (  )  )  {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^dataManager.addNotification ( notification ) ;Log.warning ( error ) ;^166^167^168^169^170^130^178^[ADD] try { dataManager.addNotification ( notification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.addNotification ( cachedNotification ) ;^167^^^^^130^178^[REPLACE] dataManager.addNotification ( notification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^167^168^169^170^^130^178^[ADD] dataManager.addNotification ( notification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ;notificationsLock.writeLock (  ) .unlock (  ) ;^172^173^174^175^176^130^178^[ADD] try { getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( cachedNotification.getUserId (  )  ) .add ( notification ) ;^173^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^173^174^175^176^^130^178^[ADD] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( cachedNotification.getId (  )  ) .add ( notification ) ;^173^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( notification.getId (  )  ) .add ( notification ) ;^173^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^if  ( cachedNotification.getWeb (  )  != notification.getWeb (  ) && cachedNotification.getMail (  )  != notification.getMail (  )  )  {^133^134^^^^130^178^[REPLACE] if  ( cachedNotification.getWeb (  )  != notification.getWeb (  ) || cachedNotification.getMail (  )  != notification.getMail (  )  )  {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^133^134^135^136^137^130^178^[ADD] if  ( cachedNotification.getWeb (  )  != notification.getWeb (  ) || cachedNotification.getMail (  )  != notification.getMail (  )  )  { if  ( !notification.getWeb (  )  && !notification.getMail (  )  )  { try { dataManager.removeNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^notification.setId ( cachedNotification .setId (  )   ) ;^163^^^^^133^164^[REPLACE] notification.setId ( cachedNotification.getId (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^notification.setId ( notification.getId (  )  ) ;^163^^^^^133^164^[REPLACE] notification.setId ( cachedNotification.getId (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^if  ( cachedNotification.getWeb (  )  && !notification.getMail (  )  )  {^135^^^^^133^164^[REPLACE] if  ( !notification.getWeb (  )  && !notification.getMail (  )  )  {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^cachedNotification.setWeb ( notification.getWeb (  )  ) ;cachedNotification.setMail ( notification.getMail (  )  ) ;cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^149^150^151^152^153^135^161^[ADD] try { cachedNotification.setWeb ( notification.getWeb (  )  ) ; cachedNotification.setMail ( notification.getMail (  )  ) ; cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setId ( notification.getWeb (  )  ) ;^150^^^^^135^161^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setWeb ( cachedNotification.setWeb (  )  ) ;^150^^^^^135^161^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification .getMail (  )  ;^151^^^^^135^161^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setMail ( notification.setMail (  )  ) ;^151^^^^^135^161^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setUserId ( notification.getAttributes (  )  ) ;^152^^^^^135^161^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setAttributes ( cachedNotification.getAttributes (  )  ) ;^152^^^^^135^161^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^dataManager.updateNotification ( cachedNotification ) ;Log.warning ( error ) ;^156^157^158^159^160^135^161^[ADD] try { dataManager.updateNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.updateNotification ( notification ) ;^157^^^^^135^161^[REPLACE] dataManager.updateNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^dataManager.removeNotification ( cachedNotification ) ;Log.warning ( error ) ;^136^137^138^139^140^133^164^[ADD] try { dataManager.removeNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.removeNotification ( notification ) ;^137^^^^^133^164^[REPLACE] dataManager.removeNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;notificationsLock.writeLock (  ) .unlock (  ) ;^142^143^144^145^146^133^164^[ADD] try { getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( notification.getId (  )  ) .remove ( cachedNotification ) ;^143^^^^^133^164^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( cachedNotification.getUserId (  )  ) .remove ( cachedNotification ) ;^143^^^^^133^164^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( cachedNotification .setUserId ( null )   ) .remove ( cachedNotification ) ;^143^^^^^133^164^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager .updateNotification ( notification )  ;^137^^^^^133^164^[REPLACE] dataManager.removeNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^143^144^145^146^^133^164^[ADD] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^cachedNotification.setWeb ( notification.getWeb (  )  ) ;cachedNotification.setMail ( notification.getMail (  )  ) ;cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^149^150^151^152^153^133^164^[ADD] try { cachedNotification.setWeb ( notification.getWeb (  )  ) ; cachedNotification.setMail ( notification.getMail (  )  ) ; cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setId ( notification.getWeb (  )  ) ;^150^^^^^133^164^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^150^151^152^153^154^133^164^[ADD] cachedNotification.setWeb ( notification.getWeb (  )  ) ; cachedNotification.setMail ( notification.getMail (  )  ) ; cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setWeb ( cachedNotification.getWeb (  )  ) ;^150^^^^^133^164^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^cachedNotification.setMail ( notification.getMail (  )  ) ;cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;notificationsLock.writeLock (  ) .unlock (  ) ;^150^151^152^153^154^133^164^[ADD] cachedNotification.setWeb ( notification.getWeb (  )  ) ; cachedNotification.setMail ( notification.getMail (  )  ) ; cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setId ( notification.getMail (  )  ) ;^151^^^^^133^164^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;notificationsLock.writeLock (  ) .unlock (  ) ;^151^152^153^154^155^133^164^[ADD] cachedNotification.setMail ( notification.getMail (  )  ) ; cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setMail ( notification .setMail (  )   ) ;^151^^^^^133^164^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setUserId ( notification.getAttributes (  )  ) ;^152^^^^^133^164^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setAttributes ( cachedNotification.getAttributes (  )  ) ;^152^^^^^133^164^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^dataManager.updateNotification ( cachedNotification ) ;Log.warning ( error ) ;^156^157^158^159^160^133^164^[ADD] try { dataManager.updateNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.updateNotification ( notification ) ;^157^^^^^133^164^[REPLACE] dataManager.updateNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^157^158^159^160^^133^164^[ADD] dataManager.updateNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^138^139^^^^133^164^[ADD] catch  ( SQLException error )  { Log.warning ( error ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^if  ( notification.getWeb (  )  && !notification.getMail (  )  )  {^135^^^^^130^178^[REPLACE] if  ( !notification.getWeb (  )  && !notification.getMail (  )  )  {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setWeb ( notification.setWeb (  )  ) ;^150^^^^^135^161^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setId ( notification.getMail (  )  ) ;^151^^^^^135^161^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setMail ( cachedNotification.getMail (  )  ) ;^151^^^^^135^161^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setAttributes ( notification.setAttributes (  )  ) ;^152^^^^^135^161^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^158^159^^^^135^161^[ADD] catch  ( SQLException error )  { Log.warning ( error ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^dataManager.removeNotification ( cachedNotification ) ;Log.warning ( error ) ;^136^137^138^139^140^130^178^[ADD] try { dataManager.removeNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.updateNotification ( notification ) ;^137^^^^^130^178^[REPLACE] dataManager.removeNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;notificationsLock.writeLock (  ) .unlock (  ) ;^142^143^144^145^146^130^178^[ADD] try { getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( notification.getId (  )  ) .remove ( cachedNotification ) ;^143^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( cachedNotification.getUserId (  )  ) .remove ( cachedNotification ) ;^143^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.removeNotification ( notification ) ;^137^^^^^130^178^[REPLACE] dataManager.removeNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( cachedNotification ) ;^143^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^143^144^145^146^^130^178^[ADD] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^cachedNotification.setWeb ( notification.getWeb (  )  ) ;cachedNotification.setMail ( notification.getMail (  )  ) ;cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^149^150^151^152^153^130^178^[ADD] try { cachedNotification.setWeb ( notification.getWeb (  )  ) ; cachedNotification.setMail ( notification.getMail (  )  ) ; cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setId ( notification.getWeb (  )  ) ;^150^^^^^130^178^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setWeb ( cachedNotification.getWeb (  )  ) ;^150^^^^^130^178^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setId ( notification.getMail (  )  ) ;^151^^^^^130^178^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setMail ( cachedNotification.getMail (  )  ) ;^151^^^^^130^178^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification .getAttributes (  )  ;^152^^^^^130^178^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setAttributes ( notification.setAttributes (  )  ) ;^152^^^^^130^178^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^dataManager.updateNotification ( cachedNotification ) ;Log.warning ( error ) ;^156^157^158^159^160^130^178^[ADD] try { dataManager.updateNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.updateNotification ( notification ) ;^157^^^^^130^178^[REPLACE] dataManager.updateNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^157^158^159^160^^130^178^[ADD] dataManager.updateNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^138^139^^^^130^178^[ADD] catch  ( SQLException error )  { Log.warning ( error ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^notification .getId (  )  ;^163^^^^^133^164^[REPLACE] notification.setId ( cachedNotification.getId (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^if  ( notification.getWeb (  )  && !notification.getMail (  )  )  {^135^^^^^133^164^[REPLACE] if  ( !notification.getWeb (  )  && !notification.getMail (  )  )  {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setWeb ( cachedNotification.getWeb (  )  ) ;^150^^^^^135^161^[REPLACE] cachedNotification.setWeb ( notification.getWeb (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^152^153^154^155^^135^161^[ADD] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.updateNotification ( notification ) ;^137^^^^^133^164^[REPLACE] dataManager.removeNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( cachedNotification ) ;^143^^^^^133^164^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( notification.getUserId (  )  )  .forwardEvent ( null , null )  ;^143^^^^^133^164^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setMail ( cachedNotification.getMail (  )  ) ;^151^^^^^133^164^[REPLACE] cachedNotification.setMail ( notification.getMail (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^152^153^154^155^^133^164^[ADD] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ; } finally { notificationsLock.writeLock (  ) .unlock (  ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager .getAllNotifications (  )  ;^157^^^^^133^164^[REPLACE] dataManager.updateNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^if  (  !notification.getMail (  )  )  {^135^^^^^130^178^[REPLACE] if  ( !notification.getWeb (  )  && !notification.getMail (  )  )  {^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^135^136^137^138^139^130^178^[ADD] if  ( !notification.getWeb (  )  && !notification.getMail (  )  )  { try { dataManager.removeNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setAttributes ( cachedNotification.setAttributes (  )  ) ;^152^^^^^135^161^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^}   dataManager.addNotification ( notification ) ;Log.warning ( error ) ;^165^166^167^168^169^130^178^[ADD] else if  ( notification.getWeb (  )  || notification.getMail (  )  )  { try { dataManager.addNotification ( notification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( notification .setUserId ( null )   ) .add ( notification ) ;^173^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .add ( notification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^^137^138^139^140^^130^178^[ADD] dataManager.removeNotification ( cachedNotification ) ; } catch  ( SQLException error )  { Log.warning ( error ) ; }^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^getUserNotificationsUnsafe ( cachedNotification.getId (  )  ) .remove ( cachedNotification ) ;^143^^^^^130^178^[REPLACE] getUserNotificationsUnsafe ( notification.getUserId (  )  ) .remove ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setAttributes ( notification .setAttributes (  )   ) ;^152^^^^^130^178^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^cachedNotification.setAttributes ( cachedNotification.getAttributes (  )  ) ;^152^^^^^130^178^[REPLACE] cachedNotification.setAttributes ( notification.getAttributes (  )  ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[REPLACE]^dataManager.removeNotification ( notification ) ;^157^^^^^130^178^[REPLACE] dataManager.updateNotification ( cachedNotification ) ;^[METHOD] updateNotification [TYPE] void [PARAMETER] Notification notification [CLASS] NotificationManager   [TYPE]  DataManager dataManager  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  Map userNotifications  [TYPE]  SQLException error  [TYPE]  Notification cachedNotification  notification 
[ADD]^long id = 1;Field[] fields = Event.class.getDeclaredFields (  ) ;^181^182^183^184^^180^197^[ADD] Set<Notification> notifications = new HashSet<> (  ) ; long id = 1; Field[] fields = Event.class.getDeclaredFields (  ) ; for  ( Field field : fields )  {^[METHOD] getAllNotifications [TYPE] Set [PARAMETER] [CLASS] NotificationManager   [TYPE]  Field field  [TYPE]  Set notifications  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long id  [TYPE]  Field[] fields  [TYPE]  Notification notification  [TYPE]  Exception error 
[REPLACE]^long id = 1 * 4;^182^^^^^180^197^[REPLACE] long id = 1;^[METHOD] getAllNotifications [TYPE] Set [PARAMETER] [CLASS] NotificationManager   [TYPE]  Field field  [TYPE]  Set notifications  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long id  [TYPE]  Field[] fields  [TYPE]  Notification notification  [TYPE]  Exception error 
[REPLACE]^if  ( Modifier.isStatic ( field.getModifiers (  )  )  || field.getName (  ) .startsWith ( "TYPE_" )  )  {^185^^^^^180^197^[REPLACE] if  ( Modifier.isStatic ( field.getModifiers (  )  )  && field.getName (  ) .startsWith ( "TYPE_" )  )  {^[METHOD] getAllNotifications [TYPE] Set [PARAMETER] [CLASS] NotificationManager   [TYPE]  Field field  [TYPE]  Set notifications  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long id  [TYPE]  Field[] fields  [TYPE]  Notification notification  [TYPE]  Exception error 
[ADD]^^185^186^187^188^189^180^197^[ADD] if  ( Modifier.isStatic ( field.getModifiers (  )  )  && field.getName (  ) .startsWith ( "TYPE_" )  )  { try { Notification notification = new Notification (  ) ; notification.setType ( field.get ( null ) .toString (  )  ) ; notification.setId ( id++ ) ;^[METHOD] getAllNotifications [TYPE] Set [PARAMETER] [CLASS] NotificationManager   [TYPE]  Field field  [TYPE]  Set notifications  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long id  [TYPE]  Field[] fields  [TYPE]  Notification notification  [TYPE]  Exception error 
[ADD]^Notification notification = new Notification (  ) ;notification.setType ( field.get ( null ) .toString (  )  ) ;notification.setId ( id++ ) ;notifications.add ( notification ) ;^186^187^188^189^190^180^197^[ADD] try { Notification notification = new Notification (  ) ; notification.setType ( field.get ( null ) .toString (  )  ) ; notification.setId ( id++ ) ; notifications.add ( notification ) ;^[METHOD] getAllNotifications [TYPE] Set [PARAMETER] [CLASS] NotificationManager   [TYPE]  Field field  [TYPE]  Set notifications  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long id  [TYPE]  Field[] fields  [TYPE]  Notification notification  [TYPE]  Exception error 
[ADD]^^184^185^186^187^188^180^197^[ADD] for  ( Field field : fields )  { if  ( Modifier.isStatic ( field.getModifiers (  )  )  && field.getName (  ) .startsWith ( "TYPE_" )  )  { try { Notification notification = new Notification (  ) ; notification.setType ( field.get ( null ) .toString (  )  ) ;^[METHOD] getAllNotifications [TYPE] Set [PARAMETER] [CLASS] NotificationManager   [TYPE]  Field field  [TYPE]  Set notifications  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long id  [TYPE]  Field[] fields  [TYPE]  Notification notification  [TYPE]  Exception error 
[REPLACE]^return true;^196^^^^^180^197^[REPLACE] return notifications;^[METHOD] getAllNotifications [TYPE] Set [PARAMETER] [CLASS] NotificationManager   [TYPE]  Field field  [TYPE]  Set notifications  [TYPE]  boolean false  true  [TYPE]  ReadWriteLock notificationsLock  [TYPE]  DataManager dataManager  [TYPE]  Map userNotifications  [TYPE]  long id  [TYPE]  Field[] fields  [TYPE]  Notification notification  [TYPE]  Exception error 
