[REPLACE]^private  char  header;^34^^^^^^^[REPLACE] private String header;^ [CLASS] EventForwarder  
[REPLACE]^private static final String USER_AGENT ;^41^^^^^^^[REPLACE] private static final String USER_AGENT = "Traccar Server";^ [CLASS] EventForwarder  
[REPLACE]^private static final String KEY_POSITION  = null ;^43^^^^^^^[REPLACE] private static final String KEY_POSITION = "position";^ [CLASS] EventForwarder  
[REPLACE]^private static final  int  KEY_EVENT = "event";^44^^^^^^^[REPLACE] private static final String KEY_EVENT = "event";^ [CLASS] EventForwarder  
[REPLACE]^private static final  long  KEY_GEOFENCE = "geofence";^45^^^^^^^[REPLACE] private static final String KEY_GEOFENCE = "geofence";^ [CLASS] EventForwarder  
[REPLACE]^private static final String KEY_DEVICE  = null ;^46^^^^^^^[REPLACE] private static final String KEY_DEVICE = "device";^ [CLASS] EventForwarder  
[REPLACE]^BoundRequestBuilder requestBuilder = Context.getAsyncHttpClient (  ) .writeValueAsString ( url ) ;^50^^^^^48^66^[REPLACE] BoundRequestBuilder requestBuilder = Context.getAsyncHttpClient (  ) .preparePost ( url ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder .setBody (  )  ;^52^^^^^48^66^[REPLACE] requestBuilder.addHeader ( "Content-Type", "application/x-www-form-urlencoded; charset=utf-8" ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder .setBody (  )  ;^53^^^^^48^66^[REPLACE] requestBuilder.addHeader ( "User-Agent", USER_AGENT ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^if  ( header.equals ( "" )  )  {^54^^^^^48^66^[REPLACE] if  ( !header.equals ( "" )  )  {^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^if  ( splitedLine.length %  0.5  == 2 )  {^58^^^^^48^66^[REPLACE] if  ( splitedLine.length == 2 )  {^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder.addHeader ( splitedLine[3].trim (  ) , splitedLine[1].trim (  )  ) ;^59^^^^^48^66^[REPLACE] requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REMOVE]^requestBuilder.addHeader ( "User-Agent", USER_AGENT )  ;^59^^^^^48^66^[REMOVE] ^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder.addHeader ( splitedLine[2].trim (  ) , splitedLine[1].trim (  )  ) ;^59^^^^^48^66^[REPLACE] requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^splitedLine[0].trim (  )  ;^59^^^^^48^66^[REPLACE] requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[ADD]^^59^^^^^48^66^[ADD] requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[ADD]^^56^57^58^59^60^54^62^[ADD] for  ( String headerLine: headerLines )  { String[] splitedLine = headerLine.split ( ":", 2 ) ; if  ( splitedLine.length == 2 )  { requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ; }^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^String[] headerLines = header .split ( headerLine , null )  ;^55^^^^^54^62^[REPLACE] String[] headerLines = header.split ( "\\r?\\n" ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^String[] splitedLine = header.split ( ":", 2 ) ;^57^^^^^54^62^[REPLACE] String[] splitedLine = headerLine.split ( ":", 2 ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^if  ( splitedLine.length *  0  == 0  )  {^58^^^^^48^66^[REPLACE] if  ( splitedLine.length == 2 )  {^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder.addHeader ( splitedLine[1] .split ( KEY_DEVICE )  , splitedLine[1]^59^^^^^48^66^[REPLACE] requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder.addHeader ( headerLines[3].trim (  ) , splitedLine[1].trim (  )  ) ;^59^^^^^48^66^[REPLACE] requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[4].trim (  )  ) ;^59^^^^^48^66^[REPLACE] requestBuilder.addHeader ( splitedLine[0].trim (  ) , splitedLine[1].trim (  )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^String[] splitedLine = headerLine.split ( ":", 2 )  ;^55^^^^^54^62^[REPLACE] String[] headerLines = header.split ( "\\r?\\n" ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[ADD]^^57^^^^^54^62^[ADD] String[] splitedLine = headerLine.split ( ":", 2 ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder .addHeader ( KEY_POSITION , url )  ;^64^^^^^48^66^[REPLACE] requestBuilder.setBody ( preparePayload ( event, position )  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[REPLACE]^requestBuilder.setBody (  ) ;^65^^^^^48^66^[REPLACE] requestBuilder.execute (  ) ;^[METHOD] forwardEvent [TYPE] void [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  Event event  [TYPE]  BoundRequestBuilder requestBuilder  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  String[] headerLines  splitedLine  [TYPE]  boolean false  true  [TYPE]  Position position 
[ADD]^^69^70^^^^68^92^[ADD] Map<String, Object> data = new HashMap<> (  ) ; data.put ( KEY_EVENT, event ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^data.put ( KEY_DEVICE, device )  ;^70^^^^^68^92^[REPLACE] data.put ( KEY_EVENT, event ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^if  ( position == null )  {^71^^^^^68^92^[REPLACE] if  ( position != null )  {^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^data.put ( KEY_EVENT, event )  ;^72^^^^^68^92^[REPLACE] data.put ( KEY_POSITION, position ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^if  ( event.getDeviceId (   )  ||  ( event.getGeofenceId (  )  )  != 0  )   ==  0 + 4 )  {^74^^^^^68^92^[REPLACE] if  ( event.getDeviceId (  )  != 0 )  {^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^if  ( device == this  )  {^76^^^^^68^92^[REPLACE] if  ( device != null )  {^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^data.put ( KEY_EVENT, event )  ;^77^^^^^68^92^[REPLACE] data.put ( KEY_DEVICE, device ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[ADD]^^75^^^^^68^92^[ADD] Device device = Context.getIdentityManager (  ) .getDeviceById ( event.getDeviceId (  )  ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^if  ( device == null )  {^76^^^^^68^92^[REPLACE] if  ( device != null )  {^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[ADD]^data.put ( KEY_DEVICE, device ) ;^76^77^78^^^68^92^[ADD] if  ( device != null )  { data.put ( KEY_DEVICE, device ) ; }^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^if  ( event.getGeofenceId (  )   ==  0 )  {^80^^^^^68^92^[REPLACE] if  ( event.getGeofenceId (  )  != 0 )  {^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^if  ( geofence == null )  {^82^^^^^68^92^[REPLACE] if  ( geofence != null )  {^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^data.put ( KEY_EVENT, event )  ;^83^^^^^68^92^[REPLACE] data.put ( KEY_GEOFENCE, geofence ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[ADD]^^81^^^^^68^92^[ADD] Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( event.getGeofenceId (  )  ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[ADD]^data.put ( KEY_GEOFENCE, geofence ) ;^82^83^84^^^68^92^[ADD] if  ( geofence != null )  { data.put ( KEY_GEOFENCE, geofence ) ; }^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[ADD]^return Context.getObjectMapper (  ) .writeValueAsString ( data ) .getBytes ( StandardCharsets.UTF_8 ) ;Log.warning ( e ) ;return null;^86^87^88^89^90^68^92^[ADD] try { return Context.getObjectMapper (  ) .writeValueAsString ( data ) .getBytes ( StandardCharsets.UTF_8 ) ; } catch  ( JsonProcessingException e )  { Log.warning ( e ) ; return null;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^return Context.getObjectMapper (  ) .writeValueAsString ( this ) .getBytes ( StandardCharsets.UTF_8 ) ;^87^^^^^68^92^[REPLACE] return Context.getObjectMapper (  ) .writeValueAsString ( data ) .getBytes ( StandardCharsets.UTF_8 ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^return Context.getObjectMapper (  ) .writeValueAsString ( null ) .getBytes ( StandardCharsets.UTF_8 ) ;^87^^^^^68^92^[REPLACE] return Context.getObjectMapper (  ) .writeValueAsString ( data ) .getBytes ( StandardCharsets.UTF_8 ) ;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
[REPLACE]^return false;^90^^^^^68^92^[REPLACE] return null;^[METHOD] preparePayload [TYPE] byte[] [PARAMETER] Event event Position position [CLASS] EventForwarder   [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  Device device  [TYPE]  Event event  [TYPE]  String KEY_DEVICE  KEY_EVENT  KEY_GEOFENCE  KEY_POSITION  USER_AGENT  header  headerLine  url  [TYPE]  Map data  [TYPE]  JsonProcessingException e  [TYPE]  Geofence geofence 
