[REPLACE]^DeviceReport> devicesEvents = new ArrayList<> (  )  ;^53^^^^^52^68^[REPLACE] ArrayList<Event> result = new ArrayList<> (  ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^if  ( all && types.contains ( event.getType (  )  )  )  {^59^^^^^52^68^[REPLACE] if  ( all || types.contains ( event.getType (  )  )  )  {^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^if  ( geofenceId == 0 && Context.getDeviceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^61^^^^^52^68^[REPLACE] if  ( geofenceId == 0 || Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REMOVE]^if  ( all ||  ( types.contains ( event.getType (  )  )  )  )  {     long geofenceId = event.getGeofenceId (  ) ;     if  (  ( geofenceId == 0 )  ||  ( getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  )  {         result.add ( event ) ;     } }^61^^^^^52^68^[REMOVE] ^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^long geofenceId = event .getType (  )  ;^60^^^^^52^68^[REPLACE] long geofenceId = event.getGeofenceId (  ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^if  (  Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^61^^^^^52^68^[REPLACE] if  ( geofenceId == 0 || Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^result .ArrayList (  )  ;^62^^^^^52^68^[REPLACE] result.add ( event ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^long geofenceId = event.getType (  ) ;^60^^^^^52^68^[REPLACE] long geofenceId = event.getGeofenceId (  ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^if  ( true ) {^61^^^^^52^68^[REPLACE] if  ( geofenceId == 0 || Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^for  ( Event event : false )  {^58^^^^^54^66^[REPLACE] for  ( Event event : events )  {^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^Collection<Event> events = Context.getDataManager (  ) .getEvents ( userId, from, to ) ;^56^^^^^54^66^[REPLACE] Collection<Event> events = Context.getDataManager (  ) .getEvents ( deviceId, from, to ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^boolean all = types.isEmpty (  )   <=  types.contains ( Event.ALL_EVENTS ) ;^57^^^^^54^66^[REPLACE] boolean all = types.isEmpty (  )  || types.contains ( Event.ALL_EVENTS ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^Event event = iterator.next (  )  ;^58^^^^^54^66^[REPLACE] for  ( Event event : events )  {^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^long geofenceId = event.getType (  ) ;^60^^^^^54^66^[REPLACE] long geofenceId = event.getGeofenceId (  ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[ADD]^^58^59^60^61^62^54^66^[ADD] for  ( Event event : events )  { if  ( all || types.contains ( event.getType (  )  )  )  { long geofenceId = event.getGeofenceId (  ) ; if  ( geofenceId == 0 || Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  { result.add ( event ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[ADD]^^54^55^56^57^^54^66^[ADD] for  ( long deviceId: ReportUtils.getDeviceList ( deviceIds, groupIds )  )  { Context.getPermissionsManager (  ) .checkDevice ( userId, deviceId ) ; Collection<Event> events = Context.getDataManager (  ) .getEvents ( deviceId, from, to ) ; boolean all = types.isEmpty (  )  || types.contains ( Event.ALL_EVENTS ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[ADD]^^56^57^^^^54^66^[ADD] Collection<Event> events = Context.getDataManager (  ) .getEvents ( deviceId, from, to ) ; boolean all = types.isEmpty (  )  || types.contains ( Event.ALL_EVENTS ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^boolean all = types.isEmpty (  )   >  types.contains ( Event.ALL_EVENTS ) ;^57^^^^^54^66^[REPLACE] boolean all = types.isEmpty (  )  || types.contains ( Event.ALL_EVENTS ) ;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^return null;^67^^^^^52^68^[REPLACE] return result;^[METHOD] getObjects [TYPE] Collection [PARAMETER] long userId Long> deviceIds Long> groupIds String> types Date from Date to [CLASS] Events   [TYPE]  boolean all  false  true  [TYPE]  ArrayList result  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  Date from  to 
[REPLACE]^Event> result = new ArrayList<> (  )  ;^73^^^^^72^134^[REPLACE] ArrayList<DeviceReport> devicesEvents = new ArrayList<> (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Event> result = new ArrayList<> (  )  ;^74^^^^^72^134^[REPLACE] ArrayList<String> sheetNames = new ArrayList<> (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^75^^^^^72^134^[ADD] HashMap<Long, String> geofenceNames = new HashMap<> (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( all ) {^82^^^^^72^134^[REPLACE] if  ( all || types.contains ( event.getType (  )  )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REMOVE]^if  ( geofenceId != 0 )  {     if  ( getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {         Geofence geofence = getGeofenceManager (  ) .getGeofence ( geofenceId ) ;         if  ( geofence != null )  {             geofenceNames.put ( geofenceId, geofence.getName (  )  ) ;         }     }else {         iterator.remove (  ) ;     } }^82^^^^^72^134^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^iterator.next (  ) ;^95^^^^^82^96^[REPLACE] iterator.remove (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REMOVE]^iterator.next (  )  ;^95^^^^^82^96^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  (userId  ==  0 )  {^84^^^^^72^134^[REPLACE] if  ( geofenceId != 0 )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( Context.getDeviceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^85^^^^^72^134^[REPLACE] if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^iterator.next (  ) ;^91^^^^^85^92^[REPLACE] iterator.remove (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( geofenceId != 0  && ( geofence == false )  {^87^^^^^72^134^[REPLACE] if  ( geofence != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REMOVE]^if  (  ( geofenceId == 0 )  ||  ( getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  )  {     result.add ( event ) ; }^87^^^^^72^134^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^geofenceNames.put ( userId, geofence.getName (  )  ) ;^88^^^^^72^134^[REPLACE] geofenceNames.put ( geofenceId, geofence.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^device.getName (  )  ;^88^^^^^72^134^[REPLACE] geofenceNames.put ( geofenceId, geofence.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^88^^^^^72^134^[ADD] geofenceNames.put ( geofenceId, geofence.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( userId ) ;^86^^^^^72^134^[REPLACE] Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( geofence == null )  {^87^^^^^72^134^[REPLACE] if  ( geofence != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;geofenceNames.put ( geofenceId, geofence.getName (  )  ) ;^85^86^87^88^89^72^134^[ADD] if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  { Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ; if  ( geofence != null )  { geofenceNames.put ( geofenceId, geofence.getName (  )  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REMOVE]^device.getName (  )  ;^88^^^^^72^134^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( geofence == this )  {^87^^^^^72^134^[REPLACE] if  ( geofence != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^long geofenceId = event.getType (  ) ;^83^^^^^72^134^[REPLACE] long geofenceId = event.getGeofenceId (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Device device = getIdentityManager (  ) .getDeviceById ( deviceId )  ;^86^^^^^72^134^[REPLACE] Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^iterator.next (  )  ;^91^^^^^85^92^[REPLACE] iterator.remove (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( geofenceId != 0  && ( geofence == null )  {^87^^^^^72^134^[REPLACE] if  ( geofence != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( geofence == null  && geofenceId != 0  )  {^87^^^^^72^134^[REPLACE] if  ( geofence != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, deviceId )  )  {^85^^^^^72^134^[REPLACE] if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^87^88^89^^^72^134^[ADD] if  ( geofence != null )  { geofenceNames.put ( geofenceId, geofence.getName (  )  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^86^^^^^72^134^[ADD] Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REMOVE]^deviceEvents.setDeviceName ( device.getName (  )  )  ;^88^^^^^72^134^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( device.getGroupId (  )   ==  0 )  {^102^^^^^72^134^[REPLACE] if  ( device.getGroupId (  )  != 0 )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;deviceEvents.setGroupName ( group.getName (  )  ) ;^102^103^104^105^106^72^134^[ADD] if  ( device.getGroupId (  )  != 0 )  { Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ; if  ( group != null )  { deviceEvents.setGroupName ( group.getName (  )  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( group == false  ||  ( device.getGroupId (  )  )  != 0  )  {^104^^^^^72^134^[REPLACE] if  ( group != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^deviceEvents.setGroupName ( group.getName (  )  ) ;^104^105^106^^^72^134^[ADD] if  ( group != null )  { deviceEvents.setGroupName ( group.getName (  )  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^deviceEvents.setDeviceName ( device.getName (  )  )  ;^105^^^^^72^134^[REPLACE] deviceEvents.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^geofence.getName (  )  ;^105^^^^^72^134^[REPLACE] deviceEvents.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Group group = Context.getDeviceManager (  ) .getGroupById ( device.getName (  )  ) ;^103^^^^^72^134^[REPLACE] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( group == this )  {^104^^^^^72^134^[REPLACE] if  ( group != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^deviceEvents .setDeviceName (  )  ;^105^^^^^72^134^[REPLACE] deviceEvents.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( all && types.contains ( event.getType (  )  )  )  {^82^^^^^72^134^[REPLACE] if  ( all || types.contains ( event.getType (  )  )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^long geofenceId = event.getGeofenceId (  ) ;Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;^82^83^84^85^86^72^134^[ADD] if  ( all || types.contains ( event.getType (  )  )  )  { long geofenceId = event.getGeofenceId (  ) ; if  ( geofenceId != 0 )  { if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  { Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^iterator.next (  )  ;^95^^^^^82^96^[REPLACE] iterator.remove (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  (  ( device.getGroupId (  )  )  != 0  || ( userId  ==  0 )  {^84^^^^^72^134^[REPLACE] if  ( geofenceId != 0 )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^84^85^86^87^88^72^134^[ADD] if  ( geofenceId != 0 )  { if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  { Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ; if  ( geofence != null )  { geofenceNames.put ( geofenceId, geofence.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^91^^^^^85^92^[ADD] iterator.remove (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^geofenceNames.put ( geofenceId, geofence.getName (  )  ) ;^87^88^89^^^72^134^[ADD] if  ( geofence != null )  { geofenceNames.put ( geofenceId, geofence.getName (  )  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( Context.getEventsManager (  ) .checkGeofence ( userId, geofenceId )  )  {^85^^^^^72^134^[REPLACE] if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Geofence geofence = Context.getDeviceManager (  ) .getGeofence ( userId ) ;^86^^^^^72^134^[REPLACE] Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^long geofenceId = event .getType (  )  ;^83^^^^^72^134^[REPLACE] long geofenceId = event.getGeofenceId (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  (  ( device.getGroupId (  )  )  != 0  && ( userId  ==  2 )  {^84^^^^^72^134^[REPLACE] if  ( geofenceId != 0 )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( Context .getDeviceManager (  )  .checkGeofence ( userId, userId )  )  {^85^^^^^72^134^[REPLACE] if  ( Context.getGeofenceManager (  ) .checkGeofence ( userId, geofenceId )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( geofence == false  || geofenceId != 0  )  {^87^^^^^72^134^[REPLACE] if  ( geofence != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Geofence geofence = Context.getEventsManager (  ) .getGeofence ( userId ) ;^86^^^^^72^134^[REPLACE] Geofence geofence = Context.getGeofenceManager (  ) .getGeofence ( geofenceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REMOVE]^iterator.next (  )  ;^91^^^^^85^92^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( device.getGroupId (  )   ==  4 )  {^102^^^^^72^134^[REPLACE] if  ( device.getGroupId (  )  != 0 )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  ( group == null )  {^104^^^^^72^134^[REPLACE] if  ( group != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^105^^^^^72^134^[ADD] deviceEvents.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Device device = getIdentityManager (  ) .getDeviceById ( deviceId )  ;^103^^^^^72^134^[REPLACE] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^if  (  ( device.getGroupId (  )  )  != 0  || ( group == this )  {^104^^^^^72^134^[REPLACE] if  ( group != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^deviceEvents.setObjects ( group.getName (  )  ) ;^105^^^^^72^134^[REPLACE] deviceEvents.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Collection<Event> events = Context.getDataManager (  ) .getEvents ( userId, from.toDate (  ) , to.toDate (  )  ) ;^78^^^^^72^134^[REPLACE] Collection<Event> events = Context.getDataManager (  ) .getEvents ( deviceId, from.toDate (  ) , to.toDate (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^79^^^^^72^134^[ADD] boolean all = types.isEmpty (  )  || types.contains ( Event.ALL_EVENTS ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^for  ( Iterator<Event>.isEmpty = null.iterator (  ) ; iterator.hasNext (  ) ; )  {^80^^^^^72^134^[REPLACE] for  ( Iterator<Event> iterator = events.iterator (  ) ; iterator.hasNext (  ) ; )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Event event = null.next (  ) ;^81^^^^^72^134^[REPLACE] Event event = iterator.next (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^83^^^^^72^134^[ADD] long geofenceId = event.getGeofenceId (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^98^^^^^72^134^[ADD] DeviceReport deviceEvents = new DeviceReport (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^99^100^^^^72^134^[ADD] Device device = Context.getIdentityManager (  ) .getDeviceById ( deviceId ) ; deviceEvents.setDeviceName ( device.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Group group = Context.getDeviceManager (  ) .getDeviceById ( device.getGroupId (  )  ) ;^103^^^^^72^134^[REPLACE] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Collection<Event> events = Context.getDataManager (  ) .getEvents ( deviceId, from .getZone (  )  , to^78^^^^^72^134^[REPLACE] Collection<Event> events = Context.getDataManager (  ) .getEvents ( deviceId, from.toDate (  ) , to.toDate (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^boolean all = types.isEmpty (  )   <=  types.contains ( Event.ALL_EVENTS ) ;^79^^^^^72^134^[REPLACE] boolean all = types.isEmpty (  )  || types.contains ( Event.ALL_EVENTS ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^for  ( Iterator<Event> iterator = null.iterator (  ) ; iterator.hasNext (  ) ; )  {^80^^^^^72^134^[REPLACE] for  ( Iterator<Event> iterator = events.iterator (  ) ; iterator.hasNext (  ) ; )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^Event event  ;^81^^^^^72^134^[REPLACE] Event event = iterator.next (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^99^^^^^72^134^[ADD] Device device = Context.getIdentityManager (  ) .getDeviceById ( deviceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^103^^^^^72^134^[ADD] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^String templatePath = Context.getDataManager (  ) .getString ( "report.templatesPath", "templates/export/" ) ;^111^112^^^^72^134^[REPLACE] String templatePath = Context.getConfig (  ) .getString ( "report.templatesPath", "templates/export/" ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^126^127^128^129^130^113^133^[ADD] for  ( Area xlsArea : xlsAreas )  { xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ; xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ; xlsArea.processFormulas (  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  )  .getSheetName (  )   ) , jxlsContext ) ;^127^^^^^113^133^[REPLACE] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^xlsAreas.get ( 0 ) .getStartCellRef (  ) .getSheetName (  )  ;^127^^^^^113^133^[REPLACE] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^xlsArea.applyAt ( new CellRef ( xlsArea.processFormulas (  ) .getCellName (  )  ) , jxlsContext ) ;^127^^^^^113^133^[REPLACE] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^xlsArea .getStartCellRef (  )  ;^128^^^^^113^133^[REPLACE] xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^xlsArea.getStartCellRef (  ) ;^129^^^^^113^133^[REPLACE] xlsArea.processFormulas (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REMOVE]^xlsArea.getStartCellRef (  )  ;^129^^^^^113^133^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^org.jxls.common.Context jxlsContext = PoiTransformer.createInitialContext (  ) ;jxlsContext.putVar ( "devices", devicesEvents ) ;jxlsContext.putVar ( "sheetNames", sheetNames ) ;jxlsContext.putVar ( "geofenceNames", geofenceNames ) ;^113^114^115^116^117^113^133^[ADD] try  ( InputStream inputStream = new FileInputStream ( templatePath + "/events.xlsx" )  )  { org.jxls.common.Context jxlsContext = PoiTransformer.createInitialContext (  ) ; jxlsContext.putVar ( "devices", devicesEvents ) ; jxlsContext.putVar ( "sheetNames", sheetNames ) ; jxlsContext.putVar ( "geofenceNames", geofenceNames ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^for  ( Area xlsArea : 1 )  {^126^^^^^113^133^[REPLACE] for  ( Area xlsArea : xlsAreas )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^xlsArea.setFormulaProcessor ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^127^^^^^113^133^[REPLACE] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ;^127^128^^^^113^133^[ADD] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ; xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^114^115^116^117^118^113^133^[ADD] org.jxls.common.Context jxlsContext = PoiTransformer.createInitialContext (  ) ; jxlsContext.putVar ( "devices", devicesEvents ) ; jxlsContext.putVar ( "sheetNames", sheetNames ) ; jxlsContext.putVar ( "geofenceNames", geofenceNames ) ; jxlsContext.putVar ( "from", from ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[ADD]^^124^125^126^127^128^113^133^[ADD] Transformer transformer = TransformerFactory.createTransformer ( inputStream, outputStream ) ; List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer ) .build (  ) ; for  ( Area xlsArea : xlsAreas )  { xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ; xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer )  .getGroupById (  )  ;^125^^^^^113^133^[REPLACE] List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer ) .build (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
[REPLACE]^try  ( InputStream inputStream = new FileInputStream ( templatePath  "/events.xlsx" )  )  {^113^^^^^113^133^[REPLACE] try  ( InputStream inputStream = new FileInputStream ( templatePath + "/events.xlsx" )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds String> types DateTime from DateTime to [CLASS] Events   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  HashMap geofenceNames  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesEvents  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  geofenceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean all  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection deviceIds  events  groupIds  types  [TYPE]  Event event  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceEvents  [TYPE]  Geofence geofence 
