[REPLACE]^Position> result = new ArrayList<> (  )  ;^61^^^^^60^102^[REPLACE] ArrayList<DeviceReport> devicesRoutes = new ArrayList<> (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^Position> result = new ArrayList<> (  )  ;^62^^^^^60^102^[REPLACE] ArrayList<String> sheetNames = new ArrayList<> (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^if  ( device.getGroupId (  )   ==  1 )  {^71^^^^^60^102^[REPLACE] if  ( device.getGroupId (  )  != 0 )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^if  ( group == this )  {^73^^^^^60^102^[REPLACE] if  ( group != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^deviceRoutes.setDeviceName ( device.getName (  )  )  ;^74^^^^^60^102^[REPLACE] deviceRoutes.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^device.getName (  )  ;^74^^^^^60^102^[REPLACE] deviceRoutes.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^Device device = getIdentityManager (  ) .getDeviceById ( deviceId )  ;^72^^^^^60^102^[REPLACE] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^if  ( group == null )  {^73^^^^^60^102^[REPLACE] if  ( group != null )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^for  ( long deviceId: ReportUtils.getDeviceList ( 1, groupIds )  )  {^63^^^^^60^102^[REPLACE] for  ( long deviceId: ReportUtils.getDeviceList ( deviceIds, groupIds )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^if  ( device.getGroupId (  )   ==  0 )  {^71^^^^^60^102^[REPLACE] if  ( device.getGroupId (  )  != 0 )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;deviceRoutes.setGroupName ( group.getName (  )  ) ;^71^72^73^74^75^60^102^[ADD] if  ( device.getGroupId (  )  != 0 )  { Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ; if  ( group != null )  { deviceRoutes.setGroupName ( group.getName (  )  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^deviceRoutes.setGroupName ( group .getGroupId (  )   ) ;^74^^^^^60^102^[REPLACE] deviceRoutes.setGroupName ( group.getName (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^Group group = Context.getDeviceManager (  ) .getGroupById ( device.getName (  )  ) ;^72^^^^^60^102^[REPLACE] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^^73^74^75^^^60^102^[ADD] if  ( group != null )  { deviceRoutes.setGroupName ( group.getName (  )  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^^65^66^^^^60^102^[ADD] Collection<Position> positions = Context.getDataManager (  ) .getPositions ( deviceId, from.toDate (  ) , to.toDate (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^^67^^^^^60^102^[ADD] DeviceReport deviceRoutes = new DeviceReport (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^Group group = getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  )  ;^68^^^^^60^102^[REPLACE] Device device = Context.getIdentityManager (  ) .getDeviceById ( deviceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^^72^^^^^60^102^[ADD] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^Collection<Position> positions = Context.getDataManager (  ) .getDeviceById ( deviceId, to.toDate (  ) , to.toDate (  )  ) ;^65^66^^^^60^102^[REPLACE] Collection<Position> positions = Context.getDataManager (  ) .getPositions ( deviceId, from.toDate (  ) , to.toDate (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^Device device = Context.getDeviceManager (  ) .getDeviceById ( userId ) ;^68^^^^^60^102^[REPLACE] Device device = Context.getIdentityManager (  ) .getDeviceById ( deviceId ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^Group group = Context.getIdentityManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^72^^^^^60^102^[REPLACE] Group group = Context.getDeviceManager (  ) .getGroupById ( device.getGroupId (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^String templatePath = Context.getDataManager (  ) .getString ( "report.templatesPath", "templates/export/" ) ;^80^81^^^^60^102^[REPLACE] String templatePath = Context.getConfig (  ) .getString ( "report.templatesPath", "templates/export/" ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^^94^95^96^97^98^82^101^[ADD] for  ( Area xlsArea : xlsAreas )  { xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ; xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ; xlsArea.processFormulas (  ) ; }^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^xlsArea.setFormulaProcessor ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^95^^^^^82^101^[REPLACE] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^xlsArea.applyAt ( new CellRef ( xlsArea.processFormulas (  ) .getCellName (  )  ) , jxlsContext ) ;^95^^^^^82^101^[REPLACE] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^xlsAreas.get ( 0 ) .getStartCellRef (  )  ;^95^^^^^82^101^[REPLACE] xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^xlsArea .getStartCellRef (  )  ;^96^^^^^82^101^[REPLACE] xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REMOVE]^xlsArea.processFormulas (  )  ;^96^^^^^82^101^[REMOVE] ^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^xlsArea .setFormulaProcessor ( null )  ;^97^^^^^82^101^[REPLACE] xlsArea.processFormulas (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^^97^^^^^82^101^[ADD] xlsArea.processFormulas (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^org.jxls.common.Context jxlsContext = PoiTransformer.createInitialContext (  ) ;jxlsContext.putVar ( "devices", devicesRoutes ) ;jxlsContext.putVar ( "sheetNames", sheetNames ) ;jxlsContext.putVar ( "from", from ) ;^82^83^84^85^86^82^101^[ADD] try  ( InputStream inputStream = new FileInputStream ( templatePath + "/route.xlsx" )  )  { org.jxls.common.Context jxlsContext = PoiTransformer.createInitialContext (  ) ; jxlsContext.putVar ( "devices", devicesRoutes ) ; jxlsContext.putVar ( "sheetNames", sheetNames ) ; jxlsContext.putVar ( "from", from ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^for  ( Area xlsArea : true )  {^94^^^^^82^101^[REPLACE] for  ( Area xlsArea : xlsAreas )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^xlsArea.getStartCellRef (  ) ;^97^^^^^82^101^[REPLACE] xlsArea.processFormulas (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[ADD]^^92^93^94^95^96^82^101^[ADD] Transformer transformer = TransformerFactory.createTransformer ( inputStream, outputStream ) ; List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer ) .build (  ) ; for  ( Area xlsArea : xlsAreas )  { xlsArea.applyAt ( new CellRef ( xlsArea.getStartCellRef (  ) .getCellName (  )  ) , jxlsContext ) ; xlsArea.setFormulaProcessor ( new StandardFormulaProcessor (  )  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer ) .getDeviceById (  ) ;^93^^^^^82^101^[REPLACE] List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer ) .build (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^try  ( InputStream inputStream = new FileInputStream ( templatePath  "/route.xlsx" )  )  {^82^^^^^82^101^[REPLACE] try  ( InputStream inputStream = new FileInputStream ( templatePath + "/route.xlsx" )  )  {^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
[REPLACE]^List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer )  .getGroupById (  )  ;^93^^^^^82^101^[REPLACE] List<Area> xlsAreas = new XlsCommentAreaBuilder ( transformer ) .build (  ) ;^[METHOD] getExcel [TYPE] void [PARAMETER] OutputStream outputStream long userId Long> deviceIds Long> groupIds DateTime from DateTime to [CLASS] Route   [TYPE]  Context jxlsContext  [TYPE]  Group group  [TYPE]  Transformer transformer  [TYPE]  Device device  [TYPE]  InputStream inputStream  [TYPE]  OutputStream outputStream  [TYPE]  ArrayList devicesRoutes  sheetNames  [TYPE]  String templatePath  [TYPE]  long deviceId  userId  [TYPE]  DateTime from  to  [TYPE]  Area xlsArea  [TYPE]  boolean false  true  [TYPE]  Collection deviceIds  groupIds  positions  [TYPE]  List xlsAreas  [TYPE]  DeviceReport deviceRoutes 
