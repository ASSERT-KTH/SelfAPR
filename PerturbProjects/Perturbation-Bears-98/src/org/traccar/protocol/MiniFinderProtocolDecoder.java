[REPLACE]^private static final Pattern PATTERN  = null ;^37^38^39^40^^37^55^[REPLACE] private static final Pattern PATTERN = new PatternBuilder (  ) .expression ( "![A-D]," ) .number ( " ( d+ ) / ( d+ ) / ( d+ ) ," ) .number ( " ( d+ ) : ( d+ ) : ( d+ ) ," )^ [CLASS] MiniFinderProtocolDecoder  
[REPLACE]^if  ( check ( flags, 2 )  && ( sentence.startsWith ( "1" )  )  {^63^^^^^59^140^[REPLACE] if  ( sentence.startsWith ( "!1" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^63^64^65^^^59^140^[ADD] if  ( sentence.startsWith ( "!1" )  )  {  getDeviceSession ( channel, remoteAddress, sentence.substring ( 3, sentence.length (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^}  else {^67^^^^^59^140^[REPLACE] } else if  ( sentence.matches ( "![A-D].*" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^}   DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress ) ;return null;^67^68^69^70^71^59^140^[ADD] else if  ( sentence.matches ( "![A-D].*" )  )  {  DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress ) ; if  ( deviceSession == null )  { return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != null )  {^70^^^^^59^140^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^return this;^71^^^^^59^140^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( !parser .startsWith ( sentence )   )  {^75^^^^^59^140^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^return true;^76^^^^^59^140^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( position .setCourse (  )    <  360 )  {^93^^^^^59^140^[REPLACE] if  ( position.getCourse (  )  > 360 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.setCourse ( 3 ) ;^94^^^^^59^140^[REPLACE] position.setCourse ( 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( sentence.startsWith ( "!1" )  || ( parser.hasNext ( 5 )  )  {^97^^^^^59^140^[REPLACE] if  ( parser.hasNext ( 5 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^97^98^99^^101^59^140^[ADD] if  ( parser.hasNext ( 5 )  )  {  int flags = parser.nextInt ( 16 ) ; position.setValid ( BitUtil.check ( flags, 0 )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 4 )  )  {^103^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 2 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, Position.ALARM_SOS )  ;^104^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_FAULT ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 8 )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, Position.ALARM_FAULT )  ;^107^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_SOS ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^107^^^^^59^140^[ADD] position.set ( Position.KEY_ALARM, Position.ALARM_SOS ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 1 )  )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, Position.ALARM_MOVEMENT )  ;^110^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 2  )  || sentence.startsWith ( "!1" )  )  )  {^112^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position .setTime (  )  ;^113^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_FALL_DOWN ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 9 )  && BitUtil.check ( flags, 10 )  && BitUtil.check ( flags, 11 )  )  {^115^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 9 )  || BitUtil.check ( flags, 10 )  || BitUtil.check ( flags, 11 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, Position.ALARM_FAULT )  ;^116^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_GEOFENCE ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 5 )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, Position.ALARM_LOW_BATTERY ) ;^118^119^120^^^59^140^[ADD] if  ( BitUtil.check ( flags, 12 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_LOW_BATTERY ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED )  ;^119^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_LOW_BATTERY ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 15 )  ) {^121^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 15 )  || BitUtil.check ( flags, 14 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^121^122^123^^^59^140^[ADD] if  ( BitUtil.check ( flags, 15 )  || BitUtil.check ( flags, 14 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_MOVEMENT ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position .setTime (  )  ;^122^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_MOVEMENT ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^int flags = parser.nextInt ( 16 << 3 ) ;^99^^^^^59^140^[REPLACE] int flags = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 1 )  )  {^103^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 2 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, Position.ALARM_FAULT ) ;^103^104^105^^^59^140^[ADD] if  ( BitUtil.check ( flags, 2 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_FAULT ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 6 + 3  )  && sentence.startsWith ( "!1" )  )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil .between ( flags , flags , flags )   )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^109^110^111^^^59^140^[ADD] if  ( BitUtil.check ( flags, 7 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 2 )  )  {^112^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, Position.ALARM_FAULT )  ;^113^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_FALL_DOWN ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^115^116^117^^^59^140^[ADD] if  ( BitUtil.check ( flags, 9 )  || BitUtil.check ( flags, 10 )  || BitUtil.check ( flags, 11 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_GEOFENCE ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^116^^^^^59^140^[ADD] position.set ( Position.KEY_ALARM, Position.ALARM_GEOFENCE ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 12 - 2  )  || sentence.startsWith ( "!1" )  )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED )  ;^122^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_MOVEMENT ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^122^^^^^59^140^[ADD] position.set ( Position.KEY_ALARM, Position.ALARM_MOVEMENT ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^return false;^71^^^^^59^140^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^return false;^76^^^^^59^140^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser.next (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^83^84^85^^^59^140^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^99^^^^^59^140^[ADD] int flags = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^70^71^72^^^59^140^[ADD] if  ( deviceSession == null )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^return null;^75^76^77^^^59^140^[ADD] if  ( !parser.matches (  )  )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^return this;^76^^^^^59^140^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( position.getCourse (   )  && ! ( parser.matches (  )  )  )   ==  360 )  {^93^^^^^59^140^[REPLACE] if  ( position.getCourse (  )  > 360 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^( position.getCourse (  )  )  ;^94^^^^^59^140^[REPLACE] position.setCourse ( 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^94^^^^^59^140^[ADD] position.setCourse ( 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext ( 5 * 4  )  || sentence.startsWith ( "!1" )  )  )  {^97^^^^^59^140^[REPLACE] if  ( parser.hasNext ( 5 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 0 )  )  {^103^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 2 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^104^^^^^59^140^[ADD] position.set ( Position.KEY_ALARM, Position.ALARM_FAULT ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 6 - 3 )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 7 * 1 )  )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 4 )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REMOVE]^position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED )  ;^119^^^^^59^140^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  (  BitUtil.check ( flags, 14 )  )  {^121^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 15 )  || BitUtil.check ( flags, 14 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^int flags = parser.nextInt ( 2 ) ;^99^^^^^59^140^[REPLACE] int flags = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 3 )  )  {^103^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 2 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position .setTime (  )  ;^104^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_FAULT ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 6 >> 1  )  && sentence.startsWith ( "!1" )  )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 3 )  )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position .setTime (  )  ;^110^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 8 / 0 )  )  {^112^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 9 )  ) {^115^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 9 )  || BitUtil.check ( flags, 10 )  || BitUtil.check ( flags, 11 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 7  )  || sentence.startsWith ( "!1" )  )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 15 )  && BitUtil.check ( flags, 14 )  )  {^121^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 15 )  || BitUtil.check ( flags, 14 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^74^^^^^59^140^[ADD] Parser parser = new Parser ( PATTERN, sentence ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^int flags = parser.nextInt ( 11 ) ;^99^^^^^59^140^[REPLACE] int flags = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^getDeviceSession ( channel, remoteAddress, sentence.substring ( 0 , sentence.length (  )  )  ) ;^65^^^^^59^140^[REPLACE] getDeviceSession ( channel, remoteAddress, sentence.substring ( 3, sentence.length (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^65^^^^^59^140^[ADD] getDeviceSession ( channel, remoteAddress, sentence.substring ( 3, sentence.length (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != this  )  {^70^^^^^59^140^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^return null;^70^71^72^^^59^140^[ADD] if  ( deviceSession == null )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( check ( flags, 12 )  || ( !parser.hasNext (  )  )  {^75^^^^^59^140^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^75^76^77^^^59^140^[ADD] if  ( !parser.matches (  )  )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( position.getCourse (  )   >=  360 )  {^93^^^^^59^140^[REPLACE] if  ( position.getCourse (  )  > 360 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^93^94^95^^^59^140^[ADD] if  ( position.getCourse (  )  > 360 )  { position.setCourse ( 0 ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.setCourse ( 2 ) ;^94^^^^^59^140^[REPLACE] position.setCourse ( 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext ( 5  )  || sentence.startsWith ( "!1" )  )  )  {^97^^^^^59^140^[REPLACE] if  ( parser.hasNext ( 5 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 6 / 3 )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 2  )  || sentence.startsWith ( "!1" )  )  )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 8 + 3 )  )  {^112^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 12L  )  && sentence.startsWith ( "!1" )  )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^119^^^^^59^140^[ADD] position.set ( Position.KEY_ALARM, Position.ALARM_LOW_BATTERY ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^int flags = parser.nextInt ( 16 + 3 ) ;^99^^^^^59^140^[REPLACE] int flags = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 4  )  || sentence.startsWith ( "!1" )  )  )  {^103^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 2 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 4 )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( sentence.startsWith ( "!1" )  || ( BitUtil.check ( flags, 1 )  )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^110^^^^^59^140^[ADD] position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 6 )  )  {^112^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, Position.ALARM_FALL_DOWN ) ;^112^113^114^^^59^140^[ADD] if  ( BitUtil.check ( flags, 8 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_FALL_DOWN ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, Position.ALARM_GEOFENCE ) ;^115^116^117^^^59^140^[ADD] if  ( BitUtil.check ( flags, 9 )  || BitUtil.check ( flags, 10 )  || BitUtil.check ( flags, 11 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_GEOFENCE ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 3 )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^return true;^71^^^^^59^140^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^69^^^^^59^140^[ADD] DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.setProtocol ( getProtocolName (  )  ) ;^79^80^^^^59^140^[ADD] Position position = new Position (  ) ; position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^int flags = parser.nextInt ( 4 ) ;^99^^^^^59^140^[REPLACE] int flags = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != true )  {^70^^^^^59^140^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( !parser.hasNext (  )  )  {^75^^^^^59^140^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( ! ( parser.matches (  )  )  && ( position.getCourse (  )   <=  360 )  {^93^^^^^59^140^[REPLACE] if  ( position.getCourse (  )  > 360 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.setCourse ( 0 ) ;^93^94^95^^^59^140^[ADD] if  ( position.getCourse (  )  > 360 )  { position.setCourse ( 0 ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.setCourse ( 0L ) ;^94^^^^^59^140^[REPLACE] position.setCourse ( 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext ( 4  )  || sentence.startsWith ( "!1" )  )  )  {^97^^^^^59^140^[REPLACE] if  ( parser.hasNext ( 5 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 2L )  )  {^103^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 2 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 6 * 0  )  || sentence.startsWith ( "!1" )  )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position .setTime (  )  ;^107^^^^^59^140^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_SOS ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 9 )  )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED ) ;^109^110^111^^^59^140^[ADD] if  ( BitUtil.check ( flags, 7 )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_OVERSPEED ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 0 )  )  {^112^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 12 / 3 )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^int flags = parser.hasNext ( 6 ) ;^99^^^^^59^140^[REPLACE] int flags = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 4  )  && sentence.startsWith ( "!1" )  )  )  {^103^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 2 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 6 / 1 )  )  {^106^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 6 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 0  )  && sentence.startsWith ( "!1" )  )  )  {^109^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 7 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 8 - 2 )  )  {^112^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 3 )  && BitUtil.check ( flags, 10 )  && BitUtil.check ( flags, 11 )  )  {^115^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 9 )  || BitUtil.check ( flags, 10 )  || BitUtil.check ( flags, 11 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( BitUtil.check ( flags, 1 )  )  {^118^^^^^59^140^[REPLACE] if  ( BitUtil.check ( flags, 12 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^83^84^85^^^59^140^[ADD] DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^return false;^139^^^^^59^140^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] MiniFinderProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int flags  [TYPE]  Parser parser 
