[REPLACE]^private static final Pattern PATTERN_LOCATION ;^36^37^38^39^^36^49^[REPLACE] private static final Pattern PATTERN_LOCATION = new PatternBuilder (  ) .number ( " ( d+ ) ," ) .number ( "d+," ) .expression ( " ( [01] ) ," )^ [CLASS] GnxProtocolDecoder  
[REPLACE]^private static final Pattern PATTERN_MIF ;^51^52^53^54^^51^57^[REPLACE] private static final Pattern PATTERN_MIF = new PatternBuilder (  ) .text ( "$GNX_MIF," ) .expression ( PATTERN_LOCATION.pattern (  )  ) .expression ( "[01]," )^ [CLASS] GnxProtocolDecoder  
[REPLACE]^private static final Pattern PATTERN_OTHER  = null ;^59^60^61^62^^59^64^[REPLACE] private static final Pattern PATTERN_OTHER = new PatternBuilder (  ) .text ( "$GNX_" ) .expression ( "...," ) .expression ( PATTERN_LOCATION.pattern (  )  )^ [CLASS] GnxProtocolDecoder  
[REPLACE]^String type = sentence.substring ( 5 * 0, 8 ) ;^71^^^^^68^120^[REPLACE] String type = sentence.substring ( 5, 8 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^if  ( sentence.equals ( "MIF" )  )  {^74^^^^^68^120^[REPLACE] if  ( type.equals ( "MIF" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^pattern = PATTERN_MIF  ;^77^^^^^74^78^[REPLACE] pattern = PATTERN_OTHER;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^pattern = PATTERN_OTHER  ;^75^^^^^68^120^[REPLACE] pattern = PATTERN_MIF;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[ADD]^^77^^^^^68^120^[ADD] pattern = PATTERN_OTHER;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^Parser parser = new Parser ( PATTERN_OTHER, sentence ) ;^80^^^^^68^120^[REPLACE] Parser parser = new Parser ( pattern, sentence ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^if  ( !parser .Parser ( PATTERN_OTHER , type )   )  {^81^^^^^68^120^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^return true;^82^^^^^68^120^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != null )  {^89^^^^^68^120^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[ADD]^return null;^89^90^91^^^68^120^[ADD] if  ( deviceSession == null )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^return this;^90^^^^^68^120^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^return true;^90^^^^^68^120^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position .setDeviceTime (  )  ;^92^^^^^68^120^[REPLACE] position.setDeviceId ( deviceSession.getDeviceId (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.nextInt (  )   ) {^94^^^^^68^120^[REPLACE] if  ( parser.nextInt (  )  == 1 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_RFID, parser.next (  )  )  ;^95^^^^^68^120^[REPLACE] position.set ( Position.KEY_ARCHIVE, true ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[ADD]^^100^101^102^^^68^120^[ADD] dateBuilder = new DateBuilder ( TimeZone.getTimeZone ( "GMT+5:30" )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setDeviceTime ( dateBuilder .setTime (  )   ) ;^103^^^^^68^120^[REPLACE] position.setDeviceTime ( dateBuilder.getDate (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setDeviceTime ( dateBuilder.setTime (  )  ) ;^103^^^^^68^120^[REPLACE] position.setDeviceTime ( dateBuilder.getDate (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REMOVE]^position.setFixTime ( dateBuilder.getDate (  )  )  ;^103^^^^^68^120^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^dateBuilder =  new DateBuilder ( TimeZone.getTimeZone ( "GMT+5:30" )  ) .setTime ( null.nextInt (  ) , null.nextInt (  ) , null.nextInt (  )  ) .setDateReverse ( null.nextInt (  ) , null.nextInt (  ) , null.nextInt (  )  ) ;^105^106^107^^^68^120^[REPLACE] dateBuilder = new DateBuilder ( TimeZone.getTimeZone ( "GMT+5:30" )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position .setDeviceTime (  )  ;^108^^^^^68^120^[REPLACE] position.setFixTime ( dateBuilder.getDate (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setFixTime ( dateBuilder.setTime (  )  ) ;^108^^^^^68^120^[REPLACE] position.setFixTime ( dateBuilder.getDate (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setDeviceId ( parser.nextInt (  )   ==  0 ) ;^110^^^^^68^120^[REPLACE] position.setValid ( parser.nextInt (  )  != 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^parser.nextInt (  )  ;^110^^^^^68^120^[REPLACE] position.setValid ( parser.nextInt (  )  != 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[ADD]^^110^^^^^68^120^[ADD] position.setValid ( parser.nextInt (  )  != 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setLongitude ( parser.nextCoordinate ( DEG_HEM )  )  ;^112^^^^^68^120^[REPLACE] position.setLatitude ( parser.nextCoordinate ( Parser.CoordinateFormat.DEG_HEM )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setLatitude ( parser.nextCoordinate ( DEG_HEM )  )  ;^112^^^^^68^120^[REPLACE] position.setLatitude ( parser.nextCoordinate ( Parser.CoordinateFormat.DEG_HEM )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setLatitude ( parser.nextCoordinate ( DEG_HEM )  )  ;^113^^^^^68^120^[REPLACE] position.setLongitude ( parser.nextCoordinate ( Parser.CoordinateFormat.DEG_HEM )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.setLongitude ( parser .nextInt (  )   ) ;^113^^^^^68^120^[REPLACE] position.setLongitude ( parser.nextCoordinate ( Parser.CoordinateFormat.DEG_HEM )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^if  ( sentence.equals ( "MIF" )  )  {^115^^^^^68^120^[REPLACE] if  ( type.equals ( "MIF" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ARCHIVE, true )  ;^116^^^^^68^120^[REPLACE] position.set ( Position.KEY_RFID, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_RFID, parser.nextInt (  )  ) ;^116^^^^^68^120^[REPLACE] position.set ( Position.KEY_RFID, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] GnxProtocolDecoder   [TYPE]  Pattern PATTERN_LOCATION  PATTERN_MIF  PATTERN_OTHER  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  Parser parser 
