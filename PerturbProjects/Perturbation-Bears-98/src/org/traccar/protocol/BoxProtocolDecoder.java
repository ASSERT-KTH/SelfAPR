[REPLACE]^private static final Pattern PATTERN =  new DateBuilder (  )  .text ( "L," ) .number ( " ( dd )  ( dd )  ( dd ) " ) .number ( " ( dd )  ( dd )  ( dd ) ," )^36^37^38^39^^36^49^[REPLACE] private static final Pattern PATTERN = new PatternBuilder (  ) .text ( "L," ) .number ( " ( dd )  ( dd )  ( dd ) " ) .number ( " ( dd )  ( dd )  ( dd ) ," )^ [CLASS] BoxProtocolDecoder  
[ADD]^^55^^^^^53^106^[ADD] String sentence =  ( String )  msg;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^if  ( sentence.startsWith ( "H,"  )  && sentence.startsWith ( "E," )  )  )  {^57^^^^^53^106^[REPLACE] if  ( sentence.startsWith ( "H," )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^}  else {^63^^^^^53^106^[REPLACE] } else if  ( sentence.startsWith ( "E," )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^}  if  ( sentence.startsWith ( "L," )  )  {^69^^^^^53^106^[REPLACE] } else if  ( sentence.startsWith ( "L," )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != null )  {^72^^^^^53^106^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^return false;^73^^^^^53^106^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.matches (  )  )  {^77^^^^^53^106^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^return true;^78^^^^^53^106^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^return this;^78^^^^^53^106^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.next (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^85^86^87^^^53^106^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^int status = parser.next (  ) ;^98^^^^^53^106^[REPLACE] int status = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^if  ( !parser .Parser ( PATTERN , sentence )   )  {^77^^^^^53^106^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^return true;^73^^^^^53^106^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^^71^^^^^53^106^[ADD] DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^position.setValid (  ( status & 0x04 )  == 0 ) ;^98^99^^^^53^106^[ADD] int status = parser.nextInt (  ) ; position.setValid (  ( status & 0x04 )  == 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^if  ( channel == null )  {^65^^^^^53^106^[REPLACE] if  ( channel != null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^channel.write ( "A,"  sentence.substring ( 2 )   "\r" ) ;^66^^^^^53^106^[REPLACE] channel.write ( "A," + sentence.substring ( 2 )  + "\r" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^channel.write ( "A," + sentence.substring ( 3 )  + "\r" ) ;^66^^^^^53^106^[REPLACE] channel.write ( "A," + sentence.substring ( 2 )  + "\r" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^if  ( channel == this  )  {^65^^^^^53^106^[REPLACE] if  ( channel != null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^channel.write ( "A," + sentence.substring ( 2 / 2 )  + "\r" ) ;^66^^^^^53^106^[REPLACE] channel.write ( "A," + sentence.substring ( 2 )  + "\r" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^}  if  ( sentence.startsWith ( "H," )  || ( sentence.startsWith ( "L," )  )  {^69^^^^^53^106^[REPLACE] } else if  ( sentence.startsWith ( "L," )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^}   DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress ) ;return null;^69^70^71^72^73^53^106^[ADD] else if  ( sentence.startsWith ( "L," )  )  {  DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress ) ; if  ( deviceSession == null )  { return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^^77^78^79^^^53^106^[ADD] if  ( !parser.matches (  )  )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^return false;^78^^^^^53^106^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^^76^^^^^53^106^[ADD] Parser parser = new Parser ( PATTERN, sentence ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  )  .getDate (  )  , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^85^86^87^^^53^106^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^^98^99^^^^53^106^[ADD] int status = parser.nextInt (  ) ; position.setValid (  ( status & 0x04 )  == 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != false )  {^72^^^^^53^106^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^return null;^77^78^79^^^53^106^[ADD] if  ( !parser.matches (  )  )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  )  .getProtocolName (  )  , parser.nextInt (  )  ) ;^85^86^87^^^53^106^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^int index = sentence.indexOf ( ',', 2 )   1;^59^^^^^53^106^[REPLACE] int index = sentence.indexOf ( ',', 2 )  + 1;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^^60^61^^^^53^106^[ADD] String id = sentence.substring ( index, sentence.indexOf ( ',', index )  ) ; getDeviceSession ( channel, remoteAddress, id ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^return this;^73^^^^^53^106^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .text ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^85^86^87^^^53^106^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REMOVE]^if  ( ! ( parser.matches (  )  )  )  {     return null; }^72^^^^^53^106^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[ADD]^^81^^^^^53^106^[ADD] Position position = new Position (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser .next (  )  , parser^85^86^87^^^53^106^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^channel.write ( "A,"  sentence.startsWith ( 2 )  sentence ) ;^66^^^^^53^106^[REPLACE] channel.write ( "A," + sentence.substring ( 2 )  + "\r" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REMOVE]^( sentence.substring ( 2 )  )  ;^66^^^^^53^106^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^int index = sentence.substring ( ',', 2 )   1;^59^^^^^53^106^[REPLACE] int index = sentence.indexOf ( ',', 2 )  + 1;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
[REPLACE]^return this;^105^^^^^53^106^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] BoxProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String id  sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int index  status  [TYPE]  Parser parser 
