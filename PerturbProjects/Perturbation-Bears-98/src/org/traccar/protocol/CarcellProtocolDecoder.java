[REPLACE]^private static final Pattern PATTERN  = null ;^37^38^39^40^^37^78^[REPLACE] private static final Pattern PATTERN = new PatternBuilder (  ) .expression ( " ( [$%] ) " ) .number ( " ( d+ ) ," ) .groupBegin (  )^ [CLASS] CarcellProtocolDecoder  
[REPLACE]^if  ( !parser.hasNext (  )  )  {^86^^^^^82^167^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^return null;^86^87^88^^^82^167^[ADD] if  ( !parser.matches (  )  )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^return true;^87^^^^^82^167^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^return false;^87^^^^^82^167^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setValid ( getProtocolName (  )  ) ;^91^^^^^82^167^[REPLACE] position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^91^92^^^^82^167^[ADD] position.setProtocol ( getProtocolName (  )  ) ; position.set ( Position.KEY_ARCHIVE, parser.next (  ) .equals ( "%" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^91^^^^^82^167^[ADD] position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position .set (  )   ) ;^92^^^^^82^167^[REPLACE] position.set ( Position.KEY_ARCHIVE, parser.next (  ) .equals ( "%" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ARCHIVE, parser.next (  ) .number ( "%" )  ) ;^92^^^^^82^167^[REPLACE] position.set ( Position.KEY_ARCHIVE, parser.next (  ) .equals ( "%" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^92^^^^^82^167^[ADD] position.set ( Position.KEY_ARCHIVE, parser.next (  ) .equals ( "%" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.nextInt (  )  ;^92^^^^^82^167^[REPLACE] position.set ( Position.KEY_ARCHIVE, parser.next (  ) .equals ( "%" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setValid ( false ) ;^93^^^^^82^167^[REPLACE] position.setValid ( true ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress, parser.nextInt (  )  ) ;^95^^^^^82^167^[REPLACE] DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != null )  {^96^^^^^82^167^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REMOVE]^if  ( ! ( parser.matches (  )  )  )  {     return null; }^96^^^^^82^167^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^return this;^97^^^^^82^167^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^return true;^97^^^^^82^167^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setValid ( deviceSession.getDeviceId (  )  ) ;^99^^^^^82^167^[REPLACE] position.setDeviceId ( deviceSession.getDeviceId (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^99^^^^^82^167^[ADD] position.setDeviceId ( deviceSession.getDeviceId (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext ( 8 / 2 )  )  {^101^^^^^82^167^[REPLACE] if  ( parser.hasNext ( 8 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setLatitude ( parser.hasNext ( CoordinateFormat.HEM_DEG_MIN_MIN )  ) ;^102^^^^^82^167^[REPLACE] position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG_MIN_MIN )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ;^102^^^^^82^167^[REPLACE] position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG_MIN_MIN )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG_MIN_MIN )  )  ;^103^^^^^82^167^[REPLACE] position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG_MIN_MIN )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^103^^^^^82^167^[ADD] position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG_MIN_MIN )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ;^103^^^^^82^167^[REPLACE] position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG_MIN_MIN )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^if  ( painelStatus.equals ( "1" )  && ( parser.hasNext ( 2 )  )  {^106^^^^^82^167^[REPLACE] if  ( parser.hasNext ( 4 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^106^107^108^109^^82^167^[ADD] if  ( parser.hasNext ( 4 )  )  { position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ; position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  )  ;^107^^^^^82^167^[REPLACE] position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setLatitude ( parser.hasNext ( CoordinateFormat.HEM_DEG )  ) ;^107^^^^^82^167^[REPLACE] position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^107^^^^^82^167^[ADD] position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setLatitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  )  ;^108^^^^^82^167^[REPLACE] position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^108^^^^^82^167^[ADD] position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setLongitude ( parser.hasNext ( CoordinateFormat.HEM_DEG )  ) ;^108^^^^^82^167^[REPLACE] position.setLongitude ( parser.nextCoordinate ( CoordinateFormat.HEM_DEG )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setValid ( UnitsConverter.knotsFromKph ( parser.nextInt (  )  )  ) ;^111^^^^^82^167^[REPLACE] position.setSpeed ( UnitsConverter.knotsFromKph ( parser.nextInt (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^111^^^^^82^167^[ADD] position.setSpeed ( UnitsConverter.knotsFromKph ( parser.nextInt (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setSpeed ( knotsFromKph ( parser.nextInt (  )  )  )  ;^111^^^^^82^167^[REPLACE] position.setSpeed ( UnitsConverter.knotsFromKph ( parser.nextInt (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setSpeed ( UnitsConverter.knotsFromKph ( parser.next (  )  )  ) ;^111^^^^^82^167^[REPLACE] position.setSpeed ( UnitsConverter.knotsFromKph ( parser.nextInt (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "x", parser.nextInt (  )  )  ;^112^^^^^82^167^[REPLACE] position.setCourse ( parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.next (  )  ;^112^^^^^82^167^[REPLACE] position.setCourse ( parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext ( 3 + 3 )  )  {^114^^^^^82^167^[REPLACE] if  ( parser.hasNext ( 3 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^114^115^116^117^118^82^167^[ADD] if  ( parser.hasNext ( 3 )  )  { position.set ( "x", parser.nextInt (  )  ) ; position.set ( "y", parser.nextInt (  )  ) ; position.set ( "z", parser.nextInt (  )  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "y", parser.nextInt (  )  )  ;^115^^^^^82^167^[REPLACE] position.set ( "x", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.next (  )  ;^115^^^^^82^167^[REPLACE] position.set ( "x", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "y", parser.next (  )  ) ;^116^^^^^82^167^[REPLACE] position.set ( "y", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.next (  )  ;^116^^^^^82^167^[REPLACE] position.set ( "y", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "z", parser.next (  )  ) ;^117^^^^^82^167^[REPLACE] position.set ( "z", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.next (  )  ;^117^^^^^82^167^[REPLACE] position.set ( "z", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^117^^^^^82^167^[ADD] position.set ( "z", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext ( 1 - 2 )  )  {^120^^^^^82^167^[REPLACE] if  ( parser.hasNext ( 1 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "accel", parser.next (  )  ) ;^121^^^^^82^167^[REPLACE] position.set ( "accel", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^121^^^^^82^167^[ADD] position.set ( "accel", parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REMOVE]^parser.next (  )  ;^121^^^^^82^167^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^Double internalBattery =  ( parser.nextDouble (  )  + 100d )   0.0294d;^124^^^^^82^167^[REPLACE] Double internalBattery =  ( parser.nextDouble (  )  + 100d )  * 0.0294d;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_POWER, mainVoltage )  ;^125^^^^^82^167^[REPLACE] position.set ( Position.KEY_BATTERY, internalBattery ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position .set (  )  ;^126^^^^^82^167^[REPLACE] position.set ( Position.KEY_RSSI, parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REMOVE]^position.set ( Position.KEY_GPS, parser.nextInt (  )  )  ;^126^^^^^82^167^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_RSSI, parser .next (  )   ) ;^126^^^^^82^167^[REPLACE] position.set ( Position.KEY_RSSI, parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^126^^^^^82^167^[ADD] position.set ( Position.KEY_RSSI, parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "blocked", parser.next (  ) .equals ( "1" )  )  ;^127^^^^^82^167^[REPLACE] position.set ( "jamming", parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "jamming", parser.nextInt (  ) .equals ( "1" )  ) ;^127^^^^^82^167^[REPLACE] position.set ( "jamming", parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^127^^^^^82^167^[ADD] position.set ( "jamming", parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^127^128^^^^82^167^[ADD] position.set ( "jamming", parser.next (  ) .equals ( "1" )  ) ; position.set ( Position.KEY_GPS, parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_RSSI, parser.nextInt (  )  )  ;^128^^^^^82^167^[REPLACE] position.set ( Position.KEY_GPS, parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^128^^^^^82^167^[ADD] position.set ( Position.KEY_GPS, parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_GPS, parser.next (  )  ) ;^128^^^^^82^167^[REPLACE] position.set ( Position.KEY_GPS, parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^parser.nextInt (  )  ;^130^^^^^82^167^[REPLACE] parser.next (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^^132^133^134^^^82^167^[ADD] DateBuilder dateBuilder = new DateBuilder (  ) . setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position .getProtocolName (  )  ;^135^^^^^82^167^[REPLACE] position.setTime ( dateBuilder.getDate (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.setTime ( dateBuilder.setDateReverse (  )  ) ;^135^^^^^82^167^[REPLACE] position.setTime ( dateBuilder.getDate (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REMOVE]^position.setTime ( dateBuilder.getDate (  )  )  ;^135^^^^^82^167^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "blocked", parser.nextInt (  ) .equals ( "1" )  ) ;^137^^^^^82^167^[REPLACE] position.set ( "blocked", parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "blocked", parser.next (  ) .number ( "1" )  ) ;^137^^^^^82^167^[REPLACE] position.set ( "blocked", parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( "blocked", parser .hasNext ( this )  .equals ( "1" )  ) ;^137^^^^^82^167^[REPLACE] position.set ( "blocked", parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position .set (  )   ) ;^138^^^^^82^167^[REPLACE] position.set ( Position.KEY_IGNITION, parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_IGNITION, parser.next (  ) .number ( "1" )  ) ;^138^^^^^82^167^[REPLACE] position.set ( Position.KEY_IGNITION, parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_IGNITION, parser .hasNext ( null )  .equals ( "1" )  ) ;^138^^^^^82^167^[REPLACE] position.set ( Position.KEY_IGNITION, parser.next (  ) .equals ( "1" )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^if  ( painelStatus.equals ( "1" )  && ( parser.hasNext ( 4 )  )  {^140^^^^^82^167^[REPLACE] if  ( parser.hasNext ( 4 )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_BATTERY, internalBattery )  ;^147^^^^^82^167^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_GENERAL ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^String painelStatus = parser.nextInt (  ) ;^145^^^^^82^167^[REPLACE] String painelStatus = parser.next (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^Double mainVoltage = parser.nextDouble (  )   100d;^151^^^^^82^167^[REPLACE] Double mainVoltage = parser.nextDouble (  )  / 100d;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^if  ( ! ( parser.matches (  )  )  && ( painelStatus.equals ( "1" )  )  {^146^^^^^82^167^[REPLACE] if  ( painelStatus.equals ( "1" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, Position.ALARM_GENERAL ) ;^146^147^148^^^82^167^[ADD] if  ( painelStatus.equals ( "1" )  )  { position.set ( Position.KEY_ALARM, Position.ALARM_GENERAL ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^position .set (  )  ;^147^^^^^82^167^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_GENERAL ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^Double internalBattery =  (  ( parser.nextDouble (  )  )  + 100.0 )  * 0.0294  ;^151^^^^^82^167^[REPLACE] Double mainVoltage = parser.nextDouble (  )  / 100d;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^Double internalBattery =  (  ( parser.nextDouble (  )  )  + 100.0 )  * 0.0294  ;^160^^^^^82^167^[REPLACE] Double mainVoltage = parser.nextDouble (  )  / 100d;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
[REPLACE]^Double mainVoltage = parser.nextDouble (  )   100d;^160^^^^^82^167^[REPLACE] Double mainVoltage = parser.nextDouble (  )  / 100d;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] CarcellProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String painelStatus  [TYPE]  SocketAddress remoteAddress  [TYPE]  Double internalBattery  mainVoltage  [TYPE]  Parser parser 
