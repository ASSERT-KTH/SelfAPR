[REPLACE]^private static final Pattern PATTERN_HEADER ;^42^43^44^45^^42^50^[REPLACE] private static final Pattern PATTERN_HEADER = new PatternBuilder (  ) .text ( "*" ) .expression ( "..20" ) .expression ( " ( [01] ) " )^ [CLASS] UproProtocolDecoder  
[REPLACE]^private static final Object PATTERN_LOCATION = new PatternBuilder (  ) .number ( " ( dd )  ( dd )  ( dd ) " ) .number ( " ( dd )  ( dd )  ( dddd ) " ) .number ( " ( ddd )  ( dd )  ( dddd ) " )^52^53^54^55^^52^60^[REPLACE] private static final Pattern PATTERN_LOCATION = new PatternBuilder (  ) .number ( " ( dd )  ( dd )  ( dd ) " ) .number ( " ( dd )  ( dd )  ( dddd ) " ) .number ( " ( ddd )  ( dd )  ( dddd ) " )^ [CLASS] UproProtocolDecoder  
[REPLACE]^Parser parser = new Parser ( PATTERN_HEADER, header )  ;^63^^^^^62^89^[REPLACE] Parser parser = new Parser ( PATTERN_LOCATION, data ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^64^65^66^67^^62^89^[ADD] if  ( parser.matches (  )  )  {  DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.matches (  )  || ( !BitUtil.check ( flags, 1 * 2 )  )  {^75^^^^^62^89^[REPLACE] if  ( !BitUtil.check ( flags, 1 )  )  {^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^position.setLatitude ( -position.getLatitude (  )  ) ;^75^76^77^^^62^89^[ADD] if  ( !BitUtil.check ( flags, 1 )  )  { position.setLatitude ( -position.getLatitude (  )  ) ; }^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.getLatitude ( -position.getLatitude (  )  ) ;^76^^^^^62^89^[REPLACE] position.setLatitude ( -position.getLatitude (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.setLatitude ( -position.setValid (  )  ) ;^76^^^^^62^89^[REPLACE] position.setLatitude ( -position.getLatitude (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( !BitUtil.check ( flags, 2 * 1  )  && parser.matches (  )  )  )  {^78^^^^^62^89^[REPLACE] if  ( !BitUtil.check ( flags, 2 )  )  {^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position .getLongitude (  )  ;^79^^^^^62^89^[REPLACE] position.setLongitude ( -position.getLongitude (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^position.setLongitude ( -position .setLongitude (  )   ) ;^79^^^^^62^89^[REPLACE] position.setLongitude ( -position.getLongitude (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^79^^^^^62^89^[ADD] position.setLongitude ( -position.getLongitude (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( parser.next (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^66^67^^^^62^89^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^73^^^^^62^89^[ADD] int flags = parser.nextInt (  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( !BitUtil.check ( flags, 1 * 2  )  && parser.matches (  )  )  )  {^75^^^^^62^89^[REPLACE] if  ( !BitUtil.check ( flags, 1 )  )  {^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^75^76^77^^^62^89^[ADD] if  ( !BitUtil.check ( flags, 1 )  )  { position.setLatitude ( -position.getLatitude (  )  ) ; }^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^76^^^^^62^89^[ADD] position.setLatitude ( -position.getLatitude (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^if  ( !BitUtil.check ( flags, 3 )  )  {^78^^^^^62^89^[REPLACE] if  ( !BitUtil.check ( flags, 2 )  )  {^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  )  .getDate (  )  , parser.nextInt (  )  ) ;^66^67^^^^62^89^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[REPLACE]^int flags = parser .next (  )  ;^73^^^^^62^89^[REPLACE] int flags = parser.nextInt (  ) ;^[METHOD] decodeLocation [TYPE] void [PARAMETER] Position position String data [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  boolean false  true  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  String data  [TYPE]  int flags  [TYPE]  Parser parser 
[ADD]^^95^^^^^93^185^[ADD] ChannelBuffer buf =  ( ChannelBuffer )  msg;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^if  ( buf.getByte ( buf.writerIndex (  )  )   ==  '*' )  {^97^^^^^93^185^[REPLACE] if  ( buf.getByte ( buf.readerIndex (  )  )  != '*' )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^97^98^99^^^93^185^[ADD] if  ( buf.getByte ( buf.readerIndex (  )  )  != '*' )  { throw new ParseException  (" ")  ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^98^^^^^93^185^[ADD] throw new ParseException  (" ")  ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^return ;^98^^^^^93^185^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^101^^^^^93^185^[ADD] int headerIndex = buf.indexOf ( buf.readerIndex (  ) , buf.writerIndex (  ) ,  ( byte )  '&' ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^if  (  ( buf.getByte ( buf.readerIndex (  )  )  )  != '*'  || ( headerIndex  != delimiterIndex )  {^102^^^^^93^185^[REPLACE] if  ( headerIndex < 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^delimiterIndex = buf.writerIndex (  )  ;^103^^^^^93^185^[REPLACE] headerIndex = buf.writerIndex (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^103^^^^^93^185^[ADD] headerIndex = buf.writerIndex (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^105^^^^^93^185^[ADD] String header = buf.readBytes ( headerIndex - buf.readerIndex (  )  ) .toString ( StandardCharsets.US_ASCII ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^Parser parser = new Parser ( PATTERN_LOCATION, data )  ;^107^^^^^93^185^[REPLACE] Parser parser = new Parser ( PATTERN_HEADER, header ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^if  ( parser.matches (  )  )  {^108^^^^^93^185^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^108^109^110^^^93^185^[ADD] if  ( !parser.matches (  )  )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^return false;^109^^^^^93^185^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^return true;^109^^^^^93^185^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^boolean reply = parser.nextInt (  ) .equals ( "1" ) ;^112^^^^^93^185^[REPLACE] boolean reply = parser.next (  ) .equals ( "1" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^114^^^^^93^185^[ADD] DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^if  ( deviceSession != null )  {^115^^^^^93^185^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^return false;^116^^^^^93^185^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^return this;^116^^^^^93^185^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^position.set ( getProtocolName (  )  ) ;^120^^^^^93^185^[REPLACE] position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REMOVE]^( position.getLatitude (  )  )  ;^120^^^^^93^185^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^position.set ( deviceSession.getDeviceId (  )  ) ;^121^^^^^93^185^[REPLACE] position.setDeviceId ( deviceSession.getDeviceId (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^121^^^^^93^185^[ADD] position.setDeviceId ( deviceSession.getDeviceId (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^123^124^^^^93^185^[ADD] String type = parser.next (  ) ; String subtype = parser.next (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^String subtype = parser.nextInt (  ) ;^124^^^^^93^185^[REPLACE] String subtype = parser.next (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^if  ( reply && channel == true )  {^126^^^^^93^185^[REPLACE] if  ( reply && channel != null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^channel.write ( "*MG20Y"  type  subtype  "#" ) ;^127^^^^^93^185^[REPLACE] channel.write ( "*MG20Y" + type + subtype + "#" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^if  (headerIndex  ==  0 )  {^137^^^^^93^185^[REPLACE] if  ( delimiterIndex < 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^138^^^^^93^185^[ADD] delimiterIndex = buf.writerIndex (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^153^^^^^93^185^[ADD] odometer <<= 4;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^odometer += data.readByte (  )    ( byte )  '0';^154^^^^^93^185^[REPLACE] odometer += data.readByte (  )  -  ( byte )  '0';^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^byte dataType = buf .readBytes (  )  ;^134^^^^^93^185^[REPLACE] byte dataType = buf.readByte (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^136^^^^^93^185^[ADD] int delimiterIndex = buf.indexOf ( buf.readerIndex (  ) , buf.writerIndex (  ) ,  ( byte )  '&' ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^ChannelBuffer data = buf .readBytes (  )  ;^141^^^^^93^185^[REPLACE] ChannelBuffer data = buf.readBytes ( delimiterIndex - buf.readerIndex (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[ADD]^^151^^^^^93^185^[ADD] long odometer = 0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^if  (  position.getLongitude (  )  != 1 )  {^180^^^^^93^185^[REPLACE] if  ( position.getLatitude (  )  != 0 && position.getLongitude (  )  != 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
[REPLACE]^return false;^184^^^^^93^185^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] UproProtocolDecoder   [TYPE]  Pattern PATTERN_HEADER  PATTERN_LOCATION  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  byte dataType  [TYPE]  Channel channel  [TYPE]  String header  subtype  type  [TYPE]  int delimiterIndex  headerIndex  [TYPE]  long odometer  [TYPE]  ChannelBuffer buf  data  [TYPE]  Parser parser  [TYPE]  boolean false  reply  true  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress 
