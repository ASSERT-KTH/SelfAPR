[REPLACE]^private  short  prefix;^36^^^^^^^[REPLACE] private String prefix;^ [CLASS] NavisProtocolDecoder ParseResult  
[REPLACE]^public static final int F10  = null ;^43^^^^^^^[REPLACE] public static final int F10 = 0x01;^ [CLASS] NavisProtocolDecoder ParseResult  
[REPLACE]^public static final int F2 % 30 = 0x02 % 3;^44^^^^^^^[REPLACE] public static final int F20 = 0x02;^ [CLASS] NavisProtocolDecoder ParseResult  
[REPLACE]^public static final  long  F30 = 0x03;^45^^^^^^^[REPLACE] public static final int F30 = 0x03;^ [CLASS] NavisProtocolDecoder ParseResult  
[REPLACE]^public static final int F40  = null ;^46^^^^^^^[REPLACE] public static final int F40 = 0x04;^ [CLASS] NavisProtocolDecoder ParseResult  
[REPLACE]^public static final int F5 + 40 = 0x05 + 4;^47^^^^^^^[REPLACE] public static final int F50 = 0x05;^ [CLASS] NavisProtocolDecoder ParseResult  
[REPLACE]^public static final  short  F52 = 0x25;^49^^^^^^^[REPLACE] public static final int F52 = 0x25;^ [CLASS] NavisProtocolDecoder ParseResult  
[REPLACE]^private  long id;^61^^^^^^^[REPLACE] private final long id;^ [CLASS] NavisProtocolDecoder ParseResult  
[ADD]^^79^80^^^^78^181^[ADD] Position position = new Position (  ) ; position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( getProtocolName (  )  ) ;^80^^^^^78^181^[REPLACE] position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( deviceSession.getDeviceId (  )  ) ;^82^^^^^78^181^[REPLACE] position.setDeviceId ( deviceSession.getDeviceId (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^84^85^86^87^88^78^181^[ADD] int format; if  ( buf.getUnsignedByte ( buf.readerIndex (  )  )  == 0 )  { format = buf.readUnsignedShort (  ) ; } else { format = buf.readUnsignedByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( buf.getUnsignedByte ( buf.readerIndex (  )  )   !=  0 )  {^85^^^^^78^181^[REPLACE] if  ( buf.getUnsignedByte ( buf.readerIndex (  )  )  == 0 )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^format = buf.readUnsignedShort (  )  ;^88^^^^^85^89^[REPLACE] format = buf.readUnsignedByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^format = buf.readUnsignedByte (  )  ;^86^^^^^78^181^[REPLACE] format = buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^format = buf.readUnsignedShort (  )  ;^88^^^^^78^181^[REPLACE] format = buf.readUnsignedByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( "format", locationStatus ) ;^90^^^^^78^181^[REPLACE] position.set ( "format", format ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^92^93^^^^78^181^[ADD] long index = buf.readUnsignedInt (  ) ; position.set ( Position.KEY_INDEX, index ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_INDEX, serverId ) ;^93^^^^^78^181^[REPLACE] position.set ( Position.KEY_INDEX, index ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^position.set ( Position.KEY_INPUT, buf.readUnsignedByte (  )  )  ;^93^^^^^78^181^[REMOVE] ^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_INPUT, buf.readUnsignedShort (  )  )  ;^95^^^^^78^181^[REPLACE] position.set ( Position.KEY_EVENT, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_EVENT, buf .readUnsignedInt (  )   ) ;^95^^^^^78^181^[REPLACE] position.set ( Position.KEY_EVENT, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.skipBytes ( 2 ) ;^97^^^^^78^181^[REPLACE] buf.skipBytes ( 6 ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^99^^^^^78^181^[ADD] short armedStatus = buf.readUnsignedByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_ODOMETER,  (  ( buf.readFloat (  )  )  * 1000 )  )  ;^100^^^^^78^181^[REPLACE] position.set ( Position.KEY_ARMED, armedStatus & 0x7F ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^100^^^^^78^181^[ADD] position.set ( Position.KEY_ARMED, armedStatus & 0x7F ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( BitUtil.check ( armedStatus, 7L )  )  {^101^^^^^78^181^[REPLACE] if  ( BitUtil.check ( armedStatus, 7 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position .set ( id )  ;^102^^^^^78^181^[REPLACE] position.set ( Position.KEY_ALARM, Position.ALARM_GENERAL ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  )  ;^104^^^^^78^181^[REPLACE] position.set ( Position.KEY_STATUS, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  )  ;^104^^^^^78^181^[REMOVE] ^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_STATUS, buf.getUnsignedByte (  )  ) ;^104^^^^^78^181^[REPLACE] position.set ( Position.KEY_STATUS, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position .set ( id )  ;^105^^^^^78^181^[REPLACE] position.set ( Position.KEY_RSSI, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_RSSI, buf .getUnsignedByte (  )   ) ;^105^^^^^78^181^[REPLACE] position.set ( Position.KEY_RSSI, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( isFormat ( F51, F10, F20, F30 )  )  {^107^^^^^78^181^[REPLACE] if  ( isFormat ( format, F10, F20, F30 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^}  else {^109^^^^^78^181^[REPLACE] } else if  ( isFormat ( format, F40, F50, F51, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_INPUT, buf.readUnsignedByte (  )  )  ;^110^^^^^78^181^[REPLACE] position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_OUTPUT, buf.getUnsignedByte (  )  ) ;^110^^^^^78^181^[REPLACE] position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^( buf.readUnsignedByte (  )  )  ;^110^^^^^78^181^[REMOVE] ^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_OUTPUT, buf .readUnsignedInt (  )   ) ;^108^^^^^78^181^[REPLACE] position.set ( Position.KEY_OUTPUT, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^}^109^110^111^^^78^181^[ADD] else if  ( isFormat ( format, F40, F50, F51, F52 )  )  { position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  ) ; }^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^( buf.readUnsignedByte (  )  )  ;^110^^^^^78^181^[REPLACE] position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( isFormat ( format, F10, F20, F30, F40  )  || isFormat ( format, F51, F52 )  )  )  {^113^^^^^78^181^[REPLACE] if  ( isFormat ( format, F10, F20, F30, F40 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^if  ( isFormat ( format, F10, F20, F30 )  )  {     position.set ( Position.KEY_OUTPUT, buf.readUnsignedShort (  )  ) ; }else     if  ( isFormat ( format, F40, F50, F51, F52 )  )  {         position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  ) ;     }^113^^^^^78^181^[REMOVE] ^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^}  if  ( isFormat ( format, F50, F51, F52 )  )  {^115^^^^^78^181^[REPLACE] } else if  ( isFormat ( format, F50, F51, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^}^115^116^117^^^78^181^[ADD] else if  ( isFormat ( format, F50, F51, F52 )  )  { position.set ( Position.KEY_INPUT, buf.readUnsignedByte (  )  ) ; }^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_INPUT, buf.getUnsignedByte (  )  ) ;^116^^^^^78^181^[REPLACE] position.set ( Position.KEY_INPUT, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^( buf.readUnsignedByte (  )  )  ;^116^^^^^78^181^[REPLACE] position.set ( Position.KEY_INPUT, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_OUTPUT, buf.readUnsignedShort (  )  )  ;^114^^^^^78^181^[REPLACE] position.set ( Position.KEY_INPUT, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_INPUT, buf.readUnsignedInt (  )  ) ;^114^^^^^78^181^[REPLACE] position.set ( Position.KEY_INPUT, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^114^^^^^78^181^[ADD] position.set ( Position.KEY_INPUT, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^}  else {^115^^^^^78^181^[REPLACE] } else if  ( isFormat ( format, F50, F51, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_OUTPUT, buf.readUnsignedByte (  )  )  ;^116^^^^^78^181^[REPLACE] position.set ( Position.KEY_INPUT, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_EVENT, buf.readUnsignedShort (  )  )  ;^119^^^^^78^181^[REPLACE] position.set ( Position.KEY_POWER, buf.readUnsignedShort (  )  * 0.001 ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_POWER, buf.getUnsignedByte (  )  * 0.001 ) ;^119^^^^^78^181^[REPLACE] position.set ( Position.KEY_POWER, buf.readUnsignedShort (  )  * 0.001 ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_EVENT, buf.readUnsignedShort (  )  )  ;^120^^^^^78^181^[REPLACE] position.set ( Position.KEY_BATTERY, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.KEY_BATTERY, buf.readUnsignedInt (  )  ) ;^120^^^^^78^181^[REPLACE] position.set ( Position.KEY_BATTERY, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( isFormat ( format, F40, F20, F30  )  || isFormat ( format, F51, F52 )  )  )  {^122^^^^^78^181^[REPLACE] if  ( isFormat ( format, F10, F20, F30 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^122^123^124^^^78^181^[ADD] if  ( isFormat ( format, F10, F20, F30 )  )  { position.set ( Position.PREFIX_TEMP + 1, buf.readShort (  )  ) ; }^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set (  (  ( PREFIX_ADC )  + 1 ) , buf.readUnsignedShort (  )  )  ;^123^^^^^78^181^[REPLACE] position.set ( Position.PREFIX_TEMP + 1, buf.readShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.PREFIX_TEMP + 1, buf.readFloat (  )  ) ;^123^^^^^78^181^[REPLACE] position.set ( Position.PREFIX_TEMP + 1, buf.readShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^123^^^^^78^181^[ADD] position.set ( Position.PREFIX_TEMP + 1, buf.readShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( isFormat ( format, F40, F20, F50, F52 )  )  {^126^^^^^78^181^[REPLACE] if  ( isFormat ( format, F10, F20, F50, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.setTime ( Position.PREFIX_ADC  1, buf.readUnsignedShort (  )  ) ;^127^^^^^78^181^[REPLACE] position.set ( Position.PREFIX_ADC + 1, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set ( Position.PREFIX_ADC + 1, buf.readUnsignedInt (  )  ) ;^127^^^^^78^181^[REPLACE] position.set ( Position.PREFIX_ADC + 1, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^position.set (  (  ( PREFIX_ADC )  + 1 ) , buf.readUnsignedShort (  )  )  ;^128^^^^^78^181^[REPLACE] position.set ( Position.PREFIX_ADC + 2, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^( buf.readUnsignedShort (  )  )  ;^128^^^^^78^181^[REPLACE] position.set ( Position.PREFIX_ADC + 2, buf.readUnsignedShort (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( isFormat ( locationStatus, F20, F50, F51, F52 )  )  {^132^^^^^78^181^[REPLACE] if  ( isFormat ( format, F20, F50, F51, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf .readUnsignedByte (  )  ;^133^^^^^78^181^[REPLACE] buf.readUnsignedInt (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^buf.readUnsignedByte (  )  ;^133^^^^^78^181^[REMOVE] ^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.readUnsignedByte (  )  ;^134^^^^^78^181^[REPLACE] buf.readUnsignedInt (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( isFormat ( format, F20, F50, F53, F52 )  )  {^137^^^^^78^181^[REPLACE] if  ( isFormat ( format, F20, F50, F51, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^int locationStatus = buf.getUnsignedByte (  ) ;^138^^^^^78^181^[REPLACE] int locationStatus = buf.readUnsignedByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( buf.readUnsignedByte (  ) , buf.readUnsignedByte (  ) , buf.readUnsignedByte (  )  ) .setDateReverse ( buf.readUnsignedByte (  ) , buf.readUnsignedByte (  )   1, buf.readUnsignedByte (  )  ) ;^141^142^143^^^78^181^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( buf.readUnsignedByte (  ) , buf.readUnsignedByte (  ) , buf.readUnsignedByte (  )  ) .setDateReverse ( buf.readUnsignedByte (  ) , buf.readUnsignedByte (  )  + 1, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^short armedStatus = buf.readUnsignedByte (  )  ;^138^^^^^78^181^[REPLACE] int locationStatus = buf.readUnsignedByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( buf .getUnsignedByte (  )  , buf^141^142^143^^^78^181^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setTime ( buf.readUnsignedByte (  ) , buf.readUnsignedByte (  ) , buf.readUnsignedByte (  )  ) .setDateReverse ( buf.readUnsignedByte (  ) , buf.readUnsignedByte (  )  + 1, buf.readUnsignedByte (  )  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( check ( armedStatus, 7 )  && ( isFormat ( F51, F51, F52 )  )  {^160^^^^^78^181^[REPLACE] if  ( isFormat ( format, F51, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^( buf.readUnsignedShort (  )  )  ;^161^^^^^78^181^[REPLACE] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^161^^^^^78^181^[ADD] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.writeByte (  ) ;^162^^^^^78^181^[REPLACE] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^buf.readUnsignedShort (  ) ;^162^163^^^^78^181^[ADD] buf.readByte (  ) ; buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^( buf.readUnsignedShort (  )  )  ;^163^^^^^78^181^[REPLACE] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^163^^^^^78^181^[ADD] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf .readUnsignedInt (  )  ;^164^^^^^78^181^[REPLACE] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.writeByte (  ) ;^165^^^^^78^181^[REPLACE] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^( buf.readUnsignedShort (  )  )  ;^166^^^^^78^181^[REPLACE] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^( buf.readUnsignedShort (  )  )  ;^166^^^^^78^181^[REMOVE] ^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.readUnsignedInt (  ) ;^167^^^^^78^181^[REPLACE] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.readShort (  )  ;^168^^^^^78^181^[REPLACE] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.readUnsignedInt (  ) ;^169^^^^^78^181^[REPLACE] buf.readUnsignedShort (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( isFormat ( format, F40, F52  )  || check ( armedStatus, 7 )  )  )  {^173^^^^^78^181^[REPLACE] if  ( isFormat ( format, F40, F52 )  )  {^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.writeByte (  ) ;^174^^^^^78^181^[REPLACE] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^buf.readShort (  )  ;^174^^^^^78^181^[REMOVE] ^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.readShort (  )  ;^175^^^^^78^181^[REPLACE] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.readShort (  )  ;^176^^^^^78^181^[REPLACE] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.writeByte (  ) ;^177^^^^^78^181^[REPLACE] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^177^^^^^78^181^[ADD] buf.readByte (  ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return new ParseResult ( serverId, position ) ;^180^^^^^78^181^[REPLACE] return new ParseResult ( index, position ) ;^[METHOD] parsePosition [TYPE] NavisProtocolDecoder$ParseResult [PARAMETER] DeviceSession deviceSession ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  short armedStatus  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^int count = buf.getUnsignedByte (  ) ;^200^^^^^198^219^[REPLACE] int count = buf.readUnsignedByte (  ) ;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^if  ( position.getFixTime (  )  == null )  {^204^^^^^198^219^[REPLACE] if  ( position.getFixTime (  )  != null )  {^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^for  ( int i = 1; i < count; i++ )  {^202^^^^^198^219^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[ADD]^^203^^^^^198^219^[ADD] Position position = parsePosition ( deviceSession, buf ) .getPosition (  ) ;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[ADD]^^209^^^^^198^219^[ADD] ChannelBuffer response = ChannelBuffers.dynamicBuffer ( ByteOrder.LITTLE_ENDIAN, 8 ) ;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^response.writeBytes ( copiedBuffer ( LITTLE_ENDIAN, "*<T", US_ASCII )  )  ;^210^^^^^198^219^[REPLACE] response.writeBytes ( ChannelBuffers.copiedBuffer ( ByteOrder.LITTLE_ENDIAN, "*<A", StandardCharsets.US_ASCII )  ) ;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^copiedBuffer ( LITTLE_ENDIAN, "*<T", US_ASCII )  ;^210^^^^^198^219^[REPLACE] response.writeBytes ( ChannelBuffers.copiedBuffer ( ByteOrder.LITTLE_ENDIAN, "*<A", StandardCharsets.US_ASCII )  ) ;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^response.writeInt ( count ) ;^211^^^^^198^219^[REPLACE] response.writeByte ( count ) ;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^if  ( false.isEmpty (  )  )  {^214^^^^^198^219^[REPLACE] if  ( positions.isEmpty (  )  )  {^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[ADD]^return null;^214^215^216^^^198^219^[ADD] if  ( positions.isEmpty (  )  )  { return null; }^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^return this;^215^^^^^198^219^[REPLACE] return null;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[REPLACE]^return position  ;^218^^^^^198^219^[REPLACE] return positions;^[METHOD] processArray [TYPE] Object [PARAMETER] DeviceSession deviceSession Channel channel ChannelBuffer buf [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  List positions  [TYPE]  String prefix  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  locationStatus  type  [TYPE]  ChannelBuffer buf  response 
[ADD]^^255^^^^^253^285^[ADD] ChannelBuffer buf =  ( ChannelBuffer )  msg;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^prefix = buf.toString ( buf.readerIndex (  ) , 1, StandardCharsets.US_ASCII ) ;^257^^^^^253^285^[REPLACE] prefix = buf.toString ( buf.readerIndex (  ) , 4, StandardCharsets.US_ASCII ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.skipBytes ( type.length (  )  )  ;^258^^^^^253^285^[REPLACE] buf.skipBytes ( prefix.length (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^deviceUniqueId = buf.readUnsignedInt (  )  ;^259^^^^^253^285^[REPLACE] serverId = buf.readUnsignedInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^260^^^^^253^285^[ADD] deviceUniqueId = buf.readUnsignedInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^int length = buf.readUnsignedInt (  ) ;^261^^^^^253^285^[REPLACE] int length = buf.readUnsignedShort (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.writeByte ( 4 ) ;^262^^^^^253^285^[REPLACE] buf.skipBytes ( 2 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( locationStatus (  )  == 0  )  {^264^^^^^253^285^[REPLACE] if  ( length == 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REMOVE]^if  ( type == i )  {     return true; }^264^^^^^253^285^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return this;^265^^^^^253^285^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return sum  ;^265^^^^^253^285^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^String type = buf.toString ( buf.readerIndex (  ) , 3 * 1, StandardCharsets.US_ASCII ) ;^268^^^^^253^285^[REPLACE] String type = buf.toString ( buf.readerIndex (  ) , 3, StandardCharsets.US_ASCII ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^buf.writeByte ( type.length (  )  ) ;^269^^^^^253^285^[REPLACE] buf.skipBytes ( type.length (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^269^^^^^253^285^[ADD] buf.skipBytes ( type.length (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( type.equals ( "*>T" )  && ( type.equals ( "*>S" )  )  {^271^^^^^253^285^[REPLACE] if  ( type.equals ( "*>S" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( deviceSession == null )  {^275^^^^^271^282^[REPLACE] if  ( deviceSession != null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( type.equals ( "*>T"  )  && type.equals ( "*>S" )  )  )  {^276^^^^^271^282^[REPLACE] if  ( type.equals ( "*>T" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^} else if  ( type.equals ( "*>A"  )  || type.equals ( "*>S" )  )  )  {^278^^^^^271^282^[REPLACE] } else if  ( type.equals ( "*>A" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return processArray ( deviceSession, channel, buf )  ;^277^^^^^271^282^[REPLACE] return processSingle ( deviceSession, channel, buf ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return processSingle ( deviceSession, channel, buf )  ;^279^^^^^271^282^[REPLACE] return processArray ( deviceSession, channel, buf ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( deviceSession == false )  {^275^^^^^253^285^[REPLACE] if  ( deviceSession != null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( type.equals ( "*>T"  )  || type.equals ( "*>S" )  )  )  {^276^^^^^253^285^[REPLACE] if  ( type.equals ( "*>T" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^276^277^278^279^280^253^285^[ADD] if  ( type.equals ( "*>T" )  )  { return processSingle ( deviceSession, channel, buf ) ; } else if  ( type.equals ( "*>A" )  )  { return processArray ( deviceSession, channel, buf ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^}  else {^278^^^^^253^285^[REPLACE] } else if  ( type.equals ( "*>A" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return processSingle ( deviceSession, channel, buf )  ;^279^^^^^253^285^[REPLACE] return processArray ( deviceSession, channel, buf ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return processArray ( deviceSession, channel, buf )  ;^277^^^^^253^285^[REPLACE] return processSingle ( deviceSession, channel, buf ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^}   return processArray ( deviceSession, channel, buf ) ;^278^279^280^^^253^285^[ADD] else if  ( type.equals ( "*>A" )  )  { return processArray ( deviceSession, channel, buf ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^if  ( type.equals ( "*>T"  )  && type.equals ( "*>S" )  )  )  {^276^^^^^253^285^[REPLACE] if  ( type.equals ( "*>T" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^}  if  ( type.equals ( "*>A" )  )  {^278^^^^^253^285^[REPLACE] } else if  ( type.equals ( "*>A" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[ADD]^^274^^^^^253^285^[ADD] DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^return this;^284^^^^^253^285^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] NavisProtocolDecoder ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
[REPLACE]^private  NavisProtocolDecoder$ParseResult position;^62^^^^^^^[REPLACE] private final Position position;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] ParseResult   [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String prefix  type  [TYPE]  SocketAddress remoteAddress  [TYPE]  long deviceUniqueId  id  index  serverId  [TYPE]  int F10  F20  F30  F40  F50  F51  F52  count  format  i  length  locationStatus  type  [TYPE]  ChannelBuffer buf 
