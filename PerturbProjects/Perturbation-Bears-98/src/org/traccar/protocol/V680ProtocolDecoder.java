[REPLACE]^private static final Pattern PATTERN  = null ;^35^36^37^38^^35^53^[REPLACE] private static final Pattern PATTERN = new PatternBuilder (  ) .groupBegin (  ) .number ( "# ( d+ ) #" ) .expression ( " ( [^#]* ) #" )^ [CLASS] V680ProtocolDecoder  
[ADD]^^59^^^^^57^130^[ADD] String sentence =  ( String )  msg;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^sentence =  null.trim (  ) ;^60^^^^^57^130^[REPLACE] sentence = sentence.trim (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( sentence.length (  )  - 5 == 0  )  {^62^^^^^57^130^[REPLACE] if  ( sentence.length (  )  == 16 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext (  )  && ( !parser.matches (  )  )  {^69^^^^^62^127^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return false;^70^^^^^62^127^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext (   )  || ! ( parser.matches (  )  )  )  )  {^77^^^^^62^127^[REPLACE] if  ( parser.hasNext (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^deviceSession = getDeviceSession ( channel, remoteAddress, parser.next (  )  )  ;^80^^^^^77^81^[REPLACE] deviceSession = getDeviceSession ( channel, remoteAddress ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^deviceSession = getDeviceSession ( channel, remoteAddress )  ;^78^^^^^62^127^[REPLACE] deviceSession = getDeviceSession ( channel, remoteAddress, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != null )  {^82^^^^^62^127^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^82^83^84^^^62^127^[ADD] if  ( deviceSession == null )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return this;^83^^^^^62^127^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( lat > 90 ) {^99^^^^^62^127^[REPLACE] if  ( lat > 90 || lon > 180 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lat =  ( lat -  ( latDegrees * 100 )  )  / 60.0  ;^101^^^^^62^127^[REPLACE] lon =  ( lon - lonDegrees * 100 )  / 60.0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lat += latDegrees  ;^102^^^^^62^127^[REPLACE] lon += lonDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^lat += latDegrees;^105^106^^^^62^127^[ADD] lat =  ( lat - latDegrees * 100 )  / 60.0; lat += latDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lon += lonDegrees  ;^106^^^^^62^127^[REPLACE] lat += latDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^int latDegrees =  (  ( int )   ( lat * 0.01 )  )  ;^100^^^^^62^127^[REPLACE] int lonDegrees =  ( int )   ( lon * 0.01 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^intlonDegrees =  ( int )   ( lat  0.01 ) ;^104^^^^^62^127^[REPLACE] int latDegrees =  ( int )   ( lat * 0.01 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  (  month == 1 )  {^117^^^^^62^127^[REPLACE] if  ( day == 0 && month == 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return true;^118^^^^^62^127^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^78^^^^^62^127^[ADD] deviceSession = getDeviceSession ( channel, remoteAddress, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^80^^^^^62^127^[ADD] deviceSession = getDeviceSession ( channel, remoteAddress ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lon =  ( lon - lonDegrees * 100 )   60.0;^101^^^^^62^127^[REPLACE] lon =  ( lon - lonDegrees * 100 )  / 60.0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^105^^^^^62^127^[ADD] lat =  ( lat - latDegrees * 100 )  / 60.0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return true;^83^^^^^62^127^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^73^^^^^62^127^[ADD] Position position = new Position (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^double lon = parser.next (  ) ;^94^^^^^62^127^[REPLACE] double lon = parser.nextDouble (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^boolean west = parser.hasNext (  ) .equals ( "W" ) ;^95^^^^^62^127^[REPLACE] boolean west = parser.next (  ) .equals ( "W" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^double lat = parser .next (  )  ;^96^^^^^62^127^[REPLACE] double lat = parser.nextDouble (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^boolean south = parser.hasNext (  ) .equals ( "S" ) ;^97^^^^^62^127^[REPLACE] boolean south = parser.next (  ) .equals ( "S" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^int lonDegrees =  ( int )   ( lon  0.01 ) ;^100^^^^^62^127^[REPLACE] int lonDegrees =  ( int )   ( lon * 0.01 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^int lonDegrees =  (  ( int )   ( lon * 0.01 )  )  ;^104^^^^^62^127^[REPLACE] int latDegrees =  ( int )   ( lat * 0.01 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^int month = parser.nextInt (  )  ;^115^^^^^62^127^[REPLACE] int day = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^116^^^^^62^127^[ADD] int month = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.next (  ) , month, day ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^121^122^123^^^62^127^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , month, day ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^getDeviceSession ( channel, remoteAddress, sentence.substring ( 0 , sentence.trim (  )  )  ) ;^64^^^^^57^130^[REPLACE] getDeviceSession ( channel, remoteAddress, sentence.substring ( 1, sentence.length (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^getDeviceSession ( channel, remoteAddress, sentence.substring ( 0 , sentence.length (  )  )  ) ;^64^^^^^57^130^[REPLACE] getDeviceSession ( channel, remoteAddress, sentence.substring ( 1, sentence.length (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^( sentence.length (  )  )  ;^64^^^^^57^130^[REPLACE] getDeviceSession ( channel, remoteAddress, sentence.substring ( 1, sentence.length (  )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( !parser.matches (   )  && parser.hasNext (  )  )  )  {^69^^^^^57^130^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return this;^70^^^^^57^130^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( ! ( parser.matches (  )  )  && ( parser.hasNext (  )  )  {^77^^^^^57^130^[REPLACE] if  ( parser.hasNext (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^80^^^^^77^81^[ADD] deviceSession = getDeviceSession ( channel, remoteAddress ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^deviceSession = getDeviceSession ( channel, remoteAddress )  ;^78^^^^^57^130^[REPLACE] deviceSession = getDeviceSession ( channel, remoteAddress, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != null )  {^82^^^^^57^130^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return true;^83^^^^^57^130^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  (true ) {^99^^^^^57^130^[REPLACE] if  ( lat > 90 || lon > 180 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^int lonDegrees =  ( int )   ( lon * 0.01 ) ;lon =  ( lon - lonDegrees * 100 )  / 60.0;lon += lonDegrees;^99^100^101^102^^57^130^[ADD] if  ( lat > 90 || lon > 180 )  { int lonDegrees =  ( int )   ( lon * 0.01 ) ; lon =  ( lon - lonDegrees * 100 )  / 60.0; lon += lonDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lat =  ( lat -  ( latDegrees * 100 )  )  / 60.0  ;^101^^^^^57^130^[REPLACE] lon =  ( lon - lonDegrees * 100 )  / 60.0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^102^^^^^57^130^[ADD] lon += lonDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lat =  ( lat - latDegrees * 100 )   60.0;^105^^^^^57^130^[REPLACE] lat =  ( lat - latDegrees * 100 )  / 60.0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lon += lonDegrees  ;^106^^^^^57^130^[REPLACE] lat += latDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^100^^^^^57^130^[ADD] int lonDegrees =  ( int )   ( lon * 0.01 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^104^105^^^^57^130^[ADD] int latDegrees =  ( int )   ( lat * 0.01 ) ; lat =  ( lat - latDegrees * 100 )  / 60.0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^if  ( false || west )  {^117^^^^^57^130^[REPLACE] if  ( day == 0 && month == 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^return null;^117^118^119^^^57^130^[ADD] if  ( day == 0 && month == 0 )  { return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return false;^118^^^^^57^130^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^80^^^^^57^130^[ADD] deviceSession = getDeviceSession ( channel, remoteAddress ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^101^^^^^57^130^[ADD] lon =  ( lon - lonDegrees * 100 )  / 60.0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^lat += latDegrees  ;^102^^^^^57^130^[REPLACE] lon += lonDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^106^^^^^57^130^[ADD] lat += latDegrees;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return false;^70^^^^^57^130^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return true;^118^^^^^57^130^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^double lon = parser .next (  )  ;^94^^^^^57^130^[REPLACE] double lon = parser.nextDouble (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^boolean west = parser.next (  ) .number ( "W" ) ;^95^^^^^57^130^[REPLACE] boolean west = parser.next (  ) .equals ( "W" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^double lat = parser .next (  )  ;^96^^^^^57^130^[REPLACE] double lat = parser.nextDouble (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^boolean south = parser .hasNext (  )  .equals ( "S" ) ;^97^^^^^57^130^[REPLACE] boolean south = parser.next (  ) .equals ( "S" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^int lonDegrees =  ( int )   ( lon  0.01 ) ;^100^^^^^57^130^[REPLACE] int lonDegrees =  ( int )   ( lon * 0.01 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^int latDegrees =  ( int )   ( lat  0.01 ) ;^104^^^^^57^130^[REPLACE] int latDegrees =  ( int )   ( lat * 0.01 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[ADD]^^115^^^^^57^130^[ADD] int day = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^int month = parser .next (  )  ;^116^^^^^57^130^[REPLACE] int month = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , month, day ) .expression ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^121^122^123^^^57^130^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , month, day ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
[REPLACE]^return true;^129^^^^^57^130^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] V680ProtocolDecoder   [TYPE]  Pattern PATTERN  [TYPE]  boolean false  south  true  west  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  double lat  lon  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int day  latDegrees  lonDegrees  month  [TYPE]  Parser parser 
