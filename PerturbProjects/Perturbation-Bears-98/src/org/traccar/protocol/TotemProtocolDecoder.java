[REPLACE]^private static final Pattern PATTERN1 ;^38^39^40^41^^38^70^[REPLACE] private static final Pattern PATTERN1 = new PatternBuilder (  ) .text ( "$$" ) .number ( "xx" ) .number ( " ( d+ ) |" )^ [CLASS] TotemProtocolDecoder  
[REPLACE]^private static final Pattern PATTERN2 ;^72^73^74^75^^72^99^[REPLACE] private static final Pattern PATTERN2 = new PatternBuilder (  ) .text ( "$$" ) .number ( "xx" ) .number ( " ( d+ ) |" )^ [CLASS] TotemProtocolDecoder  
[REPLACE]^private static final Pattern PATTERN3  = null ;^101^102^103^104^^101^129^[REPLACE] private static final Pattern PATTERN3 = new PatternBuilder (  ) .text ( "$$" ) .number ( "xx" ) .number ( " ( d+ ) |" )^ [CLASS] TotemProtocolDecoder  
[REPLACE]^private static final Pattern PATTERN4  = null ;^131^132^133^134^^131^164^[REPLACE] private static final Pattern PATTERN4 = new PatternBuilder (  ) .text ( "$$" ) .number ( "dddd" ) .text ( "AA" )^ [CLASS] TotemProtocolDecoder  
[ADD]^^190^^^^^185^333^[ADD] Pattern pattern = PATTERN3;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext (  )  || ( sentence.indexOf ( "AA" )   !=  6 )  {^191^^^^^185^333^[REPLACE] if  ( sentence.indexOf ( "AA" )  == 6 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^}  if  (  ( sentence.indexOf ( "AA" )  )  == 6  && ( sentence.contains ( "$GPRMC" )  )  {^193^^^^^185^333^[REPLACE] } else if  ( sentence.contains ( "$GPRMC" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  (  sentence.indexOf ( '|', index + 0 )  != -0 )  {^197^^^^^193^200^[REPLACE] if  ( index != -1 && sentence.indexOf ( '|', index + 1 )  != -1 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REMOVE]^if  ( sentence.contains ( "$GPRMC" )  )  {     pattern = PATTERN1; }else {     int index = sentence.indexOf ( '|' ) ;     if  (  ( index !=  ( -1 )  )  &&  (  ( sentence.indexOf ( '|',  ( index + 1 )  )  )  !=  ( -1 )  )  )  {         pattern = PATTERN2;     } }^197^^^^^193^200^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^pattern = PATTERN1  ;^198^^^^^193^200^[REPLACE] pattern = PATTERN2;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^int index = sentence .indexOf ( lac , cid )  ;^196^^^^^193^200^[REPLACE] int index = sentence.indexOf ( '|' ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^pattern = PATTERN2  ;^194^^^^^185^333^[REPLACE] pattern = PATTERN1;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( index != -1 || sentence.indexOf ( '|', index + 1 )  != -1 )  {^197^^^^^185^333^[REPLACE] if  ( index != -1 && sentence.indexOf ( '|', index + 1 )  != -1 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^pattern = PATTERN2;^197^198^199^^^185^333^[ADD] if  ( index != -1 && sentence.indexOf ( '|', index + 1 )  != -1 )  { pattern = PATTERN2; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^198^^^^^185^333^[ADD] pattern = PATTERN2;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^pattern = PATTERN1  ;^198^^^^^185^333^[REPLACE] pattern = PATTERN2;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^pattern = PATTERN2  ;^192^^^^^185^333^[REPLACE] pattern = PATTERN4;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^}  if  ( sentence.indexOf ( "$GPRMC"  )  ||  ( sentence.indexOf ( "AA" )  )  == 6  )  )  {^193^^^^^185^333^[REPLACE] } else if  ( sentence.contains ( "$GPRMC" )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^}   pattern = PATTERN1;int index = sentence.indexOf ( '|' ) ;^193^194^195^196^^185^333^[ADD] else if  ( sentence.contains ( "$GPRMC" )  )  { pattern = PATTERN1; } else { int index = sentence.indexOf ( '|' ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( index != -1 || sentence.indexOf ( '|', index + 1 )  != -1 )  {^197^^^^^193^200^[REPLACE] if  ( index != -1 && sentence.indexOf ( '|', index + 1 )  != -1 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^int index = sentence .indexOf ( cid , lac )  ;^196^^^^^193^200^[REPLACE] int index = sentence.indexOf ( '|' ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( true ) {^197^^^^^185^333^[REPLACE] if  ( index != -1 && sentence.indexOf ( '|', index + 1 )  != -1 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^Parser parser = new Parser ( PATTERN3, sentence ) ;^202^^^^^185^333^[REPLACE] Parser parser = new Parser ( pattern, sentence ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( !parser.nextInt (  )  )  {^203^^^^^185^333^[REPLACE] if  ( !parser.matches (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^return true;^204^^^^^185^333^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^return false;^204^^^^^185^333^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^207^208^^^^185^333^[ADD] Position position = new Position (  ) ; position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.setValid ( getProtocolName (  )  ) ;^208^^^^^185^333^[REPLACE] position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^208^^^^^185^333^[ADD] position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress, parser.hasNext (  )  ) ;^210^^^^^185^333^[REPLACE] DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress, parser.next (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( deviceSession != null  || year == 0  )  {^211^^^^^185^333^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^return false;^212^^^^^185^333^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^return this;^212^^^^^185^333^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.setValid ( deviceSession.getDeviceId (  )  ) ;^214^^^^^185^333^[REPLACE] position.setDeviceId ( deviceSession.getDeviceId (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( pattern == PATTERN1 && pattern == PATTERN2 )  {^216^^^^^185^333^[REPLACE] if  ( pattern == PATTERN1 || pattern == PATTERN2 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^}  if  ( pattern  &&  PATTERN3 )  {^260^^^^^185^333^[REPLACE] } else if  ( pattern == PATTERN3 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^}  if  (PATTERN3  ||  PATTERN4 )  {^293^^^^^185^333^[REPLACE] } else if  ( pattern == PATTERN4 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .text ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^297^298^299^^^185^333^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.next (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^297^298^299^^^185^333^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( parser.hasNext (   )  ||  ( sentence.indexOf ( "AA" )  )  == 6  )  )  {^261^^^^^185^333^[REPLACE] if  ( parser.hasNext (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^decodeAlarm ( parseShort ( parser.next (  ) , 16 )  )  ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^parseShort ( parser.next (  ) , 16 )  ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 0 )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^262^^^^^185^333^[ADD] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.hasNext (  ) , 16 )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser.next (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^264^265^266^^^185^333^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^261^262^263^^^185^333^[ADD] if  ( parser.hasNext (  )  )  { position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 + 1 )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser .hasNext (  )  , 16 )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^}  if  (PATTERN3  !=  PATTERN4 )  {^293^^^^^185^333^[REPLACE] } else if  ( pattern == PATTERN4 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^}   position.set ( Position.KEY_STATUS, parser.next (  )  ) ;^293^294^295^^297^185^333^[ADD] else if  ( pattern == PATTERN4 )  {  position.set ( Position.KEY_STATUS, parser.next (  )  ) ; DateBuilder dateBuilder = new DateBuilder (  )^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^217^218^219^^^185^333^[ADD] if  ( parser.hasNext (  )  )  { position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 / 1 )  )  ) ;^218^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^parseShort ( parser.next (  ) , 16 )  ;^218^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^218^^^^^185^333^[ADD] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^decodeAlarm ( parseShort ( parser.next (  ) , 16 )  )  ;^218^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.hasNext (  ) , 16 )  )  ) ;^218^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  (   PATTERN2 )  {^222^^^^^185^333^[REPLACE] if  ( pattern == PATTERN2 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^dateBuilder.setDay ( parser.nextInt (  )  ) .setMonth ( parser.nextInt (  )  ) ;year = parser.nextInt (  ) ;dateBuilder.setYear ( year ) ;^222^223^224^225^226^185^333^[ADD] if  ( pattern == PATTERN2 )  { dateBuilder.setDay ( parser.nextInt (  )  ) .setMonth ( parser.nextInt (  )  ) ; year = parser.nextInt (  ) ; dateBuilder.setYear ( year ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^224^225^^^^185^333^[ADD] year = parser.nextInt (  ) ; dateBuilder.setYear ( year ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( pattern  !=  PATTERN1 )  {^235^^^^^185^333^[REPLACE] if  ( pattern == PATTERN1 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^dateBuilder.setDay ( parser.nextInt (  )  ) .setMonth ( parser.nextInt (  )  ) ;year = parser.nextInt (  ) ;dateBuilder.setYear ( year ) ;^235^236^237^238^239^185^333^[ADD] if  ( pattern == PATTERN1 )  { dateBuilder.setDay ( parser.nextInt (  )  ) .setMonth ( parser.nextInt (  )  ) ; year = parser.nextInt (  ) ; dateBuilder.setYear ( year ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^year =  null.nextInt (  ) ;^237^^^^^185^333^[REPLACE] year = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( year  !=  0L  ||  ( sentence.indexOf ( "AA" )  )  == 6  )  {^240^^^^^185^333^[REPLACE] if  ( year == 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^return this;^241^^^^^185^333^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  (  cid != 0 )  {^253^^^^^185^333^[REPLACE] if  ( lac != 0 && cid != 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^position.setNetwork ( new Network ( CellTower.fromLacCid ( lac, cid )  )  ) ;^253^254^255^^^185^333^[ADD] if  ( lac != 0 && cid != 0 )  { position.setNetwork ( new Network ( CellTower.fromLacCid ( lac, cid )  )  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.setNetwork ( new Network ( CellTower .fromLacCid (  )   )  ) ;^254^^^^^185^333^[REPLACE] position.setNetwork ( new Network ( CellTower.fromLacCid ( lac, cid )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.setNetwork ( new Network ( CellTower.fromLacCid ( year, cid )  )  ) ;^254^^^^^185^333^[REPLACE] position.setNetwork ( new Network ( CellTower.fromLacCid ( lac, cid )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^year =  null.nextInt (  ) ;^224^^^^^185^333^[REPLACE] year = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^237^^^^^185^333^[ADD] year = parser.nextInt (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^return true;^241^^^^^185^333^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^int year = 0 - 0;^221^^^^^185^333^[REPLACE] int year = 0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^int cid = parser.nextInt ( 16 )  ;^251^^^^^185^333^[REPLACE] int lac = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^int cid = parser.nextInt ( 10 ) ;^252^^^^^185^333^[REPLACE] int cid = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 >>> 2 )  )  ) ;^218^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 4 )  )  ) ;^218^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^parser.hasNext (  )  ;^218^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  (  ( pattern ==  ( PATTERN1 )  )  ||  ( pattern ==  ( PATTERN2 )  )  && ( pattern  !=  PATTERN2 )  {^222^^^^^185^333^[REPLACE] if  ( pattern == PATTERN2 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  (   PATTERN1 )  {^235^^^^^185^333^[REPLACE] if  ( pattern == PATTERN1 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  (lac  !=  0 )  {^240^^^^^185^333^[REPLACE] if  ( year == 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^return false;^241^^^^^185^333^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( lac != 4 || cid != 4 )  {^253^^^^^185^333^[REPLACE] if  ( lac != 0 && cid != 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.setNetwork ( new Network ( CellTower.fromLacCid ( lac, index )  )  ) ;^254^^^^^185^333^[REPLACE] position.setNetwork ( new Network ( CellTower.fromLacCid ( lac, cid )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^}  if  (PATTERN4  ) {^260^^^^^185^333^[REPLACE] } else if  ( pattern == PATTERN3 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^} else if  ( pattern  !=  PATTERN4 )  {^293^^^^^185^333^[REPLACE] } else if  ( pattern == PATTERN4 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setYear ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^297^298^299^^^185^333^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 - 2 )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16L )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 1 )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^parser.hasNext (  )  ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser .nextInt (  )  , parser^264^265^266^^^185^333^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 13 )  )  ) ;^262^^^^^185^333^[REPLACE] position.set ( Position.KEY_ALARM, decodeAlarm ( Short.parseShort ( parser.next (  ) , 16 )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^}  else {^293^^^^^185^333^[REPLACE] } else if  ( pattern == PATTERN4 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser .nextInt (  )  , parser^297^298^299^^^185^333^[REPLACE] DateBuilder dateBuilder = new DateBuilder (  ) .setDate ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^220^^^^^185^333^[ADD] DateBuilder dateBuilder = new DateBuilder (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^int year = 2;^221^^^^^185^333^[REPLACE] int year = 0;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^251^252^^^^185^333^[ADD] int lac = parser.nextInt ( 16 ) ; int cid = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^int lac = parser.nextInt ( 16 )  ;^252^^^^^185^333^[REPLACE] int cid = parser.nextInt ( 16 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[ADD]^^264^265^266^^^185^333^[ADD] DateBuilder dateBuilder = new DateBuilder (  ) .setDateReverse ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) .setTime ( parser.nextInt (  ) , parser.nextInt (  ) , parser.nextInt (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
[REPLACE]^if  ( channel == false )  {^329^^^^^185^333^[REPLACE] if  ( channel != null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] TotemProtocolDecoder   [TYPE]  Pattern PATTERN1  PATTERN2  PATTERN3  PATTERN4  pattern  [TYPE]  boolean false  true  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  DateBuilder dateBuilder  [TYPE]  Channel channel  [TYPE]  Object msg  [TYPE]  String sentence  [TYPE]  SocketAddress remoteAddress  [TYPE]  int cid  index  lac  year  [TYPE]  Parser parser 
