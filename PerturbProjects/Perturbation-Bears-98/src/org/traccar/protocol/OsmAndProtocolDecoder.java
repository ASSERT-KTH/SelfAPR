[ADD]^^57^58^^^^55^145^[ADD] HttpRequest request =  ( HttpRequest )  msg; QueryStringDecoder decoder = new QueryStringDecoder ( request.getUri (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^QueryStringDecoder decoder = new QueryStringDecoder ( request.getContent (  )  ) ;^58^^^^^55^145^[REPLACE] QueryStringDecoder decoder = new QueryStringDecoder ( request.getUri (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^String, String>> entry  ;^59^^^^^55^145^[REPLACE] Map<String, List<String>> params = decoder.getParameters (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( params.entrySet (  )  )  {^60^^^^^55^145^[REPLACE] if  ( params.isEmpty (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^decoder = new QueryStringDecoder ( request.getContent (  ) .toString ( StandardCharsets.US_ASCII ) , false ) ;params = decoder.getParameters (  ) ;^60^61^62^63^^55^145^[ADD] if  ( params.isEmpty (  )  )  { decoder = new QueryStringDecoder ( request.getContent (  ) .toString ( StandardCharsets.US_ASCII ) , false ) ; params = decoder.getParameters (  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^decoder = new QueryStringDecoder ( request.getContent (  ) .toString ( StandardCharsets.US_ASCII ) , true ) ;^61^^^^^55^145^[REPLACE] decoder = new QueryStringDecoder ( request.getContent (  ) .toString ( StandardCharsets.US_ASCII ) , false ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^62^^^^^55^145^[ADD] params = decoder.getParameters (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^params =  null.getParameters (  ) ;^62^^^^^55^145^[REPLACE] params = decoder.getParameters (  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^position .setTime ( null )  ;^66^^^^^55^145^[REPLACE] position.setProtocol ( getProtocolName (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REMOVE]^position.setProtocol ( getProtocolName (  )  )  ;^66^^^^^55^145^[REMOVE] ^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^position.setValid ( false ) ;^67^^^^^55^145^[REPLACE] position.setValid ( true ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( deviceSession != true )  {^75^^^^^55^145^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^75^76^77^78^^55^145^[ADD] if  ( deviceSession == null )  { sendResponse ( channel, HttpResponseStatus.BAD_REQUEST ) ; return null; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^return this;^77^^^^^55^145^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( timestamp  ==  Integer.MAX_VALUE )  {^87^^^^^55^145^[REPLACE] if  ( timestamp < Integer.MAX_VALUE )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^timestamp *= 232;^88^^^^^55^145^[REPLACE] timestamp *= 1000;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^92^93^94^95^96^55^145^[ADD] if  ( value.contains ( "T" )  )  { position.setTime ( new Date ( ISODateTimeFormat.dateTimeParser (  ) .parseMillis ( value )  )  ) ; } else { DateFormat dateFormat = new SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^position.setTime ( new Date ( ISODateTimeFormat.dateTimeParser (  )  .getDeviceSession ( null , remoteAddress , value )   )  ) ;^93^94^^^^55^145^[REPLACE] position.setTime ( new Date ( ISODateTimeFormat.dateTimeParser (  ) .parseMillis ( value )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^93^94^^^^55^145^[ADD] position.setTime ( new Date ( ISODateTimeFormat.dateTimeParser (  ) .parseMillis ( value )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^dateTimeParser (  )  ;^94^^^^^55^145^[REPLACE] ISODateTimeFormat.dateTimeParser (  ) .parseMillis ( value )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^dateTimeParser (  ) .parseMillis ( value )  ;^94^^^^^55^145^[REPLACE] ISODateTimeFormat.dateTimeParser (  ) .parseMillis ( value )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^69^70^71^72^73^55^145^[ADD] for  ( Map.Entry<String, List<String>> entry : params.entrySet (  )  )  { String value = entry.getValue (  ) .get ( 0 ) ; switch  ( entry.getKey (  )  )  { case "id": case "deviceid":^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( deviceSession != null )  {^75^^^^^55^145^[REPLACE] if  ( deviceSession == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^return false;^77^^^^^55^145^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( timestamp  <=  Integer.MAX_VALUE )  {^87^^^^^55^145^[REPLACE] if  ( timestamp < Integer.MAX_VALUE )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^88^^^^^55^145^[ADD] timestamp *= 1000;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^position .getFixTime (  )   )  ) ;^93^94^^^^55^145^[REPLACE] position.setTime ( new Date ( ISODateTimeFormat.dateTimeParser (  ) .parseMillis ( value )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^ISODateTimeFormat.dateTimeParser (  ) .toString ( value )  )  ) ;^94^^^^^55^145^[REPLACE] ISODateTimeFormat.dateTimeParser (  ) .parseMillis ( value )  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^long timestamp = Long.parseLong ( value ) ;timestamp *= 1000;^85^86^87^88^89^55^145^[ADD] try { long timestamp = Long.parseLong ( value ) ; if  ( timestamp < Integer.MAX_VALUE )  { timestamp *= 1000; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( timestamp  >=  Integer.MAX_VALUE )  {^87^^^^^55^145^[REPLACE] if  ( timestamp < Integer.MAX_VALUE )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^timestamp *= 441;^88^^^^^55^145^[REPLACE] timestamp *= 1000;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^86^^^^^55^145^[ADD] long timestamp = Long.parseLong ( value ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^timestamp *= 3;^88^^^^^55^145^[REPLACE] timestamp *= 1000;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^return true;^77^^^^^55^145^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^70^^^^^55^145^[ADD] String value = entry.getValue (  ) .get ( 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^String[] location = value .contains ( this )  ;^108^^^^^55^145^[REPLACE] String[] location = value.split ( "," ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^91^92^93^^^55^145^[ADD] catch  ( NumberFormatException error )  { if  ( value.contains ( "T" )  )  { position.setTime ( new Date (^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( timestamp  !=  Integer.MAX_VALUE )  {^87^^^^^55^145^[REPLACE] if  ( timestamp < Integer.MAX_VALUE )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^timestamp *= 387;^88^^^^^55^145^[REPLACE] timestamp *= 1000;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^timestamp *= 964;^88^^^^^55^145^[REPLACE] timestamp *= 1000;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^timestamp *= 1000 - 2;^88^^^^^55^145^[REPLACE] timestamp *= 1000;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^String, String>> params = decoder.getParameters (  )  ;^69^^^^^55^145^[REPLACE] for  ( Map.Entry<String, List<String>> entry : params.entrySet (  )  )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^String value = entry.getValue (  ) .get ( 0L ) ;^70^^^^^55^145^[REPLACE] String value = entry.getValue (  ) .get ( 0 ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^74^^^^^55^145^[ADD] DeviceSession deviceSession = getDeviceSession ( channel, remoteAddress, value ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^String[] location = value .contains ( false )  ;^108^^^^^55^145^[REPLACE] String[] location = value.split ( "," ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  (  ( position.getDeviceId (  )  )  != 0  || ( position.set (  )  != false )  {^134^^^^^55^145^[REPLACE] if  ( position.getFixTime (  )  == null )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^134^135^136^^^55^145^[ADD] if  ( position.getFixTime (  )  == null )  { position.setTime ( new Date (  )  ) ; }^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^position.set ( new Date (  )  ) ;^135^^^^^55^145^[REPLACE] position.setTime ( new Date (  )  ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^if  ( position.getDeviceId (  )   ==  1 )  {^138^^^^^55^145^[REPLACE] if  ( position.getDeviceId (  )  != 0 )  {^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[ADD]^^138^139^140^141^142^55^145^[ADD] if  ( position.getDeviceId (  )  != 0 )  { sendResponse ( channel, HttpResponseStatus.OK ) ; return position; } else { sendResponse ( channel, HttpResponseStatus.BAD_REQUEST ) ;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^return false;^143^^^^^138^144^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
[REPLACE]^return this;^143^^^^^55^145^[REPLACE] return null;^[METHOD] decode [TYPE] Object [PARAMETER] Channel channel SocketAddress remoteAddress Object msg [CLASS] OsmAndProtocolDecoder   [TYPE]  HttpRequest request  [TYPE]  DeviceSession deviceSession  [TYPE]  Position position  [TYPE]  Channel channel  [TYPE]  NumberFormatException error  [TYPE]  String value  [TYPE]  String[] location  [TYPE]  long timestamp  [TYPE]  QueryStringDecoder decoder  [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  DateFormat dateFormat  [TYPE]  Object msg  [TYPE]  SocketAddress remoteAddress  [TYPE]  Map params 
