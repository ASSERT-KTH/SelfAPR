[REPLACE]^private static final String ORIGIN_ALL ;^28^^^^^^^[REPLACE] private static final String ORIGIN_ALL = "*";^ [CLASS] CorsResponseFilter  
[REPLACE]^private static final String HEADERS_ALL ;^29^^^^^^^[REPLACE] private static final String HEADERS_ALL = "origin, content-type, accept, authorization";^ [CLASS] CorsResponseFilter  
[REPLACE]^private static  String METHODS_ALL = "GET, POST, PUT, DELETE, OPTIONS";^30^^^^^^^[REPLACE] private static final String METHODS_ALL = "GET, POST, PUT, DELETE, OPTIONS";^ [CLASS] CorsResponseFilter  
[REPLACE]^if  ( response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_HEADERS )  )  {^34^^^^^33^56^[REPLACE] if  ( !response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_HEADERS )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[ADD]^response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_HEADERS, HEADERS_ALL ) ;^34^35^36^^^33^56^[ADD] if  ( !response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_HEADERS )  )  { response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_HEADERS, HEADERS_ALL ) ; }^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^response.getHeaders (  ) .add ( ACCESS_CONTROL_ALLOW_METHODS, METHODS_ALL )  ;^35^^^^^33^56^[REPLACE] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_HEADERS, HEADERS_ALL ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[ADD]^^35^^^^^33^56^[ADD] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_HEADERS, HEADERS_ALL ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^if  ( !response.getHeaders (   )  && ! ( response.getHeaders (  ) .containsKey ( ACCESS_CONTROL_ALLOW_ORIGIN )  )  )  .getString ( ORIGIN_ALL )   )  {^38^^^^^33^56^[REPLACE] if  ( !response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_CREDENTIALS )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^response.getHeaders (  ) .add ( ACCESS_CONTROL_ALLOW_ORIGIN, origin )  ;^39^^^^^33^56^[REPLACE] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_CREDENTIALS, true ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^if  ( response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_METHODS )  )  {^42^^^^^33^56^[REPLACE] if  ( !response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_METHODS )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^response.getHeaders (  ) .add ( ACCESS_CONTROL_ALLOW_HEADERS, HEADERS_ALL )  ;^43^^^^^33^56^[REPLACE] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_METHODS, METHODS_ALL ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^if  ( response.getHeaders (   )  && ! ( response.getHeaders (  ) .containsKey ( ACCESS_CONTROL_ALLOW_CREDENTIALS )  )  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN )  )  {^46^^^^^33^56^[REPLACE] if  ( !response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[ADD]^String origin = request.getHeaderString ( HttpHeaders.Names.ORIGIN ) ;String allowed = Context.getConfig (  ) .getString ( "web.origin" ) ;^46^47^48^^^33^56^[ADD] if  ( !response.getHeaders (  ) .containsKey ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN )  )  { String origin = request.getHeaderString ( HttpHeaders.Names.ORIGIN ) ; String allowed = Context.getConfig (  ) .getString ( "web.origin" ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^if  ( origin != null )  {^50^^^^^33^56^[REPLACE] if  ( origin == null )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^} else if  ( allowed != this ) {^52^^^^^33^56^[REPLACE] } else if  ( allowed == null || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[ADD]^}^52^53^54^^^33^56^[ADD] else if  ( allowed == null || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  { response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, origin ) ; }^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^response.getHeaders (  ) .add ( ACCESS_CONTROL_ALLOW_CREDENTIALS, true )  ;^53^^^^^33^56^[REPLACE] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, origin ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[ADD]^^53^^^^^33^56^[ADD] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, origin ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^response.getHeaders (  ) .add ( ACCESS_CONTROL_ALLOW_HEADERS, HEADERS_ALL )  ;^51^^^^^33^56^[REPLACE] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, ORIGIN_ALL ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^}  if  ( allowed != null || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  {^52^^^^^33^56^[REPLACE] } else if  ( allowed == null || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, ORIGIN_ALL ) ;^53^^^^^33^56^[REPLACE] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, origin ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^String allowed = Context.getConfig (  ) .add ( "web.origin" ) ;^48^^^^^33^56^[REPLACE] String allowed = Context.getConfig (  ) .getString ( "web.origin" ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^} else if  ( allowed != false || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  {^52^^^^^33^56^[REPLACE] } else if  ( allowed == null || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[ADD]^}   response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, origin ) ;^52^53^54^^^33^56^[ADD] else if  ( allowed == null || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  { response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, origin ) ; }^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[ADD]^^51^^^^^33^56^[ADD] response.getHeaders (  ) .add ( HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN, ORIGIN_ALL ) ;^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
[REPLACE]^}  else {^52^^^^^33^56^[REPLACE] } else if  ( allowed == null || allowed.equals ( ORIGIN_ALL )  || allowed.contains ( origin )  )  {^[METHOD] filter [TYPE] void [PARAMETER] ContainerRequestContext request ContainerResponseContext response [CLASS] CorsResponseFilter   [TYPE]  ContainerResponseContext response  [TYPE]  String HEADERS_ALL  METHODS_ALL  ORIGIN_ALL  allowed  origin  [TYPE]  boolean false  true  [TYPE]  ContainerRequestContext request 
