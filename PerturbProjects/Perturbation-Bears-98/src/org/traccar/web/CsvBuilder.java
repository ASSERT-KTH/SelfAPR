[REPLACE]^private  final String LINE_ENDING = "\r\n";^39^^^^^^^[REPLACE] private static final String LINE_ENDING = "\r\n";^ [CLASS] CsvBuilder 1  
[REPLACE]^private static final String SEPARATOR  = null ;^40^^^^^^^[REPLACE] private static final String SEPARATOR = ";";^ [CLASS] CsvBuilder 1  
[REPLACE]^private static final DateTimeFormatter DATE_FORMAT ;^41^^^^^^^[REPLACE] private static final DateTimeFormatter DATE_FORMAT = ISODateTimeFormat.dateTime (  ) ;^ [CLASS] CsvBuilder 1  
[REPLACE]^private StringBuilder builder ;^43^^^^^^^[REPLACE] private StringBuilder builder = new StringBuilder (  ) ;^ [CLASS] CsvBuilder 1  
[REPLACE]^Method[] methodArray = object.Object (  ) .getMethods (  ) ;^53^^^^^52^68^[REPLACE] Method[] methodArray = object.getClass (  ) .getMethods (  ) ;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^if  ( m1.getName (  ) .equals ( "getAttributes" )  && m1.getName (  ) .equals ( m2.getName (  )  )  )  {^57^^^^^52^68^[REPLACE] if  ( m1.getName (  ) .equals ( "getAttributes" )  && !m1.getName (  ) .equals ( m2.getName (  )  )  )  {^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^return 1 % 4;^58^^^^^52^68^[REPLACE] return 1;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^if  ( m2.getName (  ) .equals ( "getAttributes" )  && m1.getName (  ) .equals ( m2.getName (  )  )  )  {^60^^^^^52^68^[REPLACE] if  ( m2.getName (  ) .equals ( "getAttributes" )  && !m1.getName (  ) .equals ( m2.getName (  )  )  )  {^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[ADD]^return -1;^60^61^62^^^52^68^[ADD] if  ( m2.getName (  ) .equals ( "getAttributes" )  && !m1.getName (  ) .equals ( m2.getName (  )  )  )  { return -1; }^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^return 1  ;^61^^^^^52^68^[REPLACE] return -1;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^return -1  ;^58^^^^^52^68^[REPLACE] return 1;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^return -1 + 0;^61^^^^^52^68^[REPLACE] return -1;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^return m1.getReturnType (  ) .compareTo ( m2.getName (  )  ) ;^63^^^^^52^68^[REPLACE] return m1.getName (  ) .compareTo ( m2.getName (  )  ) ;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^asList ( methodArray )  ;^66^^^^^52^68^[REPLACE] methods.addAll ( Arrays.asList ( methodArray )  ) ;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^methods.addAll ( asList ( methodArray )  )  ;^66^^^^^52^68^[REPLACE] methods.addAll ( Arrays.asList ( methodArray )  ) ;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[ADD]^return methods;^66^67^^^^52^68^[ADD] methods.addAll ( Arrays.asList ( methodArray )  ) ; return methods;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^return null;^67^^^^^52^68^[REPLACE] return methods;^[METHOD] getSortedMethods [TYPE] SortedSet [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  [TYPE]  Method m1  m2  [TYPE]  Method[] methodArray  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods 
[REPLACE]^if  ( method.getName (  ) .startsWith ( "get" )  && method.getParameterTypes (  ) .length (  )  == 0 )  {^75^^^^^70^116^[REPLACE] if  ( method.getName (  ) .startsWith ( "get" )  && method.getParameterTypes (  ) .length == 0 )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( boolean.class )  )  {^77^^^^^70^116^[REPLACE] if  ( method.getReturnType (  ) .equals ( boolean.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  else {^80^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( int.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   addSeparator (  ) ;builder.append (  ( Long )  method.invoke ( object )  ) ;^80^81^82^83^84^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( int.class )  )  { builder.append (  ( Integer )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( long.class )  )  { builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  else {^83^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( long.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   addSeparator (  ) ;builder.append (  ( Double )  method.invoke ( object )  ) ;^83^84^85^86^87^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( long.class )  )  { builder.append (  ( Long )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( double.class )  )  { builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  else {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   builder.append (  ( Double )  method.invoke ( object )  ) ;addSeparator (  ) ;builder.append (  ( String )  method.invoke ( object )  ) ;^86^87^88^89^90^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( double.class )  )  { builder.append (  ( Double )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( String.class )  )  { builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   builder.append (  ( String )  method.invoke ( object )  ) ;addSeparator (  ) ;Date value =  ( Date )  method.invoke ( object ) ;^89^90^91^92^93^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( String.class )  )  { builder.append (  ( String )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  { Date value =  ( Date )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   builder.append ( DATE_FORMAT.print ( new DateTime ( value )  )  ) ;addSeparator (  ) ;^92^93^94^95^^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( Date.class )  )  { Date value =  ( Date )  method.invoke ( object ) ; builder.append ( DATE_FORMAT.print ( new DateTime ( value )  )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  else {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( value == this )  {^98^^^^^70^116^[REPLACE] if  ( value != null )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ;map = map.replaceAll ( "[\\{\\}\"]", "" ) ;map = map.replaceAll ( ",", " " ) ;builder.append ( map ) ;^99^100^101^102^103^70^116^[ADD] try { String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ; map = map.replaceAll ( "[\\{\\}\"]", "" ) ; map = map.replaceAll ( ",", " " ) ; builder.append ( map ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^map = map.replaceAll ( ",", " " )  ;^101^^^^^70^116^[REPLACE] map = map.replaceAll ( "[\\{\\}\"]", "" ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^map = map.replaceAll ( "[\\{\\}\"]", "" )  ;^102^^^^^70^116^[REPLACE] map = map.replaceAll ( ",", " " ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^Date value =  (  ( Date )   ( method.invoke ( object )  )  )  ;^97^^^^^70^116^[REPLACE] Map value =  ( Map )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( value == null )  {^98^^^^^70^116^[REPLACE] if  ( value != null )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( class )  )  {     Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;     if  ( value != null )  {         try {             String map = getObjectMapper (  ) .writeValueAsString ( value ) ;             map = map.replaceAll ( "[\\{\\}\"]", "" ) ;             map = map.replaceAll ( ",", " " ) ;             builder.append ( map ) ;             addSeparator (  ) ;         } catch  ( JsonProcessingException e )  {             warning ( e ) ;         }     } }^98^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^105^106^^^^70^116^[ADD] catch  ( JsonProcessingException e )  { Log.warning ( e ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^102^^^^^70^116^[ADD] map = map.replaceAll ( ",", " " ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^97^^^^^70^116^[ADD] Map value =  ( Map )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^Date value =  ( Date )  method.getParameterTypes ( object ) ;^93^^^^^70^116^[REPLACE] Date value =  ( Date )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   Map value =  ( Map )  method.invoke ( object ) ;String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ;^96^97^98^99^100^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( Map.class )  )  { Map value =  ( Map )  method.invoke ( object ) ; if  ( value != null )  { try { String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^Map value =  ( Map )  method .getReturnType (  )  ;^97^^^^^70^116^[REPLACE] Map value =  ( Map )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( value == this  )  {^98^^^^^70^116^[REPLACE] if  ( value != null )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^101^^^^^70^116^[ADD] map = map.replaceAll ( "[\\{\\}\"]", "" ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^100^^^^^70^116^[ADD] String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^102^103^^^^70^116^[ADD] map = map.replaceAll ( ",", " " ) ; builder.append ( map ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^builder.append ( DATE_FORMAT.print ( new DateTime ( value )  )  ) ;^93^94^^^^70^116^[ADD] Date value =  ( Date )  method.invoke ( object ) ; builder.append ( DATE_FORMAT.print ( new DateTime ( value )  )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.toString (  ( String )  method.invoke ( object )  ) ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^90^91^^^^70^116^[ADD] builder.append (  ( String )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^(  ( Long )   ( method.invoke ( object )  )  )  ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  else {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^Map value =  ( Map )  method.getParameterTypes ( object ) ;^97^^^^^70^116^[REPLACE] Map value =  ( Map )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^98^99^100^101^102^70^116^[ADD] if  ( value != null )  { try { String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ; map = map.replaceAll ( "[\\{\\}\"]", "" ) ; map = map.replaceAll ( ",", " " ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^builder.append ( map ) ;^102^103^^^^70^116^[ADD] map = map.replaceAll ( ",", " " ) ; builder.append ( map ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^100^101^^^^70^116^[ADD] String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ; map = map.replaceAll ( "[\\{\\}\"]", "" ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^Date value =  ( Date )  method .getReturnType (  )  ;^93^^^^^70^116^[REPLACE] Date value =  ( Date )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.StringBuilder (  ( Double )  method.invoke ( object )  ) ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^87^88^^^^70^116^[ADD] builder.append (  ( Double )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Double )  method.getParameterTypes ( object )  ) ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   addSeparator (  ) ;Date value =  ( Date )  method.invoke ( object ) ;^89^90^91^92^93^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( String.class )  )  { builder.append (  ( String )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  { Date value =  ( Date )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^101^102^^^^70^116^[ADD] map = map.replaceAll ( "[\\{\\}\"]", "" ) ; map = map.replaceAll ( ",", " " ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^map = map.replaceAll ( ",", " " ) ;^101^102^^^^70^116^[ADD] map = map.replaceAll ( "[\\{\\}\"]", "" ) ; map = map.replaceAll ( ",", " " ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( value == true )  {^98^^^^^70^116^[REPLACE] if  ( value != null )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ;^96^97^98^99^100^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( Map.class )  )  { Map value =  ( Map )  method.invoke ( object ) ; if  ( value != null )  { try { String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^Map value =  (  ( Map )   ( method.invoke ( object )  )  )  ;^93^^^^^70^116^[REPLACE] Date value =  ( Date )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( String )  method .getReturnType (  )   ) ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( value == false )  {^98^^^^^70^116^[REPLACE] if  ( value != null )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( class )  )  {     Date value =  (  ( Date )   ( method.invoke ( object )  )  ) ;     builder.append ( print ( new DateTime ( value )  )  ) ;     addSeparator (  ) ; }else     if  ( method.getReturnType (  ) .equals ( class )  )  {         Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;         if  ( value != null )  {             try {                 String map = getObjectMapper (  ) .writeValueAsString ( value ) ;                 map = map.replaceAll ( "[\\{\\}\"]", "" ) ;                 map = map.replaceAll ( ",", " " ) ;                 builder.append ( map ) ;                 addSeparator (  ) ;             } catch  ( JsonProcessingException e )  {                 warning ( e ) ;             }         }     }^96^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( LINE_ENDING )   ) ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^(  ( String )   ( method.invoke ( object )  )  )  ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^93^^^^^70^116^[ADD] Date value =  ( Date )  method.invoke ( object ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  (  ( Long )   ( method.invoke ( object )  )  )  )  ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  (  ( Boolean )   ( method.invoke ( object )  )  )  )  ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^method.getParameterTypes (  )  ;^88^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  else {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( double.class )  )  {     builder.append (  (  ( Double )   ( method.invoke ( object )  )  )  ) ;     addSeparator (  ) ; }else     if  ( method.getReturnType (  ) .equals ( class )  )  {         builder.append (  (  ( String )   ( method.invoke ( object )  )  )  ) ;         addSeparator (  ) ;     }else         if  ( method.getReturnType (  ) .equals ( class )  )  {             Date value =  (  ( Date )   ( method.invoke ( object )  )  ) ;             builder.append ( print ( new DateTime ( value )  )  ) ;             addSeparator (  ) ;         }else             if  ( method.getReturnType (  ) .equals ( class )  )  {                 Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;                 if  ( value != null )  {                     try {                         String map = getObjectMapper (  ) .writeValueAsString ( value ) ;                         map = map.replaceAll ( "[\\{\\}\"]", "" ) ;                         map = map.replaceAll ( ",", " " ) ;                         builder.append ( map ) ;                         addSeparator (  ) ;                     } catch  ( JsonProcessingException e )  {                         warning ( e ) ;                     }                 }             }^89^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( String )  method.getParameterTypes ( object )  ) ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^90^^^^^70^116^[ADD] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   Date value =  ( Date )  method.invoke ( object ) ;builder.append ( DATE_FORMAT.print ( new DateTime ( value )  )  ) ;addSeparator (  ) ;^92^93^94^95^^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( Date.class )  )  { Date value =  ( Date )  method.invoke ( object ) ; builder.append ( DATE_FORMAT.print ( new DateTime ( value )  )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Integer )  method .getReturnType (  )   ) ;^81^^^^^70^116^[REPLACE] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  ) .equals ( long.class )  )  {^83^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( long.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   builder.append (  ( Long )  method.invoke ( object )  ) ;addSeparator (  ) ;builder.append (  ( Double )  method.invoke ( object )  ) ;^83^84^85^86^87^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( long.class )  )  { builder.append (  ( Long )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( double.class )  )  { builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^93^94^^^^70^116^[ADD] Date value =  ( Date )  method.invoke ( object ) ; builder.append ( DATE_FORMAT.print ( new DateTime ( value )  )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^builder.append (  (  ( Long )   ( method.invoke ( object )  )  )  )  ;^90^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  )  .replaceAll ( SEPARATOR , LINE_ENDING )   )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( SEPARATOR )   ) ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^84^85^^^^70^116^[ADD] builder.append (  ( Long )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Long )  method.getParameterTypes ( object )  ) ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^85^^^^^70^116^[ADD] addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  )  .replaceAll ( SEPARATOR , LINE_ENDING )   )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^map = map.replaceAll ( "[\\{\\}\"]", "" ) ;^100^101^^^^70^116^[ADD] String map = Context.getObjectMapper (  ) .writeValueAsString ( value ) ; map = map.replaceAll ( "[\\{\\}\"]", "" ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^88^^^^^70^116^[ADD] addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( LINE_ENDING )   ) ;^78^^^^^70^116^[REPLACE] builder.append (  ( Boolean )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Boolean )  method .getReturnType (  )   ) ;^78^^^^^70^116^[REPLACE] builder.append (  ( Boolean )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^79^^^^^70^116^[ADD] addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( int.class )  )  {     builder.append (  (  ( Integer )   ( method.invoke ( object )  )  )  ) ;     addSeparator (  ) ; }else     if  ( method.getReturnType (  ) .equals ( long.class )  )  {         builder.append (  (  ( Long )   ( method.invoke ( object )  )  )  ) ;         addSeparator (  ) ;     }else         if  ( method.getReturnType (  ) .equals ( double.class )  )  {             builder.append (  (  ( Double )   ( method.invoke ( object )  )  )  ) ;             addSeparator (  ) ;         }else             if  ( method.getReturnType (  ) .equals ( class )  )  {                 builder.append (  (  ( String )   ( method.invoke ( object )  )  )  ) ;                 addSeparator (  ) ;             }else                 if  ( method.getReturnType (  ) .equals ( class )  )  {                     Date value =  (  ( Date )   ( method.invoke ( object )  )  ) ;                     builder.append ( print ( new DateTime ( value )  )  ) ;                     addSeparator (  ) ;                 }else                     if  ( method.getReturnType (  ) .equals ( class )  )  {                         Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;                         if  ( value != null )  {                             try {                                 String map = getObjectMapper (  ) .writeValueAsString ( value ) ;                                 map = map.replaceAll ( "[\\{\\}\"]", "" ) ;                                 map = map.replaceAll ( ",", " " ) ;                                 builder.append ( map ) ;                                 addSeparator (  ) ;                             } catch  ( JsonProcessingException e )  {                                 warning ( e ) ;                             }                         }                     }^83^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^91^^^^^70^116^[ADD] addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^(  ( Boolean )   ( method.invoke ( object )  )  )  ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   addSeparator (  ) ;builder.append (  ( String )  method.invoke ( object )  ) ;^86^87^88^89^90^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( double.class )  )  { builder.append (  ( Double )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( String.class )  )  { builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  )  .replaceAll ( map , map )   )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.StringBuilder (  ( Integer )  method.invoke ( object )  ) ;^81^^^^^70^116^[REPLACE] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^addSeparator (  ) ;^81^82^^^^70^116^[ADD] builder.append (  ( Integer )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^(  ( String )   ( method.invoke ( object )  )  )  ;^81^^^^^70^116^[REPLACE] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( long.class )  )  {^83^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( long.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Long )  method .getReturnType (  )   ) ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Double )  method .getReturnType (  )   ) ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( class )  )  {     builder.append (  (  ( String )   ( method.invoke ( object )  )  )  ) ;     addSeparator (  ) ; }else     if  ( method.getReturnType (  ) .equals ( class )  )  {         Date value =  (  ( Date )   ( method.invoke ( object )  )  ) ;         builder.append ( print ( new DateTime ( value )  )  ) ;         addSeparator (  ) ;     }else         if  ( method.getReturnType (  ) .equals ( class )  )  {             Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;             if  ( value != null )  {                 try {                     String map = getObjectMapper (  ) .writeValueAsString ( value ) ;                     map = map.replaceAll ( "[\\{\\}\"]", "" ) ;                     map = map.replaceAll ( ",", " " ) ;                     builder.append ( map ) ;                     addSeparator (  ) ;                 } catch  ( JsonProcessingException e )  {                     warning ( e ) ;                 }             }         }^92^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^builder.append (  ( Boolean )  method.invoke ( object )  ) ;addSeparator (  ) ;^76^77^78^79^80^70^116^[ADD] try { if  ( method.getReturnType (  ) .equals ( boolean.class )  )  { builder.append (  ( Boolean )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( int.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( boolean.class )  )  {^77^^^^^70^116^[REPLACE] if  ( method.getReturnType (  ) .equals ( boolean.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^}   builder.append (  ( Integer )  method.invoke ( object )  ) ;addSeparator (  ) ;builder.append (  ( Long )  method.invoke ( object )  ) ;^80^81^82^83^84^70^116^[ADD] else if  ( method.getReturnType (  ) .equals ( int.class )  )  { builder.append (  ( Integer )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( long.class )  )  { builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( long.class )  )  {^83^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( long.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method .getParameterTypes (  )  .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^(  ( Long )   ( method.invoke ( object )  )  )  ;^90^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^(  ( String )   ( method.invoke ( object )  )  )  ;^84^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( LINE_ENDING )   ) ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( SEPARATOR )   ) ;^81^^^^^70^116^[REPLACE] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Integer )  method.getParameterTypes ( object )  ) ;^81^^^^^70^116^[REPLACE] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^81^^^^^70^116^[ADD] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^method.getParameterTypes (  )  ;^82^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  (  ( String )   ( method.invoke ( object )  )  )  )  ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^84^^^^^70^116^[ADD] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.StringBuilder (  ( Boolean )  method.invoke ( object )  ) ;^78^^^^^70^116^[REPLACE] builder.append (  ( Boolean )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^(  ( Double )   ( method.invoke ( object )  )  )  ;^78^^^^^70^116^[REPLACE] builder.append (  ( Boolean )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( int.class )  )  {^80^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( int.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^addSeparator (  ) ;^90^91^^^^70^116^[ADD] builder.append (  ( String )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getParameterTypes (  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getParameterTypes (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.StringBuilder (  ( Long )  method.invoke ( object )  ) ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (  ) .equals ( int.class )  )  {^80^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( int.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^(  ( Boolean )   ( method.invoke ( object )  )  )  ;^87^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( long.class )  )  {     builder.append (  (  ( Long )   ( method.invoke ( object )  )  )  ) ;     addSeparator (  ) ; }else     if  ( method.getReturnType (  ) .equals ( double.class )  )  {         builder.append (  (  ( Double )   ( method.invoke ( object )  )  )  ) ;         addSeparator (  ) ;     }else         if  ( method.getReturnType (  ) .equals ( class )  )  {             builder.append (  (  ( String )   ( method.invoke ( object )  )  )  ) ;             addSeparator (  ) ;         }else             if  ( method.getReturnType (  ) .equals ( class )  )  {                 Date value =  (  ( Date )   ( method.invoke ( object )  )  ) ;                 builder.append ( print ( new DateTime ( value )  )  ) ;                 addSeparator (  ) ;             }else                 if  ( method.getReturnType (  ) .equals ( class )  )  {                     Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;                     if  ( value != null )  {                         try {                             String map = getObjectMapper (  ) .writeValueAsString ( value ) ;                             map = map.replaceAll ( "[\\{\\}\"]", "" ) ;                             map = map.replaceAll ( ",", " " ) ;                             builder.append ( map ) ;                             addSeparator (  ) ;                         } catch  ( JsonProcessingException e )  {                             warning ( e ) ;                         }                     }                 }^86^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getParameterTypes (  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getParameterTypes (  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( LINE_ENDING )   ) ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^builder.append (  (  ( String )   ( method.invoke ( object )  )  )  )  ;^81^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getParameterTypes (  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^87^^^^^70^116^[ADD] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method.getReturnType (  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  ( Boolean )  method.getParameterTypes ( object )  ) ;^78^^^^^70^116^[REPLACE] builder.append (  ( Boolean )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^78^^^^^70^116^[ADD] builder.append (  ( Boolean )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^method.getParameterTypes (  )  ;^91^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method .getParameterTypes (  )  .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( map )   ) ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getParameterTypes (  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^addSeparator (  ) ;^87^88^^^^70^116^[ADD] builder.append (  ( Double )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^for  ( Method method : false )  {^74^^^^^70^116^[REPLACE] for  ( Method method : methods )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( long.class )  )  {^83^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( long.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^82^^^^^70^116^[ADD] addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( SEPARATOR )   ) ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  (  ( Double )   ( method.invoke ( object )  )  )  )  ;^78^^^^^70^116^[REPLACE] builder.append (  ( Boolean )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( map )   ) ;^81^^^^^70^116^[REPLACE] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( long.class )  )  {^83^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( long.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method .getParameterTypes (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  )  .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( method.getParameterTypes (  ) .equals ( boolean.class )  )  {^77^^^^^70^116^[REPLACE] if  ( method.getReturnType (  ) .equals ( boolean.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( int.class )  )  {     builder.append (  (  ( Integer )   ( method.invoke ( object )  )  )  ) ;     addSeparator (  ) ; }else     if  ( method.getReturnType (  ) .equals ( long.class )  )  {         builder.append (  (  ( Long )   ( method.invoke ( object )  )  )  ) ;         addSeparator (  ) ;     }else         if  ( method.getReturnType (  ) .equals ( double.class )  )  {             builder.append (  (  ( Double )   ( method.invoke ( object )  )  )  ) ;             addSeparator (  ) ;         }else             if  ( method.getReturnType (  ) .equals ( class )  )  {                 builder.append (  (  ( String )   ( method.invoke ( object )  )  )  ) ;                 addSeparator (  ) ;             }else                 if  ( method.getReturnType (  ) .equals ( class )  )  {                     Date value =  (  ( Date )   ( method.invoke ( object )  )  ) ;                     builder.append ( print ( new DateTime ( value )  )  ) ;                     addSeparator (  ) ;                 }else                     if  ( method.getReturnType (  ) .equals ( class )  )  {                         Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;                         if  ( value != null )  {                             try {                                 String map = getObjectMapper (  ) .writeValueAsString ( value ) ;                                 map = map.replaceAll ( "[\\{\\}\"]", "" ) ;                                 map = map.replaceAll ( ",", " " ) ;                                 builder.append ( map ) ;                                 addSeparator (  ) ;                             } catch  ( JsonProcessingException e )  {                                 warning ( e ) ;                             }                         }                     }^77^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( map )   ) ;^84^^^^^70^116^[REPLACE] builder.append (  ( Long )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^builder.append (  (  ( String )   ( method.invoke ( object )  )  )  )  ;^84^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^builder.append (  (  ( Double )   ( method.invoke ( object )  )  )  )  ;^78^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method .getParameterTypes (  )  .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^addSeparator (  ) ;^84^85^^^^70^116^[ADD] builder.append (  ( Long )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getParameterTypes (  ) .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getReturnType (   )  ||  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( int.class )  )  {^80^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( int.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder.append (  (  ( String )   ( method.invoke ( object )  )  )  )  ;^81^^^^^70^116^[REPLACE] builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^(  ( Double )   ( method.invoke ( object )  )  )  ;^78^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^if  ( method.getReturnType (  ) .equals ( boolean.class )  )  {     builder.append (  (  ( Boolean )   ( method.invoke ( object )  )  )  ) ;     addSeparator (  ) ; }else     if  ( method.getReturnType (  ) .equals ( int.class )  )  {         builder.append (  (  ( Integer )   ( method.invoke ( object )  )  )  ) ;         addSeparator (  ) ;     }else         if  ( method.getReturnType (  ) .equals ( long.class )  )  {             builder.append (  (  ( Long )   ( method.invoke ( object )  )  )  ) ;             addSeparator (  ) ;         }else             if  ( method.getReturnType (  ) .equals ( double.class )  )  {                 builder.append (  (  ( Double )   ( method.invoke ( object )  )  )  ) ;                 addSeparator (  ) ;             }else                 if  ( method.getReturnType (  ) .equals ( class )  )  {                     builder.append (  (  ( String )   ( method.invoke ( object )  )  )  ) ;                     addSeparator (  ) ;                 }else                     if  ( method.getReturnType (  ) .equals ( class )  )  {                         Date value =  (  ( Date )   ( method.invoke ( object )  )  ) ;                         builder.append ( print ( new DateTime ( value )  )  ) ;                         addSeparator (  ) ;                     }else                         if  ( method.getReturnType (  ) .equals ( class )  )  {                             Map value =  (  ( Map )   ( method.invoke ( object )  )  ) ;                             if  ( value != null )  {                                 try {                                     String map = getObjectMapper (  ) .writeValueAsString ( value ) ;                                     map = map.replaceAll ( "[\\{\\}\"]", "" ) ;                                     map = map.replaceAll ( ",", " " ) ;                                     builder.append ( map ) ;                                     addSeparator (  ) ;                                 } catch  ( JsonProcessingException e )  {                                     warning ( e ) ;                                 }                             }                         }^80^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^method.getParameterTypes (  )  ;^85^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method .getParameterTypes (  )  .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  || ( method .getParameterTypes (  )  .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getParameterTypes (  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( boolean.class )  )  {^77^^^^^70^116^[REPLACE] if  ( method.getReturnType (  ) .equals ( boolean.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^builder.append (  ( Boolean )  method.invoke ( object )  ) ;addSeparator (  ) ;builder.append (  ( Integer )  method.invoke ( object )  ) ;^77^78^79^80^81^70^116^[ADD] if  ( method.getReturnType (  ) .equals ( boolean.class )  )  { builder.append (  ( Boolean )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( int.class )  )  { builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getParameterTypes (  ) .equals ( int.class )  )  {^80^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( int.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( SEPARATOR )   ) ;^87^^^^^70^116^[REPLACE] builder.append (  ( Double )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getReturnType (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( long.class )  )  {^83^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( long.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REMOVE]^builder.append (  (  ( Boolean )   ( method.invoke ( object )  )  )  )  ;^87^^^^^70^116^[REMOVE] ^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^110^111^^^^70^116^[ADD] catch  ( IllegalAccessException | InvocationTargetException error )  { Log.warning ( error ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^77^78^79^80^81^70^116^[ADD] if  ( method.getReturnType (  ) .equals ( boolean.class )  )  { builder.append (  ( Boolean )  method.invoke ( object )  ) ; addSeparator (  ) ; } else if  ( method.getReturnType (  ) .equals ( int.class )  )  { builder.append (  ( Integer )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method .getParameterTypes (  )  .equals ( Date.class )  )  {^92^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Date.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^81^82^^^^70^116^[ADD] builder.append (  ( Integer )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  ( method.getParameterTypes (  ) .equals ( double.class )  )  {^86^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( double.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^} else if  (  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  && ( method.getReturnType (  ) .equals ( String.class )  )  {^89^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( String.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^addSeparator (  ) ;^78^79^^^^70^116^[ADD] builder.append (  ( Boolean )  method.invoke ( object )  ) ; addSeparator (  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^}  if  ( method.getParameterTypes (   )  &&  ( method.getName (  ) .startsWith ( "get" )  )  &&  (  ( method.getParameterTypes (  ) .length )  == 0 )  ) .equals ( Map.class )  )  {^96^^^^^70^116^[REPLACE] } else if  ( method.getReturnType (  ) .equals ( Map.class )  )  {^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[REPLACE]^builder .append ( map )   ) ;^90^^^^^70^116^[REPLACE] builder.append (  ( String )  method.invoke ( object )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] Object object [CLASS] CsvBuilder 1   [TYPE]  ReflectiveOperationException error  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  [TYPE]  Method method  [TYPE]  DateTimeFormatter DATE_FORMAT  [TYPE]  SortedSet methods  [TYPE]  Map value  [TYPE]  JsonProcessingException e  [TYPE]  Date value 
[ADD]^^135^136^137^138^139^134^158^[ADD] for  ( Object object : array )  { switch  ( object.getClass (  ) .getSimpleName (  ) .toLowerCase (  )  )  { case "string": builder.append ( object.toString (  )  ) ; addLineEnding (  ) ;^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^switch  ( object.getClass (  ) .getSimpleName (  )  .equals ( object )   )  {^136^^^^^134^158^[REPLACE] switch  ( object.getClass (  ) .getSimpleName (  ) .toLowerCase (  )  )  {^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^switch  ( object .equals ( object )  .getSimpleName (  ) .toLowerCase (  )  )  {^136^^^^^134^158^[REPLACE] switch  ( object.getClass (  ) .getSimpleName (  ) .toLowerCase (  )  )  {^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^switch  ( object.Object (  ) .getSimpleName (  ) .toLowerCase (  )  )  {^136^^^^^134^158^[REPLACE] switch  ( object.getClass (  ) .getSimpleName (  ) .toLowerCase (  )  )  {^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^builder.append ( object .Object (  )   ) ;^138^^^^^134^158^[REPLACE] builder.append ( object.toString (  )  ) ;^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^builder.append ( object.Object (  )  ) ;^138^^^^^134^158^[REPLACE] builder.append ( object.toString (  )  ) ;^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^builder .append ( SEPARATOR )  ;^142^^^^^134^158^[REPLACE] builder.append (  ( long )  object ) ;^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REMOVE]^addLine ( object )  ;^143^^^^^134^158^[REMOVE] ^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^builder.append (  (  ( boolean )   ( object )  )  )  ;^146^^^^^134^158^[REPLACE] builder.append (  ( double )  object ) ;^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[REPLACE]^builder.StringBuilder (  ( boolean )  object ) ;^150^^^^^134^158^[REPLACE] builder.append (  ( boolean )  object ) ;^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
[ADD]^^151^152^^^^134^158^[ADD] addLineEnding (  ) ; break;^[METHOD] addArray [TYPE] void [PARAMETER] Collection<?> array [CLASS] CsvBuilder 1   [TYPE]  Collection array  [TYPE]  Object object  [TYPE]  String LINE_ENDING  SEPARATOR  map  name  [TYPE]  boolean false  true  [TYPE]  StringBuilder builder  [TYPE]  DateTimeFormatter DATE_FORMAT 
