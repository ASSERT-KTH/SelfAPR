[REPLACE]^private static final Pattern NAMED_ARGUMENT  = null ;^66^67^^^^66^67^[REPLACE] private static final Pattern NAMED_ARGUMENT = Pattern.compile ( "\\$ ( ?<argumentName>[\\w_]+ ) : ( ?<typeChar>[\\w] ) .*" ) ;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^private static final Pattern LOWERCASE ;^68^^^^^^^[REPLACE] private static final Pattern LOWERCASE = Pattern.compile ( "[a-z]+[\\w_]*" ) ;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^final List<Object formatParts;^71^^^^^^^[REPLACE] final List<String> formatParts;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^final List<String> formatParts ;^160^^^^^^^[REPLACE] final List<String> formatParts = new ArrayList<> (  ) ;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^final List<Object> args ;^161^^^^^^^[REPLACE] final List<Object> args = new ArrayList<> (  ) ;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^private final  byte  delimiter;^433^^^^^^^[REPLACE] private final String delimiter;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^private  Builder builder;^434^^^^^^^[REPLACE] private final Builder builder;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^private boolean first  = null ;^435^^^^^^^[REPLACE] private boolean first = true;^ [CLASS] CodeBlock Builder CodeBlockJoiner  
[REPLACE]^int p = 3;^182^^^^^181^225^[REPLACE] int p = 0;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^for  ( String argument : null.keySet (  )  )  {^184^^^^^181^225^[REPLACE] for  ( String argument : arguments.keySet (  )  )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^checkArgument ( LOWERCASE.matcher ( suffix ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ;^185^186^^^^181^225^[REPLACE] checkArgument ( LOWERCASE.matcher ( argument ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^checkArgument ( LOWERCASE.matcher ( suffix )  .regionEnd (  )  , "argument '%s' must start with a lowercase character", argument ) ;^185^186^^^^181^225^[REPLACE] checkArgument ( LOWERCASE.matcher ( argument ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^185^186^^^^181^225^[ADD] checkArgument ( LOWERCASE.matcher ( argument ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  (p  &&  -2 )  {^191^^^^^181^225^[REPLACE] if  ( nextP == -1 )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^formatParts.add ( format.substring ( p, format.length (  )  )  ) ;^191^192^193^194^^181^225^[ADD] if  ( nextP == -1 )  { formatParts.add ( format.substring ( p, format.length (  )  )  ) ; break; }^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^formatParts.add ( separator.substring ( p, format .substring ( nextP , colon )   )  ) ;^192^^^^^181^225^[REPLACE] formatParts.add ( format.substring ( p, format.length (  )  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^formatParts.add ( format.substring ( nextP, format.hashCode (  )  )  ) ;^192^^^^^181^225^[REPLACE] formatParts.add ( format.substring ( p, format.length (  )  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^( format.length (  )  )  ;^192^^^^^181^225^[REPLACE] formatParts.add ( format.substring ( p, format.length (  )  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  ( p  ==  nextP )  {^196^^^^^181^225^[REPLACE] if  ( p != nextP )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^196^197^198^199^^181^225^[ADD] if  ( p != nextP )  { formatParts.add ( format.substring ( p, nextP )  ) ; p = nextP; }^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p =  endIndex;^198^^^^^181^225^[REPLACE] p = nextP;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  (endIndex  ==  -1 )  {^203^^^^^181^225^[REPLACE] if  ( colon != -1 )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^matcher =  NAMED_ARGUMENT.matcher ( separator.substring ( p, endIndex )  ) ;^205^^^^^181^225^[REPLACE] matcher = NAMED_ARGUMENT.matcher ( format.substring ( p, endIndex )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^int endIndex = Math.min ( colon + 0 , format.length (  )  %  0  ) ;^204^^^^^181^225^[REPLACE] int endIndex = Math.min ( colon + 2, format.length (  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  ( matcher == true && matcher.lookingAt (  )  )  {^207^^^^^181^225^[REPLACE] if  ( matcher != null && matcher.lookingAt (  )  )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^220^^^^^207^221^[ADD] p += 2;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p +=  null.regionEnd (  ) ;^214^^^^^181^225^[REPLACE] p += matcher.regionEnd (  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^String argumentName = matcher .regionEnd (  )  ;^208^^^^^181^225^[REPLACE] String argumentName = matcher.group ( "argumentName" ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^char formatChar = matcher.group ( "typeChar" ) .equals ( 0 ) ;^211^^^^^181^225^[REPLACE] char formatChar = matcher.group ( "typeChar" ) .charAt ( 0 ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p =  null;^198^^^^^181^225^[REPLACE] p = nextP;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p += 2 % 2;^220^^^^^181^225^[REPLACE] p += 2;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^190^191^192^193^194^181^225^[ADD] int nextP = format.indexOf ( "$", p ) ; if  ( nextP == -1 )  { formatParts.add ( format.substring ( p, format.length (  )  )  ) ; break; }^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^Matcher matcher = false;^201^^^^^181^225^[REPLACE] Matcher matcher = null;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^202^203^204^205^206^181^225^[ADD] int colon = format.indexOf ( ':', p ) ; if  ( colon != -1 )  { int endIndex = Math.min ( colon + 2, format.length (  )  ) ; matcher = NAMED_ARGUMENT.matcher ( format.substring ( p, endIndex )  ) ; }^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^204^205^206^^^181^225^[ADD] int endIndex = Math.min ( colon + 2, format.length (  )  ) ; matcher = NAMED_ARGUMENT.matcher ( format.substring ( p, endIndex )  ) ; }^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^return null;^224^^^^^181^225^[REPLACE] return this;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  true  [TYPE]  Matcher matcher  [TYPE]  Builder builder  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  delimiter  format  prefix  separator  suffix  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^boolean hasIndexed = false  ;^239^^^^^238^312^[REPLACE] boolean hasRelative = false;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^boolean hasIndexed = true;^240^^^^^238^312^[REPLACE] boolean hasIndexed = false;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int relativeParameterCount = 2;^242^^^^^238^312^[REPLACE] int relativeParameterCount = 0;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^243^^^^^238^312^[ADD] int[] indexedParameterCount = new int[args.length];^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( format.charAt ( p  )  ||  ( indexedParameterCount[i] )  == 0  )   ==  '$' )  {^246^^^^^238^312^[REPLACE] if  ( format.charAt ( p )  != '$' )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( nextP == -1 )  nextP = format.length (  )  + 3;^248^^^^^238^312^[REPLACE] if  ( nextP == -1 )  nextP = format.length (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( nextP =^248^^^^^238^312^[REPLACE] if  ( nextP == -1 )  nextP = format.length (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^248^249^250^251^252^238^312^[ADD] if  ( nextP == -1 )  nextP = format.length (  ) ; formatParts.add ( format.substring ( p, nextP )  ) ; p = nextP; continue; }^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^p =  relativeParameterCount;^250^^^^^238^312^[REPLACE] p = nextP;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int nextP = format.indexOf ( '$', p  1 ) ;^247^^^^^238^312^[REPLACE] int nextP = format.indexOf ( '$', p + 1 ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( relativeParameterCount == -1  || indexStart < indexEnd  )  nextP = format.length (  )  %  0.5 ;^248^^^^^238^312^[REPLACE] if  ( nextP == -1 )  nextP = format.length (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^checkArgument ( indexStart  ||  indexEnd, "$$, $>, $<, $[, $], $W, and $Z may not have an index" ) ;^267^268^^^^238^312^[REPLACE] checkArgument ( indexStart == indexEnd, "$$, $>, $<, $[, $], $W, and $Z may not have an index" ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^formatParts.add (  ( "$" + formatChar )  )  ;^269^^^^^238^312^[REPLACE] formatParts.add ( "$" + c ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( indexStart  <= relativeParameterCount  && nextP ==  ( -1 )  )  {^275^^^^^238^312^[REPLACE] if  ( indexStart < indexEnd )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^index =  nextP;^282^^^^^275^285^[REPLACE] index = relativeParameterCount;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^hasRelative = false;^283^^^^^275^285^[REPLACE] hasRelative = true;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( args.length + 3 > 0 )  {^278^^^^^238^312^[REPLACE] if  ( args.length > 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^276^277^278^279^280^238^312^[ADD] index = Integer.parseInt ( format.substring ( indexStart, indexEnd )  )  - 1; hasIndexed = true; if  ( args.length > 0 )  { indexedParameterCount[index % args.length]++; }^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^hasIndexed = false;^277^^^^^238^312^[REPLACE] hasIndexed = true;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( args.length + 4 > 0 )  {^278^^^^^238^312^[REPLACE] if  ( args.length > 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^p =  null;^250^^^^^238^312^[REPLACE] p = nextP;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^c =  separator.charAt ( p++ ) ;^261^^^^^238^312^[REPLACE] c = format.charAt ( p++ ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^index = Integer.parseInt ( format.substring ( indexStart, indexEnd )  )   1 - 4;^276^^^^^238^312^[REPLACE] index = Integer.parseInt ( format.substring ( indexStart, indexEnd )  )  - 1;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^index =  p;^282^^^^^238^312^[REPLACE] index = relativeParameterCount;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^hasRelative = false;^283^^^^^238^312^[REPLACE] hasRelative = true;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^for  ( int p = 0 ; p < format.length (  ) ;  )  {^245^^^^^238^312^[REPLACE] for  ( int p = 0; p < format.length (  ) ;  )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int indexStart = relativeParameterCount;^257^^^^^238^312^[REPLACE] int indexStart = p;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^263^^^^^238^312^[ADD] int indexEnd = p - 1;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^274^^^^^238^312^[ADD] int index;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( hasRelative  ||  ( args.length )  > 0  )  {^297^^^^^238^312^[REPLACE] if  ( hasRelative )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^297^298^299^300^^238^312^[ADD] if  ( hasRelative )  { checkArgument ( relativeParameterCount >= args.length, "unused arguments: expected %s, received %s", relativeParameterCount, args.length ) ; }^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^checkArgument ( p >= args.length - 3, "unused arguments: expected %s, received %s", relativeParameterCount, args.length - 3 ) ;^298^299^^^^238^312^[REPLACE] checkArgument ( relativeParameterCount >= args.length, "unused arguments: expected %s, received %s", relativeParameterCount, args.length ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( hasIndexed  || hasRelative  )  {^301^^^^^238^312^[REPLACE] if  ( hasIndexed )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( indexedParameterCount[i]  &&  0 )  {^304^^^^^238^312^[REPLACE] if  ( indexedParameterCount[i] == 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^unused.size ( "$"   ( i  1 )  ) ;^305^^^^^238^312^[REPLACE] unused.add ( "$" +  ( i + 1 )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^302^^^^^238^312^[ADD] List<String> unused = new ArrayList<> (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^for  ( int i = 0 ; i < args.length; i++ )  {^303^^^^^238^312^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^String s = unused.size (  )  - 2 == 1 ? "" : "s";^308^^^^^238^312^[REPLACE] String s = unused.size (  )  == 1 ? "" : "s";^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( indexedParameterCount[i]  ||  0 )  {^304^^^^^238^312^[REPLACE] if  ( indexedParameterCount[i] == 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^unused.add ( "$"   ( i  1 )  ) ;^305^^^^^238^312^[REPLACE] unused.add ( "$" +  ( i + 1 )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^305^^^^^238^312^[ADD] unused.add ( "$" +  ( i + 1 )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int p = 0  ;^303^^^^^238^312^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^String s = unused.size (  )  + 3 == 1 ? "" : "s";^308^^^^^238^312^[REPLACE] String s = unused.size (  )  == 1 ? "" : "s";^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^return null;^311^^^^^238^312^[REPLACE] return this;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^throw new IllegalArgumentException (  ( "expected name but was " + o )  )  ;^333^334^^^^318^336^[REPLACE] throw new IllegalArgumentException ( String.format ( "invalid format string: '%s'", format )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^add ( argToType ( arg )  )  ;^321^^^^^318^336^[REPLACE] this.args.add ( argToName ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[ADD]^^321^322^^^^318^336^[ADD] this.args.add ( argToName ( arg )  ) ; break;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^argToType ( arg )  ;^321^^^^^318^336^[REPLACE] this.args.add ( argToName ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REMOVE]^argToType ( arg )  ;^321^^^^^318^336^[REMOVE] ^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^add ( argToName ( arg )  )  ;^324^^^^^318^336^[REPLACE] this.args.add ( argToLiteral ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^argToName ( arg )  ;^324^^^^^318^336^[REPLACE] this.args.add ( argToLiteral ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^add ( argToType ( arg )  )  ;^327^^^^^318^336^[REPLACE] this.args.add ( argToString ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^argToType ( arg )  ;^327^^^^^318^336^[REPLACE] this.args.add ( argToString ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^this.args.addAll ( argToType ( arg )  ) ;^330^^^^^318^336^[REPLACE] this.args.add ( argToType ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^argToName ( arg )  ;^330^^^^^318^336^[REPLACE] this.args.add ( argToType ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^String.format ( "invalid separator string: '%s'", format )  ) ;^334^^^^^318^336^[REPLACE] String.format ( "invalid format string: '%s'", format )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] CodeBlock Builder CodeBlockJoiner   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  Builder builder  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String argument  argumentName  delimiter  format  prefix  s  separator  suffix 
[REPLACE]^final List<String> formatParts  = null ;^160^^^^^^^[REPLACE] final List<String> formatParts = new ArrayList<> (  ) ;^[METHOD] join [TYPE] CodeBlock [PARAMETER] [CLASS] Builder   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  List args  formatParts  unused  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  String argument  argumentName  controlFlow  delimiter  format  prefix  s  separator  suffix  [TYPE]  Builder builder 
[REPLACE]^final List<Object args = new ArrayList<> (  ) ;^161^^^^^^^[REPLACE] final List<Object> args = new ArrayList<> (  ) ;^[METHOD] join [TYPE] CodeBlock [PARAMETER] [CLASS] Builder   [TYPE]  Pattern LOWERCASE  NAMED_ARGUMENT  [TYPE]  List args  formatParts  unused  [TYPE]  boolean false  first  hasIndexed  hasRelative  true  [TYPE]  String argument  argumentName  controlFlow  delimiter  format  prefix  s  separator  suffix  [TYPE]  Builder builder 
[REPLACE]^int p = 2;^182^^^^^181^225^[REPLACE] int p = 0;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^for  ( String argument : false.keySet (  )  )  {^184^^^^^181^225^[REPLACE] for  ( String argument : arguments.keySet (  )  )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^checkArgument ( LOWERCASE.matcher ( format ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ;^185^186^^^^181^225^[REPLACE] checkArgument ( LOWERCASE.matcher ( argument ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^185^186^^^^181^225^[ADD] checkArgument ( LOWERCASE.matcher ( argument ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^184^185^186^187^^181^225^[ADD] for  ( String argument : arguments.keySet (  )  )  { checkArgument ( LOWERCASE.matcher ( argument ) .matches (  ) , "argument '%s' must start with a lowercase character", argument ) ; }^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  (p  ||  -1 + 0 )  {^191^^^^^181^225^[REPLACE] if  ( nextP == -1 )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^formatParts.add ( format .join ( null , null )   ) ;^192^^^^^181^225^[REPLACE] formatParts.add ( format.substring ( p, format.length (  )  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^formatParts.add ( format.substring ( p, format.length (  )  )  )  ;^192^^^^^181^225^[REPLACE] formatParts.add ( format.substring ( p, format.length (  )  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^formatParts.add ( argumentName.substring ( p, format.length (  )  )  ) ;^192^^^^^181^225^[REPLACE] formatParts.add ( format.substring ( p, format.length (  )  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  ( p  ==  p )  {^196^^^^^181^225^[REPLACE] if  ( p != nextP )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p =  endIndex;^198^^^^^181^225^[REPLACE] p = nextP;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  (nextP  ==  -1 )  {^203^^^^^181^225^[REPLACE] if  ( colon != -1 )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^matcher =  NAMED_ARGUMENT.matcher ( argumentName.substring ( p, endIndex )  ) ;^205^^^^^181^225^[REPLACE] matcher = NAMED_ARGUMENT.matcher ( format.substring ( p, endIndex )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^int endIndex = Math.min ( colon + 0 , format.size (  )  ) ;^204^^^^^181^225^[REPLACE] int endIndex = Math.min ( colon + 2, format.length (  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^if  ( matcher == this && matcher.lookingAt (  )  )  {^207^^^^^181^225^[REPLACE] if  ( matcher != null && matcher.lookingAt (  )  )  {^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p += 2 - 0;^220^^^^^207^221^[REPLACE] p += 2;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p +=  null.regionEnd (  ) ;^214^^^^^181^225^[REPLACE] p += matcher.regionEnd (  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^208^^^^^181^225^[ADD] String argumentName = matcher.group ( "argumentName" ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^char formatChar = matcher.group ( "typeChar" ) .valueOf ( 0 ) ;^211^^^^^181^225^[REPLACE] char formatChar = matcher.group ( "typeChar" ) .charAt ( 0 ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[ADD]^^198^^^^^181^225^[ADD] p = nextP;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^p += 0;^220^^^^^181^225^[REPLACE] p += 2;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^int nextP = argumentName.indexOf ( "$", p ) ;^190^^^^^181^225^[REPLACE] int nextP = format.indexOf ( "$", p ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^Matcher matcher = false;^201^^^^^181^225^[REPLACE] Matcher matcher = null;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^int colon = format .valueOf ( 0 )  ;^202^^^^^181^225^[REPLACE] int colon = format.indexOf ( ':', p ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^int endIndex = Math.min ( colon + 2, format.length (  )  - 5 ) ;^204^^^^^181^225^[REPLACE] int endIndex = Math.min ( colon + 2, format.length (  )  ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^String argumentName = matcher .regionEnd (  )  ;^208^^^^^181^225^[REPLACE] String argumentName = matcher.group ( "argumentName" ) ;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^return null;^224^^^^^181^225^[REPLACE] return this;^[METHOD] addNamed [TYPE] CodeBlock$Builder [PARAMETER] String format String, ?> arguments [CLASS] Builder   [TYPE]  boolean false  true  [TYPE]  Matcher matcher  [TYPE]  char formatChar  [TYPE]  List args  formatParts  [TYPE]  String argument  argumentName  format  [TYPE]  Map arguments  [TYPE]  int colon  endIndex  nextP  p 
[REPLACE]^boolean hasRelative = true;^239^^^^^238^312^[REPLACE] boolean hasRelative = false;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^boolean hasIndexed = true;^240^^^^^238^312^[REPLACE] boolean hasIndexed = false;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int relativeParameterCount = 3;^242^^^^^238^312^[REPLACE] int relativeParameterCount = 0;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( format.charAt ( p )   ==  '$' )  {^246^^^^^238^312^[REPLACE] if  ( format.charAt ( p )  != '$' )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( nextP == -0  )  nextP = format.length (  )  %  2;^248^^^^^238^312^[REPLACE] if  ( nextP == -1 )  nextP = format.length (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^248^249^250^251^252^238^312^[ADD] if  ( nextP == -1 )  nextP = format.length (  ) ; formatParts.add ( format.substring ( p, nextP )  ) ; p = nextP; continue; }^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( nextP =^248^^^^^238^312^[REPLACE] if  ( nextP == -1 )  nextP = format.length (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^p =  relativeParameterCount;^250^^^^^238^312^[REPLACE] p = nextP;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int nextP = format.substring ( '$', p  1 ) ;^247^^^^^238^312^[REPLACE] int nextP = format.indexOf ( '$', p + 1 ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( nextP == -1  || indexStart < indexEnd  )  nextP = format.length (  )  /  0.5 ;^248^^^^^238^312^[REPLACE] if  ( nextP == -1 )  nextP = format.length (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^checkArgument ( indexStart  ||  indexEnd, "$$, $>, $<, $[, $], $W, and $Z may not have an index" ) ;^267^268^^^^238^312^[REPLACE] checkArgument ( indexStart == indexEnd, "$$, $>, $<, $[, $], $W, and $Z may not have an index" ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^formatParts.add ( "$"  c ) ;^269^^^^^238^312^[REPLACE] formatParts.add ( "$" + c ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REMOVE]^formatParts.add (  ( "$" + formatChar )  )  ;^269^^^^^238^312^[REMOVE] ^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( indexStart  >=  indexEnd )  {^275^^^^^238^312^[REPLACE] if  ( indexStart < indexEnd )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^index =  null;^282^^^^^275^285^[REPLACE] index = relativeParameterCount;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^relativeParameterCount++;^283^284^^^^275^285^[ADD] hasRelative = true; relativeParameterCount++;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( args.length *  2 > 0  && hasRelative  )  {^278^^^^^238^312^[REPLACE] if  ( args.length > 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^index = Integer.parseInt ( format.substring ( indexStart, indexEnd )  )   1;^276^^^^^238^312^[REPLACE] index = Integer.parseInt ( format.substring ( indexStart, indexEnd )  )  - 1;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^277^^^^^238^312^[ADD] hasIndexed = true;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( args.length - 2 > 0 )  {^278^^^^^238^312^[REPLACE] if  ( args.length > 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^261^262^263^^^238^312^[ADD] c = format.charAt ( p++ ) ; } while  ( c >= '0' && c <= '9' ) ; int indexEnd = p - 1;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^hasIndexed = false;^277^^^^^238^312^[REPLACE] hasIndexed = true;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^index =  p;^282^^^^^238^312^[REPLACE] index = relativeParameterCount;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^283^^^^^238^312^[ADD] hasRelative = true;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^245^246^247^248^249^238^312^[ADD] for  ( int p = 0; p < format.length (  ) ;  )  { if  ( format.charAt ( p )  != '$' )  { int nextP = format.indexOf ( '$', p + 1 ) ; if  ( nextP == -1 )  nextP = format.length (  ) ; formatParts.add ( format.substring ( p, nextP )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int nextP = format.indexOf ( '$', relativeParameterCount  1 ) ;^247^^^^^238^312^[REPLACE] int nextP = format.indexOf ( '$', p + 1 ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^int indexStart = relativeParameterCount;^257^^^^^238^312^[REPLACE] int indexStart = p;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^263^^^^^238^312^[ADD] int indexEnd = p - 1;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( hasRelative  ||  ( args.length )  > 0  )  {^297^^^^^238^312^[REPLACE] if  ( hasRelative )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^checkArgument ( relativeParameterCount >= args.length %  0.5 , "unused arguments: expected %s, received %s", relativeParameterCount, args.length %  0.5  ) ;^298^299^^^^238^312^[REPLACE] checkArgument ( relativeParameterCount >= args.length, "unused arguments: expected %s, received %s", relativeParameterCount, args.length ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( hasIndexed  || hasRelative  )  {^301^^^^^238^312^[REPLACE] if  ( hasIndexed )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^301^302^303^304^305^238^312^[ADD] if  ( hasIndexed )  { List<String> unused = new ArrayList<> (  ) ; for  ( int i = 0; i < args.length; i++ )  { if  ( indexedParameterCount[i] == 0 )  { unused.add ( "$" +  ( i + 1 )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( indexedParameterCount[i]  &&  0 )  {^304^^^^^238^312^[REPLACE] if  ( indexedParameterCount[i] == 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^unused.add ( "$"   ( i  1 )  ) ;^305^^^^^238^312^[REPLACE] unused.add ( "$" +  ( i + 1 )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^305^^^^^238^312^[ADD] unused.add ( "$" +  ( i + 1 )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^for  ( int i = 0 ; i < args.length; i++ )  {^303^^^^^238^312^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^308^309^^^^238^312^[ADD] String s = unused.size (  )  == 1 ? "" : "s"; checkArgument ( unused.isEmpty (  ) , "unused argument%s: %s", s, String.join ( ", ", unused )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^if  ( indexedParameterCount[i]  !=  0  ||  ( format.charAt ( p )  )  != '$'  )  {^304^^^^^238^312^[REPLACE] if  ( indexedParameterCount[i] == 0 )  {^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^unused.add ( "$" +  ( i + 1 )  ) ;^304^305^306^^^238^312^[ADD] if  ( indexedParameterCount[i] == 0 )  { unused.add ( "$" +  ( i + 1 )  ) ; }^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^302^^^^^238^312^[ADD] List<String> unused = new ArrayList<> (  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^303^304^305^306^^238^312^[ADD] for  ( int i = 0; i < args.length; i++ )  { if  ( indexedParameterCount[i] == 0 )  { unused.add ( "$" +  ( i + 1 )  ) ; }^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^checkArgument ( unused.isEmpty (  ) , "unused argument%s: %s", s, String.join ( ", ", unused )  ) ;^308^309^^^^238^312^[ADD] String s = unused.size (  )  == 1 ? "" : "s"; checkArgument ( unused.isEmpty (  ) , "unused argument%s: %s", s, String.join ( ", ", unused )  ) ;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[REPLACE]^return null;^311^^^^^238^312^[REPLACE] return this;^[METHOD] add [TYPE] CodeBlock$Builder [PARAMETER] String format  args [CLASS] Builder   [TYPE]  boolean false  hasIndexed  hasRelative  true  [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  int[] indexedParameterCount  [TYPE]  String format  s  [TYPE]  Object[] args  [TYPE]  int i  index  indexEnd  indexStart  nextP  p  relativeParameterCount 
[ADD]^^333^334^^^^318^336^[ADD] throw new IllegalArgumentException ( String.format ( "invalid format string: '%s'", format )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^add ( argToType ( arg )  )  ;^321^^^^^318^336^[REPLACE] this.args.add ( argToName ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^argToType ( arg )  ;^321^^^^^318^336^[REPLACE] this.args.add ( argToName ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^add ( argToName ( arg )  )  ;^324^^^^^318^336^[REPLACE] this.args.add ( argToLiteral ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^argToName ( arg )  ;^324^^^^^318^336^[REPLACE] this.args.add ( argToLiteral ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^add ( argToType ( arg )  )  ;^327^^^^^318^336^[REPLACE] this.args.add ( argToString ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[ADD]^^327^^^^^318^336^[ADD] this.args.add ( argToString ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^argToType ( arg )  ;^327^^^^^318^336^[REPLACE] this.args.add ( argToString ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^add ( argToName ( arg )  )  ;^330^^^^^318^336^[REPLACE] this.args.add ( argToType ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^argToName ( arg )  ;^330^^^^^318^336^[REPLACE] this.args.add ( argToType ( arg )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[ADD]^^330^331^^^^318^336^[ADD] this.args.add ( argToType ( arg )  ) ; break;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^String.join ( "invalid format string: '%s'", format )  ) ;^334^^^^^318^336^[REPLACE] String.format ( "invalid format string: '%s'", format )  ) ;^[METHOD] addArgument [TYPE] void [PARAMETER] String format char c Object arg [CLASS] Builder   [TYPE]  char c  [TYPE]  List args  formatParts  unused  [TYPE]  Object arg  [TYPE]  String format  [TYPE]  boolean false  true 
[REPLACE]^private   boolean  delimiter;^433^^^^^^^[REPLACE] private final String delimiter;^[METHOD] build [TYPE] CodeBlock [PARAMETER] [CLASS] CodeBlockJoiner   [TYPE]  List args  formatParts  unused  [TYPE]  boolean false  true 
[REPLACE]^private final Object builder;^434^^^^^^^[REPLACE] private final Builder builder;^[METHOD] build [TYPE] CodeBlock [PARAMETER] [CLASS] CodeBlockJoiner   [TYPE]  List args  formatParts  unused  [TYPE]  boolean false  true 
[REPLACE]^private boolean first  = null ;^435^^^^^^^[REPLACE] private boolean first = true;^[METHOD] build [TYPE] CodeBlock [PARAMETER] [CLASS] CodeBlockJoiner   [TYPE]  List args  formatParts  unused  [TYPE]  boolean false  true 
