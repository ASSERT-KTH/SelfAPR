[REPLACE]^private static  StoredProcedureAttributeSource storedProcedureAttributeSource = StoredProcedureAttributeSource.INSTANCE;^66^^^^^^^[REPLACE] private static final StoredProcedureAttributeSource storedProcedureAttributeSource = StoredProcedureAttributeSource.INSTANCE;^ [CLASS] JpaQueryMethod  
[REPLACE]^private final Object extractor;^79^^^^^^^[REPLACE] private final QueryExtractor extractor;^ [CLASS] JpaQueryMethod  
[REPLACE]^String query = getAnnotatedQuery (  )  ;^110^^^^^108^130^[REPLACE] String annotatedQuery = getAnnotatedQuery (  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^if  ( !DeclaredQuery.of ( annotatedQuery ) .orElse (  )  )  {^112^^^^^108^130^[REPLACE] if  ( !DeclaredQuery.of ( annotatedQuery ) .hasNamedParameter (  )  )  {^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^if  ( parameter.isNamedParameter (  )  )  {^118^^^^^108^130^[REPLACE] if  ( !parameter.isNamedParameter (  )  )  {^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^if  (  annotatedQuery.contains ( String.format ( ":%s", parameter.getName (  ) .get (  )  )  ) && !annotatedQuery.contains ( String.format ( "#%s", parameter.getName (  ) .get (  )  )  )  )  {^122^123^124^^^108^130^[REPLACE] if  ( StringUtils.isEmpty ( annotatedQuery ) || !annotatedQuery.contains ( String.format ( ":%s", parameter.getName (  ) .get (  )  )  ) && !annotatedQuery.contains ( String.format ( "#%s", parameter.getName (  ) .get (  )  )  )  )  {^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^throw new IllegalStateException ( format ( "No annotated query found for query method %s!", getName (  )  )  )  ;^125^126^127^^^122^128^[REPLACE] throw new IllegalStateException ( String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.isNamedParameter (  ) , annotatedQuery )  ) ;^126^127^^^^122^128^[REPLACE] String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[ADD]^^126^127^128^^^122^128^[ADD] String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.getName (  ) , annotatedQuery )  ) ; }^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^method, parameter.isNamedParameter (  ) , annotatedQuery )  ) ;^127^^^^^122^128^[REPLACE] method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^return ;^125^126^127^^^122^128^[REPLACE] throw new IllegalStateException ( String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter .isNamedParameter (  )  , annotatedQuery )  ) ;^126^127^^^^122^128^[REPLACE] String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^parameter.getName (  ) .get (  )  ;^127^^^^^122^128^[REPLACE] method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^return ;^125^126^127^^^108^130^[REPLACE] throw new IllegalStateException ( String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
[REPLACE]^throw new IllegalStateException ( format ( "No annotated query found for query method %s!", getName (  )  )  )  ;^125^126^127^^^108^130^[REPLACE] throw new IllegalStateException ( String.format ( "Using named parameters for method %s but parameter '%s' not found in annotated query '%s'!", method, parameter.getName (  ) , annotatedQuery )  ) ;^[METHOD] assertParameterNamesInAnnotatedQuery [TYPE] void [PARAMETER] [CLASS] JpaQueryMethod   [TYPE]  StoredProcedureAttributeSource storedProcedureAttributeSource  [TYPE]  Set NATIVE_ARRAY_TYPES  [TYPE]  boolean false  true  [TYPE]  Parameter parameter  [TYPE]  StoredProcedureAttributes storedProcedureAttributes  [TYPE]  Method method  [TYPE]  String annotatedQuery  [TYPE]  QueryExtractor extractor 
