[REPLACE]^private  Function<Object[], Object> valueExtractor;^49^^^^^^^[REPLACE] private final Function<Object[], Object> valueExtractor;^ [CLASS] NamedOrIndexedQueryParameterSetter  
[REPLACE]^private  Parameter<?> parameter;^50^^^^^^^[REPLACE] private final Parameter<?> parameter;^ [CLASS] NamedOrIndexedQueryParameterSetter  
[ADD]^^75^^^^^73^106^[ADD] Object value = valueExtractor.apply ( values ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( temporalType == this  )  {^77^^^^^73^106^[REPLACE] if  ( temporalType != null )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( ! parameter instanceof ParameterExpression  &&  (  ( query.getParameters (  ) .size (  )  )  >=  ( parameter.getPosition (  )  )  )  ||  ( registerExcessParameters ( query )  )  )  {^96^^^^^77^105^[REPLACE] if  ( parameter instanceof ParameterExpression )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^}  else {^98^^^^^77^105^[REPLACE] } else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  - 4 >= parameter.getPosition (  )  ) {^101^^^^^98^104^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query .setParameter ( query , values )  ;^99^^^^^77^105^[REPLACE] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^99^^^^^77^105^[ADD] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter .getPosition (  )  , value ) ;^99^^^^^77^105^[REPLACE] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  (  registerExcessParameters ( query )  )  {^101^^^^^77^105^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getName (  ) , value )  ;^102^^^^^77^105^[REPLACE] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REMOVE]^query.setParameter ( parameter.getName (  ) , value )  ;^102^^^^^77^105^[REMOVE] ^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^( parameter.getPosition (  )  )  ;^102^^^^^77^105^[REPLACE] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^102^^^^^77^105^[ADD] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.getParameters (  ( Parameter<Object> )  parameter, value ) ;^97^^^^^77^105^[REPLACE] query.setParameter (  ( Parameter<Object> )  parameter, value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^}   query.setParameter ( parameter.getName (  ) , value ) ;query.setParameter ( parameter.getPosition (  ) , value ) ;^98^99^100^101^102^77^105^[ADD] else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  { query.setParameter ( parameter.getName (  ) , value ) ; } else { if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  { query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  /  0.5  >= parameter.getPosition (  )  ) {^101^^^^^98^104^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^101^102^103^^^98^104^[ADD] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  { query.setParameter ( parameter.getPosition (  ) , value ) ; }^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getPosition (  ) , value )  ;^99^^^^^77^105^[REPLACE] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getPosition (  ) , value ) ;^99^^^^^77^105^[REPLACE] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query .setParameter ( query , values )  ;^102^^^^^77^105^[REPLACE] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getName (  ) , value ) ;^102^^^^^77^105^[REPLACE] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REMOVE]^( parameter.getPosition (  )  )  ;^102^^^^^77^105^[REMOVE] ^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( ! parameter instanceof ParameterExpression  ||  (  ( query.getParameters (  ) .size (  )  )  >=  ( parameter.getPosition (  )  )  )  ||  ( registerExcessParameters ( query )  )  )  {^84^^^^^73^106^[REPLACE] if  ( parameter instanceof ParameterExpression )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^query.setParameter (  ( Parameter<Date> )  parameter,  ( Date )  value, temporalType ) ;query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^84^85^86^87^^73^106^[ADD] if  ( parameter instanceof ParameterExpression )  { query.setParameter (  ( Parameter<Date> )  parameter,  ( Date )  value, temporalType ) ; } else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  { query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^}  else {^86^^^^^73^106^[REPLACE] } else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  (  registerExcessParameters ( query )  )  {^89^^^^^86^92^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getPosition (  ) ,  (  ( Date )   ( value )  ) , temporalType )  ;^87^^^^^73^106^[REPLACE] query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^87^^^^^73^106^[REPLACE] query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  %  2 >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^89^^^^^73^106^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^90^^^^^73^106^[REPLACE] query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REMOVE]^query.setParameter ( parameter.getName (  ) ,  (  ( Date )   ( value )  ) , temporalType )  ;^90^^^^^73^106^[REMOVE] ^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter .getName (  )  ,  ( Date )  value, temporalType ) ;^90^^^^^73^106^[REPLACE] query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.getParameters (  ( Parameter<Date> )  parameter,  ( Date )  value, temporalType ) ;^85^^^^^73^106^[REPLACE] query.setParameter (  ( Parameter<Date> )  parameter,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^}   query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^86^87^88^89^90^73^106^[ADD] else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  { query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ; } else { if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  { query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  %  2 >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^89^^^^^86^92^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter .getPosition (  )  ,  ( Date )  value, temporalType ) ;^87^^^^^73^106^[REPLACE] query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^90^^^^^73^106^[ADD] query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( ! parameter instanceof ParameterExpression  &&  (  ( query.getParameters (  ) .size (  )  )  >=  ( parameter.getPosition (  )  )  )  ||  ( registerExcessParameters ( query )  )  )  {^84^^^^^73^106^[REPLACE] if  ( parameter instanceof ParameterExpression )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^89^90^91^^^86^92^[ADD] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  { query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ; }^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query .setParameter ( query , values )   value, temporalType ) ;^87^^^^^73^106^[REPLACE] query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^87^^^^^73^106^[ADD] query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  *  0.5  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^89^^^^^73^106^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^89^90^91^^^73^106^[ADD] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  { query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ; }^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getName (  ) ,  (  ( Date )   ( value )  ) , temporalType )  ;^90^^^^^73^106^[REPLACE] query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query .setParameter ( query , values )   value, temporalType ) ;^85^^^^^73^106^[REPLACE] query.setParameter (  ( Parameter<Date> )  parameter,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^}  if  (  QueryUtils.hasNamedParameter ( query )  )  {^86^^^^^73^106^[REPLACE] } else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^}   query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ;query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^86^87^88^89^90^73^106^[ADD] else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  { query.setParameter ( parameter.getName (  ) ,  ( Date )  value, temporalType ) ; } else { if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  { query.setParameter ( parameter.getPosition (  ) ,  ( Date )  value, temporalType ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  + 2 >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^89^^^^^86^92^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  + 5 >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^89^^^^^73^106^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REMOVE]^( parameter.getPosition (  )  )  ;^90^^^^^73^106^[REMOVE] ^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  (  (  ( query.getParameters (  ) .size (  )  )  >=  ( parameter.getPosition (  )  )  )  ||  ( registerExcessParameters ( query )  )  && ( ! parameter instanceof ParameterExpression )  {^96^^^^^73^106^[REPLACE] if  ( parameter instanceof ParameterExpression )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^}  if  ( parameter.getName (  )  == null && QueryUtils.hasNamedParameter ( query )  )  {^98^^^^^73^106^[REPLACE] } else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .size (  )  %  2 >= parameter.getPosition (  )  ) {^101^^^^^98^104^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^query.setParameter ( parameter.getPosition (  ) , value ) ;^101^102^103^^^98^104^[ADD] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  { query.setParameter ( parameter.getPosition (  ) , value ) ; }^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getPosition (  ) , value ) ;^99^^^^^73^106^[REPLACE] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^99^^^^^73^106^[ADD] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^( parameter.getName (  )  )  ;^99^^^^^73^106^[REPLACE] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .length (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^101^^^^^73^106^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter.getName (  ) , value )  ;^102^^^^^73^106^[REPLACE] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter .getName (  )  , value ) ;^102^^^^^73^106^[REPLACE] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.getParameters (  ( Parameter<Object> )  parameter, value ) ;^97^^^^^73^106^[REPLACE] query.setParameter (  ( Parameter<Object> )  parameter, value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REMOVE]^query.setParameter (  (  ( Date> )   ( parameter )  ) ,  (  ( Date )   ( value )  ) , temporalType )  ;^97^^^^^73^106^[REMOVE] ^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^} else if  ( parameter.getName (  )  == null && QueryUtils.hasNamedParameter ( query )  )  {^98^^^^^73^106^[REPLACE] } else if  ( parameter.getName (  )  != null && QueryUtils.hasNamedParameter ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^if  ( query.getParameters (  ) .length (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^101^^^^^98^104^[REPLACE] if  ( query.getParameters (  ) .size (  )  >= parameter.getPosition (  )  || registerExcessParameters ( query )  )  {^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^query.setParameter ( parameter .getPosition (  )  , value ) ;^99^^^^^73^106^[REPLACE] query.setParameter ( parameter.getName (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[ADD]^^102^^^^^73^106^[ADD] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
[REPLACE]^( parameter.getPosition (  )  )  ;^102^^^^^73^106^[REPLACE] query.setParameter ( parameter.getPosition (  ) , value ) ;^[METHOD] setParameter [TYPE] void [PARAMETER] Query query Object[] values [CLASS] NamedOrIndexedQueryParameterSetter   [TYPE]  Function valueExtractor  [TYPE]  boolean false  true  [TYPE]  Query query  [TYPE]  Parameter parameter  [TYPE]  Object value  [TYPE]  Object[] values  [TYPE]  TemporalType temporalType 
