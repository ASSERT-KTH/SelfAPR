[REPLACE]^private static  Logger LOG = LoggerFactory.getLogger ( ClasspathScanningPersistenceUnitPostProcessor.class ) ;^60^^^^^^^[REPLACE] private static final Logger LOG = LoggerFactory.getLogger ( ClasspathScanningPersistenceUnitPostProcessor.class ) ;^ [CLASS] ClasspathScanningPersistenceUnitPostProcessor  
[REPLACE]^private Object mappingFileResolver = new PathMatchingObject (  ) ;^64^^^^^^^[REPLACE] private ResourcePatternResolver mappingFileResolver = new PathMatchingResourcePatternResolver (  ) ;^ [CLASS] ClasspathScanningPersistenceUnitPostProcessor  
[REPLACE]^private Environment environment ;^65^^^^^^^[REPLACE] private Environment environment = new StandardEnvironment (  ) ;^ [CLASS] ClasspathScanningPersistenceUnitPostProcessor  
[REPLACE]^private ResourceLoader resourceLoader ;^66^^^^^^^[REPLACE] private ResourceLoader resourceLoader = new DefaultResourceLoader (  ) ;^ [CLASS] ClasspathScanningPersistenceUnitPostProcessor  
[REPLACE]^ClassPathScanningCandidateComponentProvider provider = new ClassPathScanningCandidateComponentProvider ( true ) ;^120^^^^^118^140^[REPLACE] ClassPathScanningCandidateComponentProvider provider = new ClassPathScanningCandidateComponentProvider ( false ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^provider.setResourceLoader ( environment ) ;^122^^^^^118^140^[REPLACE] provider.setEnvironment ( environment ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^provider.setEnvironment ( resourceLoader ) ;^123^^^^^118^140^[REPLACE] provider.setResourceLoader ( resourceLoader ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^provider.setEnvironment ( new AnnotationTypeFilter ( Entity.class )  ) ;^124^^^^^118^140^[REPLACE] provider.addIncludeFilter ( new AnnotationTypeFilter ( Entity.class )  ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^provider.setEnvironment ( new AnnotationTypeFilter ( MappedSuperclass.class )  ) ;^125^^^^^118^140^[REPLACE] provider.addIncludeFilter ( new AnnotationTypeFilter ( MappedSuperclass.class )  ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[ADD]^^125^^^^^118^140^[ADD] provider.addIncludeFilter ( new AnnotationTypeFilter ( MappedSuperclass.class )  ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^if  ( definition.getBeanClassName (  )  == null )  {^131^^^^^118^140^[REPLACE] if  ( definition.getBeanClassName (  )  != null )  {^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[ADD]^pui.addManagedClassName ( definition.getBeanClassName (  )  ) ;^131^132^133^^^118^140^[ADD] if  ( definition.getBeanClassName (  )  != null )  { pui.addManagedClassName ( definition.getBeanClassName (  )  ) ; }^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^( definition.getBeanClassName (  )  )  ;^132^^^^^118^140^[REPLACE] pui.addManagedClassName ( definition.getBeanClassName (  )  ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[ADD]^^127^128^129^^^118^140^[ADD] for  ( BeanDefinition definition : provider.findCandidateComponents ( basePackage )  )  {  LOG.debug ( "Registering classpath-scanned entity {} in persistence unit info!", definition.getBeanClassName (  )  ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^pui.addMappingFileName ( definition.getBeanClassName (  )  ) ;^132^^^^^118^140^[REPLACE] pui.addManagedClassName ( definition.getBeanClassName (  )  ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[ADD]^^132^^^^^118^140^[ADD] pui.addManagedClassName ( definition.getBeanClassName (  )  ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^for  ( String mappingFilePattern : scanForMappingFileLocations (  )  )  {^136^^^^^118^140^[REPLACE] for  ( String location : scanForMappingFileLocations (  )  )  {^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^LOG.debug ( "Registering classpath-scanned entity mapping file {} in persistence unit info!", mappingFilePattern ) ;^137^^^^^118^140^[REPLACE] LOG.debug ( "Registering classpath-scanned entity mapping file {} in persistence unit info!", location ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^pui.addMappingFileName ( mappingFilePattern ) ;^138^^^^^118^140^[REPLACE] pui.addMappingFileName ( location ) ;^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[ADD]^^136^137^138^139^^118^140^[ADD] for  ( String location : scanForMappingFileLocations (  )  )  { LOG.debug ( "Registering classpath-scanned entity mapping file {} in persistence unit info!", location ) ; pui.addMappingFileName ( location ) ; }^[METHOD] postProcessPersistenceUnitInfo [TYPE] void [PARAMETER] MutablePersistenceUnitInfo pui [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  ClassPathScanningCandidateComponentProvider provider  [TYPE]  Environment environment  [TYPE]  String basePackage  location  mappingFileNamePattern  mappingFilePattern  [TYPE]  MutablePersistenceUnitInfo pui  [TYPE]  Logger LOG  [TYPE]  BeanDefinition definition 
[REPLACE]^if  ( StringUtils.hasText ( mappingFileNamePattern )  )  {^152^^^^^150^186^[REPLACE] if  ( !StringUtils.hasText ( mappingFileNamePattern )  )  {^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^162^^^^^150^186^[ADD] char slash = '/';^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^163^^^^^150^186^[ADD] String basePackagePathComponent = basePackage.replace ( '.', slash ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^String path = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX  basePackagePathComponent  slash  mappingFileNamePattern;^164^165^^^^150^186^[REPLACE] String path = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + basePackagePathComponent + slash + mappingFileNamePattern;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^Resource resource  ;^167^^^^^150^186^[REPLACE] Resource[] scannedResources;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^scannedResources = mappingFileResolver.getResources ( path ) ;^169^170^171^172^173^150^186^[ADD] try { scannedResources = mappingFileResolver.getResources ( path ) ; } catch  ( IOException e )  { throw new IllegalStateException  (" ")  ; }^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^scannedResources =  mappingFileResolver.getResources ( resourcePathInClasspath ) ;^170^^^^^150^186^[REPLACE] scannedResources = mappingFileResolver.getResources ( path ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^170^^^^^150^186^[ADD] scannedResources = mappingFileResolver.getResources ( path ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^return ;^172^^^^^150^186^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^171^172^^^^150^186^[ADD] catch  ( IOException e )  { throw new IllegalStateException  (" ")  ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^String resourcePath = getResourcePath ( resource.getURI (  )  ) ;String resourcePathInClasspath = resourcePath.substring ( resourcePath.indexOf ( basePackagePathComponent )  ) ;mappingFileUris.add ( resourcePathInClasspath ) ;^176^177^178^179^180^150^186^[ADD] try { String resourcePath = getResourcePath ( resource.getURI (  )  ) ; String resourcePathInClasspath = resourcePath.substring ( resourcePath.indexOf ( basePackagePathComponent )  ) ; mappingFileUris.add ( resourcePathInClasspath ) ; } catch  ( IOException e )  {^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^String resourcePath = getResourcePath ( resource.toString (  )  ) ;^177^^^^^150^186^[REPLACE] String resourcePath = getResourcePath ( resource.getURI (  )  ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^178^^^^^150^186^[ADD] String resourcePathInClasspath = resourcePath.substring ( resourcePath.indexOf ( basePackagePathComponent )  ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^177^178^^^^150^186^[ADD] String resourcePath = getResourcePath ( resource.getURI (  )  ) ; String resourcePathInClasspath = resourcePath.substring ( resourcePath.indexOf ( basePackagePathComponent )  ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^178^179^^^^150^186^[ADD] String resourcePathInClasspath = resourcePath.substring ( resourcePath.indexOf ( basePackagePathComponent )  ) ; mappingFileUris.add ( resourcePathInClasspath ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^throw new IllegalStateException ( format ( "Cannot load mapping files from path %s!", path ) , e )  ;^181^^^^^150^186^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^String resourcePathInClasspath = resourcePath.substring ( resourcePath.indexOf ( resourcePathInClasspath )  ) ;^178^^^^^150^186^[REPLACE] String resourcePathInClasspath = resourcePath.substring ( resourcePath.indexOf ( basePackagePathComponent )  ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^Resource[] scannedResources  ;^175^^^^^150^186^[REPLACE] for  ( Resource resource : scannedResources )  {^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[ADD]^^177^^^^^150^186^[ADD] String resourcePath = getResourcePath ( resource.getURI (  )  ) ;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^return null;^185^^^^^150^186^[REPLACE] return mappingFileUris;^[METHOD] scanForMappingFileLocations [TYPE] Set [PARAMETER] [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  Set mappingFileUris  [TYPE]  boolean false  true  [TYPE]  char slash  [TYPE]  Resource resource  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  resourcePath  resourcePathInClasspath  [TYPE]  IOException e  [TYPE]  Logger LOG  [TYPE]  Resource[] scannedResources 
[REPLACE]^if  ( uri.getPath (  )  )  {^197^^^^^195^211^[REPLACE] if  ( uri.isOpaque (  )  )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[ADD]^^197^198^199^200^201^195^211^[ADD] if  ( uri.isOpaque (  )  )  {  String rawPath = uri.toString (  ) ; if  ( rawPath != null )  { int exclamationMarkIndex = rawPath.lastIndexOf ( '!' ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^if  ( resourcePathInClasspath == null )  {^200^^^^^195^211^[REPLACE] if  ( rawPath != null )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^if  ( exclamationMarkIndex  <  -1 )  {^202^^^^^195^211^[REPLACE] if  ( exclamationMarkIndex > -1 )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^return rawPath.substring ( exclamationMarkIndex  1 ) ;^205^^^^^195^211^[REPLACE] return rawPath.substring ( exclamationMarkIndex + 1 ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^int exclamationMarkIndex = resourcePathInClasspath.substring ( '!' ) ;^201^^^^^195^211^[REPLACE] int exclamationMarkIndex = rawPath.lastIndexOf ( '!' ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^if  ( exclamationMarkIndex  !=  -0 )  {^202^^^^^195^211^[REPLACE] if  ( exclamationMarkIndex > -1 )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^return mappingFilePattern.substring ( exclamationMarkIndex  3 ) ;^205^^^^^195^211^[REPLACE] return rawPath.substring ( exclamationMarkIndex + 1 ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^String rawPath = uri.getPath (  ) ;^199^^^^^195^211^[REPLACE] String rawPath = uri.toString (  ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^int exclamationMarkIndex = mappingFilePattern.substring ( '!' ) ;^201^^^^^195^211^[REPLACE] int exclamationMarkIndex = rawPath.lastIndexOf ( '!' ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^if  ( rawPath == null )  {^200^^^^^195^211^[REPLACE] if  ( rawPath != null )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[ADD]^int exclamationMarkIndex = rawPath.lastIndexOf ( '!' ) ;^200^201^202^^^195^211^[ADD] if  ( rawPath != null )  { int exclamationMarkIndex = rawPath.lastIndexOf ( '!' ) ; if  ( exclamationMarkIndex > -1 )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^if  ( exclamationMarkIndex  ==  -1 )  {^202^^^^^195^211^[REPLACE] if  ( exclamationMarkIndex > -1 )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[ADD]^^202^203^^205^206^195^211^[ADD] if  ( exclamationMarkIndex > -1 )  {  return rawPath.substring ( exclamationMarkIndex + 1 ) ; }^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^return resourcePath.substring ( exclamationMarkIndex  1 % 2 ) ;^205^^^^^195^211^[REPLACE] return rawPath.substring ( exclamationMarkIndex + 1 ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^if  ( exclamationMarkIndex  >=  -1 - 3 )  {^202^^^^^195^211^[REPLACE] if  ( exclamationMarkIndex > -1 )  {^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[ADD]^^199^^^^^195^211^[ADD] String rawPath = uri.toString (  ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^int exclamationMarkIndex = resourcePathInClasspath.lastIndexOf ( '!' ) ;^201^^^^^195^211^[REPLACE] int exclamationMarkIndex = rawPath.lastIndexOf ( '!' ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
[REPLACE]^return uri .isOpaque (  )  ;^210^^^^^195^211^[REPLACE] return uri.getPath (  ) ;^[METHOD] getResourcePath [TYPE] String [PARAMETER] URI uri [CLASS] ClasspathScanningPersistenceUnitPostProcessor   [TYPE]  ResourceLoader resourceLoader  [TYPE]  ResourcePatternResolver mappingFileResolver  [TYPE]  boolean false  true  [TYPE]  Environment environment  [TYPE]  String basePackage  basePackagePathComponent  location  mappingFileNamePattern  mappingFilePattern  path  rawPath  resourcePath  resourcePathInClasspath  [TYPE]  Logger LOG  [TYPE]  URI uri  [TYPE]  int exclamationMarkIndex 
