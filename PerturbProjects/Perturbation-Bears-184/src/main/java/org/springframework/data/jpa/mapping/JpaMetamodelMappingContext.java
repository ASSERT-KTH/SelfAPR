[REPLACE]^private final Set<JpaPersistentProperty models;^43^^^^^^^[REPLACE] private final Set<Metamodel> models;^ [CLASS] JpaMetamodelMappingContext  
[REPLACE]^if  ( this.equals ( managedType.getJavaType (  )  )  )  {^115^^^^^102^123^[REPLACE] if  ( type.equals ( managedType.getJavaType (  )  )  )  {^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
[ADD]^^115^116^117^^^102^123^[ADD] if  ( type.equals ( managedType.getJavaType (  )  )  )  { return model; }^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
[REPLACE]^if  ( type.equals ( null.getJavaType (  )  )  )  {^115^^^^^102^123^[REPLACE] if  ( type.equals ( managedType.getJavaType (  )  )  )  {^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
[ADD]^^114^115^116^117^^109^119^[ADD] for  ( ManagedType<?> managedType : model.getManagedTypes (  )  )  { if  ( type.equals ( managedType.getJavaType (  )  )  )  { return model; }^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
[ADD]^model.managedType ( type ) ;return model;^106^107^108^109^110^109^119^[ADD] try { model.managedType ( type ) ; return model; } catch  ( IllegalArgumentException o_O )  {^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
[REPLACE]^ManagedType<?> managedType  ;^104^^^^^109^119^[REPLACE] for  ( Metamodel model : models )  {^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
[REPLACE]^Metamodel model  ;^114^^^^^109^119^[REPLACE] for  ( ManagedType<?> managedType : model.getManagedTypes (  )  )  {^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
[REPLACE]^return this;^122^^^^^102^123^[REPLACE] return null;^[METHOD] getMetamodelFor [TYPE] Metamodel [PARAMETER] Class<?> type [CLASS] JpaMetamodelMappingContext   [TYPE]  ManagedType managedType  [TYPE]  Set models  [TYPE]  boolean false  true  [TYPE]  PersistenceProvider persistenceProvider  [TYPE]  Class type  [TYPE]  Metamodel model  [TYPE]  IllegalArgumentException o_O 
