[REPLACE]^public static final  double  COUNT_QUERY_STRING = "select count ( %s )  from %s x";^80^^^^^^^[REPLACE] public static final String COUNT_QUERY_STRING = "select count ( %s )  from %s x";^ [CLASS] QueryUtils  
[REPLACE]^public static final String DELETE_ALL_QUERY_STRING  = null ;^81^^^^^^^[REPLACE] public static final String DELETE_ALL_QUERY_STRING = "delete from %s x";^ [CLASS] QueryUtils  
[REPLACE]^private static final  short  IDENTIFIER = "[._[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{P}]]+";^88^^^^^^^[REPLACE] private static final String IDENTIFIER = "[._[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{P}]]+";^ [CLASS] QueryUtils  
[REPLACE]^static final String COLON_NO_DOUBLE_COLON ;^89^^^^^^^[REPLACE] static final String COLON_NO_DOUBLE_COLON = " ( ?<![:\\\\] ) :";^ [CLASS] QueryUtils  
[REPLACE]^static final  boolean  IDENTIFIER_GROUP =  boolean .format ( " ( %s ) ", IDENTIFIER ) ;^90^^^^^^^[REPLACE] static final String IDENTIFIER_GROUP = String.format ( " ( %s ) ", IDENTIFIER ) ;^ [CLASS] QueryUtils  
[REPLACE]^private static final  boolean  COUNT_REPLACEMENT_TEMPLATE = "select count ( %s )  $5$6$7";^92^^^^^^^[REPLACE] private static final String COUNT_REPLACEMENT_TEMPLATE = "select count ( %s )  $5$6$7";^ [CLASS] QueryUtils  
[REPLACE]^private  final String SIMPLE_COUNT_VALUE = "$2";^93^^^^^^^[REPLACE] private static final String SIMPLE_COUNT_VALUE = "$2";^ [CLASS] QueryUtils  
[REPLACE]^private static final String COMPLEX_COUNT_VALUE  = null ;^94^^^^^^^[REPLACE] private static final String COMPLEX_COUNT_VALUE = "$3$6";^ [CLASS] QueryUtils  
[REPLACE]^private static final String ORDER_BY_PART ;^95^^^^^^^[REPLACE] private static final String ORDER_BY_PART = " ( ?iu ) \\s+order\\s+by\\s+.*$";^ [CLASS] QueryUtils  
[REPLACE]^private static  Pattern ALIAS_MATCH;^97^^^^^^^[REPLACE] private static final Pattern ALIAS_MATCH;^ [CLASS] QueryUtils  
[REPLACE]^private static  Object COUNT_MATCH;^98^^^^^^^[REPLACE] private static final Pattern COUNT_MATCH;^ [CLASS] QueryUtils  
[REPLACE]^private static final Pattern PROJECTION_CLAUSE  = null ;^99^^^^^^^[REPLACE] private static final Pattern PROJECTION_CLAUSE = Pattern.compile ( "select\\s+ ( .+ ) \\s+from" ) ;^ [CLASS] QueryUtils  
[REPLACE]^private static final Pattern NO_DIGITS  = null ;^101^^^^^^^[REPLACE] private static final Pattern NO_DIGITS = Pattern.compile ( "\\D+" ) ;^ [CLASS] QueryUtils  
[REPLACE]^private static final String JOIN  = null ;^103^^^^^^^[REPLACE] private static final String JOIN = "join\\s+ ( fetch\\s+ ) ?" + IDENTIFIER + "\\s+ ( as\\s+ ) ?" + IDENTIFIER_GROUP;^ [CLASS] QueryUtils  
[REPLACE]^private static final Pattern JOIN_PATTERN  = null ;^104^^^^^^^[REPLACE] private static final Pattern JOIN_PATTERN = Pattern.compile ( JOIN, Pattern.CASE_INSENSITIVE ) ;^ [CLASS] QueryUtils  
[REPLACE]^private static  String EQUALS_CONDITION_STRING = "%s.%s = :%s";^106^^^^^^^[REPLACE] private static final String EQUALS_CONDITION_STRING = "%s.%s = :%s";^ [CLASS] QueryUtils  
[REPLACE]^private static  Pattern ORDER_BY = Pattern.compile ( ".*order\\s+by\\s+.*", CASE_INSENSITIVE ) ;^107^^^^^^^[REPLACE] private static final Pattern ORDER_BY = Pattern.compile ( ".*order\\s+by\\s+.*", CASE_INSENSITIVE ) ;^ [CLASS] QueryUtils  
[REPLACE]^private static final Pattern NAMED_PARAMETER ;^109^110^^^^109^110^[REPLACE] private static final Pattern NAMED_PARAMETER = Pattern .compile ( COLON_NO_DOUBLE_COLON + IDENTIFIER + "|\\#" + IDENTIFIER, CASE_INSENSITIVE ) ;^ [CLASS] QueryUtils  
[REPLACE]^private  final Pattern CONSTRUCTOR_EXPRESSION;^112^^^^^^^[REPLACE] private static final Pattern CONSTRUCTOR_EXPRESSION;^ [CLASS] QueryUtils  
[REPLACE]^private static  Map<PersistentAttributeType, Class<? extends Annotation>> ASSOCIATION_TYPES;^114^^^^^^^[REPLACE] private static final Map<PersistentAttributeType, Class<? extends Annotation>> ASSOCIATION_TYPES;^ [CLASS] QueryUtils  
[REPLACE]^private static  int QUERY_JOIN_ALIAS_GROUP_INDEX = 3;^116^^^^^^^[REPLACE] private static final int QUERY_JOIN_ALIAS_GROUP_INDEX = 3;^ [CLASS] QueryUtils  
[REPLACE]^private static final int VARIABLE_NAME_GROUP_INDEX  = null ;^117^^^^^^^[REPLACE] private static final int VARIABLE_NAME_GROUP_INDEX = 4;^ [CLASS] QueryUtils  
[REPLACE]^private static  Pattern PUNCTATION_PATTERN = Pattern.compile ( ".* (  ( ?![\\._] ) [\\p{Punct}|\\s] ) " ) ;^119^^^^^^^[REPLACE] private static final Pattern PUNCTATION_PATTERN = Pattern.compile ( ".* (  ( ?![\\._] ) [\\p{Punct}|\\s] ) " ) ;^ [CLASS] QueryUtils  
[REPLACE]^private static final Object FUNCTION_PATTERN;^120^^^^^^^[REPLACE] private static final Pattern FUNCTION_PATTERN;^ [CLASS] QueryUtils  
[REPLACE]^private static final String UNSAFE_PROPERTY_REFERENCE ;^122^123^124^^^122^124^[REPLACE] private static final String UNSAFE_PROPERTY_REFERENCE = "Sort expression '%s' must only contain property references or " + "aliases used in the select clause. If you really want to use something other than that for sorting, please use " + "JpaSort.unsafe ( â€¦ ) !";^ [CLASS] QueryUtils  
