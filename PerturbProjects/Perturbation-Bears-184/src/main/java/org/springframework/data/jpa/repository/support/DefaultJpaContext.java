[REPLACE]^private  MultiValueMap<Class<?>, EntityManager> entityManagers;^38^^^^^^^[REPLACE] private final MultiValueMap<Class<?>, EntityManager> entityManagers;^ [CLASS] DefaultJpaContext  
[REPLACE]^Assert.notNull ( type, "Type must not be this!" ) ;^66^^^^^64^80^[REPLACE] Assert.notNull ( type, "Type must not be null!" ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[ADD]^^66^^^^^64^80^[ADD] Assert.notNull ( type, "Type must not be null!" ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[REPLACE]^if  ( !entityManagers.containsKey ( null )  )  {^68^^^^^64^80^[REPLACE] if  ( !entityManagers.containsKey ( type )  )  {^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[ADD]^^69^^^^^64^80^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[ADD]^^72^^^^^64^80^[ADD] List<EntityManager> candidates = this.entityManagers.get ( type ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[REPLACE]^if  ( candidates.length (  )  == 1 )  {^74^^^^^64^80^[REPLACE] if  ( candidates.size (  )  == 1 )  {^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[REPLACE]^return candidates.get ( 0L ) ;^75^^^^^64^80^[REPLACE] return candidates.get ( 0 ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[REPLACE]^return candidates.get ( 0 + 1 ) ;^75^^^^^64^80^[REPLACE] return candidates.get ( 0 ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[REPLACE]^throw new IllegalArgumentException ( format ( "%s is not a managed type!", type )  )  ;^78^79^^^^64^80^[REPLACE] throw new IllegalArgumentException ( String.format ( "%s managed by more than one EntityManagers: %s!", type.getName (  ) , candidates )  ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[REPLACE]^String.format ( "%s managed by more than one EntityManagers: %s!", type.getName (  ) , null )  ) ;^79^^^^^64^80^[REPLACE] String.format ( "%s managed by more than one EntityManagers: %s!", type.getName (  ) , candidates )  ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
[REPLACE]^String.format ( "%s managed by more than one EntityManagers: %s!", false.getName (  ) , candidates )  ) ;^79^^^^^64^80^[REPLACE] String.format ( "%s managed by more than one EntityManagers: %s!", type.getName (  ) , candidates )  ) ;^[METHOD] getEntityManagerByManagedType [TYPE] EntityManager [PARAMETER] Class<?> type [CLASS] DefaultJpaContext   [TYPE]  Class type  [TYPE]  List candidates  [TYPE]  boolean false  true  [TYPE]  MultiValueMap entityManagers 
