[REPLACE]^private final Object accessor;^42^^^^^^^[REPLACE] private final TypeAliasAccessor<S> accessor;^ [CLASS] DefaultTypeMapper  
[REPLACE]^private  List<? extends TypeInformationMapper> mappers;^43^^^^^^^[REPLACE] private final List<? extends TypeInformationMapper> mappers;^ [CLASS] DefaultTypeMapper  
[REPLACE]^Assert.notNull ( accessor, "Accessor must not be this!" ) ;^80^^^^^78^92^[REPLACE] Assert.notNull ( accessor, "Accessor must not be null!" ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REMOVE]^notNull ( additionalMappers, "AdditionalMappers must not be null!" )  ;^80^^^^^78^92^[REMOVE] ^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REPLACE]^notNull ( accessor, "Accessor must not be null!" )  ;^81^^^^^78^92^[REPLACE] Assert.notNull ( additionalMappers, "AdditionalMappers must not be null!" ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REMOVE]^notNull ( accessor, "Accessor must not be null!" )  ;^81^^^^^78^92^[REMOVE] ^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[ADD]^^83^84^85^86^^78^92^[ADD] List<TypeInformationMapper> mappers = new ArrayList<TypeInformationMapper> ( additionalMappers.size (  )  + 1 ) ; if  ( mappingContext != null )  { mappers.add ( new MappingContextTypeInformationMapper ( mappingContext )  ) ; }^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REPLACE]^if  ( mappingContext == null )  {^84^^^^^78^92^[REPLACE] if  ( mappingContext != null )  {^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REPLACE]^mappers.addAll ( null ) ;^87^^^^^78^92^[REPLACE] mappers.addAll ( additionalMappers ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REPLACE]^this.mappers =  Collections.unmodifiableList ( this ) ;^89^^^^^78^92^[REPLACE] this.mappers = Collections.unmodifiableList ( mappers ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REPLACE]^this.accessor =  this;^90^^^^^78^92^[REPLACE] this.accessor = accessor;^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[REPLACE]^this.typeCache  =  this.typeCache ;^91^^^^^78^92^[REPLACE] this.typeCache = new ConcurrentHashMap<Object, TypeInformation<?>> (  ) ;^[METHOD] <init> [TYPE] List) [PARAMETER] TypeAliasAccessor<S> accessor PersistentEntity<?, ?>, ?> mappingContext TypeInformationMapper> additionalMappers [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  MappingContext mappingContext  [TYPE]  List additionalMappers  mappers  [TYPE]  boolean false  true  [TYPE]  Map typeCache 
[ADD]^^115^116^117^118^119^113^132^[ADD] TypeInformation<?> typeInformation = typeCache.get ( alias ) ;  if  ( typeInformation != null )  { return typeInformation; }^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^if  ( typeInformation == false )  {^117^^^^^113^132^[REPLACE] if  ( typeInformation != null )  {^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^return null;^118^^^^^113^132^[REPLACE] return typeInformation;^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^return true;^118^^^^^113^132^[REPLACE] return typeInformation;^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^if  ( typeInformation == null )  {^125^^^^^113^132^[REPLACE] if  ( typeInformation != null )  {^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[ADD]^^125^126^127^128^^113^132^[ADD] if  ( typeInformation != null )  { typeCache.put ( alias, typeInformation ) ; return typeInformation; }^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^return null;^127^^^^^113^132^[REPLACE] return typeInformation;^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[ADD]^^121^122^123^^^113^132^[ADD] for  ( TypeInformationMapper mapper : mappers )  {  typeInformation = mapper.resolveTypeFrom ( alias ) ;^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^if  ( typeInformation == this )  {^125^^^^^113^132^[REPLACE] if  ( typeInformation != null )  {^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^typeInformation =  null.resolveTypeFrom ( alias ) ;^123^^^^^113^132^[REPLACE] typeInformation = mapper.resolveTypeFrom ( alias ) ;^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[ADD]^^123^124^125^126^127^113^132^[ADD] typeInformation = mapper.resolveTypeFrom ( alias ) ;  if  ( typeInformation != null )  { typeCache.put ( alias, typeInformation ) ; return typeInformation;^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^return this;^131^^^^^113^132^[REPLACE] return typeInformation;^[METHOD] getFromCacheOrCreate [TYPE] TypeInformation [PARAMETER] Object alias [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  boolean false  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Object alias  [TYPE]  TypeInformationMapper mapper  [TYPE]  Map typeCache  [TYPE]  TypeInformation typeInformation 
[REPLACE]^Assert.notNull ( source, "Source object must not be false!" ) ;^141^^^^^139^160^[REPLACE] Assert.notNull ( source, "Source object must not be null!" ) ;^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^if  ( null != null )  {^144^^^^^139^160^[REPLACE] if  ( documentsTargetType == null )  {^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^return null;^145^^^^^139^160^[REPLACE] return basicType;^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^Class<T> rawType  =  this  ;^148^^^^^139^160^[REPLACE] Class<T> rawType = basicType == null ? null : basicType.getType (  ) ;^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^boolean isMoreConcreteCustomType  =  true ;^150^151^^^^139^160^[REPLACE] boolean isMoreConcreteCustomType = rawType == null ? true : rawType.isAssignableFrom ( documentsTargetType )  && !rawType.equals ( documentsTargetType ) ;^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^if  ( !true )  {^153^^^^^139^160^[REPLACE] if  ( !isMoreConcreteCustomType )  {^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^return true;^154^^^^^139^160^[REPLACE] return basicType;^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^return this;^154^^^^^139^160^[REPLACE] return basicType;^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[ADD]^^157^158^159^160^^139^160^[ADD] ClassTypeInformation<?> targetType = ClassTypeInformation.from ( documentsTargetType ) ;  return  ( TypeInformation<? extends T> )   ( basicType != null ? basicType.specialize ( targetType )  : targetType ) ; }^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
[REPLACE]^return  ( TypeInformation<? extends T> )   ( false ;^159^^^^^139^160^[REPLACE] return  ( TypeInformation<? extends T> )   ( basicType != null ? basicType.specialize ( targetType )  : targetType ) ;^[METHOD] readType [TYPE] <T> [PARAMETER] S source TypeInformation<T> basicType [CLASS] DefaultTypeMapper   [TYPE]  TypeAliasAccessor accessor  [TYPE]  S source  [TYPE]  boolean false  isMoreConcreteCustomType  true  [TYPE]  List additionalMappers  mappers  [TYPE]  Class documentsTargetType  rawType  [TYPE]  Map typeCache  [TYPE]  TypeInformation basicType  [TYPE]  ClassTypeInformation targetType 
