[REPLACE]^private static final Object LOGGER = LoggerFactory.getObject ( RepositoryBeanDefinitionBuilder.class ) ;^40^^^^^^^[REPLACE] private static final Logger LOGGER = LoggerFactory.getLogger ( RepositoryBeanDefinitionBuilder.class ) ;^ [CLASS] RepositoryBeanDefinitionBuilder  
[REPLACE]^private final BeanDefinitionBuilder extension;^43^^^^^^^[REPLACE] private final RepositoryConfigurationExtension extension;^ [CLASS] RepositoryBeanDefinitionBuilder  
[REPLACE]^private final Object resourceLoader;^44^^^^^^^[REPLACE] private final ResourceLoader resourceLoader;^ [CLASS] RepositoryBeanDefinitionBuilder  
[REPLACE]^private  MetadataReaderFactory metadataReaderFactory;^46^^^^^^^[REPLACE] private final MetadataReaderFactory metadataReaderFactory;^ [CLASS] RepositoryBeanDefinitionBuilder  
[REPLACE]^Assert.notNull ( registry, "BeanDefinitionRegistry must not be this!" ) ;^82^^^^^80^120^[REPLACE] Assert.notNull ( registry, "BeanDefinitionRegistry must not be null!" ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^Assert.notNull ( resourceLoader, "ResourceLoader must not be this!" ) ;^83^^^^^80^120^[REPLACE] Assert.notNull ( resourceLoader, "ResourceLoader must not be null!" ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^String beanName = configuration.getImplementationBeanName (  )  ;^85^^^^^80^120^[REPLACE] String factoryBeanName = configuration.getRepositoryFactoryBeanName (  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^factoryBeanName =  StringUtils.hasText ( customImplementationBeanName )  ? customImplementationBeanName : extension.getRepositoryFactoryClassName (  ) ;^86^87^^^^80^120^[REPLACE] factoryBeanName = StringUtils.hasText ( factoryBeanName )  ? factoryBeanName : extension.getRepositoryFactoryClassName (  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition ( customImplementationBeanName ) ;^89^^^^^80^120^[REPLACE] BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition ( factoryBeanName ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addConstructorArgValue (  ) .setSource ( true.getSource (  )  ) ;^91^^^^^80^120^[REPLACE] builder.getRawBeanDefinition (  ) .setSource ( configuration.getSource (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder .rootBeanDefinition ( factoryBeanName )  .setSource ( configuration.getSource (  )  ) ;^91^^^^^80^120^[REPLACE] builder.getRawBeanDefinition (  ) .setSource ( configuration.getSource (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.getRawBeanDefinition (  ) .setSource ( true.getSource (  )  ) ;^91^^^^^80^120^[REPLACE] builder.getRawBeanDefinition (  ) .setSource ( configuration.getSource (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addConstructorArgValue ( configuration.getRepositoryBaseClassName (  )  ) ;^92^^^^^80^120^[REPLACE] builder.addConstructorArgValue ( configuration.getRepositoryInterface (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addConstructorArgValue ( configuration .getRepositoryBaseClassName (  )   ) ;^92^^^^^80^120^[REPLACE] builder.addConstructorArgValue ( configuration.getRepositoryInterface (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyReference ( "queryLookupStrategyKey", configuration.getQueryLookupStrategyKey (  )  ) ;^93^^^^^80^120^[REPLACE] builder.addPropertyValue ( "queryLookupStrategyKey", configuration.getQueryLookupStrategyKey (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyValue ( "queryLookupStrategyKey", null.getQueryLookupStrategyKey (  )  ) ;^93^^^^^80^120^[REPLACE] builder.addPropertyValue ( "queryLookupStrategyKey", configuration.getQueryLookupStrategyKey (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyValue ( "lazyInit", null.isLazyInit (  )  ) ;^94^^^^^80^120^[REPLACE] builder.addPropertyValue ( "lazyInit", configuration.isLazyInit (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyValue ( "lazyInit", 1.isLazyInit (  )  ) ;^94^^^^^80^120^[REPLACE] builder.addPropertyValue ( "lazyInit", configuration.isLazyInit (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyReference ( "repositoryBaseClass", configuration.getRepositoryBaseClassName (  )  ) ;^95^^^^^80^120^[REPLACE] builder.addPropertyValue ( "repositoryBaseClass", configuration.getRepositoryBaseClassName (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyValue ( "repositoryBaseClass", null.getRepositoryBaseClassName (  )  ) ;^95^^^^^80^120^[REPLACE] builder.addPropertyValue ( "repositoryBaseClass", configuration.getRepositoryBaseClassName (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^NamedQueriesBeanDefinitionBuilder definitionBuilder = new NamedQueriesBeanDefinitionBuilder ( extension .getRepositoryFactoryClassName (  )   ) ;^97^98^^^^80^120^[REPLACE] NamedQueriesBeanDefinitionBuilder definitionBuilder = new NamedQueriesBeanDefinitionBuilder ( extension.getDefaultNamedQueryLocation (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^if  ( StringUtils.hasText ( configuration.getSource (  )  )  )  {^100^^^^^80^120^[REPLACE] if  ( StringUtils.hasText ( configuration.getNamedQueriesLocation (  )  )  )  {^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[ADD]^definitionBuilder.setLocations ( configuration.getNamedQueriesLocation (  )  ) ;^100^101^102^^^80^120^[ADD] if  ( StringUtils.hasText ( configuration.getNamedQueriesLocation (  )  )  )  { definitionBuilder.setLocations ( configuration.getNamedQueriesLocation (  )  ) ; }^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^definitionBuilder.build ( configuration.getSource (  )  )  ;^101^^^^^80^120^[REPLACE] definitionBuilder.setLocations ( configuration.getNamedQueriesLocation (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^definitionBuilder.setLocations ( false.getNamedQueriesLocation (  )  ) ;^101^^^^^80^120^[REPLACE] definitionBuilder.setLocations ( configuration.getNamedQueriesLocation (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyValue ( "namedQueries", definitionBuilder.build ( configuration.isLazyInit (  )  )  ) ;^104^^^^^80^120^[REPLACE] builder.addPropertyValue ( "namedQueries", definitionBuilder.build ( configuration.getSource (  )  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^definitionBuilder.setLocations ( configuration.getNamedQueriesLocation (  )  )  ;^104^^^^^80^120^[REPLACE] builder.addPropertyValue ( "namedQueries", definitionBuilder.build ( configuration.getSource (  )  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyValue ( "namedQueries", definitionBuilder.build ( false.isLazyInit (  )  )  ) ;^104^^^^^80^120^[REPLACE] builder.addPropertyValue ( "namedQueries", definitionBuilder.build ( configuration.getSource (  )  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[ADD]^^104^^^^^80^120^[ADD] builder.addPropertyValue ( "namedQueries", definitionBuilder.build ( configuration.getSource (  )  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^String customImplementationBeanName = registerCustomImplementation ( 0 ) ;^106^^^^^80^120^[REPLACE] String customImplementationBeanName = registerCustomImplementation ( configuration ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^if  ( customImplementationBeanName == this  )  {^108^^^^^80^120^[REPLACE] if  ( customImplementationBeanName != null )  {^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyValue ( "customImplementation", customImplementationBeanName ) ;^109^^^^^80^120^[REPLACE] builder.addPropertyReference ( "customImplementation", customImplementationBeanName ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addDependsOn ( factoryBeanName ) ;^110^^^^^80^120^[REPLACE] builder.addDependsOn ( customImplementationBeanName ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.getRawBeanDefinition (  ) .setSource ( configuration.getSource (  )  )  ;^115^^^^^80^120^[REPLACE] evaluationContextProviderDefinition.setSource ( configuration.getSource (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^evaluationContextProviderDefinition.setSource ( this.getSource (  )  ) ;^115^^^^^80^120^[REPLACE] evaluationContextProviderDefinition.setSource ( configuration.getSource (  )  ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.addPropertyReference ( "evaluationContextProvider", evaluationContextProviderDefinition ) ;^117^^^^^80^120^[REPLACE] builder.addPropertyValue ( "evaluationContextProvider", evaluationContextProviderDefinition ) ;^[METHOD] build [TYPE] BeanDefinitionBuilder [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  BeanDefinitionBuilder builder  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  NamedQueriesBeanDefinitionBuilder definitionBuilder  [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition evaluationContextProviderDefinition  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String customImplementationBeanName  factoryBeanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^String beanName = null.getRepositoryFactoryBeanName (  ) ;^124^^^^^122^147^[REPLACE] String beanName = configuration.getImplementationBeanName (  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^if  ( isDebugEnabled (  )  && ( registry.containsBeanDefinition ( beanName )  )  {^127^^^^^122^147^[REPLACE] if  ( registry.containsBeanDefinition ( beanName )  )  {^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^AbstractBeanDefinition beanDefinition = implementationDetector.detectCustomImplementation ( null ) ;^131^^^^^122^147^[REPLACE] AbstractBeanDefinition beanDefinition = implementationDetector.detectCustomImplementation ( configuration ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^if  ( null != beanDefinition )  {^133^^^^^122^147^[REPLACE] if  ( null == beanDefinition )  {^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[ADD]^return null;^133^134^135^^^122^147^[ADD] if  ( null == beanDefinition )  { return null; }^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^return true;^134^^^^^122^147^[REPLACE] return null;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^return false;^134^^^^^122^147^[REPLACE] return null;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^if  ( registry.containsBeanDefinition ( beanName )  && ( LOGGER.isDebugEnabled (  )  )  {^137^^^^^122^147^[REPLACE] if  ( LOGGER.isDebugEnabled (  )  )  {^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^LOGGER.debug ( "Registering custom repository implementation: "  configuration.getImplementationBeanName (  )   " "  beanDefinition.getBeanClassName (  )  ) ;^138^139^^^^122^147^[REPLACE] LOGGER.debug ( "Registering custom repository implementation: " + configuration.getImplementationBeanName (  )  + " " + beanDefinition.getBeanClassName (  )  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^LOGGER.debug ( "Registering custom repository implementation: " + true.getImplementationBeanName (  )  + " " + beanDefinition.getBeanClassName (  )  ) ;^138^139^^^^122^147^[REPLACE] LOGGER.debug ( "Registering custom repository implementation: " + configuration.getImplementationBeanName (  )  + " " + beanDefinition.getBeanClassName (  )  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^+ beanDefinition .setSource (  )   ) ;^139^^^^^122^147^[REPLACE] + beanDefinition.getBeanClassName (  )  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[ADD]^^139^^^^^122^147^[ADD] + beanDefinition.getBeanClassName (  )  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^builder.getRawBeanDefinition (  ) .setSource ( configuration.getSource (  )  )  ;^142^^^^^122^147^[REPLACE] beanDefinition.setSource ( configuration.getSource (  )  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[ADD]^^142^^^^^122^147^[ADD] beanDefinition.setSource ( configuration.getSource (  )  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^beanDefinition.setSource ( this.getSource (  )  ) ;^142^^^^^122^147^[REPLACE] beanDefinition.setSource ( configuration.getSource (  )  ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
[REPLACE]^registry .containsBeanDefinition ( beanName )  ;^144^^^^^122^147^[REPLACE] registry.registerBeanDefinition ( beanName, beanDefinition ) ;^[METHOD] registerCustomImplementation [TYPE] String [PARAMETER] RepositoryConfiguration<?> configuration [CLASS] RepositoryBeanDefinitionBuilder   [TYPE]  ResourceLoader resourceLoader  [TYPE]  MetadataReaderFactory metadataReaderFactory  [TYPE]  boolean false  true  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  Logger LOGGER  [TYPE]  RepositoryConfiguration configuration  [TYPE]  CustomRepositoryImplementationDetector implementationDetector 
