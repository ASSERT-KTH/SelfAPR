[REPLACE]^final Repositories NONE = new Repositories (  ) ;^48^^^^^^^[REPLACE] static final Repositories NONE = new Repositories (  ) ;^ [CLASS] Repositories EmptyRepositoryFactoryInformation  
[REPLACE]^private static final RepositoryFactoryInformation<Object, Serializable> EMPTY_REPOSITORY_FACTORY_INFO  = null ;^50^^^^^^^[REPLACE] private static final RepositoryFactoryInformation<Object, Serializable> EMPTY_REPOSITORY_FACTORY_INFO = EmptyRepositoryFactoryInformation.INSTANCE;^ [CLASS] Repositories EmptyRepositoryFactoryInformation  
[REPLACE]^private static final String DOMAIN_TYPE_MUST_NOT_BE_NULL  = null ;^51^^^^^^^[REPLACE] private static final String DOMAIN_TYPE_MUST_NOT_BE_NULL = "Domain type must not be null!";^ [CLASS] Repositories EmptyRepositoryFactoryInformation  
[REPLACE]^private final Object beanFactory;^53^^^^^^^[REPLACE] private final BeanFactory beanFactory;^ [CLASS] Repositories EmptyRepositoryFactoryInformation  
[REPLACE]^private  Map<Class<?>, RepositoryFactoryInformation<Object, Serializable>> repositoryFactoryInfos;^55^^^^^^^[REPLACE] private final Map<Class<?>, RepositoryFactoryInformation<Object, Serializable>> repositoryFactoryInfos;^ [CLASS] Repositories EmptyRepositoryFactoryInformation  
[ADD]^^95^96^97^98^^93^112^[ADD] RepositoryFactoryInformation repositoryFactoryInformation = beanFactory.getBean ( name, RepositoryFactoryInformation.class ) ; Class<?> domainType = ClassUtils .getUserClass ( repositoryFactoryInformation.getRepositoryInformation (  ) .getDomainType (  )  ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[ADD]^^97^98^^^^93^112^[ADD] Class<?> domainType = ClassUtils .getUserClass ( repositoryFactoryInformation.getRepositoryInformation (  ) .getDomainType (  )  ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[ADD]^^100^101^102^^104^93^112^[ADD] RepositoryInformation information = repositoryFactoryInformation.getRepositoryInformation (  ) ; Set<Class<?>> alternativeDomainTypes = information.getAlternativeDomainTypes (  ) ; String beanName = BeanFactoryUtils.transformedBeanName ( name ) ; Set<Class<?>> typesToRegister = new HashSet<Class<?>> ( alternativeDomainTypes.size (  )  + 1 ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REPLACE]^Set<Class<?>> alternativeDomainTypes = information.getRepositoryInterface (  ) ;^101^^^^^93^112^[REPLACE] Set<Class<?>> alternativeDomainTypes = information.getAlternativeDomainTypes (  ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[ADD]^^102^103^104^105^106^93^112^[ADD] String beanName = BeanFactoryUtils.transformedBeanName ( name ) ;  Set<Class<?>> typesToRegister = new HashSet<Class<?>> ( alternativeDomainTypes.size (  )  + 1 ) ; typesToRegister.add ( domainType ) ; typesToRegister.addAll ( alternativeDomainTypes ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REPLACE]^Set<Class<?>> typesToRegister = new HashSet<Class<?>> ( alternativeDomainTypes.length (  )  + 1 ) ;^104^^^^^93^112^[REPLACE] Set<Class<?>> typesToRegister = new HashSet<Class<?>> ( alternativeDomainTypes.size (  )  + 1 ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REPLACE]^typesToRegister.add ( this ) ;^105^^^^^93^112^[REPLACE] typesToRegister.add ( domainType ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REPLACE]^typesToRegister.add ( domainType )  ;^106^^^^^93^112^[REPLACE] typesToRegister.addAll ( alternativeDomainTypes ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[ADD]^^108^109^110^111^^93^112^[ADD] for  ( Class<?> type : typesToRegister )  { this.repositoryFactoryInfos.put ( type, repositoryFactoryInformation ) ; this.repositoryBeanNames.put ( type, beanName ) ; }^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REPLACE]^this.repositoryFactoryInfos.put ( null, repositoryFactoryInformation ) ;^109^^^^^93^112^[REPLACE] this.repositoryFactoryInfos.put ( type, repositoryFactoryInformation ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REMOVE]^populateRepositoryFactoryInformation ( factory )  ;^109^^^^^93^112^[REMOVE] ^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REPLACE]^this.repositoryBeanNames.put ( null, beanName ) ;^110^^^^^93^112^[REPLACE] this.repositoryBeanNames.put ( type, beanName ) ;^[METHOD] cacheRepositoryFactory [TYPE] void [PARAMETER] String name [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  Set alternativeDomainTypes  typesToRegister  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  [TYPE]  Class domainType  type  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos  [TYPE]  RepositoryInformation information 
[REPLACE]^Assert.notNull ( null, DOMAIN_TYPE_MUST_NOT_BE_NULL ) ;^151^^^^^149^165^[REPLACE] Assert.notNull ( domainClass, DOMAIN_TYPE_MUST_NOT_BE_NULL ) ;^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^Class<?> userType = ClassUtils.getUserClass ( null ) ;^153^^^^^149^165^[REPLACE] Class<?> userType = ClassUtils.getUserClass ( domainClass ) ;^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^RepositoryFactoryInformation<Object, Serializable> repositoryInfo = repositoryFactoryInfos.get ( null ) ;^154^^^^^149^165^[REPLACE] RepositoryFactoryInformation<Object, Serializable> repositoryInfo = repositoryFactoryInfos.get ( userType ) ;^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^if  ( null == null )  {^156^^^^^149^165^[REPLACE] if  ( repositoryInfo != null )  {^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[ADD]^^156^157^158^^^149^165^[ADD] if  ( repositoryInfo != null )  { return repositoryInfo; }^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^return this;^157^^^^^149^165^[REPLACE] return repositoryInfo;^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^return null;^157^^^^^149^165^[REPLACE] return repositoryInfo;^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^if  ( userType.equals ( Object.class )  )  {^160^^^^^149^165^[REPLACE] if  ( !userType.equals ( Object.class )  )  {^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^return getRepositoryFactoryInfoFor ( domainClass ) .getQueryMethods (  )  ;^161^^^^^149^165^[REPLACE] return getRepositoryFactoryInfoFor ( userType.getSuperclass (  )  ) ;^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
[REPLACE]^return getRepositoryFactoryInfoFor ( true.getSuperclass (  )  ) ;^161^^^^^149^165^[REPLACE] return getRepositoryFactoryInfoFor ( userType.getSuperclass (  )  ) ;^[METHOD] getRepositoryFactoryInfoFor [TYPE] RepositoryFactoryInformation [PARAMETER] Class<?> domainClass [CLASS] Repositories EmptyRepositoryFactoryInformation   [TYPE]  Repositories NONE  [TYPE]  boolean false  true  [TYPE]  EmptyRepositoryFactoryInformation INSTANCE  [TYPE]  BeanFactory beanFactory  [TYPE]  RepositoryFactoryInformation EMPTY_REPOSITORY_FACTORY_INFO  repositoryFactoryInformation  repositoryInfo  [TYPE]  Class domainClass  userType  [TYPE]  String DOMAIN_TYPE_MUST_NOT_BE_NULL  beanName  name  repositoryBeanName  [TYPE]  Map repositoryBeanNames  repositoryFactoryInfos 
