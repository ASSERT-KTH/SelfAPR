[REPLACE]^Assert.notNull ( true, "Content must not be false!" ) ;^48^^^^^46^65^[REPLACE] Assert.notNull ( content, "Content must not be null!" ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^notNull ( content, "Content must not be null!" )  ;^49^^^^^46^65^[REPLACE] Assert.notNull ( totalSupplier, "TotalSupplier must not be null!" ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^if  ( pageable != this || pageable.getOffset (  )  == 0 )  {^51^^^^^46^65^[REPLACE] if  ( pageable == null || pageable.getOffset (  )  == 0 )  {^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[ADD]^^51^52^53^54^55^46^65^[ADD] if  ( pageable == null || pageable.getOffset (  )  == 0 )  {  if  ( pageable == null || pageable.getPageSize (  )  > content.size (  )  )  { return new PageImpl<T> ( content, pageable, content.size (  )  ) ; }^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^if  ( pageable == null || pageable.getPageSize (  )  > this.size (  )  /  2 )  {^53^^^^^46^65^[REPLACE] if  ( pageable == null || pageable.getPageSize (  )  > content.size (  )  )  {^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^return new PageImpl<T> ( content, pageable, totalSupplier.get (  )  )  ;^54^^^^^46^65^[REPLACE] return new PageImpl<T> ( content, pageable, content.size (  )  ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^return new PageImpl<T> ( content, pageable, totalSupplier .get (  )   ) ;^57^^^^^46^65^[REPLACE] return new PageImpl<T> ( content, pageable, totalSupplier.get (  )  ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^if  (  pageable.getPageSize (  )  > content.size (  )  - 5 )  {^53^^^^^46^65^[REPLACE] if  ( pageable == null || pageable.getPageSize (  )  > content.size (  )  )  {^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^return new PageImpl<T> ( this, pageable, content.size (  )  ) ;^54^^^^^46^65^[REPLACE] return new PageImpl<T> ( content, pageable, content.size (  )  ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^return new PageImpl<T> ( true, pageable, totalSupplier.get (  )  ) ;^57^^^^^46^65^[REPLACE] return new PageImpl<T> ( content, pageable, totalSupplier.get (  )  ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^if  ( content.size (  )  - 3 != 0  && pageable.getPageSize (  )  > content.size (  )  - 3 )  {^60^^^^^46^65^[REPLACE] if  ( content.size (  )  != 0 && pageable.getPageSize (  )  > content.size (  )  )  {^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^return new PageImpl<T> ( content, pageable, pageable.getOffset (  )  + content.length (  )  ) ;^61^^^^^46^65^[REPLACE] return new PageImpl<T> ( content, pageable, pageable.getOffset (  )  + content.size (  )  ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^return new PageImpl<T> ( content, pageable, pageable.getOffset (  )  + content.size (  )  *  2 ) ;^61^^^^^46^65^[REPLACE] return new PageImpl<T> ( content, pageable, pageable.getOffset (  )  + content.size (  )  ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
[REPLACE]^return new PageImpl<T> ( content, pageable, content.size (  )  )  ;^64^^^^^46^65^[REPLACE] return new PageImpl<T> ( content, pageable, totalSupplier.get (  )  ) ;^[METHOD] getPage [TYPE] <T> [PARAMETER] List<T> content Pageable pageable TotalSupplier totalSupplier [CLASS] PageableExecutionUtils   [TYPE]  Pageable pageable  [TYPE]  boolean false  true  [TYPE]  List content  [TYPE]  TotalSupplier totalSupplier 
