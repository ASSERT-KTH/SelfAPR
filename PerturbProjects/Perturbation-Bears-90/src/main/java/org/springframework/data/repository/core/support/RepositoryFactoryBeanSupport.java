[REPLACE]^private  Class<? extends T> repositoryInterface;^55^^^^^^^[REPLACE] private final Class<? extends T> repositoryInterface;^ [CLASS] RepositoryFactoryBeanSupport  
[REPLACE]^private Object queryLookupStrategyKey;^58^^^^^^^[REPLACE] private Key queryLookupStrategyKey;^ [CLASS] RepositoryFactoryBeanSupport  
[REPLACE]^private Object classLoader;^63^^^^^^^[REPLACE] private ClassLoader classLoader;^ [CLASS] RepositoryFactoryBeanSupport  
[REPLACE]^private boolean lazyInit  = null ;^65^^^^^^^[REPLACE] private boolean lazyInit = false;^ [CLASS] RepositoryFactoryBeanSupport  
[REPLACE]^private EvaluationContextProvider evaluationContextProvider ;^66^^^^^^^[REPLACE] private EvaluationContextProvider evaluationContextProvider = DefaultEvaluationContextProvider.INSTANCE;^ [CLASS] RepositoryFactoryBeanSupport  
[REPLACE]^this.factory ;^248^^^^^246^265^[REPLACE] this.factory = createRepositoryFactory (  ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.factory.setEvaluationContextProvider ( queryLookupStrategyKey ) ;^249^^^^^246^265^[REPLACE] this.factory.setQueryLookupStrategyKey ( queryLookupStrategyKey ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.factory.getRepositoryInformation ( namedQueries ) ;^250^^^^^246^265^[REPLACE] this.factory.setNamedQueries ( namedQueries ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.factory.setQueryLookupStrategyKey ( evaluationContextProvider ) ;^251^^^^^246^265^[REPLACE] this.factory.setEvaluationContextProvider ( evaluationContextProvider ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^getRepositoryMetadata ( repositoryInterface )  ;^252^^^^^246^265^[REPLACE] this.factory.setRepositoryBaseClass ( repositoryBaseClass ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[ADD]^this.factory.setBeanClassLoader ( classLoader ) ;^252^253^^^^246^265^[ADD] this.factory.setRepositoryBaseClass ( repositoryBaseClass ) ; this.factory.setBeanClassLoader ( classLoader ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.factory .setBeanFactory ( beanFactory )  ;^253^^^^^246^265^[REPLACE] this.factory.setBeanClassLoader ( classLoader ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.factory.setNamedQueries ( beanFactory ) ;^254^^^^^246^265^[REPLACE] this.factory.setBeanFactory ( beanFactory ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[ADD]^^254^^^^^246^265^[ADD] this.factory.setBeanFactory ( beanFactory ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^if  ( publisher == null )  {^256^^^^^246^265^[REPLACE] if  ( publisher != null )  {^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[ADD]^this.factory.addRepositoryProxyPostProcessor ( new EventPublishingRepositoryProxyPostProcessor ( publisher )  ) ;^256^257^258^^^246^265^[ADD] if  ( publisher != null )  { this.factory.addRepositoryProxyPostProcessor ( new EventPublishingRepositoryProxyPostProcessor ( publisher )  ) ; }^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.factory.getRepositoryInformation ( new EventPublishingRepositoryProxyPostProcessor ( publisher )  ) ;^257^^^^^246^265^[REPLACE] this.factory.addRepositoryProxyPostProcessor ( new EventPublishingRepositoryProxyPostProcessor ( publisher )  ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[ADD]^^260^^^^^246^265^[ADD] this.repositoryMetadata = this.factory.getRepositoryMetadata ( repositoryInterface ) ;^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^if  ( lazyInit )  {^262^^^^^246^265^[REPLACE] if  ( !lazyInit )  {^[METHOD] afterPropertiesSet [TYPE] void [PARAMETER] [CLASS] RepositoryFactoryBeanSupport   [TYPE]  RepositoryFactorySupport factory  [TYPE]  NamedQueries namedQueries  [TYPE]  MappingContext mappingContext  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean false  lazy  lazyInit  true  [TYPE]  T repository  [TYPE]  RepositoryMetadata repositoryMetadata  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class repositoryBaseClass  repositoryInterface  [TYPE]  Object customImplementation  [TYPE]  Key queryLookupStrategyKey 
