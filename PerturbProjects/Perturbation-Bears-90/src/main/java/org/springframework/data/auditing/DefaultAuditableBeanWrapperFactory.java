[REPLACE]^private  Auditable<Object auditable;^75^^^^^^^[REPLACE] private final Auditable<Object, ?> auditable;^ [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter  
[REPLACE]^private static final boolean IS_JODA_TIME_PRESENT  = null ;^132^133^^^^132^133^[REPLACE] private static final boolean IS_JODA_TIME_PRESENT = ClassUtils.isPresent ( "org.joda.time.DateTime", ReflectionAuditingBeanWrapper.class.getClassLoader (  )  ) ;^ [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter  
[REPLACE]^private  ConversionService conversionService;^135^^^^^^^[REPLACE] private final ConversionService conversionService;^ [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter  
[REPLACE]^private final Object metadata;^219^^^^^^^[REPLACE] private final AnnotationAuditingMetadata metadata;^ [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter  
[REPLACE]^private  Object target;^220^^^^^^^[REPLACE] private final Object target;^ [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter  
[REPLACE]^conversionService.addConverter ( INSTANCE )  ;^145^^^^^140^158^[REPLACE] conversionService.addConverter ( CalendarToDateTimeConverter.INSTANCE ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^conversionService.addConverter ( INSTANCE )  ;^146^^^^^140^158^[REPLACE] conversionService.addConverter ( CalendarToLocalDateTimeConverter.INSTANCE ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[ADD]^^146^^^^^140^158^[ADD] conversionService.addConverter ( CalendarToLocalDateTimeConverter.INSTANCE ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^for  ( Converter<?, ?> null : Jsr310Converters.getConvertersToRegister (  )  )  {^149^^^^^140^158^[REPLACE] for  ( Converter<?, ?> converter : Jsr310Converters.getConvertersToRegister (  )  )  {^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^conversionService.addConverter ( false ) ;^150^^^^^140^158^[REPLACE] conversionService.addConverter ( converter ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[ADD]^^150^^^^^140^158^[ADD] conversionService.addConverter ( converter ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[ADD]^^153^154^155^^^140^158^[ADD] for  ( Converter<?, ?> converter : ThreeTenBackPortConverters.getConvertersToRegister (  )  )  { conversionService.addConverter ( converter ) ; }^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^conversionService.convert ( date, targetType )  ;^154^^^^^140^158^[REPLACE] conversionService.addConverter ( converter ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^this.conversionService =  null;^157^^^^^140^158^[REPLACE] this.conversionService = conversionService;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Converter converter  [TYPE]  Object target  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^if  ( source != null )  {^51^^^^^49^66^[REPLACE] if  ( source == null )  {^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^return true;^52^^^^^49^66^[REPLACE] return null;^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^return false;^52^^^^^49^66^[REPLACE] return null;^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^if  ( ! source instanceof Auditable )  {^55^^^^^49^66^[REPLACE] if  ( source instanceof Auditable )  {^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^AnnotationAuditingMetadata metadata = AnnotationAuditingMetadata.getMetadata ( target.getClass (  )  ) ;^59^^^^^49^66^[REPLACE] AnnotationAuditingMetadata metadata = AnnotationAuditingMetadata.getMetadata ( source.getClass (  )  ) ;^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^if  ( metadata .getLastModifiedByField (  )   )  {^61^^^^^49^66^[REPLACE] if  ( metadata.isAuditable (  )  )  {^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[ADD]^^61^62^63^^^49^66^[ADD] if  ( metadata.isAuditable (  )  )  { return new ReflectionAuditingBeanWrapper ( source ) ; }^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^return new ReflectionAuditingBeanWrapper ( target ) ;^62^^^^^49^66^[REPLACE] return new ReflectionAuditingBeanWrapper ( source ) ;^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^return true;^65^^^^^49^66^[REPLACE] return null;^[METHOD] getBeanWrapperFor [TYPE] AuditableBeanWrapper [PARAMETER] Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Object source  target  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^if  ( value != null )  {^170^^^^^168^190^[REPLACE] if  ( value == null )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[ADD]^return null;^170^171^172^^^168^190^[ADD] if  ( value == null )  { return null; }^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^return false;^171^^^^^168^190^[REPLACE] return null;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^return true;^171^^^^^168^190^[REPLACE] return null;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^if  ( Calendar.class .getClass (  )   )  {^174^^^^^168^190^[REPLACE] if  ( Calendar.class.equals ( targetType )  )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^return null  ;^175^^^^^168^190^[REPLACE] return value;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^if  ( conversionService.convert ( Calendar.class, targetType )  )  {^178^^^^^168^190^[REPLACE] if  ( conversionService.canConvert ( Calendar.class, targetType )  )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^return conversionService.convert ( date, targetType )  ;^179^^^^^168^190^[REPLACE] return conversionService.convert ( value, targetType ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^if  ( conversionService.canConvert ( Date.class, targetType  )  && equals ( targetType )  )  )  {^182^^^^^168^190^[REPLACE] if  ( conversionService.canConvert ( Date.class, targetType )  )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^return conversionService.convert ( date, null ) ;^185^^^^^168^190^[REPLACE] return conversionService.convert ( date, targetType ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^Date date = conversionService .convert ( value )  ;^184^^^^^168^190^[REPLACE] Date date = conversionService.convert ( value, Date.class ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^return conversionService.convert ( value, targetType )  ;^185^^^^^168^190^[REPLACE] return conversionService.convert ( date, targetType ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^return ;^188^189^^^^168^190^[REPLACE] throw new IllegalArgumentException ( String.format ( "Invalid date type for member %s! Supported types are %s.", source, AnnotationAuditingMetadata.SUPPORTED_DATE_TYPES )  ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^throw new IllegalArgumentException ( String.format ( "Invalid date type for member %s! Supported types are %s.", value, AnnotationAuditingMetadata.SUPPORTED_DATE_TYPES )  ) ;^188^189^^^^168^190^[REPLACE] throw new IllegalArgumentException ( String.format ( "Invalid date type for member %s! Supported types are %s.", source, AnnotationAuditingMetadata.SUPPORTED_DATE_TYPES )  ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DefaultAuditableBeanWrapperFactory AuditableInterfaceBeanWrapper DateConvertingAuditableBeanWrapper ReflectionAuditingBeanWrapper CalendarToDateTimeConverter CalendarToLocalDateTimeConverter   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar value  [TYPE]  Object source  target  value  [TYPE]  Class targetType  [TYPE]  AnnotationAuditingMetadata metadata  [TYPE]  Date date 
[REPLACE]^private final Auditable<Object auditable;^75^^^^^^^[REPLACE] private final Auditable<Object, ?> auditable;^[METHOD] convert [TYPE] LocalDateTime [PARAMETER] Calendar source [CLASS] AuditableInterfaceBeanWrapper   [TYPE]  Auditable auditable  [TYPE]  CalendarToLocalDateTimeConverter INSTANCE  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  CalendarToDateTimeConverter INSTANCE  [TYPE]  ConversionService conversionService  [TYPE]  Calendar source  [TYPE]  Object source  target  value  [TYPE]  AnnotationAuditingMetadata metadata 
[REPLACE]^private static  boolean IS_JODA_TIME_PRESENT = ClassUtils.isPresent ( "org.joda.time.DateTime", ReflectionAuditingBeanWrapper.class.getClassLoader (  )  ) ;^132^133^^^^132^133^[REPLACE] private static final boolean IS_JODA_TIME_PRESENT = ClassUtils.isPresent ( "org.joda.time.DateTime", ReflectionAuditingBeanWrapper.class.getClassLoader (  )  ) ;^[METHOD] setLastModifiedDate [TYPE] void [PARAMETER] Calendar value [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Auditable auditable  [TYPE]  Calendar value  [TYPE]  boolean false  true 
[REPLACE]^private  ConversionService conversionService;^135^^^^^^^[REPLACE] private final ConversionService conversionService;^[METHOD] setLastModifiedDate [TYPE] void [PARAMETER] Calendar value [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Auditable auditable  [TYPE]  Calendar value  [TYPE]  boolean false  true 
[REPLACE]^conversionService.addConverter ( INSTANCE )  ;^145^^^^^140^158^[REPLACE] conversionService.addConverter ( CalendarToDateTimeConverter.INSTANCE ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^conversionService.addConverter ( INSTANCE )  ;^146^^^^^140^158^[REPLACE] conversionService.addConverter ( CalendarToLocalDateTimeConverter.INSTANCE ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^for  ( Converter<?, ?> null : Jsr310Converters.getConvertersToRegister (  )  )  {^149^^^^^140^158^[REPLACE] for  ( Converter<?, ?> converter : Jsr310Converters.getConvertersToRegister (  )  )  {^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^conversionService.convert ( date, targetType )  ;^150^^^^^140^158^[REPLACE] conversionService.addConverter ( converter ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[ADD]^^149^150^151^^^140^158^[ADD] for  ( Converter<?, ?> converter : Jsr310Converters.getConvertersToRegister (  )  )  { conversionService.addConverter ( converter ) ; }^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^for  ( Converter<?, ?> null : ThreeTenBackPortConverters.getConvertersToRegister (  )  )  {^153^^^^^140^158^[REPLACE] for  ( Converter<?, ?> converter : ThreeTenBackPortConverters.getConvertersToRegister (  )  )  {^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^conversionService.convert ( date, targetType )  ;^154^^^^^140^158^[REPLACE] conversionService.addConverter ( converter ) ;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^this.conversionService =  null;^157^^^^^140^158^[REPLACE] this.conversionService = conversionService;^[METHOD] <init> [TYPE] DefaultAuditableBeanWrapperFactory$DateConvertingAuditableBeanWrapper() [PARAMETER] [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Converter converter  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  DefaultFormattingConversionService conversionService 
[REPLACE]^if  ( value != null )  {^170^^^^^168^190^[REPLACE] if  ( value == null )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^return false;^171^^^^^168^190^[REPLACE] return null;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^if  ( Calendar.class.equals ( this )  )  {^174^^^^^168^190^[REPLACE] if  ( Calendar.class.equals ( targetType )  )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^return null  ;^175^^^^^168^190^[REPLACE] return value;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^if  ( conversionService.convert ( Calendar.class, this )  )  {^178^^^^^168^190^[REPLACE] if  ( conversionService.canConvert ( Calendar.class, targetType )  )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^return conversionService .canConvert ( this , false )  ;^179^^^^^168^190^[REPLACE] return conversionService.convert ( value, targetType ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^return conversionService .canConvert ( this , this )  ;^179^^^^^168^190^[REPLACE] return conversionService.convert ( value, targetType ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^if  ( conversionService.canConvert ( Date.class, null )  )  {^182^^^^^168^190^[REPLACE] if  ( conversionService.canConvert ( Date.class, targetType )  )  {^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^return conversionService.convert ( value, targetType )  ;^185^^^^^168^190^[REPLACE] return conversionService.convert ( date, targetType ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^Date date = conversionService .canConvert ( null , this )  ;^184^^^^^168^190^[REPLACE] Date date = conversionService.convert ( value, Date.class ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^return ;^188^189^^^^168^190^[REPLACE] throw new IllegalArgumentException ( String.format ( "Invalid date type for member %s! Supported types are %s.", source, AnnotationAuditingMetadata.SUPPORTED_DATE_TYPES )  ) ;^[METHOD] getDateValueToSet [TYPE] Object [PARAMETER] Calendar value Class<?> targetType Object source [CLASS] DateConvertingAuditableBeanWrapper   [TYPE]  Class targetType  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true  [TYPE]  ConversionService conversionService  [TYPE]  Date date  [TYPE]  Calendar value 
[REPLACE]^private  AnnotationAuditingMetadata metadata;^219^^^^^^^[REPLACE] private final AnnotationAuditingMetadata metadata;^[METHOD] getAsCalendar [TYPE] Calendar [PARAMETER] Object source [CLASS] ReflectionAuditingBeanWrapper   [TYPE]  ConversionService conversionService  [TYPE]  Object source  [TYPE]  boolean IS_JODA_TIME_PRESENT  false  true 
