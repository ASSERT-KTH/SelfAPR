[REPLACE]^private final Set<Object whiteList, blackList, aliases;^74^^^^^^^[REPLACE] private final Set<String> whiteList, blackList, aliases;^ [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter  
[REPLACE]^private  Set<String> whiteList, blackList, aliases;^74^^^^^^^[REPLACE] private final Set<String> whiteList, blackList, aliases;^ [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter  
[REPLACE]^private final QuerydslBindings paths;^320^^^^^^^[REPLACE] private final List<P> paths;^ [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter  
[REPLACE]^private final Path path;^375^^^^^^^[REPLACE] private final P path;^ [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter  
[REPLACE]^private  @NonNull Class<T> type;^449^^^^^^^[REPLACE] private final @NonNull Class<T> type;^ [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter  
[REPLACE]^PathInformation binding;^485^^^^^^^[REPLACE] MultiValueBinding<S, T> binding;^ [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter  
[REPLACE]^Assert.notNull ( path, "PropertyPath must not be this!" ) ;^206^^^^^204^222^[REPLACE] Assert.notNull ( path, "PropertyPath must not be null!" ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^PathAndBinding<S, T> pathAndBinding =  ( PathAndBinding<S, T> )  pathSpecs.get ( path .toDotPath ( false )   ) ;^208^^^^^204^222^[REPLACE] PathAndBinding<S, T> pathAndBinding =  ( PathAndBinding<S, T> )  pathSpecs.get ( path.toDotPath (  )  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( null == true )  {^210^^^^^204^222^[REPLACE] if  ( pathAndBinding != null )  {^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( binding == null )  {^214^^^^^204^222^[REPLACE] if  ( binding != null )  {^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return true.PathAndBinding (  ) ;^215^^^^^204^222^[REPLACE] return pathAndBinding.getBinding (  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return null.PathAndBinding (  ) ;^215^^^^^204^222^[REPLACE] return pathAndBinding.getBinding (  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^MultiValueBinding<S, T> binding = null.getBinding (  ) ;^212^^^^^204^222^[REPLACE] MultiValueBinding<S, T> binding = pathAndBinding.getBinding (  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( binding == false )  {^214^^^^^204^222^[REPLACE] if  ( binding != null )  {^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return pathAndBinding.PathAndBinding (  ) ;^215^^^^^204^222^[REPLACE] return pathAndBinding.getBinding (  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return this.PathAndBinding (  ) ;^215^^^^^204^222^[REPLACE] return pathAndBinding.getBinding (  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^pathAndBinding =   ( PathAndBinding<S, T> )  typeSpecs.get ( null.getLeafType (  )  ) ;^219^^^^^204^222^[REPLACE] pathAndBinding =  ( PathAndBinding<S, T> )  typeSpecs.get ( path.getLeafType (  )  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return pathAndBuilder == null ? null : pathAndBuilder.getPath (  )  ;^221^^^^^204^222^[REPLACE] return pathAndBinding == null ? null : pathAndBinding.getBinding (  ) ;^[METHOD] getBindingForPath [TYPE] <S [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  PathAndBinding pathAndBinding  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding delegate 
[REPLACE]^Assert.notNull ( path, "Path must not be true!" ) ;^247^^^^^245^264^[REPLACE] Assert.notNull ( path, "Path must not be null!" ) ;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^Assert.notNull ( type, "Type information must not be false!" ) ;^248^^^^^245^264^[REPLACE] Assert.notNull ( type, "Type information must not be null!" ) ;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( isPathVisible ( path )  )  {^250^^^^^245^264^[REPLACE] if  ( !isPathVisible ( path )  )  {^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[ADD]^return null;^250^251^252^^^245^264^[ADD] if  ( !isPathVisible ( path )  )  { return null; }^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return this;^251^^^^^245^264^[REPLACE] return null;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return false;^251^^^^^245^264^[REPLACE] return null;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( ! ( isPathVisible ( path )  )  && ( pathSpecs.containsKey ( path )  )  {^254^^^^^245^264^[REPLACE] if  ( pathSpecs.containsKey ( path )  )  {^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return QuerydslPathInformation.of ( pathSpecs .put ( this , null )^255^^^^^245^264^[REPLACE] return QuerydslPathInformation.of ( pathSpecs.get ( path ) .getPath (  )  ) ;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return QuerydslPathInformation.of ( pathSpecs.containsKey ( path ) .getPath (  )  ) ;^255^^^^^245^264^[REPLACE] return QuerydslPathInformation.of ( pathSpecs.get ( path ) .getPath (  )  ) ;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[ADD]^PathInformation propertyPath = PropertyPathInformation.of ( path, type ) ;return isPathVisible ( propertyPath )  ? propertyPath : null;return null;^258^259^260^261^262^245^264^[ADD] try { PathInformation propertyPath = PropertyPathInformation.of ( path, type ) ; return isPathVisible ( propertyPath )  ? propertyPath : null; } catch  ( PropertyReferenceException o_O )  { return null;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return isPathVisible ( propertyPath )  ? propertyPath : this;^260^^^^^245^264^[REPLACE] return isPathVisible ( propertyPath )  ? propertyPath : null;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^PathInformation propertyPath = PropertyPathInformation .of (  )  ;^259^^^^^245^264^[REPLACE] PathInformation propertyPath = PropertyPathInformation.of ( path, type ) ;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return isPathVisible ( propertyPath )  ? propertyPath : true;^260^^^^^245^264^[REPLACE] return isPathVisible ( propertyPath )  ? propertyPath : null;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return true;^262^^^^^245^264^[REPLACE] return null;^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[ADD]^^259^260^261^262^263^245^264^[ADD] PathInformation propertyPath = PropertyPathInformation.of ( path, type ) ; return isPathVisible ( propertyPath )  ? propertyPath : null; } catch  ( PropertyReferenceException o_O )  { return null; }^[METHOD] getPropertyPath [TYPE] PathInformation [PARAMETER] String path TypeInformation<?> type [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  PathInformation propertyPath  [TYPE]  String alias  path  [TYPE]  MultiValueBinding binding  [TYPE]  TypeInformation type  [TYPE]  P path  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PropertyReferenceException o_O  [TYPE]  List paths  [TYPE]  Class type  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  SingleValueBinding delegate 
[REPLACE]^List<String> segments = Arrays.asList ( path .toDotPath ( null )  .split ( "\\." )  ) ;^274^^^^^272^290^[REPLACE] List<String> segments = Arrays.asList ( path.toDotPath (  ) .split ( "\\." )  ) ;^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( !isPathVisible ( StringUtils.collectionToDelimitedString ( segments.subList ( 1, i ) , "." )  )  )  {^278^^^^^272^290^[REPLACE] if  ( !isPathVisible ( StringUtils.collectionToDelimitedString ( segments.subList ( 0, i ) , "." )  )  )  {^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( whiteList.isEmpty (  )  )  {^281^^^^^272^290^[REPLACE] if  ( !whiteList.isEmpty (  )  )  {^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[ADD]^return whiteList.contains ( path.toDotPath (  )  ) ;^281^282^283^^^272^290^[ADD] if  ( !whiteList.isEmpty (  )  )  { return whiteList.contains ( path.toDotPath (  )  ) ; }^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return whiteList.contains ( path.getLeafType (  )  ) ;^282^^^^^272^290^[REPLACE] return whiteList.contains ( path.toDotPath (  )  ) ;^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return this  ;^285^^^^^272^290^[REPLACE] return false;^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^if  ( !whiteList.add (  )  )  {^281^^^^^272^290^[REPLACE] if  ( !whiteList.isEmpty (  )  )  {^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return whiteList.add ( path.toDotPath (  )  ) ;^282^^^^^272^290^[REPLACE] return whiteList.contains ( path.toDotPath (  )  ) ;^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return whiteList .add ( false )  ;^282^^^^^272^290^[REPLACE] return whiteList.contains ( path.toDotPath (  )  ) ;^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return true;^285^^^^^272^290^[REPLACE] return false;^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^for  ( int i = 0 ; i <= segments.size (  ) ; i++ )  {^276^^^^^272^290^[REPLACE] for  ( int i = 1; i <= segments.size (  ) ; i++ )  {^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^return false;^289^^^^^272^290^[REPLACE] return true;^[METHOD] isPathVisible [TYPE] boolean [PARAMETER] PathInformation path [CLASS] QuerydslBindings PathBinder AliasingPathBinder TypeBinder PathAndBinding MultiValueBindingAdapter   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  PathInformation path  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  int i  [TYPE]  SingleValueBinding delegate 
[REPLACE]^private final Object paths;^320^^^^^^^[REPLACE] private final List<P> paths;^[METHOD] bind [TYPE] Predicate [PARAMETER] P path Collection<? extends T> value [CLASS] PathBinder   [TYPE]  P path  [TYPE]  Path path  [TYPE]  Set aliases  blackList  whiteList  [TYPE]  boolean excludeUnlistedProperties  false  true  [TYPE]  Iterator iterator  [TYPE]  Collection value  [TYPE]  List paths  segments  [TYPE]  Class type  [TYPE]  String alias  path  [TYPE]  Map pathSpecs  typeSpecs  [TYPE]  MultiValueBinding binding  [TYPE]  SingleValueBinding binding  delegate 
[REPLACE]^private final QuerydslBindings$AliasingPathBinder path;^375^^^^^^^[REPLACE] private final P path;^[METHOD] registerBinding [TYPE] void [PARAMETER] PathAndBinding<P, T> binding [CLASS] AliasingPathBinder   [TYPE]  List paths  [TYPE]  PathAndBinding binding  [TYPE]  boolean false  true 
[REPLACE]^private  @NonNull Class<T> type;^449^^^^^^^[REPLACE] private final @NonNull Class<T> type;^[METHOD] registerBinding [TYPE] void [PARAMETER] PathAndBinding<P, T> binding [CLASS] TypeBinder   [TYPE]  P path  [TYPE]  String alias  [TYPE]  boolean false  true  [TYPE]  PathAndBinding binding 
[REPLACE]^QuerydslBindings$AliasingPathBinder binding;^485^^^^^^^[REPLACE] MultiValueBinding<S, T> binding;^[METHOD] all [TYPE] <P [PARAMETER] MultiValueBinding<P, T> binding [CLASS] PathAndBinding   [TYPE]  Class type  [TYPE]  MultiValueBinding binding  [TYPE]  boolean false  true 
[REPLACE]^private  @NonNull SingleValueBinding<P, T> delegate;^497^^^^^^^[REPLACE] private final @NonNull SingleValueBinding<P, T> delegate;^[METHOD] <init> [TYPE] QuerydslBindings$PathAndBinding() [PARAMETER] [CLASS] MultiValueBindingAdapter   [TYPE]  Path path  [TYPE]  MultiValueBinding binding  [TYPE]  boolean false  true 
