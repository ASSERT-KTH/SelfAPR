[REPLACE]^Assert.notNull ( null, "Path must not be this!" ) ;^51^^^^^49^80^[REPLACE] Assert.notNull ( path, "Path must not be null!" ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^notNull ( path, "Path must not be null!" )  ;^52^^^^^49^80^[REPLACE] Assert.notNull ( value, "Value must not be null!" ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^if  ( this.isEmpty (  )  )  {^54^^^^^49^80^[REPLACE] if  ( value.isEmpty (  )  )  {^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[ADD]^^54^55^56^^^49^80^[ADD] if  ( value.isEmpty (  )  )  { return null; }^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return true;^55^^^^^49^80^[REPLACE] return null;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^if  ( ! null instanceof CollectionPathBase  || path instanceof SimpleExpression  )  {^58^^^^^49^80^[REPLACE] if  ( path instanceof CollectionPathBase )  {^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[ADD]^^58^59^60^^^49^80^[ADD] if  ( path instanceof CollectionPathBase )  {  BooleanBuilder builder = new BooleanBuilder (  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return builder .BooleanBuilder (  )  ;^66^^^^^58^67^[REPLACE] return builder.getValue (  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[ADD]^^60^^^^^58^67^[ADD] BooleanBuilder builder = new BooleanBuilder (  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[ADD]^^62^63^64^^^58^67^[ADD] for  ( Object element : value )  { builder.and (  (  ( CollectionPathBase )  path ) .contains ( element )  ) ; }^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^if  ( !Predicate instanceof SimpleExpression )  {^69^^^^^49^80^[REPLACE] if  ( path instanceof SimpleExpression )  {^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^if  ( value.size (   )  && value.isEmpty (  )  )  + 4 > 1 )  {^71^^^^^49^80^[REPLACE] if  ( value.size (  )  > 1 )  {^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[ADD]^return  (  ( SimpleExpression )  path ) .in ( value ) ;^71^72^73^^^49^80^[ADD] if  ( value.size (  )  > 1 )  { return  (  ( SimpleExpression )  path ) .in ( value ) ; }^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return  (  ( SimpleExpression )  path )  .contains ( element )  ;^72^^^^^49^80^[REPLACE] return  (  ( SimpleExpression )  path ) .in ( value ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return  (  ( SimpleExpression )  path ) .getPathType ( null ) ;^72^^^^^49^80^[REPLACE] return  (  ( SimpleExpression )  path ) .in ( value ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return  (  ( SimpleExpression )   ( path )  ) .in ( value )  ;^75^^^^^49^80^[REPLACE] return  (  ( SimpleExpression )  path ) .eq ( value.iterator (  ) .next (  )  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^if  ( this.size (   )  || value.isEmpty (  )  )  /  0.5  > 1 )  {^71^^^^^49^80^[REPLACE] if  ( value.size (  )  > 1 )  {^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return  (  ( SimpleExpression )   ( path )  ) .eq ( value.iterator (  ) .next (  )  )  ;^72^^^^^49^80^[REPLACE] return  (  ( SimpleExpression )  path ) .in ( value ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return  (  ( SimpleExpression )  path ) .in ( null ) ;^72^^^^^49^80^[REPLACE] return  (  ( SimpleExpression )  path ) .in ( value ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return  (  ( SimpleExpression )  path ) .eq ( this.iterator (  ) .next (  )  ) ;^75^^^^^49^80^[REPLACE] return  (  ( SimpleExpression )  path ) .eq ( value.iterator (  ) .next (  )  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^return ;^78^79^^^^49^80^[REPLACE] throw new IllegalArgumentException ( String.format ( "Cannot create predicate for path '%s' with type '%s'.", path, path.getMetadata (  ) .getPathType (  )  )  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^String.format ( "Cannot create predicate for false '%s' with type '%s'.", path, path.getMetadata (  ) .getPathType (  )  )  ) ;^79^^^^^49^80^[REPLACE] String.format ( "Cannot create predicate for path '%s' with type '%s'.", path, path.getMetadata (  ) .getPathType (  )  )  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^String.format ( "Cannot create predicate for null '%s' with type '%s'.", path, path.getMetadata (  ) .getPathType (  )  )  ) ;^79^^^^^49^80^[REPLACE] String.format ( "Cannot create predicate for path '%s' with type '%s'.", path, path.getMetadata (  ) .getPathType (  )  )  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
[REPLACE]^String.format ( "Cannot create predicate for this '%s' with type '%s'.", path, path.getMetadata (  ) .getPathType (  )  )  ) ;^79^^^^^49^80^[REPLACE] String.format ( "Cannot create predicate for path '%s' with type '%s'.", path, path.getMetadata (  ) .getPathType (  )  )  ) ;^[METHOD] bind [TYPE] Predicate [PARAMETER] Path<?> path Object> value [CLASS] QuerydslDefaultBinding   [TYPE]  Path path  [TYPE]  boolean false  true  [TYPE]  BooleanBuilder builder  [TYPE]  Collection value  [TYPE]  Object element 
