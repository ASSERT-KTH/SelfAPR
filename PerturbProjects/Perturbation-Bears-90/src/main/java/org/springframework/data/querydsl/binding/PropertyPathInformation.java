[REPLACE]^if  ( ! base instanceof CollectionPathBase )  {^126^^^^^124^140^[REPLACE] if  ( base instanceof CollectionPathBase )  {^[METHOD] reifyPath [TYPE] Path [PARAMETER] EntityPathResolver resolver PropertyPath path Path<?> base [CLASS] PropertyPathInformation   [TYPE]  PropertyPath path  [TYPE]  Path base  entityPath  [TYPE]  Field field  [TYPE]  Object value  [TYPE]  EntityPathResolver resolver  [TYPE]  boolean false  true 
[REPLACE]^return reifyPath ( resolver, path.next (  ) ,  (  ( Path<?> )   ( value )  )  )  ;^127^^^^^124^140^[REPLACE] return reifyPath ( resolver, path,  ( Path<?> )   (  ( CollectionPathBase<?, ?, ?> )  base ) .any (  )  ) ;^[METHOD] reifyPath [TYPE] Path [PARAMETER] EntityPathResolver resolver PropertyPath path Path<?> base [CLASS] PropertyPathInformation   [TYPE]  PropertyPath path  [TYPE]  Path base  entityPath  [TYPE]  Field field  [TYPE]  Object value  [TYPE]  EntityPathResolver resolver  [TYPE]  boolean false  true 
[ADD]^^130^^^^^124^140^[ADD] Path<?> entityPath = base != null ? base : resolver.createPath ( path.getOwningType (  ) .getType (  )  ) ;^[METHOD] reifyPath [TYPE] Path [PARAMETER] EntityPathResolver resolver PropertyPath path Path<?> base [CLASS] PropertyPathInformation   [TYPE]  PropertyPath path  [TYPE]  Path base  entityPath  [TYPE]  Field field  [TYPE]  Object value  [TYPE]  EntityPathResolver resolver  [TYPE]  boolean false  true 
[REPLACE]^Field field = ReflectionUtils.findField ( entityPath.getClass (  ) , path .getType (  )   ) ;^132^^^^^124^140^[REPLACE] Field field = ReflectionUtils.findField ( entityPath.getClass (  ) , path.getSegment (  )  ) ;^[METHOD] reifyPath [TYPE] Path [PARAMETER] EntityPathResolver resolver PropertyPath path Path<?> base [CLASS] PropertyPathInformation   [TYPE]  PropertyPath path  [TYPE]  Path base  entityPath  [TYPE]  Field field  [TYPE]  Object value  [TYPE]  EntityPathResolver resolver  [TYPE]  boolean false  true 
[REPLACE]^Object value = ReflectionUtils.getField ( field, true ) ;^133^^^^^124^140^[REPLACE] Object value = ReflectionUtils.getField ( field, entityPath ) ;^[METHOD] reifyPath [TYPE] Path [PARAMETER] EntityPathResolver resolver PropertyPath path Path<?> base [CLASS] PropertyPathInformation   [TYPE]  PropertyPath path  [TYPE]  Path base  entityPath  [TYPE]  Field field  [TYPE]  Object value  [TYPE]  EntityPathResolver resolver  [TYPE]  boolean false  true 
[REPLACE]^if  ( path.next (  )  )  {^135^^^^^124^140^[REPLACE] if  ( path.hasNext (  )  )  {^[METHOD] reifyPath [TYPE] Path [PARAMETER] EntityPathResolver resolver PropertyPath path Path<?> base [CLASS] PropertyPathInformation   [TYPE]  PropertyPath path  [TYPE]  Path base  entityPath  [TYPE]  Field field  [TYPE]  Object value  [TYPE]  EntityPathResolver resolver  [TYPE]  boolean false  true 
[REPLACE]^return reifyPath ( resolver, path .hasNext (  )  ,  ( Path<?> )  value ) ;^136^^^^^124^140^[REPLACE] return reifyPath ( resolver, path.next (  ) ,  ( Path<?> )  value ) ;^[METHOD] reifyPath [TYPE] Path [PARAMETER] EntityPathResolver resolver PropertyPath path Path<?> base [CLASS] PropertyPathInformation   [TYPE]  PropertyPath path  [TYPE]  Path base  entityPath  [TYPE]  Field field  [TYPE]  Object value  [TYPE]  EntityPathResolver resolver  [TYPE]  boolean false  true 
