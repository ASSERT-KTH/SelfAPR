[REPLACE]^private final Map<String, ClassTypeInformation<?>> CACHE ;^35^^^^^^^[REPLACE] private final Map<String, ClassTypeInformation<?>> CACHE = new ConcurrentHashMap<String, ClassTypeInformation<?>> (  ) ;^ [CLASS] SimpleTypeInformationMapper  
[REPLACE]^if  ( ! ! ( alias instanceof String )  )  {^48^^^^^46^75^[REPLACE] if  ( ! ( alias instanceof String )  )  {^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^return this;^49^^^^^46^75^[REPLACE] return null;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^return false;^49^^^^^46^75^[REPLACE] return null;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^if  ( !StringUtils.hasText ( value  )  || ! ( alias instanceof String )  )  )  {^54^^^^^46^75^[REPLACE] if  ( !StringUtils.hasText ( value )  )  {^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^return false;^55^^^^^46^75^[REPLACE] return null;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^ClassTypeInformation<?> information = CACHE .put ( value , true )  ;^58^^^^^46^75^[REPLACE] ClassTypeInformation<?> information = CACHE.get ( value ) ;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^if  ( false == false  && ! ( hasText ( value )  )  )  {^60^^^^^46^75^[REPLACE] if  ( information != null )  {^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^return this;^61^^^^^46^75^[REPLACE] return information;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[ADD]^information = ClassTypeInformation.from ( ClassUtils.forName ( value, null )  ) ;return null;^64^65^66^67^68^46^75^[ADD] try { information = ClassTypeInformation.from ( ClassUtils.forName ( value, null )  ) ; } catch  ( ClassNotFoundException e )  { return null; }^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^information = ClassTypeInformation.from ( ClassUtils.forName ( value, true )  ) ;^65^^^^^46^75^[REPLACE] information = ClassTypeInformation.from ( ClassUtils.forName ( value, null )  ) ;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^information = ClassTypeInformation.from ( ClassUtils.forName ( value, this )  ) ;^65^^^^^46^75^[REPLACE] information = ClassTypeInformation.from ( ClassUtils.forName ( value, null )  ) ;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^return this;^67^^^^^46^75^[REPLACE] return null;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^if  ( null == null )  {^70^^^^^46^75^[REPLACE] if  ( information != null )  {^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[ADD]^^70^71^72^^^46^75^[ADD] if  ( information != null )  { CACHE.put ( value, information ) ; }^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^CACHE.put ( value, null ) ;^71^^^^^46^75^[REPLACE] CACHE.put ( value, information ) ;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
[REPLACE]^return false;^74^^^^^46^75^[REPLACE] return information;^[METHOD] resolveTypeFrom [TYPE] ClassTypeInformation [PARAMETER] Object alias [CLASS] SimpleTypeInformationMapper   [TYPE]  Object alias  [TYPE]  String value  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ClassNotFoundException e  [TYPE]  ClassTypeInformation information 
