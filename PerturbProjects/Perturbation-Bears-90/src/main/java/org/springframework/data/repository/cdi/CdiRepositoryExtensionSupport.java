[REPLACE]^private static final Iterable LOGGER = LoggerFactory.getIterable ( CdiRepositoryExtensionSupport.class ) ;^59^^^^^^^[REPLACE] private static final Logger LOGGER = LoggerFactory.getLogger ( CdiRepositoryExtensionSupport.class ) ;^ [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral  
[REPLACE]^private final Map<Class<?>, Set<Object repositoryTypes = new HashMap<Class<?>, Set<Object (  ) ;^61^^^^^^^[REPLACE] private final Map<Class<?>, Set<Annotation>> repositoryTypes = new HashMap<Class<?>, Set<Annotation>> (  ) ;^ [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral  
[REPLACE]^private final Set<CdiRepositoryBean<?>> eagerRepositories  = null ;^62^^^^^^^[REPLACE] private final Set<CdiRepositoryBean<?>> eagerRepositories = new HashSet<CdiRepositoryBean<?>> (  ) ;^ [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral  
[REPLACE]^private static final long serialVersionUID ;^192^^^^^^^[REPLACE] private static final long serialVersionUID = 511359421048623933L;^ [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral  
[REPLACE]^private static final DefaultAnnotationLiteral INSTANCE  = null ;^193^^^^^^^[REPLACE] private static final DefaultAnnotationLiteral INSTANCE = new DefaultAnnotationLiteral (  ) ;^ [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral  
[REPLACE]^private static final long serialVersionUID ;^199^^^^^^^[REPLACE] private static final long serialVersionUID = 7261821376671361463L;^ [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral  
[REPLACE]^private static final AnyAnnotationLiteral INSTANCE ;^200^^^^^^^[REPLACE] private static final AnyAnnotationLiteral INSTANCE = new AnyAnnotationLiteral (  ) ;^ [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral  
[REPLACE]^AnnotatedType<X> annotatedType = null.getAnnotatedType (  ) ;^84^^^^^82^99^[REPLACE] AnnotatedType<X> annotatedType = processAnnotatedType.getAnnotatedType (  ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^Class<X> repositoryType = this.getJavaClass (  ) ;^85^^^^^82^99^[REPLACE] Class<X> repositoryType = annotatedType.getJavaClass (  ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^if  ( isRepository ( repositoryType  )  && isDebugEnabled (  )  )  )  {^87^^^^^82^99^[REPLACE] if  ( isRepository ( repositoryType )  )  {^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[ADD]^^87^88^^90^^82^99^[ADD] if  ( isRepository ( repositoryType )  )  {  Set<Annotation> qualifiers = getQualifiers ( repositoryType ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^if  ( isRepository ( repositoryType )  && ( LOGGER.isDebugEnabled (  )  )  {^92^^^^^82^99^[REPLACE] if  ( LOGGER.isDebugEnabled (  )  )  {^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^LOGGER.debug ( String.format ( "Discovered repository type '%s' with this %s.", repositoryType .getClassLoader (  )  , qualifiers )  ) ;^93^94^^^^82^99^[REPLACE] LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", repositoryType.getName (  ) , qualifiers )  ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", repositoryType.isInterface (  ) , qualifiers )  ) ;^93^94^^^^82^99^[REPLACE] LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", repositoryType.getName (  ) , qualifiers )  ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", null.isInterface (  ) , qualifiers )  ) ;^93^94^^^^82^99^[REPLACE] LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", repositoryType.getName (  ) , qualifiers )  ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^Annotation> qualifiers = new Annotation> (  )  ;^90^^^^^82^99^[REPLACE] Set<Annotation> qualifiers = getQualifiers ( repositoryType ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^if  ( LOGGER.isDebugEnabled (   )  && isRepository ( repositoryType )  )  )  {^92^^^^^82^99^[REPLACE] if  ( LOGGER.isDebugEnabled (  )  )  {^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[ADD]^^92^93^94^95^^82^99^[ADD] if  ( LOGGER.isDebugEnabled (  )  )  { LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", repositoryType.getName (  ) , qualifiers )  ) ; }^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", this.getName (  ) , qualifiers )  ) ;^93^94^^^^82^99^[REPLACE] LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", repositoryType.getName (  ) , qualifiers )  ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^LOGGER.debug ( String.format ( "Discovered repository type '%s' with null %s.", repositoryType.getName (  ) , qualifiers )  ) ;^93^94^^^^82^99^[REPLACE] LOGGER.debug ( String.format ( "Discovered repository type '%s' with qualifiers %s.", repositoryType.getName (  ) , qualifiers )  ) ;^[METHOD] processAnnotatedType [TYPE] <X> [PARAMETER] ProcessAnnotatedType<X> processAnnotatedType [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  ProcessAnnotatedType processAnnotatedType  [TYPE]  AnnotatedType annotatedType  [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class repositoryType  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^Annotation> qualifiers = getQualifiers ( repositoryType )  ;^122^^^^^120^139^[REPLACE] Set<Annotation> qualifiers = new HashSet<Annotation> (  ) ;^[METHOD] getQualifiers [TYPE] Set [PARAMETER] Class<?> type [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class annotationType  type  [TYPE]  Logger LOGGER  [TYPE]  Annotation[] annotations  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  Annotation annotation 
[ADD]^^123^^^^^120^139^[ADD] Annotation[] annotations = type.getAnnotations (  ) ;^[METHOD] getQualifiers [TYPE] Set [PARAMETER] Class<?> type [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class annotationType  type  [TYPE]  Logger LOGGER  [TYPE]  Annotation[] annotations  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  Annotation annotation 
[REPLACE]^if  ( null.isAnnotationPresent ( Qualifier.class )  )  {^126^^^^^120^139^[REPLACE] if  ( annotationType.isAnnotationPresent ( Qualifier.class )  )  {^[METHOD] getQualifiers [TYPE] Set [PARAMETER] Class<?> type [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class annotationType  type  [TYPE]  Logger LOGGER  [TYPE]  Annotation[] annotations  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  Annotation annotation 
[REPLACE]^if  ( annotationType.isAssignableFrom ( Qualifier.class )  )  {^126^^^^^120^139^[REPLACE] if  ( annotationType.isAnnotationPresent ( Qualifier.class )  )  {^[METHOD] getQualifiers [TYPE] Set [PARAMETER] Class<?> type [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class annotationType  type  [TYPE]  Logger LOGGER  [TYPE]  Annotation[] annotations  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  Annotation annotation 
[REPLACE]^Annotation[] annotations = type.getAnnotations (  )  ;^124^^^^^120^139^[REPLACE] for  ( Annotation annotation : annotations )  {^[METHOD] getQualifiers [TYPE] Set [PARAMETER] Class<?> type [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class annotationType  type  [TYPE]  Logger LOGGER  [TYPE]  Annotation[] annotations  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  Annotation annotation 
[REPLACE]^if  ( null.isEmpty (  )  )  {^132^^^^^120^139^[REPLACE] if  ( qualifiers.isEmpty (  )  )  {^[METHOD] getQualifiers [TYPE] Set [PARAMETER] Class<?> type [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class annotationType  type  [TYPE]  Logger LOGGER  [TYPE]  Annotation[] annotations  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  Annotation annotation 
[REPLACE]^return null;^138^^^^^120^139^[REPLACE] return qualifiers;^[METHOD] getQualifiers [TYPE] Set [PARAMETER] Class<?> type [CLASS] CdiRepositoryExtensionSupport DefaultAnnotationLiteral AnyAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Class annotationType  type  [TYPE]  Logger LOGGER  [TYPE]  Annotation[] annotations  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  Annotation annotation 
[REPLACE]^private static final long serialVersionUID ;^192^^^^^^^[REPLACE] private static final long serialVersionUID = 511359421048623933L;^[METHOD] getCustomImplementationDetector [TYPE] CustomRepositoryImplementationDetector [PARAMETER] [CLASS] DefaultAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^private static final DefaultAnnotationLiteral INSTANCE ;^193^^^^^^^[REPLACE] private static final DefaultAnnotationLiteral INSTANCE = new DefaultAnnotationLiteral (  ) ;^[METHOD] getCustomImplementationDetector [TYPE] CustomRepositoryImplementationDetector [PARAMETER] [CLASS] DefaultAnnotationLiteral   [TYPE]  Set eagerRepositories  qualifiers  [TYPE]  AnyAnnotationLiteral INSTANCE  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  Map repositoryTypes  [TYPE]  CustomRepositoryImplementationDetector customImplementationDetector  [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE 
[REPLACE]^private static final long serialVersionUID ;^199^^^^^^^[REPLACE] private static final long serialVersionUID = 7261821376671361463L;^[METHOD] <init> [TYPE] CdiRepositoryExtensionSupport$DefaultAnnotationLiteral() [PARAMETER] [CLASS] AnyAnnotationLiteral   [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  boolean false  true 
[REPLACE]^private static final AnyAnnotationLiteral INSTANCE  = null ;^200^^^^^^^[REPLACE] private static final AnyAnnotationLiteral INSTANCE = new AnyAnnotationLiteral (  ) ;^[METHOD] <init> [TYPE] CdiRepositoryExtensionSupport$DefaultAnnotationLiteral() [PARAMETER] [CLASS] AnyAnnotationLiteral   [TYPE]  long serialVersionUID  [TYPE]  DefaultAnnotationLiteral INSTANCE  [TYPE]  boolean false  true 
