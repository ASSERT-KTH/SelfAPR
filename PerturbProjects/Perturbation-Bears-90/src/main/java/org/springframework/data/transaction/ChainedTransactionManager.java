[REPLACE]^private final static Logger LOGGER ;^53^^^^^^^[REPLACE] private final static Logger LOGGER = LoggerFactory.getLogger ( ChainedTransactionManager.class ) ;^ [CLASS] ChainedTransactionManager  
[REPLACE]^private  Object synchronizationManager;^56^^^^^^^[REPLACE] private final SynchronizationManager synchronizationManager;^ [CLASS] ChainedTransactionManager  
[REPLACE]^MultiTransactionStatus multiTransactionStatus =  (  ( MultiTransactionStatus )   ( status )  )  ;^91^^^^^89^126^[REPLACE] MultiTransactionStatus mts = new MultiTransactionStatus ( transactionManagers.get ( 0 )  ) ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^if  ( synchronizationManager.isSynchronizationActive (  )  )  {^93^^^^^89^126^[REPLACE] if  ( !synchronizationManager.isSynchronizationActive (  )  )  {^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^( synchronizationManager.isSynchronizationActive (  )  )  ;^94^^^^^89^126^[REPLACE] synchronizationManager.initSynchronization (  ) ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^mts.isNewSynchonization (  )  ;^95^^^^^89^126^[REPLACE] mts.setNewSynchonization (  ) ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[ADD]^^95^^^^^89^126^[ADD] mts.setNewSynchonization (  ) ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^if  ( transactionStatuses.get ( transactionManager )  == null )  {^110^^^^^89^126^[REPLACE] if  ( transactionStatuses.get ( transactionManager )  != null )  {^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REMOVE]^if  ( multiTransactionStatus.isNewSynchonization (  )  )  {     synchronizationManager.clearSynchronization (  ) ; }^110^^^^^89^126^[REMOVE] ^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^( transactionStatuses.get ( transactionManager )  )  ;^111^^^^^89^126^[REPLACE] transactionManager.rollback ( transactionStatuses.get ( transactionManager )  ) ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^if  ( mts.setNewSynchonization (  )  )  {^118^^^^^89^126^[REPLACE] if  ( mts.isNewSynchonization (  )  )  {^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^synchronizationManager.initSynchronization (  )  ;^119^^^^^89^126^[REPLACE] synchronizationManager.clearSynchronization (  ) ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[ADD]^^100^101^102^^^98^104^[ADD] for  ( PlatformTransactionManager transactionManager : transactionManagers )  { mts.registerTransactionManager ( definition, transactionManager ) ; }^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[ADD]^mts.registerTransactionManager ( definition, transactionManager ) ;^98^99^100^101^102^98^104^[ADD] try {  for  ( PlatformTransactionManager transactionManager : transactionManagers )  { mts.registerTransactionManager ( definition, transactionManager ) ; }^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[ADD]^transactionManager.rollback ( transactionStatuses.get ( transactionManager )  ) ;^109^110^111^112^^98^104^[ADD] try { if  ( transactionStatuses.get ( transactionManager )  != null )  { transactionManager.rollback ( transactionStatuses.get ( transactionManager )  ) ; }^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^PlatformTransactionManager commitExceptionTransactionManager = null  ;^100^^^^^98^104^[REPLACE] for  ( PlatformTransactionManager transactionManager : transactionManagers )  {^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^Map<PlatformTransactionManager, TransactionStatus> transactionStatuses = mts.setNewSynchonization (  ) ;^106^^^^^98^104^[REPLACE] Map<PlatformTransactionManager, TransactionStatus> transactionStatuses = mts.getTransactionStatuses (  ) ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[ADD]^^108^109^110^111^112^98^104^[ADD] for  ( PlatformTransactionManager transactionManager : transactionManagers )  { try { if  ( transactionStatuses.get ( transactionManager )  != null )  { transactionManager.rollback ( transactionStatuses.get ( transactionManager )  ) ; }^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[ADD]^^122^^^^^98^104^[ADD] throw new CannotCreateTransactionException  (" ")  ;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^} catch  ( Exception ex )  {^113^^^^^98^104^[REPLACE] } catch  ( Exception ex2 )  {^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[REPLACE]^return list  ;^125^^^^^89^126^[REPLACE] return mts;^[METHOD] getTransaction [TYPE] MultiTransactionStatus [PARAMETER] TransactionDefinition definition [CLASS] ChainedTransactionManager   [TYPE]  TransactionDefinition definition  [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus mts  [TYPE]  Map transactionStatuses  [TYPE]  PlatformTransactionManager transactionManager  [TYPE]  Exception ex  ex2 
[ADD]^^134^^^^^132^174^[ADD] MultiTransactionStatus multiTransactionStatus =  ( MultiTransactionStatus )  status;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^^136^^^^^132^174^[ADD] boolean commit = true;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^^137^138^^^^132^174^[ADD] Exception commitException = null; PlatformTransactionManager commitExceptionTransactionManager = null;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^PlatformTransactionManager transactionManager  ;^138^^^^^132^174^[REPLACE] PlatformTransactionManager commitExceptionTransactionManager = null;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^multiTransactionStatus.rollback ( transactionManager ) ;LOGGER.warn ( "Rollback exception  ( after commit )   ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ;^156^157^158^159^160^142^161^[ADD] try { multiTransactionStatus.rollback ( transactionManager ) ; } catch  ( Exception ex )  { LOGGER.warn ( "Rollback exception  ( after commit )   ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ; }^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^multiTransactionStatus.rollback ( commitExceptionTransactionManager ) ;^157^^^^^142^161^[REPLACE] multiTransactionStatus.rollback ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^} catch  ( Exception commitException )  {^158^^^^^142^161^[REPLACE] } catch  ( Exception ex )  {^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^multiTransactionStatus.commit ( transactionManager ) ;commit = false;commitException = ex;^144^145^146^147^148^132^174^[ADD] try { multiTransactionStatus.commit ( transactionManager ) ; } catch  ( Exception ex )  { commit = false; commitException = ex;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^transactionStatuses.get ( transactionManager )  ;^145^^^^^132^174^[REPLACE] multiTransactionStatus.commit ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^commit = true;^147^^^^^132^174^[REPLACE] commit = false;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^commitException =  null;^148^^^^^132^174^[REPLACE] commitException = ex;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^^149^^^^^132^174^[ADD] commitExceptionTransactionManager = transactionManager;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^} catch  ( Exception commitException )  {^146^^^^^132^174^[REPLACE] } catch  ( Exception ex )  {^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^multiTransactionStatus.commit ( transactionManager ) ;^157^^^^^142^161^[REPLACE] multiTransactionStatus.rollback ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^multiTransactionStatus .lastTransactionManagerIndex (  )  ;^145^^^^^132^174^[REPLACE] multiTransactionStatus.commit ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^rollbackException = ex  ;^148^^^^^132^174^[REPLACE] commitException = ex;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^rollbackExceptionTransactionManager = transactionManager  ;^149^^^^^132^174^[REPLACE] commitExceptionTransactionManager = transactionManager;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^^146^147^^^^132^174^[ADD] catch  ( Exception ex )  { commit = false;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^multiTransactionStatus.commit ( commitExceptionTransactionManager ) ;^145^^^^^132^174^[REPLACE] multiTransactionStatus.commit ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^^145^^^^^132^174^[ADD] multiTransactionStatus.commit ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^multiTransactionStatus.rollback ( transactionManager ) ;LOGGER.warn ( "Rollback exception  ( after commit )   ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ;^156^157^158^159^160^132^174^[ADD] try { multiTransactionStatus.rollback ( transactionManager ) ; } catch  ( Exception ex )  { LOGGER.warn ( "Rollback exception  ( after commit )   ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ; }^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^multiTransactionStatus.rollback ( commitExceptionTransactionManager ) ;^157^^^^^132^174^[REPLACE] multiTransactionStatus.rollback ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^^147^148^^^^132^174^[ADD] commit = false; commitException = ex;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^multiTransactionStatus.rollback ( transactionManager ) ;^145^^^^^132^174^[REPLACE] multiTransactionStatus.commit ( transactionManager ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^PlatformTransactionManager commitExceptionTransactionManager = null  ;^140^^^^^132^174^[REPLACE] for  ( PlatformTransactionManager transactionManager : reverse ( transactionManagers )  )  {^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^synchronizationManager.clearSynchronization (  ) ;^164^165^166^^^132^174^[ADD] if  ( multiTransactionStatus.isNewSynchonization (  )  )  { synchronizationManager.clearSynchronization (  ) ; }^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^synchronizationManager .initSynchronization (  )  ;^165^^^^^132^174^[REPLACE] synchronizationManager.clearSynchronization (  ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^if  ( commitException == null )  {^168^^^^^132^174^[REPLACE] if  ( commitException != null )  {^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^boolean firstTransactionManagerFailed = commitExceptionTransactionManager  ||  getLastTransactionManager (  ) ;^169^^^^^132^174^[REPLACE] boolean firstTransactionManagerFailed = commitExceptionTransactionManager == getLastTransactionManager (  ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^int transactionState = true ? HeuristicCompletionException.STATE_ROLLED_BACK : HeuristicCompletionException.STATE_MIXED;^170^171^^^^132^174^[REPLACE] int transactionState = firstTransactionManagerFailed ? HeuristicCompletionException.STATE_ROLLED_BACK : HeuristicCompletionException.STATE_MIXED;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^throw new CannotCreateTransactionException ( ex.getMessage (  ) , ex )  ;^172^^^^^132^174^[REPLACE] throw new HeuristicCompletionException  (" ")  ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^boolean firstTransactionManagerFailed =transactionManager  ||  getLastTransactionManager (  ) ;^169^^^^^132^174^[REPLACE] boolean firstTransactionManagerFailed = commitExceptionTransactionManager == getLastTransactionManager (  ) ;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[ADD]^^170^171^^^^132^174^[ADD] int transactionState = firstTransactionManagerFailed ? HeuristicCompletionException.STATE_ROLLED_BACK : HeuristicCompletionException.STATE_MIXED;^[METHOD] commit [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean commit  false  firstTransactionManagerFailed  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception commitException  ex  [TYPE]  PlatformTransactionManager commitExceptionTransactionManager  transactionManager  [TYPE]  int transactionState 
[REPLACE]^Exception commitException = null  ;^182^^^^^180^208^[REPLACE] Exception rollbackException = null;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[ADD]^^183^184^185^^^180^208^[ADD] PlatformTransactionManager rollbackExceptionTransactionManager = null;  MultiTransactionStatus multiTransactionStatus =  ( MultiTransactionStatus )  status;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^MultiTransactionStatus mts = new MultiTransactionStatus ( transactionManagers.get ( 0 )  )  ;^185^^^^^180^208^[REPLACE] MultiTransactionStatus multiTransactionStatus =  ( MultiTransactionStatus )  status;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^if  ( rollbackException != null )  {^191^^^^^180^208^[REPLACE] if  ( rollbackException == null )  {^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^LOGGER.warn ( "Rollback rollbackExceptionception  ( "  transactionManager  " )  "  ex.getMessage (  ) , ex ) ;^195^^^^^191^196^[REPLACE] LOGGER.warn ( "Rollback exception  ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^( ex2.getMessage (  )  )  ;^195^^^^^191^196^[REPLACE] LOGGER.warn ( "Rollback exception  ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REMOVE]^transactionManagers.get ( 0 )  ;^195^^^^^191^196^[REMOVE] ^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^rollbackException =  null;^192^^^^^180^208^[REPLACE] rollbackException = ex;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^commitExceptionTransactionManager = transactionManager  ;^193^^^^^180^208^[REPLACE] rollbackExceptionTransactionManager = transactionManager;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^for  ( PlatformTransactionManager rollbackExceptionTransactionManager : reverse ( transactionManagers )  )  {^187^^^^^180^208^[REPLACE] for  ( PlatformTransactionManager transactionManager : reverse ( transactionManagers )  )  {^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^if  (ex != null )  {^191^^^^^180^208^[REPLACE] if  ( rollbackException == null )  {^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^LOGGER.warn ( "Rollback exception  ( "  transactionManager  " )  "  ex.getMessage (  ) , ex ) ;^195^^^^^191^196^[REPLACE] LOGGER.warn ( "Rollback exception  ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^LOGGER.warn ( "Rollback rollbackExceptionception  ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ;^195^^^^^191^196^[REPLACE] LOGGER.warn ( "Rollback exception  ( " + transactionManager + " )  " + ex.getMessage (  ) , ex ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[ADD]^^193^^^^^180^208^[ADD] rollbackExceptionTransactionManager = transactionManager;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[ADD]^multiTransactionStatus.rollback ( transactionManager ) ;rollbackException = ex;^188^189^190^191^192^180^208^[ADD] try { multiTransactionStatus.rollback ( transactionManager ) ; } catch  ( Exception ex )  { if  ( rollbackException == null )  { rollbackException = ex;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^multiTransactionStatus .rollback ( status )  ;^189^^^^^180^208^[REPLACE] multiTransactionStatus.rollback ( transactionManager ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REMOVE]^this ( SpringTransactionSynchronizationManager.INSTANCE, transactionManagers )  ;^189^^^^^180^208^[REMOVE] ^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[ADD]^^192^^^^^180^208^[ADD] rollbackException = ex;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[ADD]^^187^188^189^190^^180^208^[ADD] for  ( PlatformTransactionManager transactionManager : reverse ( transactionManagers )  )  { try { multiTransactionStatus.rollback ( transactionManager ) ; } catch  ( Exception ex )  {^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[ADD]^^190^191^192^^^180^208^[ADD] catch  ( Exception ex )  { if  ( rollbackException == null )  { rollbackException = ex;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^if  ( multiTransactionStatus.setNewSynchonization (  )  )  {^200^^^^^180^208^[REPLACE] if  ( multiTransactionStatus.isNewSynchonization (  )  )  {^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REMOVE]^if  ( ! ( synchronizationManager.isSynchronizationActive (  )  )  )  {     synchronizationManager.initSynchronization (  ) ;     mts.setNewSynchonization (  ) ; }^200^^^^^180^208^[REMOVE] ^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^synchronizationManager.initSynchronization (  ) ;^201^^^^^180^208^[REPLACE] synchronizationManager.clearSynchronization (  ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^if  ( rollbackException == null )  {^204^^^^^180^208^[REPLACE] if  ( rollbackException != null )  {^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^return ;^205^206^^^^180^208^[REPLACE] throw new UnexpectedRollbackException ( "Rollback exception, originated at  ( " + rollbackExceptionTransactionManager + " )  " + rollbackException.getMessage (  ) , rollbackException ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
[REPLACE]^+ " )  " + ex.getMessage (  ) , rollbackException ) ;^206^^^^^180^208^[REPLACE] + " )  " + rollbackException.getMessage (  ) , rollbackException ) ;^[METHOD] rollback [TYPE] void [PARAMETER] TransactionStatus status [CLASS] ChainedTransactionManager   [TYPE]  SynchronizationManager synchronizationManager  [TYPE]  boolean false  true  [TYPE]  TransactionStatus status  [TYPE]  List transactionManagers  [TYPE]  Logger LOGGER  [TYPE]  MultiTransactionStatus multiTransactionStatus  [TYPE]  Exception ex  rollbackException  [TYPE]  PlatformTransactionManager rollbackExceptionTransactionManager  transactionManager 
