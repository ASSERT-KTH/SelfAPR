[REPLACE]^private final Object extensionTypeInformation;^55^^^^^^^[REPLACE] private final ExtensionTypeInformation extensionTypeInformation;^ [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1  
[REPLACE]^private final EvaluationContextExtensionInformation$RootObjectInformation rootObjectInformation;^56^^^^^^^[REPLACE] private final RootObjectInformation rootObjectInformation;^ [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1  
[REPLACE]^public static  PublicMethodAndFieldFilter STATIC = new PublicMethodAndFieldFilter ( true ) ;^163^^^^^^^[REPLACE] public static final PublicMethodAndFieldFilter STATIC = new PublicMethodAndFieldFilter ( true ) ;^ [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1  
[REPLACE]^public static final PublicMethodAndFieldFilter NON_STATIC ;^164^^^^^^^[REPLACE] public static final PublicMethodAndFieldFilter NON_STATIC = new PublicMethodAndFieldFilter ( false ) ;^ [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1  
[REPLACE]^private static  RootObjectInformation NONE = new RootObjectInformation ( Object.class ) ;^214^^^^^^^[REPLACE] private static final RootObjectInformation NONE = new RootObjectInformation ( Object.class ) ;^ [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1  
[REPLACE]^private final Map<String, Object accessors;^216^^^^^^^[REPLACE] private final Map<String, Method> accessors;^ [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1  
[REPLACE]^private final Collection<Object methods;^217^^^^^^^[REPLACE] private final Collection<Method> methods;^ [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1  
[REPLACE]^notNull ( type, "Extension type must not be null!" )  ;^228^^^^^226^262^[REPLACE] Assert.notNull ( type, "Type must not be null!" ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^this.methods = new Method> (  )  ;^230^^^^^226^262^[REPLACE] this.accessors = new HashMap<String, Method> (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^this.fields = new Field> (  )  ;^231^^^^^226^262^[REPLACE] this.methods = new HashSet<Method> (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^this.methods = new Method> (  )  ;^232^^^^^226^262^[REPLACE] this.fields = new ArrayList<Field> (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^if  ( Object.class .getClass (  )   )  {^234^^^^^226^262^[REPLACE] if  ( Object.class.equals ( type )  )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^final PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors ( null ) ;^238^^^^^226^262^[REPLACE] final PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors ( type ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^if  ( method .getClass (  )   )  {^248^^^^^226^262^[REPLACE] if  ( method.equals ( descriptor.getReadMethod (  )  )  )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^RootObjectInformation.this.accessors .put ( 1 , 0 )  ;^249^^^^^226^262^[REPLACE] RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^RootObjectInformation.this.accessors.put ( descriptor .getReturnType (  )  , method ) ;^249^^^^^226^262^[REPLACE] RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[ADD]^^247^248^249^250^^243^252^[ADD] for  ( PropertyDescriptor descriptor : descriptors )  { if  ( method.equals ( descriptor.getReadMethod (  )  )  )  { RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ; }^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^ReflectionUtils.doWithFields ( 1, new FieldCallback (  )  {^255^^^^^226^262^[REPLACE] ReflectionUtils.doWithFields ( type, new FieldCallback (  )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[ADD]^^259^260^^^^226^262^[ADD] RootObjectInformation.this.fields.add ( field ) ; }^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  boolean false  forStatic  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors  functions  properties 
[REPLACE]^if  ( target != null )  {^294^^^^^292^309^[REPLACE] if  ( target == null )  {^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^return Collections .unmodifiableMap ( 0 )  ;^295^^^^^292^309^[REPLACE] return Collections.emptyMap (  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^return Collections .unmodifiableMap ( false )  ;^295^^^^^292^309^[REPLACE] return Collections.emptyMap (  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^final String, Object> map = new String, Object> (  )  ;^298^^^^^292^309^[REPLACE] Map<String, Object> properties = new HashMap<String, Object> (  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[ADD]^^300^301^302^^^292^309^[ADD] for  ( Entry<String, Method> method : accessors.entrySet (  )  )  { properties.put ( method.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ; }^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^properties.put ( method.getValue (  ) , new Function ( method.getValue (  ) , target )  ) ;^301^^^^^292^309^[REPLACE] properties.put ( method.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^properties.put ( null.getValue (  ) , new Function ( method.getValue (  ) , target )  ) ;^301^^^^^292^309^[REPLACE] properties.put ( method.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^properties.put ( null.getKey (  ) , new Function ( method.getKey (  ) , target )  ) ;^301^^^^^292^309^[REPLACE] properties.put ( method.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^properties .put ( this , 0 )   ) ;^305^^^^^292^309^[REPLACE] properties.put ( field.getName (  ) , ReflectionUtils.getField ( field, target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^properties.put ( field.getModifiers (  ) , ReflectionUtils.getField ( field, target )  ) ;^305^^^^^292^309^[REPLACE] properties.put ( field.getName (  ) , ReflectionUtils.getField ( field, target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REMOVE]^descriptor.getName (  )  ;^305^^^^^292^309^[REMOVE] ^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^isObjectMethod ( method )  ;^305^^^^^292^309^[REPLACE] properties.put ( field.getName (  ) , ReflectionUtils.getField ( field, target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^Method method  ;^304^^^^^292^309^[REPLACE] for  ( Field field : fields )  {^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^return Collections .emptyMap (  )  ;^308^^^^^292^309^[REPLACE] return Collections.unmodifiableMap ( properties ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] EvaluationContextExtensionInformation ExtensionTypeInformation 1 PublicMethodAndFieldFilter RootObjectInformation 1 2 1   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Object target  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^private  Map<String, Object> properties;^110^^^^^^^[REPLACE] private final Map<String, Object> properties;^[METHOD] doWith [TYPE] void [PARAMETER] Field field [CLASS] ExtensionTypeInformation 1 PublicMethodAndFieldFilter   [TYPE]  Field field  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^public static final Object STATIC = new Object ( false ) ;^163^^^^^^^[REPLACE] public static final PublicMethodAndFieldFilter STATIC = new PublicMethodAndFieldFilter ( true ) ;^[METHOD] doWith [TYPE] void [PARAMETER] Field field [CLASS] ExtensionTypeInformation 1 PublicMethodAndFieldFilter   [TYPE]  Field field  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^public static final Object NON_STATIC = new Object ( false ) ;^164^^^^^^^[REPLACE] public static final PublicMethodAndFieldFilter NON_STATIC = new PublicMethodAndFieldFilter ( false ) ;^[METHOD] doWith [TYPE] void [PARAMETER] Field field [CLASS] ExtensionTypeInformation 1 PublicMethodAndFieldFilter   [TYPE]  Field field  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^private  boolean staticOnly;^166^^^^^^^[REPLACE] private final boolean staticOnly;^[METHOD] doWith [TYPE] void [PARAMETER] Field field [CLASS] ExtensionTypeInformation 1 PublicMethodAndFieldFilter   [TYPE]  Field field  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true  [TYPE]  ExtensionTypeInformation extensionTypeInformation  [TYPE]  RootObjectInformation NONE  rootObjectInformation  [TYPE]  Collection fields  methods  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  Map accessors  functions  map  properties 
[REPLACE]^public static  Object STATIC = new Object ( true ) ;^163^^^^^^^[REPLACE] public static final PublicMethodAndFieldFilter STATIC = new PublicMethodAndFieldFilter ( true ) ;^[METHOD] doWith [TYPE] void [PARAMETER] Method method [CLASS] PublicMethodAndFieldFilter   [TYPE]  boolean false  true  [TYPE]  Method method 
[REPLACE]^public static final PublicMethodAndFieldFilter NON_STATIC ;^164^^^^^^^[REPLACE] public static final PublicMethodAndFieldFilter NON_STATIC = new PublicMethodAndFieldFilter ( false ) ;^[METHOD] doWith [TYPE] void [PARAMETER] Method method [CLASS] PublicMethodAndFieldFilter   [TYPE]  boolean false  true  [TYPE]  Method method 
[REPLACE]^private final boolean Only;^166^^^^^^^[REPLACE] private final boolean staticOnly;^[METHOD] doWith [TYPE] void [PARAMETER] Method method [CLASS] PublicMethodAndFieldFilter   [TYPE]  boolean false  true  [TYPE]  Method method 
[REPLACE]^private static final RootObjectInformation NONE  = null ;^214^^^^^^^[REPLACE] private static final RootObjectInformation NONE = new RootObjectInformation ( Object.class ) ;^[METHOD] matches [TYPE] boolean [PARAMETER] Field field [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true 
[REPLACE]^private final Collection<Object methods;^217^^^^^^^[REPLACE] private final Collection<Method> methods;^[METHOD] matches [TYPE] boolean [PARAMETER] Field field [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true 
[REPLACE]^private  Collection<Field> fields;^218^^^^^^^[REPLACE] private final Collection<Field> fields;^[METHOD] matches [TYPE] boolean [PARAMETER] Field field [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  PublicMethodAndFieldFilter NON_STATIC  STATIC  [TYPE]  boolean false  fieldStatic  forStatic  methodStatic  staticMatch  staticOnly  true 
[REPLACE]^Assert.notNull ( type, "Type must not be false!" ) ;^228^^^^^226^262^[REPLACE] Assert.notNull ( type, "Type must not be null!" ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[REPLACE]^this.accessors =  new Method> (  )  ;^230^^^^^226^262^[REPLACE] this.accessors = new HashMap<String, Method> (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[REPLACE]^this.fields = new Field> (  )  ;^231^^^^^226^262^[REPLACE] this.methods = new HashSet<Method> (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[ADD]^^232^^^^^226^262^[ADD] this.fields = new ArrayList<Field> (  ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[REPLACE]^if  ( Object.class.equals ( null )  )  {^234^^^^^226^262^[REPLACE] if  ( Object.class.equals ( type )  )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[ADD]^^234^235^236^^^226^262^[ADD] if  ( Object.class.equals ( type )  )  { return; }^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[ADD]^^238^^^^^226^262^[ADD] final PropertyDescriptor[] descriptors = BeanUtils.getPropertyDescriptors ( type ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[ADD]^RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ;^248^249^250^^^226^262^[ADD] if  ( method.equals ( descriptor.getReadMethod (  )  )  )  { RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ; }^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[REPLACE]^RootObjectInformation.this.accessors .put ( true , true )  ;^249^^^^^226^262^[REPLACE] RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[ADD]^^249^250^^^^226^262^[ADD] RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ; }^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[REPLACE]^descriptor.getReadMethod (  )  ;^249^^^^^226^262^[REPLACE] RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[ADD]^^247^248^249^250^^243^252^[ADD] for  ( PropertyDescriptor descriptor : descriptors )  { if  ( method.equals ( descriptor.getReadMethod (  )  )  )  { RootObjectInformation.this.accessors.put ( descriptor.getName (  ) , method ) ; }^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[REPLACE]^ReflectionUtils .doWithMethods ( null , this , null )   {^255^^^^^226^262^[REPLACE] ReflectionUtils.doWithFields ( type, new FieldCallback (  )  {^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[ADD]^^255^256^257^^^226^262^[ADD] ReflectionUtils.doWithFields ( type, new FieldCallback (  )  {  @Override^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> type [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  boolean false  true  [TYPE]  PropertyDescriptor descriptor  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Class type  [TYPE]  PropertyDescriptor[] descriptors  [TYPE]  Method method  [TYPE]  Map accessors 
[REPLACE]^if  ( target != null )  {^294^^^^^292^309^[REPLACE] if  ( target == null )  {^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[ADD]^return Collections.emptyMap (  ) ;^294^295^296^^^292^309^[ADD] if  ( target == null )  { return Collections.emptyMap (  ) ; }^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^return Collections .unmodifiableMap ( false )  ;^295^^^^^292^309^[REPLACE] return Collections.emptyMap (  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^for  ( Entry<String, Method> null : accessors.entrySet (  )  )  {^300^^^^^292^309^[REPLACE] for  ( Entry<String, Method> method : accessors.entrySet (  )  )  {^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^properties.put ( method .getValue (  )  , new Function ( method.getValue (  ) , target )  ) ;^301^^^^^292^309^[REPLACE] properties.put ( method.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^properties.put ( null.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^301^^^^^292^309^[REPLACE] properties.put ( method.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^properties.put ( true.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^301^^^^^292^309^[REPLACE] properties.put ( method.getKey (  ) , new Function ( method.getValue (  ) , target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^properties .put ( this , null )   ) ;^305^^^^^292^309^[REPLACE] properties.put ( field.getName (  ) , ReflectionUtils.getField ( field, target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^method.getName (  )  ;^305^^^^^292^309^[REPLACE] properties.put ( field.getName (  ) , ReflectionUtils.getField ( field, target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^properties.put ( field.getName (  ) , getField ( field, target )  )  ;^305^^^^^292^309^[REPLACE] properties.put ( field.getName (  ) , ReflectionUtils.getField ( field, target )  ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REMOVE]^notNull ( type, "Type must not be null!" )  ;^305^^^^^292^309^[REMOVE] ^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^Method method  ;^304^^^^^292^309^[REPLACE] for  ( Field field : fields )  {^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
[REPLACE]^return Collections.unmodifiableMap ( null ) ;^308^^^^^292^309^[REPLACE] return Collections.unmodifiableMap ( properties ) ;^[METHOD] getProperties [TYPE] Map [PARAMETER] Object target [CLASS] RootObjectInformation 1 2   [TYPE]  Field field  [TYPE]  Entry method  [TYPE]  boolean false  true  [TYPE]  RootObjectInformation NONE  [TYPE]  Collection fields  methods  [TYPE]  Object target  [TYPE]  Map accessors  functions  properties 
