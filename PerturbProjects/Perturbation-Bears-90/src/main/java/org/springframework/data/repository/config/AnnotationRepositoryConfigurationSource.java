[REPLACE]^private static final String REPOSITORY_IMPLEMENTATION_POSTFIX ;^53^^^^^^^[REPLACE] private static final String REPOSITORY_IMPLEMENTATION_POSTFIX = "repositoryImplementationPostfix";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private static final String BASE_PACKAGES  = null ;^54^^^^^^^[REPLACE] private static final String BASE_PACKAGES = "basePackages";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private static final String BASE_PACKAGE_CLASSES  = null ;^55^^^^^^^[REPLACE] private static final String BASE_PACKAGE_CLASSES = "basePackageClasses";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private  final String NAMED_QUERIES_LOCATION = "namedQueriesLocation";^56^^^^^^^[REPLACE] private static final String NAMED_QUERIES_LOCATION = "namedQueriesLocation";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private static final String QUERY_LOOKUP_STRATEGY ;^57^^^^^^^[REPLACE] private static final String QUERY_LOOKUP_STRATEGY = "queryLookupStrategy";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private static final  char  REPOSITORY_FACTORY_BEAN_CLASS = "repositoryFactoryBeanClass";^58^^^^^^^[REPLACE] private static final String REPOSITORY_FACTORY_BEAN_CLASS = "repositoryFactoryBeanClass";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private  final String REPOSITORY_BASE_CLASS = "repositoryBaseClass";^59^^^^^^^[REPLACE] private static final String REPOSITORY_BASE_CLASS = "repositoryBaseClass";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private  final String CONSIDER_NESTED_REPOSITORIES = "considerNestedRepositories";^60^^^^^^^[REPLACE] private static final String CONSIDER_NESTED_REPOSITORIES = "considerNestedRepositories";^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private final Set configMetadata;^62^^^^^^^[REPLACE] private final AnnotationMetadata configMetadata;^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private  Object enableAnnotationMetadata;^63^^^^^^^[REPLACE] private final AnnotationMetadata enableAnnotationMetadata;^ [CLASS] AnnotationRepositoryConfigurationSource  
[REPLACE]^private  boolean hasExplicitFilters;^66^^^^^^^[REPLACE] private final boolean hasExplicitFilters;^ [CLASS] AnnotationRepositoryConfigurationSource  
[ADD]^^117^^^^^115^136^[ADD] String[] value = attributes.getStringArray ( "value" ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^118^^^^^115^136^[ADD] String[] basePackages = attributes.getStringArray ( BASE_PACKAGES ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^119^^^^^115^136^[ADD] Class<?>[] basePackageClasses = attributes.getClassArray ( BASE_PACKAGE_CLASSES ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^if  ( value.length + 4 == 0  && basePackages.length + 4 == 0  && basePackageClasses.length + 4 == 0  )  {^122^^^^^115^136^[REPLACE] if  ( value.length == 0 && basePackages.length == 0 && basePackageClasses.length == 0 )  {^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^return Collections.singleton ( ClassUtils.getPackageName ( attribute )  ) ;^124^^^^^115^136^[REPLACE] return Collections.singleton ( ClassUtils.getPackageName ( className )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^String className = configMetadata .getAnnotationAttributes ( QUERY_LOOKUP_STRATEGY )  ;^123^^^^^115^136^[REPLACE] String className = configMetadata.getClassName (  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^return Collections.singleton ( ClassUtils.getPackageName ( REPOSITORY_IMPLEMENTATION_POSTFIX )  ) ;^124^^^^^115^136^[REPLACE] return Collections.singleton ( ClassUtils.getPackageName ( className )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^String className = configMetadata .getAnnotationAttributes ( attribute )  ;^123^^^^^115^136^[REPLACE] String className = configMetadata.getClassName (  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^127^^^^^115^136^[ADD] Set<String> packages = new HashSet<String> (  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^asList ( value )  ;^128^^^^^115^136^[REPLACE] packages.addAll ( Arrays.asList ( value )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^128^129^^^^115^136^[ADD] packages.addAll ( Arrays.asList ( value )  ) ; packages.addAll ( Arrays.asList ( basePackages )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^packages.addAll ( Arrays.asList ( basePackages )  ) ;^128^^^^^115^136^[REPLACE] packages.addAll ( Arrays.asList ( value )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^packages.addAll ( asList ( value )  )  ;^129^^^^^115^136^[REPLACE] packages.addAll ( Arrays.asList ( basePackages )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^asList ( value )  ;^129^^^^^115^136^[REPLACE] packages.addAll ( Arrays.asList ( basePackages )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^131^132^133^^^115^136^[ADD] for  ( Class<?> typeName : basePackageClasses )  { packages.add ( ClassUtils.getPackageName ( typeName )  ) ; }^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^packages.addAll ( ClassUtils.getPackageName ( null )  ) ;^132^^^^^115^136^[REPLACE] packages.add ( ClassUtils.getPackageName ( typeName )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^packages.add ( ClassUtils.getPackageName ( null )  ) ;^132^^^^^115^136^[REPLACE] packages.add ( ClassUtils.getPackageName ( typeName )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^132^^^^^115^136^[ADD] packages.add ( ClassUtils.getPackageName ( typeName )  ) ;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^Class<?> filterClass  ;^131^^^^^115^136^[REPLACE] for  ( Class<?> typeName : basePackageClasses )  {^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^return null;^135^^^^^115^136^[REPLACE] return packages;^[METHOD] getBasePackages [TYPE] Iterable [PARAMETER] [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  Class[] basePackageClasses  [TYPE]  Set packages  [TYPE]  Class typeName  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  className  [TYPE]  String[] basePackages  value  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^TypeFilter> result = new TypeFilter> (  )  ;^260^^^^^258^299^[REPLACE] List<TypeFilter> typeFilters = new ArrayList<TypeFilter> (  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^FilterType filterType = filter.getEnum ( "type" ) ;^261^^^^^258^299^[REPLACE] FilterType filterType = filterAttributes.getEnum ( "type" ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^for  ( Class<?> filterClass : filterAttributes.getClass ( "value" )  )  {^263^^^^^258^299^[REPLACE] for  ( Class<?> filterClass : filterAttributes.getClassArray ( "value" )  )  {^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^return ;^281^^^^^258^299^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^263^264^265^266^267^258^299^[ADD] for  ( Class<?> filterClass : filterAttributes.getClassArray ( "value" )  )  { switch  ( filterType )  { case ANNOTATION: Assert.isAssignable ( Annotation.class, filterClass, "An error occured when processing a @ComponentScan " + "ANNOTATION type filter: " ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^if  ( "REGEX".equals ( rawName  )  && "ASPECTJ".equals ( rawName )  )  )  {^289^^^^^258^299^[REPLACE] if  ( "REGEX".equals ( rawName )  )  {^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REMOVE]^if  ( "ASPECTJ".equals ( rawName )  )  {     typeFilters.add ( new AspectJTypeFilter ( expression, getClassLoader (  )  )  ) ; }else {     throw new IllegalArgumentException (  ( "Unknown filter type " + filterType )  ) ; }^289^^^^^258^299^[REMOVE] ^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^}  else {^291^^^^^258^299^[REPLACE] } else if  ( "ASPECTJ".equals ( rawName )  )  {^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REMOVE]^if  ( "REGEX".equals ( rawName )  )  {     typeFilters.add ( new RegexPatternTypeFilter ( compile ( expression )  )  ) ; }else     if  ( "ASPECTJ".equals ( rawName )  )  {         typeFilters.add ( new AspectJTypeFilter ( expression, getClassLoader (  )  )  ) ;     }else {         throw new IllegalArgumentException (  ( "Unknown filter type " + filterType )  ) ;     }^291^^^^^258^299^[REMOVE] ^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^return ;^294^^^^^291^295^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^typeFilters.add ( new AspectJTypeFilter ( REPOSITORY_IMPLEMENTATION_POSTFIX, this.resourceLoader.getClassLoader (  )  )  ) ;^292^^^^^258^299^[REPLACE] typeFilters.add ( new AspectJTypeFilter ( expression, this.resourceLoader.getClassLoader (  )  )  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^return ;^294^^^^^258^299^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^typeFilters.add ( new RegexPatternTypeFilter ( Pattern.compile ( rawName )  )  ) ;^290^^^^^258^299^[REPLACE] typeFilters.add ( new RegexPatternTypeFilter ( Pattern.compile ( expression )  )  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^} else if  ( "ASPECTJ".equals ( REPOSITORY_IMPLEMENTATION_POSTFIX )  )  {^291^^^^^258^299^[REPLACE] } else if  ( "ASPECTJ".equals ( rawName )  )  {^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^typeFilters.add ( new AspectJTypeFilter ( rawName, this.resourceLoader.getClassLoader (  )  )  ) ;^292^^^^^258^299^[REPLACE] typeFilters.add ( new AspectJTypeFilter ( expression, this.resourceLoader.getClassLoader (  )  )  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^292^^^^^258^299^[ADD] typeFilters.add ( new AspectJTypeFilter ( expression, this.resourceLoader.getClassLoader (  )  )  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^285^286^287^^^258^299^[ADD] for  ( String expression : getPatterns ( filterAttributes )  )  {  String rawName = filterType.toString (  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^} else if  ( "REGEX".equals ( rawName )  || ( "ASPECTJ".equals ( rawName )  )  {^291^^^^^258^299^[REPLACE] } else if  ( "ASPECTJ".equals ( rawName )  )  {^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^}^291^292^293^294^295^258^299^[ADD] else if  ( "ASPECTJ".equals ( rawName )  )  { typeFilters.add ( new AspectJTypeFilter ( expression, this.resourceLoader.getClassLoader (  )  )  ) ; } else { throw new IllegalArgumentException  (" ")  ; }^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^typeFilters.add ( new RegexPatternTypeFilter ( Pattern.compile ( REPOSITORY_IMPLEMENTATION_POSTFIX )  )  ) ;^290^^^^^258^299^[REPLACE] typeFilters.add ( new RegexPatternTypeFilter ( Pattern.compile ( expression )  )  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^290^^^^^258^299^[ADD] typeFilters.add ( new RegexPatternTypeFilter ( Pattern.compile ( expression )  )  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^}   typeFilters.add ( new AspectJTypeFilter ( expression, this.resourceLoader.getClassLoader (  )  )  ) ;^291^292^293^294^295^258^299^[ADD] else if  ( "ASPECTJ".equals ( rawName )  )  { typeFilters.add ( new AspectJTypeFilter ( expression, this.resourceLoader.getClassLoader (  )  )  ) ; } else { throw new IllegalArgumentException  (" ")  ; }^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^typeFilters.add ( new AspectJTypeFilter ( attribute, this.resourceLoader.getClassLoader (  )  )  ) ;^292^^^^^258^299^[REPLACE] typeFilters.add ( new AspectJTypeFilter ( expression, this.resourceLoader.getClassLoader (  )  )  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^287^^^^^258^299^[ADD] String rawName = filterType.toString (  ) ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[ADD]^^294^^^^^258^299^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^String attribute  ;^285^^^^^258^299^[REPLACE] for  ( String expression : getPatterns ( filterAttributes )  )  {^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
[REPLACE]^return null;^298^^^^^258^299^[REPLACE] return typeFilters;^[METHOD] typeFiltersFor [TYPE] List [PARAMETER] AnnotationAttributes filterAttributes [CLASS] AnnotationRepositoryConfigurationSource   [TYPE]  AnnotationAttributes attributes  filter  filterAttributes  [TYPE]  ResourceLoader resourceLoader  [TYPE]  FilterType filterType  [TYPE]  boolean false  hasExplicitFilters  true  [TYPE]  List typeFilters  [TYPE]  Class annoClass  filterClass  [TYPE]  String BASE_PACKAGES  BASE_PACKAGE_CLASSES  CONSIDER_NESTED_REPOSITORIES  NAMED_QUERIES_LOCATION  QUERY_LOOKUP_STRATEGY  REPOSITORY_BASE_CLASS  REPOSITORY_FACTORY_BEAN_CLASS  REPOSITORY_IMPLEMENTATION_POSTFIX  attribute  attributeName  className  expression  rawName  [TYPE]  AnnotationMetadata configMetadata  enableAnnotationMetadata  metadata 
