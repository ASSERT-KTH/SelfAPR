[REPLACE]^private static final String FIND_ONE  = null ;^46^^^^^^^[REPLACE] private static final String FIND_ONE = "findOne";^ [CLASS] DefaultCrudMethods  
[REPLACE]^private static final String SAVE ;^47^^^^^^^[REPLACE] private static final String SAVE = "save";^ [CLASS] DefaultCrudMethods  
[REPLACE]^private  final String FIND_ALL = "findAll";^48^^^^^^^[REPLACE] private static final String FIND_ALL = "findAll";^ [CLASS] DefaultCrudMethods  
[REPLACE]^private static final String DELETE  = null ;^49^^^^^^^[REPLACE] private static final String DELETE = "delete";^ [CLASS] DefaultCrudMethods  
[REPLACE]^private  Method findAllMethod;^51^^^^^^^[REPLACE] private final Method findAllMethod;^ [CLASS] DefaultCrudMethods  
[REPLACE]^private  Method findOneMethod;^52^^^^^^^[REPLACE] private final Method findOneMethod;^ [CLASS] DefaultCrudMethods  
[REPLACE]^private  Method saveMethod;^53^^^^^^^[REPLACE] private final Method saveMethod;^ [CLASS] DefaultCrudMethods  
[REPLACE]^if  ( hasMethod ( metadata.getRepositoryInterface (   )  && hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL )  ) , FIND_ALL, type )  )  {^139^^^^^135^154^[REPLACE] if  ( hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL, type )  )  {^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( saveMethodCandidate == null )  {^143^^^^^135^154^[REPLACE] if  ( candidate != null )  {^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return getMostSpecificMethod ( saveMethodCandidate, metadata.getRepositoryInterface (  )  )  ;^144^^^^^135^154^[REPLACE] return getMostSpecificMethod ( candidate, metadata.getRepositoryInterface (  )  ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[ADD]^^141^^^^^135^154^[ADD] Method candidate = findMethod ( PagingAndSortingRepository.class, FIND_ALL, type ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  (saveMethodCandidate == null )  {^143^^^^^135^154^[REPLACE] if  ( candidate != null )  {^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[ADD]^return getMostSpecificMethod ( candidate, metadata.getRepositoryInterface (  )  ) ;^143^144^145^^^135^154^[ADD] if  ( candidate != null )  { return getMostSpecificMethod ( candidate, metadata.getRepositoryInterface (  )  ) ; }^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return getMostSpecificMethod ( saveMethodCandidate, metadata.getRepositoryInterface (  )  ) ;^144^^^^^135^154^[REPLACE] return getMostSpecificMethod ( candidate, metadata.getRepositoryInterface (  )  ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL )  && ( hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL, type )  )  {^139^^^^^135^154^[REPLACE] if  ( hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL, type )  )  {^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return getMostSpecificMethod ( candidate, metadata.getDomainType (  )  ) ;^144^^^^^135^154^[REPLACE] return getMostSpecificMethod ( candidate, metadata.getRepositoryInterface (  )  ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^Method candidate = findMethod ( PagingAndSortingRepository.class, FIND_ALL, 1 ) ;^141^^^^^135^154^[REPLACE] Method candidate = findMethod ( PagingAndSortingRepository.class, FIND_ALL, type ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( candidate == null )  {^143^^^^^135^154^[REPLACE] if  ( candidate != null )  {^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return getMostSpecificMethod ( saveMethodCandidate, metadata.getDomainType (  )  ) ;^144^^^^^135^154^[REPLACE] return getMostSpecificMethod ( candidate, metadata.getRepositoryInterface (  )  ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^Method saveMethodCandidate = findMethod ( metadata.getRepositoryInterface (  ) , SAVE, type )  ;^141^^^^^135^154^[REPLACE] Method candidate = findMethod ( PagingAndSortingRepository.class, FIND_ALL, type ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[ADD]^^137^138^139^^141^135^154^[ADD] for  ( Class<?> type : asList ( Pageable.class, Sort.class )  )  {  if  ( hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL, type )  )  { Method candidate = findMethod ( PagingAndSortingRepository.class, FIND_ALL, type ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^Method candidate = findMethod ( PagingAndSortingRepository.class, FIND_ALL, null ) ;^141^^^^^135^154^[REPLACE] Method candidate = findMethod ( PagingAndSortingRepository.class, FIND_ALL, type ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( hasMethod ( metadata.getDomainType (  ) , FIND_ALL )  )  {^149^^^^^135^154^[REPLACE] if  ( hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL )  )  {^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[ADD]^return getMostSpecificMethod ( findMethod ( CrudRepository.class, FIND_ALL ) , metadata.getRepositoryInterface (  )  ) ;^149^150^151^^^135^154^[ADD] if  ( hasMethod ( metadata.getRepositoryInterface (  ) , FIND_ALL )  )  { return getMostSpecificMethod ( findMethod ( CrudRepository.class, FIND_ALL ) , metadata.getRepositoryInterface (  )  ) ; }^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return getMostSpecificMethod ( findMethod ( CrudRepository.class, FIND_ALL ) , metadata.getDomainType (  )  ) ;^150^^^^^135^154^[REPLACE] return getMostSpecificMethod ( findMethod ( CrudRepository.class, FIND_ALL ) , metadata.getRepositoryInterface (  )  ) ;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return true;^153^^^^^135^154^[REPLACE] return null;^[METHOD] selectMostSuitableFindAllMethod [TYPE] Method [PARAMETER] RepositoryMetadata metadata [CLASS] DefaultCrudMethods   [TYPE]  Class type  [TYPE]  String DELETE  FIND_ALL  FIND_ONE  SAVE  [TYPE]  Method candidate  deleteMethod  findAllMethod  findOneMethod  saveMethod  saveMethodCandidate  [TYPE]  boolean false  true  [TYPE]  RepositoryMetadata metadata 
