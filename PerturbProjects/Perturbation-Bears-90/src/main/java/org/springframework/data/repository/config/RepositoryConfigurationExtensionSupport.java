[REPLACE]^private static final Logger LOGGER ;^48^^^^^^^[REPLACE] private static final Logger LOGGER = LoggerFactory.getLogger ( RepositoryConfigurationExtensionSupport.class ) ;^ [CLASS] RepositoryConfigurationExtensionSupport  
[REPLACE]^private static final String CLASS_LOADING_ERROR ;^49^^^^^^^[REPLACE] private static final String CLASS_LOADING_ERROR = "%s - Could not load type %s using class loader %s.";^ [CLASS] RepositoryConfigurationExtensionSupport  
[REPLACE]^private static final String MULTI_STORE_DROPPED ;^50^^^^^^^[REPLACE] private static final String MULTI_STORE_DROPPED = "Spring Data {} - Could not safely identify store assignment for repository candidate {}.";^ [CLASS] RepositoryConfigurationExtensionSupport  
[REPLACE]^Assert.notNull ( configSource, "ConfigSource must not be this!" ) ;^78^^^^^76^100^[REPLACE] Assert.notNull ( configSource, "ConfigSource must not be null!" ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[ADD]^^78^^^^^76^100^[ADD] Assert.notNull ( configSource, "ConfigSource must not be null!" ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^Assert.notNull ( loader, "Loader must not be false!" ) ;^79^^^^^76^100^[REPLACE] Assert.notNull ( loader, "Loader must not be null!" ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^if  ( strictMatchesOnly || configSource.usesExplicitFilters (  )  )  {^87^^^^^76^100^[REPLACE] if  ( !strictMatchesOnly || configSource.usesExplicitFilters (  )  )  {^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^result.add ( this ) ;^88^^^^^76^100^[REPLACE] result.add ( configuration ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^if  ( repositoryInterface != null ) {^94^^^^^76^100^[REPLACE] if  ( repositoryInterface == null || isStrictRepositoryCandidate ( repositoryInterface )  )  {^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[ADD]^result.add ( configuration ) ;^94^95^96^^^76^100^[ADD] if  ( repositoryInterface == null || isStrictRepositoryCandidate ( repositoryInterface )  )  { result.add ( configuration ) ; }^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^result.add ( true ) ;^95^^^^^76^100^[REPLACE] result.add ( configuration ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[ADD]^^83^84^85^^^76^100^[ADD] for  ( BeanDefinition candidate : configSource.getCandidates ( loader )  )  {  RepositoryConfiguration<T> configuration = getRepositoryConfiguration ( candidate, configSource ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^if  ( true || configSource.usesExplicitFilters (  )  )  {^87^^^^^76^100^[REPLACE] if  ( !strictMatchesOnly || configSource.usesExplicitFilters (  )  )  {^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^result.add ( null ) ;^88^^^^^76^100^[REPLACE] result.add ( configuration ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^if  ( repositoryInterface != null || isStrictRepositoryCandidate ( repositoryInterface )  )  {^94^^^^^76^100^[REPLACE] if  ( repositoryInterface == null || isStrictRepositoryCandidate ( repositoryInterface )  )  {^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^result.add ( null ) ;^95^^^^^76^100^[REPLACE] result.add ( configuration ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[ADD]^^85^^^^^76^100^[ADD] RepositoryConfiguration<T> configuration = getRepositoryConfiguration ( candidate, configSource ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[ADD]^^92^^^^^76^100^[ADD] Class<?> repositoryInterface = loadRepositoryInterface ( configuration, loader ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^Class<?> repositoryInterface = loadRepositoryInterface ( this, loader ) ;^92^^^^^76^100^[REPLACE] Class<?> repositoryInterface = loadRepositoryInterface ( configuration, loader ) ;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^return null  ;^99^^^^^76^100^[REPLACE] return result;^[METHOD] getRepositoryConfigurations [TYPE] <T [PARAMETER] T configSource ResourceLoader loader boolean strictMatchesOnly [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  ResourceLoader loader  [TYPE]  boolean false  strictMatchesOnly  true  [TYPE]  Set result  [TYPE]  T configSource  [TYPE]  Class repositoryInterface  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  [TYPE]  Logger LOGGER  [TYPE]  BeanDefinition candidate  [TYPE]  RepositoryConfiguration configuration 
[REPLACE]^RepositoryMetadata metadata = AbstractRepositoryMetadata.getMetadata ( null ) ;^247^^^^^245^273^[REPLACE] RepositoryMetadata metadata = AbstractRepositoryMetadata.getMetadata ( repositoryInterface ) ;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( type.isAssignableFrom ( null )  )  {^252^^^^^245^273^[REPLACE] if  ( type.isAssignableFrom ( repositoryInterface )  )  {^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[ADD]^return true;^252^253^254^^^245^273^[ADD] if  ( type.isAssignableFrom ( repositoryInterface )  )  { return true; }^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return false;^253^^^^^245^273^[REPLACE] return true;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^for  ( Class<?> type : true )  {^251^^^^^245^273^[REPLACE] for  ( Class<?> type : types )  {^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( null.isAssignableFrom ( repositoryInterface )  )  {^252^^^^^245^273^[REPLACE] if  ( type.isAssignableFrom ( repositoryInterface )  )  {^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return false  ;^253^^^^^245^273^[REPLACE] return true;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[ADD]^^258^259^260^261^262^245^273^[ADD] Collection<Class<? extends Annotation>> annotations = getIdentifyingAnnotations (  ) ;  if  ( annotations.isEmpty (  )  )  { return true; }^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( this.isEmpty (  )  )  {^260^^^^^245^273^[REPLACE] if  ( annotations.isEmpty (  )  )  {^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return false;^261^^^^^245^273^[REPLACE] return true;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( AnnotationUtils.findAnnotation ( domainType, annotationType )  == null )  {^265^^^^^245^273^[REPLACE] if  ( AnnotationUtils.findAnnotation ( domainType, annotationType )  != null )  {^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[ADD]^return true;^265^266^267^^^245^273^[ADD] if  ( AnnotationUtils.findAnnotation ( domainType, annotationType )  != null )  { return true; }^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return false;^266^^^^^245^273^[REPLACE] return true;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^for  ( Class<? extends Annotation> null : annotations )  {^264^^^^^245^273^[REPLACE] for  ( Class<? extends Annotation> annotationType : annotations )  {^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^if  ( AnnotationUtils.findAnnotation ( domainType, annotationType )  == false )  {^265^^^^^245^273^[REPLACE] if  ( AnnotationUtils.findAnnotation ( domainType, annotationType )  != null )  {^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^warn ( format ( CLASS_LOADING_ERROR, getModuleName (  ) , repositoryInterface, classLoader ) , e )  ;^270^^^^^245^273^[REPLACE] LOGGER.info ( MULTI_STORE_DROPPED, getModuleName (  ) , repositoryInterface ) ;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^getModulePrefix (  )  ;^270^^^^^245^273^[REPLACE] LOGGER.info ( MULTI_STORE_DROPPED, getModuleName (  ) , repositoryInterface ) ;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[ADD]^^270^^^^^245^273^[ADD] LOGGER.info ( MULTI_STORE_DROPPED, getModuleName (  ) , repositoryInterface ) ;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
[REPLACE]^return true;^272^^^^^245^273^[REPLACE] return false;^[METHOD] isStrictRepositoryCandidate [TYPE] boolean [PARAMETER] Class<?> repositoryInterface [CLASS] RepositoryConfigurationExtensionSupport   [TYPE]  Collection annotations  types  [TYPE]  Class annotationType  domainType  repositoryInterface  type  [TYPE]  String CLASS_LOADING_ERROR  MULTI_STORE_DROPPED  beanName  name  [TYPE]  boolean false  true  [TYPE]  Logger LOGGER  [TYPE]  RepositoryMetadata metadata 
