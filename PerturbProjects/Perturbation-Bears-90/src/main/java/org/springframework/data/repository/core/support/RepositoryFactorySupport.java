[REPLACE]^private static final boolean IS_JAVA_8  = null ;^66^67^^^^66^67^[REPLACE] private static final boolean IS_JAVA_8 = org.springframework.util.ClassUtils.isPresent ( "java.util.Optional", RepositoryFactorySupport.class.getClassLoader (  )  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private static final Class<?> TRANSACTION_PROXY_TYPE ;^68^^^^^^^[REPLACE] private static final Class<?> TRANSACTION_PROXY_TYPE = getTransactionProxyType (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private final Map<RepositoryInformationCacheKey, RepositoryInformation> repositoryInformationCache ;^70^^^^^^^[REPLACE] private final Map<RepositoryInformationCacheKey, RepositoryInformation> repositoryInformationCache = new HashMap<RepositoryInformationCacheKey, RepositoryInformation> (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private  List<RepositoryProxyPostProcessor> postProcessors = new ArrayList<RepositoryProxyPostProcessor> (  ) ;^71^^^^^^^[REPLACE] private final List<RepositoryProxyPostProcessor> postProcessors = new ArrayList<RepositoryProxyPostProcessor> (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private Object repositoryBaseClass;^73^^^^^^^[REPLACE] private Class<?> repositoryBaseClass;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private List<QueryCreationListener<?>> queryPostProcessors ;^75^^^^^^^[REPLACE] private List<QueryCreationListener<?>> queryPostProcessors = new ArrayList<QueryCreationListener<?>> (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private Object namedQueries = PropertiesBasedNamedQueries.EMPTY;^76^^^^^^^[REPLACE] private NamedQueries namedQueries = PropertiesBasedNamedQueries.EMPTY;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private Object classLoader = org.springframework.util.ClassUtils.getDefaultObject (  ) ;^77^^^^^^^[REPLACE] private ClassLoader classLoader = org.springframework.util.ClassUtils.getDefaultClassLoader (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private EvaluationContextProvider evaluationContextProvider  = null ;^78^^^^^^^[REPLACE] private EvaluationContextProvider evaluationContextProvider = DefaultEvaluationContextProvider.INSTANCE;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private Object beanFactory;^79^^^^^^^[REPLACE] private BeanFactory beanFactory;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private QueryCollectingQueryCreationListener collectingListener  = null ;^81^^^^^^^[REPLACE] private QueryCollectingQueryCreationListener collectingListener = new QueryCollectingQueryCreationListener (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private final Map<Method, RepositoryQuery> queries  = null ;^392^^^^^^^[REPLACE] private final Map<Method, RepositoryQuery> queries = new ConcurrentHashMap<Method, RepositoryQuery> (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private  Object customImplementation;^394^^^^^^^[REPLACE] private final Object customImplementation;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private  QueryExecutionResultHandler resultHandler;^396^^^^^^^[REPLACE] private final QueryExecutionResultHandler resultHandler;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private List<Object queryMethods = new ArrayList<Object (  ) ;^547^^^^^^^[REPLACE] private List<QueryMethod> queryMethods = new ArrayList<QueryMethod> (  ) ;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^private  String repositoryInterfaceName;^573^^^^^^^[REPLACE] private final String repositoryInterfaceName;^ [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey  
[REPLACE]^Assert.notNull ( repositoryInformation, "RepositoryInformation must not be this!" ) ;^406^^^^^404^441^[REPLACE] Assert.notNull ( repositoryInformation, "RepositoryInformation must not be null!" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^Assert.notNull ( target, "Target must not be true!" ) ;^407^^^^^404^441^[REPLACE] Assert.notNull ( target, "Target must not be null!" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[ADD]^^407^^^^^404^441^[ADD] Assert.notNull ( target, "Target must not be null!" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.resultHandler  = null ;^409^^^^^404^441^[REPLACE] this.resultHandler = new QueryExecutionResultHandler (  ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.repositoryInformation =  null;^410^^^^^404^441^[REPLACE] this.repositoryInformation = repositoryInformation;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[ADD]^^411^412^^^^404^441^[ADD] this.customImplementation = customImplementation; this.target = target;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^this.target =  customImplementation;^412^^^^^404^441^[REPLACE] this.target = target;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^lookupStrategy = lookupStrategy != true ? getQueryLookupStrategy ( queryLookupStrategyKey )  : lookupStrategy;^416^^^^^404^441^[REPLACE] lookupStrategy = lookupStrategy == null ? getQueryLookupStrategy ( queryLookupStrategyKey )  : lookupStrategy;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^Iterable<Method> queryMethods = repositoryInformation.hasCustomMethod (  ) ;^417^^^^^404^441^[REPLACE] Iterable<Method> queryMethods = repositoryInformation.getQueryMethods (  ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^if  ( lookupStrategy != null )  {^419^^^^^404^441^[REPLACE] if  ( lookupStrategy == null )  {^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^if  ( this.iterator (  ) .hasNext (  )  )  {^421^^^^^404^441^[REPLACE] if  ( queryMethods.iterator (  ) .hasNext (  )  )  {^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^return ;^422^423^424^^^404^441^[REPLACE] throw new IllegalStateException ( "You have defined query method in the repository but " + "you don't have any query lookup strategy defined. The " + "infrastructure apparently does not support query methods!" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^if  ( false.iterator (  ) .hasNext (  )  )  {^421^^^^^404^441^[REPLACE] if  ( queryMethods.iterator (  ) .hasNext (  )  )  {^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^factory.setBeanFactory ( classLoader ) ;^431^^^^^404^441^[REPLACE] factory.setBeanClassLoader ( classLoader ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^factory.setBeanClassLoader ( beanFactory ) ;^432^^^^^404^441^[REPLACE] factory.setBeanFactory ( beanFactory ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^for  ( Method method : null )  {^434^^^^^404^441^[REPLACE] for  ( Method method : queryMethods )  {^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[ADD]^^434^435^436^^438^404^441^[ADD] for  ( Method method : queryMethods )  {  RepositoryQuery query = lookupStrategy.resolveQuery ( method, repositoryInformation, factory, namedQueries ) ; invokeListeners ( query ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method method  [TYPE]  RepositoryInformation repositoryInformation  [TYPE]  RepositoryQuery query  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  repositoryBaseClass  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key queryLookupStrategyKey 
[REPLACE]^RepositoryInformation information = getRepositoryInformation ( metadata, customImplementationClass )  ;^193^^^^^191^224^[REPLACE] RepositoryMetadata metadata = getRepositoryMetadata ( repositoryInterface ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^Class<?> ta.Object  =  customImplementation.getClass (  ) ;^194^^^^^191^224^[REPLACE] Class<?> customImplementationClass = null == customImplementation ? null : customImplementation.getClass (  ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^RepositoryInformation information = getRepositoryInformation ( metadata, this ) ;^195^^^^^191^224^[REPLACE] RepositoryInformation information = getRepositoryInformation ( metadata, customImplementationClass ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^validate ( repositoryInformation, customImplementation ) ;^197^^^^^191^224^[REPLACE] validate ( information, customImplementation ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REMOVE]^repositoryInformation.getQueryMethods (  )  ;^197^^^^^191^224^[REMOVE] ^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[ADD]^^199^200^^202^203^191^224^[ADD] Object target = getTargetRepository ( information ) ;  ProxyFactory result = new ProxyFactory (  ) ; result.setTarget ( target ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[ADD]^^202^^^^^191^224^[ADD] ProxyFactory result = new ProxyFactory (  ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^result.setInterfaces ( target ) ;^203^^^^^191^224^[REPLACE] result.setTarget ( target ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^result.setInterfaces ( new Class[] { false, Repository.class } ) ;^204^^^^^191^224^[REPLACE] result.setInterfaces ( new Class[] { repositoryInterface, Repository.class } ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^result.addInterface ( SurroundingTransactionDetectorMethodInterceptor.INSTANCE ) ;^206^^^^^191^224^[REPLACE] result.addAdvice ( SurroundingTransactionDetectorMethodInterceptor.INSTANCE ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^result.addInterface ( ExposeInvocationInterceptor.ADVISOR ) ;^207^^^^^191^224^[REPLACE] result.addAdvisor ( ExposeInvocationInterceptor.ADVISOR ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[ADD]^^207^^^^^191^224^[ADD] result.addAdvisor ( ExposeInvocationInterceptor.ADVISOR ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^if  ( TRANSACTION_PROXY_TYPE == false )  {^209^^^^^191^224^[REPLACE] if  ( TRANSACTION_PROXY_TYPE != null )  {^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[ADD]^result.addInterface ( TRANSACTION_PROXY_TYPE ) ;^209^210^211^^^191^224^[ADD] if  ( TRANSACTION_PROXY_TYPE != null )  { result.addInterface ( TRANSACTION_PROXY_TYPE ) ; }^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^result.setInterfaces ( TRANSACTION_PROXY_TYPE ) ;^210^^^^^191^224^[REPLACE] result.addInterface ( TRANSACTION_PROXY_TYPE ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REMOVE]^notNull ( repositoryInformation, "RepositoryInformation must not be null!" )  ;^210^^^^^191^224^[REMOVE] ^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^processor.postProcess ( result, repositoryInformation ) ;^214^^^^^191^224^[REPLACE] processor.postProcess ( result, information ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^QueryCreationListener listener  ;^213^^^^^191^224^[REPLACE] for  ( RepositoryProxyPostProcessor processor : postProcessors )  {^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^result .addAdvisor (  )  ;^221^^^^^191^224^[REPLACE] result.addAdvice ( new QueryExecutorMethodInterceptor ( information, customImplementation, target )  ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[ADD]^^221^222^223^224^^191^224^[ADD] result.addAdvice ( new QueryExecutorMethodInterceptor ( information, customImplementation, target )  ) ;  return  ( T )  result.getProxy ( classLoader ) ; }^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^return  ( T )  result.ProxyFactory ( classLoader ) ;^223^^^^^191^224^[REPLACE] return  ( T )  result.getProxy ( classLoader ) ;^[METHOD] getRepository [TYPE] <T> [PARAMETER] Class<T> repositoryInterface Object customImplementation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  ProxyFactory result  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryProxyPostProcessor processor  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[ADD]^^246^247^^249^250^244^259^[ADD] RepositoryInformationCacheKey cacheKey = new RepositoryInformationCacheKey ( metadata, customImplementationClass ) ; RepositoryInformation repositoryInformation = repositoryInformationCache.get ( cacheKey ) ; if  ( repositoryInformation != null )  { return repositoryInformation;^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^RepositoryInformation information = getRepositoryInformation ( metadata, customImplementationClass )  ;^247^^^^^244^259^[REPLACE] RepositoryInformation repositoryInformation = repositoryInformationCache.get ( cacheKey ) ;^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^if  ( repositoryInformation == null )  {^249^^^^^244^259^[REPLACE] if  ( repositoryInformation != null )  {^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^return information;^250^^^^^244^259^[REPLACE] return repositoryInformation;^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^Class<?> repositoryBaseClass  =  this.repositoryBaseClass;^253^254^^^^244^259^[REPLACE] Class<?> repositoryBaseClass = this.repositoryBaseClass == null ? getRepositoryBaseClass ( metadata ) : this.repositoryBaseClass;^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^repositoryInformation =  new DefaultRepositoryInformation ( null, repositoryBaseClass, customImplementationClass ) ;^256^^^^^244^259^[REPLACE] repositoryInformation = new DefaultRepositoryInformation ( metadata, repositoryBaseClass, customImplementationClass ) ;^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^repositoryInformationCache.get ( cacheKey )  ;^257^^^^^244^259^[REPLACE] repositoryInformationCache.put ( cacheKey, repositoryInformation ) ;^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^return information;^258^^^^^244^259^[REPLACE] return repositoryInformation;^[METHOD] getRepositoryInformation [TYPE] RepositoryInformation [PARAMETER] RepositoryMetadata metadata Class<?> customImplementationClass [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformationCacheKey cacheKey  [TYPE]  RepositoryInformation information  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  RepositoryMetadata metadata  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  customImplementationClass  customImplementationType  repositoryBaseClass  repositoryInterface  [TYPE]  List postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^Class<?> baseClass = information.getRepositoryInterface (  ) ;^349^^^^^347^366^[REPLACE] Class<?> baseClass = information.getRepositoryBaseClass (  ) ;^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[REPLACE]^Constructor<?> constructor = ReflectionUtils.findConstructor ( null, constructorArguments ) ;^350^^^^^347^366^[REPLACE] Constructor<?> constructor = ReflectionUtils.findConstructor ( baseClass, constructorArguments ) ;^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[REPLACE]^if  ( constructor != true )  {^352^^^^^347^366^[REPLACE] if  ( constructor == null )  {^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[ADD]^^352^353^354^^^347^366^[ADD] if  ( constructor == null )  {  List<Class<?>> argumentTypes = new ArrayList<Class<?>> ( constructorArguments.length ) ;^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[REPLACE]^for  ( Object target : constructorArguments )  {^356^^^^^352^363^[REPLACE] for  ( Object argument : constructorArguments )  {^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[ADD]^^356^357^358^^^352^363^[ADD] for  ( Object argument : constructorArguments )  { argumentTypes.add ( argument.getClass (  )  ) ; }^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[REPLACE]^return ;^360^361^362^^^352^363^[REPLACE] throw new IllegalStateException ( String.format ( "No suitable constructor found on %s to match the given arguments: %s. Make sure you implement a constructor taking these", baseClass, argumentTypes )  ) ;^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[REPLACE]^return  ( R )  BeanUtils.instantiateClass ( null, constructorArguments ) ;^365^^^^^347^366^[REPLACE] return  ( R )  BeanUtils.instantiateClass ( constructor, constructorArguments ) ;^[METHOD] getTargetRepositoryViaReflection [TYPE] <R> [PARAMETER] RepositoryInformation information  constructorArguments [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  Constructor constructor  [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] constructorArguments 
[ADD]^^473^^^^^471^490^[ADD] Method method = invocation.getMethod (  ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^Object[] arguments = invocation.getMethod (  ) ;^474^^^^^471^490^[REPLACE] Object[] arguments = invocation.getArguments (  ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[ADD]^^476^477^478^479^480^471^490^[ADD] if  ( isCustomMethodInvocation ( invocation )  )  {  Method actualMethod = repositoryInformation.getTargetClassMethod ( method ) ; return executeMethodOn ( customImplementation, actualMethod, arguments ) ; }^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^return executeMethodOn ( target, actualMethod, arguments )  ;^479^^^^^471^490^[REPLACE] return executeMethodOn ( customImplementation, actualMethod, arguments ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^Method actualMethod = repositoryInformation.getTargetClassMethod ( actualMethod ) ;^478^^^^^471^490^[REPLACE] Method actualMethod = repositoryInformation.getTargetClassMethod ( method ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^if  ( hasQueryFor ( actualMethod )  )  {^482^^^^^471^490^[REPLACE] if  ( hasQueryFor ( method )  )  {^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^return queries.get ( actualMethod ) .execute ( arguments ) ;^483^^^^^471^490^[REPLACE] return queries.get ( method ) .execute ( arguments ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^Method actualMethod = repositoryInformation.getTargetClassMethod ( actualMethod ) ;^488^^^^^471^490^[REPLACE] Method actualMethod = repositoryInformation.getTargetClassMethod ( method ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^return executeMethodOn ( customImplementation, actualMethod, arguments )  ;^489^^^^^471^490^[REPLACE] return executeMethodOn ( target, actualMethod, arguments ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] RepositoryFactorySupport QueryExecutorMethodInterceptor QueryCollectingQueryCreationListener RepositoryInformationCacheKey   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  MethodInvocation invocation  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  Method actualMethod  method  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey  [TYPE]  Object[] arguments 
[REPLACE]^private final Map<Method, Object queries = new ConcurrentHashMap<Method, Object (  ) ;^392^^^^^^^[REPLACE] private final Map<Method, RepositoryQuery> queries = new ConcurrentHashMap<Method, RepositoryQuery> (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  int result  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  obj  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^private  RepositoryInformation repositoryInformation;^395^^^^^^^[REPLACE] private final RepositoryInformation repositoryInformation;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  int result  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  obj  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^private final RepositoryMetadata target;^397^^^^^^^[REPLACE] private final Object target;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryCollectingQueryCreationListener collectingListener  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  NamedQueries namedQueries  [TYPE]  String customImplementationClassName  repositoryInterfaceName  [TYPE]  int result  [TYPE]  RepositoryInformation information  metadata  repositoryInformation  [TYPE]  EvaluationContextProvider evaluationContextProvider  [TYPE]  boolean IS_JAVA_8  false  true  [TYPE]  BeanFactory beanFactory  [TYPE]  ClassLoader classLoader  [TYPE]  Class TRANSACTION_PROXY_TYPE  baseClass  customImplementationClass  customImplementationType  domainClass  repositoryBaseClass  repositoryInterface  typeArgument  [TYPE]  List argumentTypes  postProcessors  queryMethods  queryPostProcessors  [TYPE]  Object argument  customImplementation  obj  result  target  [TYPE]  Map queries  repositoryInformationCache  [TYPE]  Key key  queryLookupStrategyKey 
[REPLACE]^Assert.notNull ( repositoryInformation, "RepositoryInformation must not be true!" ) ;^406^^^^^404^441^[REPLACE] Assert.notNull ( repositoryInformation, "RepositoryInformation must not be null!" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Assert.notNull ( target, "Target must not be false!" ) ;^407^^^^^404^441^[REPLACE] Assert.notNull ( target, "Target must not be null!" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^this.resultHandler  = null ;^409^^^^^404^441^[REPLACE] this.resultHandler = new QueryExecutionResultHandler (  ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^this.repositoryInformation =  null;^410^^^^^404^441^[REPLACE] this.repositoryInformation = repositoryInformation;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^411^^^^^404^441^[ADD] this.customImplementation = customImplementation;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^this.target =  customImplementation;^412^^^^^404^441^[REPLACE] this.target = target;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^lookupStrategy  =  lookupStrategy;^416^^^^^404^441^[REPLACE] lookupStrategy = lookupStrategy == null ? getQueryLookupStrategy ( queryLookupStrategyKey )  : lookupStrategy;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Iterable<Method> queryMethods = repositoryInformation .getTargetClassMethod ( method )  ;^417^^^^^404^441^[REPLACE] Iterable<Method> queryMethods = repositoryInformation.getQueryMethods (  ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( lookupStrategy != null )  {^419^^^^^404^441^[REPLACE] if  ( lookupStrategy == null )  {^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^421^422^423^424^425^404^441^[ADD] if  ( queryMethods.iterator (  ) .hasNext (  )  )  { throw new IllegalStateException ( "You have defined query method in the repository but " + "you don't have any query lookup strategy defined. The " + "infrastructure apparently does not support query methods!" ) ; }^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return ;^422^423^424^^^404^441^[REPLACE] throw new IllegalStateException ( "You have defined query method in the repository but " + "you don't have any query lookup strategy defined. The " + "infrastructure apparently does not support query methods!" ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( true.iterator (  ) .hasNext (  )  )  {^421^^^^^404^441^[REPLACE] if  ( queryMethods.iterator (  ) .hasNext (  )  )  {^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^factory.setBeanFactory ( classLoader ) ;^431^^^^^404^441^[REPLACE] factory.setBeanClassLoader ( classLoader ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^factory.setBeanClassLoader ( beanFactory ) ;^432^^^^^404^441^[REPLACE] factory.setBeanFactory ( beanFactory ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^434^435^436^^438^404^441^[ADD] for  ( Method method : queryMethods )  {  RepositoryQuery query = lookupStrategy.resolveQuery ( method, repositoryInformation, factory, namedQueries ) ; invokeListeners ( query ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^436^437^438^439^440^404^441^[ADD] RepositoryQuery query = lookupStrategy.resolveQuery ( method, repositoryInformation, factory, namedQueries ) ;  invokeListeners ( query ) ; queries.put ( method, query ) ; }^[METHOD] <init> [TYPE] Object) [PARAMETER] RepositoryInformation repositoryInformation Object customImplementation Object target [CLASS] QueryExecutorMethodInterceptor   [TYPE]  QueryLookupStrategy lookupStrategy  [TYPE]  RepositoryQuery query  [TYPE]  boolean false  true  [TYPE]  Iterable queryMethods  [TYPE]  SpelAwareProxyProjectionFactory factory  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  target  [TYPE]  Method method  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Method method = invocation.getArguments (  ) ;^473^^^^^471^490^[REPLACE] Method method = invocation.getMethod (  ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Object[] arguments = invocation.getMethod (  ) ;^474^^^^^471^490^[REPLACE] Object[] arguments = invocation.getArguments (  ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return executeMethodOn ( target, actualMethod, arguments )  ;^479^^^^^471^490^[REPLACE] return executeMethodOn ( customImplementation, actualMethod, arguments ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^478^479^480^^^471^490^[ADD] Method actualMethod = repositoryInformation.getTargetClassMethod ( method ) ; return executeMethodOn ( customImplementation, actualMethod, arguments ) ; }^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Method actualMethod = repositoryInformation .getQueryMethods (  )  ;^478^^^^^471^490^[REPLACE] Method actualMethod = repositoryInformation.getTargetClassMethod ( method ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( hasQueryFor ( actualMethod )  )  {^482^^^^^471^490^[REPLACE] if  ( hasQueryFor ( method )  )  {^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return queries.containsKey ( method ) .execute ( arguments ) ;^483^^^^^471^490^[REPLACE] return queries.get ( method ) .execute ( arguments ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Method actualMethod = repositoryInformation .getQueryMethods (  )  ;^488^^^^^471^490^[REPLACE] Method actualMethod = repositoryInformation.getTargetClassMethod ( method ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return executeMethodOn ( customImplementation, actualMethod, arguments )  ;^489^^^^^471^490^[REPLACE] return executeMethodOn ( target, actualMethod, arguments ) ;^[METHOD] doInvoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] QueryExecutorMethodInterceptor   [TYPE]  boolean false  true  [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  Method actualMethod  method  [TYPE]  Map queries  [TYPE]  Object[] arguments  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^private List<QueryMethod> queryMethods ;^547^^^^^^^[REPLACE] private List<QueryMethod> queryMethods = new ArrayList<QueryMethod> (  ) ;^[METHOD] isCustomMethodInvocation [TYPE] boolean [PARAMETER] MethodInvocation invocation [CLASS] QueryCollectingQueryCreationListener   [TYPE]  QueryExecutionResultHandler resultHandler  [TYPE]  Object customImplementation  result  target  [TYPE]  MethodInvocation invocation  [TYPE]  boolean false  true  [TYPE]  Map queries  [TYPE]  RepositoryInformation repositoryInformation 
