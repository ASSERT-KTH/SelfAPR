[REPLACE]^private final Object beanFactory;^58^^^^^^^[REPLACE] private final BeanFactory beanFactory;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private final  char  transactionManagerName;^59^^^^^^^[REPLACE] private final String transactionManagerName;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private  boolean enableDefaultTransactions;^60^^^^^^^[REPLACE] private final boolean enableDefaultTransactions;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private static final boolean jta12Present ;^132^133^^^^132^133^[REPLACE] private static final boolean jta12Present = ClassUtils.isPresent ( "javax.transaction.Transactional", CustomAnnotationTransactionAttributeSource.class.getClassLoader (  )  ) ;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private static final boolean ejb3Present  = null ;^135^136^^^^135^136^[REPLACE] private static final boolean ejb3Present = ClassUtils.isPresent ( "javax.ejb.TransactionAttribute", CustomAnnotationTransactionAttributeSource.class.getClassLoader (  )  ) ;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private  boolean publicMethodsOnly;^138^^^^^^^[REPLACE] private final boolean publicMethodsOnly;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private  Set<Object annotationParsers;^140^^^^^^^[REPLACE] private final Set<TransactionAnnotationParser> annotationParsers;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private final static TransactionAttribute NULL_TRANSACTION_ATTRIBUTE ;^287^^^^^^^[REPLACE] private final static TransactionAttribute NULL_TRANSACTION_ATTRIBUTE = new DefaultTransactionAttribute (  ) ;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^protected final TransactionAttribute logger = LoggerFactory.getTransactionAttribute ( getClass (  )  ) ;^295^^^^^^^[REPLACE] protected final Logger logger = LoggerFactory.getLogger ( getClass (  )  ) ;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^final Map<Object, TransactionAttribute> attributeCache  = null ;^303^^^^^^^[REPLACE] final Map<Object, TransactionAttribute> attributeCache = new ConcurrentHashMap<Object, TransactionAttribute> (  ) ;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private boolean enableDefaultTransactions ;^306^^^^^^^[REPLACE] private boolean enableDefaultTransactions = true;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[REPLACE]^private final Object targetClass;^481^^^^^^^[REPLACE] private final Class<?> targetClass;^ [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey  
[ADD]^^333^334^^^^331^357^[ADD] Object cacheKey = getCacheKey ( method, targetClass ) ; Object cached = this.attributeCache.get ( cacheKey ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^334^^^^^331^357^[ADD] Object cached = this.attributeCache.get ( cacheKey ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( cached ==cacheKey )  {^335^^^^^331^357^[REPLACE] if  ( cached != null )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  (attr != null )  {^347^^^^^335^356^[REPLACE] if  ( txAtt == null )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^this.attributeCache .get ( cached )  ;^348^^^^^335^356^[REPLACE] this.attributeCache.put ( cacheKey, NULL_TRANSACTION_ATTRIBUTE ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^348^^^^^335^356^[ADD] this.attributeCache.put ( cacheKey, NULL_TRANSACTION_ATTRIBUTE ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '"  method.getName (  )   "' with attribute: "  txAtt ) ;^351^^^^^335^356^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '" + method.equals (  )  + "' with attribute: " + txAtt ) ;^351^^^^^335^356^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr  ;^355^^^^^335^356^[REPLACE] return txAtt;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^TransactionAttribute txAtt = computeTransactionAttribute ( method, this ) ;^345^^^^^335^356^[REPLACE] TransactionAttribute txAtt = computeTransactionAttribute ( method, targetClass ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  (cacheKey  ||  NULL_TRANSACTION_ATTRIBUTE )  {^338^^^^^331^357^[REPLACE] if  ( cached == NULL_TRANSACTION_ATTRIBUTE )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return false;^339^^^^^331^357^[REPLACE] return null;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true;^339^^^^^331^357^[REPLACE] return null;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( cacheKey  &&  NULL_TRANSACTION_ATTRIBUTE )  {^338^^^^^331^357^[REPLACE] if  ( cached == NULL_TRANSACTION_ATTRIBUTE )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^return null;return  ( TransactionAttribute )  cached;^338^339^340^341^342^331^357^[ADD] if  ( cached == NULL_TRANSACTION_ATTRIBUTE )  { return null; } else { return  ( TransactionAttribute )  cached; }^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return this;^339^^^^^331^357^[REPLACE] return null;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt != null )  {^347^^^^^331^357^[REPLACE] if  ( txAtt == null )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( logger.debug (  )  )  {^350^^^^^347^354^[REPLACE] if  ( logger.isDebugEnabled (  )  )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^this.attributeCache.put ( cached, NULL_TRANSACTION_ATTRIBUTE ) ;^348^^^^^331^357^[REPLACE] this.attributeCache.put ( cacheKey, NULL_TRANSACTION_ATTRIBUTE ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^350^351^352^^^331^357^[ADD] if  ( logger.isDebugEnabled (  )  )  { logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ; }^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '"  method.getName (  )   "' with attribute: "  txAtt ) ;^351^^^^^331^357^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^351^^^^^331^357^[ADD] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '" + method .getModifiers (  )   + "' with attribute: " + txAtt ) ;^351^^^^^331^357^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr;^355^^^^^331^357^[REPLACE] return txAtt;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^TransactionAttribute attr = annotationParser.parseTransactionAnnotation ( ae )  ;^345^^^^^331^357^[REPLACE] TransactionAttribute txAtt = computeTransactionAttribute ( method, targetClass ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  String transactionManagerName  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( allowPublicMethodsOnly (  )  && Modifier.isPublic ( targetClassMethod.getModifiers (  )  )  )  {^381^^^^^379^447^[REPLACE] if  ( allowPublicMethodsOnly (  )  && !Modifier.isPublic ( method.getModifiers (  )  )  )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^381^382^383^^^379^447^[ADD] if  ( allowPublicMethodsOnly (  )  && !Modifier.isPublic ( method.getModifiers (  )  )  )  { return null; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true;^382^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^386^^^^^379^447^[ADD] Class<?> userClass = ClassUtils.getUserClass ( targetClass ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^389^390^391^^393^379^447^[ADD] Method specificMethod = ClassUtils.getMostSpecificMethod ( method, userClass ) ;  specificMethod = BridgeMethodResolver.findBridgedMethod ( specificMethod ) ; TransactionAttribute txAtt = null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^specificMethod =  BridgeMethodResolver.findBridgedMethod ( targetClassMethod ) ;^391^^^^^379^447^[REPLACE] specificMethod = BridgeMethodResolver.findBridgedMethod ( specificMethod ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^393^^^^^379^447^[ADD] TransactionAttribute txAtt = null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( specificMethod  == targetClassMethod  && targetClassMethod.equals ( method )  )  {^395^^^^^379^447^[REPLACE] if  ( specificMethod != method )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( attr == true )  {^398^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr;^399^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == null || !enableDefaultTransactions )  {^404^^^^^379^447^[REPLACE] if  ( txAtt != null || !enableDefaultTransactions )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr;^405^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( method.getDeclaringClass (  )  )  ;^397^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( method ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( method )  ;^402^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( method.getDeclaringClass (  )  ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr  ;^399^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == this )  {^398^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( attr == null || true )  {^404^^^^^379^447^[REPLACE] if  ( txAtt != null || !enableDefaultTransactions )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( specificMethod )  ;^397^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( method ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( specificMethod.getDeclaringClass (  )  )  ;^402^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( method.getDeclaringClass (  )  ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^412^413^414^415^^379^447^[ADD] txAtt = findTransactionAttribute ( specificMethod ) ; if  ( txAtt != null )  { return txAtt; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == false )  {^413^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr;^414^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^418^419^420^421^^379^447^[ADD] txAtt = findTransactionAttribute ( specificMethod.getDeclaringClass (  )  ) ; if  ( txAtt != null )  { return txAtt; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( specificMethod != method  && ( txAtt == true )  {^419^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr;^420^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( enableDefaultTransactions )  {^423^^^^^379^447^[REPLACE] if  ( !enableDefaultTransactions )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^return null;^423^424^425^^^379^447^[ADD] if  ( !enableDefaultTransactions )  { return null; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return false;^424^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return this;^424^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Method targetClassMethod = repositoryInformation.getTargetClassMethod ( targetClassMethod ) ;^429^^^^^379^447^[REPLACE] Method targetClassMethod = repositoryInformation.getTargetClassMethod ( method ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( specificMethod.equals ( method  )  ||  ( allowPublicMethodsOnly (  )  )  &&  ( ! ( isPublic ( method.getModifiers (  )  )  )  )  )  )  {^431^^^^^379^447^[REPLACE] if  ( targetClassMethod.equals ( method )  )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^return null;^431^432^433^^^379^447^[ADD] if  ( targetClassMethod.equals ( method )  )  { return null; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return false  ;^432^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return this;^432^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( method )  ;^435^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( targetClassMethod ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( attr == null )  {^436^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr  ;^437^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr;^437^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( method.getDeclaringClass (  )  )  ;^440^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( targetClassMethod.getDeclaringClass (  )  ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == null )  {^441^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return attr;^442^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return this;^445^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] TransactionalRepositoryProxyPostProcessor CustomAnnotationTransactionAttributeSource AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^private static final boolean jta12Present  = null ;^132^133^^^^132^133^[REPLACE] private static final boolean jta12Present = ClassUtils.isPresent ( "javax.transaction.Transactional", CustomAnnotationTransactionAttributeSource.class.getClassLoader (  )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] CustomAnnotationTransactionAttributeSource   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^private static final boolean ejb3Present ;^135^136^^^^135^136^[REPLACE] private static final boolean ejb3Present = ClassUtils.isPresent ( "javax.ejb.TransactionAttribute", CustomAnnotationTransactionAttributeSource.class.getClassLoader (  )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] CustomAnnotationTransactionAttributeSource   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^private final boolean privateMethodsOnly;^138^^^^^^^[REPLACE] private final boolean publicMethodsOnly;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] CustomAnnotationTransactionAttributeSource   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^private final Set<Object annotationParsers;^140^^^^^^^[REPLACE] private final Set<TransactionAnnotationParser> annotationParsers;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] CustomAnnotationTransactionAttributeSource   [TYPE]  boolean ejb3Present  enableDefaultTransaction  enableDefaultTransactions  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  attr  txAtt  [TYPE]  BeanFactory beanFactory  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  String transactionManagerName  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^private final static TransactionAttribute NULL_TRANSACTION_ATTRIBUTE ;^287^^^^^^^[REPLACE] private final static TransactionAttribute NULL_TRANSACTION_ATTRIBUTE = new DefaultTransactionAttribute (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers 
[REPLACE]^protected  Logger logger = LoggerFactory.getLogger ( getClass (  )  ) ;^295^^^^^^^[REPLACE] protected final Logger logger = LoggerFactory.getLogger ( getClass (  )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers 
[REPLACE]^Map<Object, TransactionAttribute> attributeCache = new ConcurrentHashMap<Object, TransactionAttribute> (  ) ;^303^^^^^^^[REPLACE] final Map<Object, TransactionAttribute> attributeCache = new ConcurrentHashMap<Object, TransactionAttribute> (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers 
[REPLACE]^private boolean enableDefaultTransactions  = null ;^306^^^^^^^[REPLACE] private boolean enableDefaultTransactions = true;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers 
[REPLACE]^private final TransactionAttribute method;^479^^^^^^^[REPLACE] private final Method method;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers 
[REPLACE]^private  Object targetClass;^481^^^^^^^[REPLACE] private final Class<?> targetClass;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean ejb3Present  false  jta12Present  publicMethodsOnly  true  [TYPE]  Set annotationParsers  parsers 
[ADD]^^333^334^^^^331^357^[ADD] Object cacheKey = getCacheKey ( method, targetClass ) ; Object cached = this.attributeCache.get ( cacheKey ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Object cached = this.attributeCache.get ( cached ) ;^334^^^^^331^357^[REPLACE] Object cached = this.attributeCache.get ( cacheKey ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( cacheKey == null )  {^335^^^^^331^357^[REPLACE] if  ( cached != null )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  (NULL_TRANSACTION_ATTRIBUTE != null )  {^347^^^^^335^356^[REPLACE] if  ( txAtt == null )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^350^351^352^^^347^354^[ADD] if  ( logger.isDebugEnabled (  )  )  { logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ; }^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^this.attributeCache.put ( cached, NULL_TRANSACTION_ATTRIBUTE ) ;^348^^^^^335^356^[REPLACE] this.attributeCache.put ( cacheKey, NULL_TRANSACTION_ATTRIBUTE ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '"  method.getName (  )   "' with attribute: "  txAtt ) ;^351^^^^^335^356^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '" + method.equals (  )  + "' with attribute: " + txAtt ) ;^351^^^^^335^356^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^351^^^^^335^356^[ADD] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return NULL_TRANSACTION_ATTRIBUTE;^355^^^^^335^356^[REPLACE] return txAtt;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^345^^^^^335^356^[ADD] TransactionAttribute txAtt = computeTransactionAttribute ( method, targetClass ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( cached  !=  NULL_TRANSACTION_ATTRIBUTE )  {^338^^^^^331^357^[REPLACE] if  ( cached == NULL_TRANSACTION_ATTRIBUTE )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^338^339^340^341^342^331^357^[ADD] if  ( cached == NULL_TRANSACTION_ATTRIBUTE )  { return null; } else { return  ( TransactionAttribute )  cached; }^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return false  ;^339^^^^^331^357^[REPLACE] return null;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true;^339^^^^^331^357^[REPLACE] return null;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  (   NULL_TRANSACTION_ATTRIBUTE )  {^338^^^^^331^357^[REPLACE] if  ( cached == NULL_TRANSACTION_ATTRIBUTE )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return this;^339^^^^^331^357^[REPLACE] return null;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt != null )  {^347^^^^^331^357^[REPLACE] if  ( txAtt == null )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( logger .debug (  )   )  {^350^^^^^347^354^[REPLACE] if  ( logger.isDebugEnabled (  )  )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^this.attributeCache.put ( cached, NULL_TRANSACTION_ATTRIBUTE ) ;^348^^^^^331^357^[REPLACE] this.attributeCache.put ( cacheKey, NULL_TRANSACTION_ATTRIBUTE ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^348^^^^^331^357^[ADD] this.attributeCache.put ( cacheKey, NULL_TRANSACTION_ATTRIBUTE ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( logger .debug (  )   )  {^350^^^^^331^357^[REPLACE] if  ( logger.isDebugEnabled (  )  )  {^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '"  method.getName (  )   "' with attribute: "  txAtt ) ;^351^^^^^331^357^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^logger.debug ( "Adding transactional method '" + method.equals (  )  + "' with attribute: " + txAtt ) ;^351^^^^^331^357^[REPLACE] logger.debug ( "Adding transactional method '" + method.getName (  )  + "' with attribute: " + txAtt ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true  ;^355^^^^^331^357^[REPLACE] return txAtt;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^TransactionAttribute txAtt = computeTransactionAttribute ( method, this ) ;^345^^^^^331^357^[REPLACE] TransactionAttribute txAtt = computeTransactionAttribute ( method, targetClass ) ;^[METHOD] getTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  [TYPE]  Object cacheKey  cached  [TYPE]  Method method  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  (  Modifier.isPublic ( method.getModifiers (  )  )  )  {^381^^^^^379^447^[REPLACE] if  ( allowPublicMethodsOnly (  )  && !Modifier.isPublic ( method.getModifiers (  )  )  )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return this;^382^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return false  ;^382^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Class<?> userClass = ClassUtils.getUserClass ( false ) ;^386^^^^^379^447^[REPLACE] Class<?> userClass = ClassUtils.getUserClass ( targetClass ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^Method specificMethod = ClassUtils.getMostSpecificMethod ( targetClassMethod, userClass ) ;^389^^^^^379^447^[REPLACE] Method specificMethod = ClassUtils.getMostSpecificMethod ( method, userClass ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^specificMethod =  BridgeMethodResolver.findBridgedMethod ( null ) ;^391^^^^^379^447^[REPLACE] specificMethod = BridgeMethodResolver.findBridgedMethod ( specificMethod ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^393^^^^^379^447^[ADD] TransactionAttribute txAtt = null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( specificMethod  ==  method  || targetClassMethod.equals ( method )  )  {^395^^^^^379^447^[REPLACE] if  ( specificMethod != method )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( NULL_TRANSACTION_ATTRIBUTE == null )  {^398^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true  ;^399^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( NULL_TRANSACTION_ATTRIBUTE == null || !enableDefaultTransactions )  {^404^^^^^379^447^[REPLACE] if  ( txAtt != null || !enableDefaultTransactions )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true  ;^405^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( specificMethod )  ;^397^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( method ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( specificMethod.getDeclaringClass (  )  )  ;^402^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( method.getDeclaringClass (  )  ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return NULL_TRANSACTION_ATTRIBUTE;^405^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  (NULL_TRANSACTION_ATTRIBUTE == null )  {^398^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return NULL_TRANSACTION_ATTRIBUTE;^399^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == null || !enableDefaultTransactions )  {^404^^^^^379^447^[REPLACE] if  ( txAtt != null || !enableDefaultTransactions )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^397^^^^^379^447^[ADD] txAtt = findTransactionAttribute ( method ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^412^413^414^415^^379^447^[ADD] txAtt = findTransactionAttribute ( specificMethod ) ; if  ( txAtt != null )  { return txAtt; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  (NULL_TRANSACTION_ATTRIBUTE == null )  {^413^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^return txAtt;^413^414^415^^^379^447^[ADD] if  ( txAtt != null )  { return txAtt; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return NULL_TRANSACTION_ATTRIBUTE;^414^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( method.getDeclaringClass (  )  )  ;^418^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( specificMethod.getDeclaringClass (  )  ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == this  )  {^419^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^return txAtt;^419^420^421^^^379^447^[ADD] if  ( txAtt != null )  { return txAtt; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true  ;^420^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return NULL_TRANSACTION_ATTRIBUTE;^420^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( enableDefaultTransactions )  {^423^^^^^379^447^[REPLACE] if  ( !enableDefaultTransactions )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^423^424^425^^^379^447^[ADD] if  ( !enableDefaultTransactions )  { return null; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return this;^424^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^429^430^431^432^433^379^447^[ADD] Method targetClassMethod = repositoryInformation.getTargetClassMethod ( method ) ;  if  ( targetClassMethod.equals ( method )  )  { return null; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( targetClassMethod.equals ( specificMethod  )  ||  ( allowPublicMethodsOnly (  )  )  &&  ( ! ( isPublic ( method.getModifiers (  )  )  )  )  )  )  {^431^^^^^379^447^[REPLACE] if  ( targetClassMethod.equals ( method )  )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return false  ;^432^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^txAtt = findTransactionAttribute ( method )  ;^435^^^^^379^447^[REPLACE] txAtt = findTransactionAttribute ( targetClassMethod ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == true  || specificMethod != method  )  {^436^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^436^437^438^^^379^447^[ADD] if  ( txAtt != null )  { return txAtt; }^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true  ;^437^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return NULL_TRANSACTION_ATTRIBUTE;^437^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[ADD]^^440^^^^^379^447^[ADD] txAtt = findTransactionAttribute ( targetClassMethod.getDeclaringClass (  )  ) ;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^if  ( txAtt == null )  {^441^^^^^379^447^[REPLACE] if  ( txAtt != null )  {^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return NULL_TRANSACTION_ATTRIBUTE;^442^^^^^379^447^[REPLACE] return txAtt;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^return true;^445^^^^^379^447^[REPLACE] return null;^[METHOD] computeTransactionAttribute [TYPE] TransactionAttribute [PARAMETER] Method method Class<?> targetClass [CLASS] AbstractFallbackTransactionAttributeSource DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
[REPLACE]^private  Method method;^479^^^^^^^[REPLACE] private final Method method;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] DefaultCacheKey   [TYPE]  boolean enableDefaultTransactions  false  true  [TYPE]  TransactionAttribute NULL_TRANSACTION_ATTRIBUTE  txAtt  [TYPE]  Class clazz  targetClass  userClass  [TYPE]  Method method  specificMethod  targetClassMethod  [TYPE]  Logger logger  [TYPE]  Map attributeCache  [TYPE]  RepositoryInformation repositoryInformation 
