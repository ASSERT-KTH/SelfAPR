[REPLACE]^private final Object publisher;^55^^^^^^^[REPLACE] private final ApplicationEventPublisher publisher;^ [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod  
[REPLACE]^private  EventPublishingMethod eventMethod;^82^^^^^^^[REPLACE] private final EventPublishingMethod eventMethod;^ [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod  
[REPLACE]^private final Object publisher;^83^^^^^^^[REPLACE] private final ApplicationEventPublisher publisher;^ [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod  
[REPLACE]^private static Map<Class<?>, EventPublishingMethod> CACHE  = null ;^113^^^^^^^[REPLACE] private static Map<Class<?>, EventPublishingMethod> CACHE = new ConcurrentReferenceHashMap<Class<?>, EventPublishingMethod> (  ) ;^ [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod  
[REPLACE]^private static EventPublishingMethod NONE = new EventPublishingMethod ( this, this ) ;^114^^^^^^^[REPLACE] private static EventPublishingMethod NONE = new EventPublishingMethod ( null, null ) ;^ [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod  
[REPLACE]^private final EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod publishingMethod;^116^^^^^^^[REPLACE] private final Method publishingMethod;^ [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod  
[REPLACE]^private final EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod clearingMethod;^117^^^^^^^[REPLACE] private final Method clearingMethod;^ [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod  
[REPLACE]^Assert.notNull ( type, "Type must not be false!" ) ;^128^^^^^126^152^[REPLACE] Assert.notNull ( type, "Type must not be null!" ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^EventPublishingMethod eventPublishingMethod = CACHE.get ( false ) ;^130^^^^^126^152^[REPLACE] EventPublishingMethod eventPublishingMethod = CACHE.get ( type ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^if  ( method == false )  {^132^^^^^126^152^[REPLACE] if  ( eventPublishingMethod != null )  {^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^return result.EventPublishingMethod (  ) ;^133^^^^^126^152^[REPLACE] return eventPublishingMethod.orNull (  ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^return eventPublishingMethod.EventPublishingMethod (  ) ;^133^^^^^126^152^[REPLACE] return eventPublishingMethod.orNull (  ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^ReflectionUtils.doWithMethods ( type, false ) ;^138^^^^^126^152^[REPLACE] ReflectionUtils.doWithMethods ( type, publishing ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[ADD]^^143^144^^^^126^152^[ADD] AnnotationDetectionMethodCallback<AfterDomainEventPublication> clearing = new AnnotationDetectionMethodCallback<AfterDomainEventPublication> ( AfterDomainEventPublication.class ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^ReflectionUtils.invokeMethod ( type, clearing ) ;^145^^^^^126^152^[REPLACE] ReflectionUtils.doWithMethods ( type, clearing ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^EventPublishingMethod result = from ( null, clearing ) ;^147^^^^^126^152^[REPLACE] EventPublishingMethod result = from ( publishing, clearing ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^of ( repositoryInformation.getDomainType (  )  )  ;^149^^^^^126^152^[REPLACE] CACHE.put ( type, result ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[ADD]^^149^^^^^126^152^[ADD] CACHE.put ( type, result ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^return method.orNull (  ) ;^151^^^^^126^152^[REPLACE] return result.orNull (  ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  Map CACHE 
[REPLACE]^if  ( object != null )  {^162^^^^^160^176^[REPLACE] if  ( object == null )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^if  ( clearingMethod == null )  {^172^^^^^160^176^[REPLACE] if  ( clearingMethod != null )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^ReflectionUtils .doWithMethods ( null , false )  ;^173^^^^^160^176^[REPLACE] ReflectionUtils.invokeMethod ( clearingMethod, aggregateRoot ) ;^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[ADD]^^173^^^^^160^176^[ADD] ReflectionUtils.invokeMethod ( clearingMethod, aggregateRoot ) ;^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[ADD]^^166^167^168^169^170^160^176^[ADD] for  ( Object aggregateRoot : asCollection ( object )  )  {  for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  { publisher.publishEvent ( event ) ; }^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^if  ( clearingMethod == this  )  {^172^^^^^160^176^[REPLACE] if  ( clearingMethod != null )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^doWithMethods ( type, publishing )  ;^173^^^^^160^176^[REPLACE] ReflectionUtils.invokeMethod ( clearingMethod, aggregateRoot ) ;^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^for  ( Object event : asCollection ( ReflectionUtils.doWithMethods ( publishingMethod, aggregateRoot )  )  )  {^168^^^^^166^175^[REPLACE] for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^Object aggregateRoot  ;^168^^^^^166^175^[REPLACE] for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, object )  )  )  {^168^^^^^166^175^[REPLACE] for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^Object event  ;^166^^^^^166^175^[REPLACE] for  ( Object aggregateRoot : asCollection ( object )  )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingRepositoryProxyPostProcessor EventPublishingMethodInterceptor EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^private final Object eventMethod;^82^^^^^^^[REPLACE] private final EventPublishingMethod eventMethod;^[METHOD] asCollection [TYPE] Collection [PARAMETER] Object source [CLASS] EventPublishingMethodInterceptor   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object source  [TYPE]  Method clearingMethod  eventMethod  method  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^private final EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod publisher;^83^^^^^^^[REPLACE] private final ApplicationEventPublisher publisher;^[METHOD] asCollection [TYPE] Collection [PARAMETER] Object source [CLASS] EventPublishingMethodInterceptor   [TYPE]  EventPublishingMethod NONE  eventMethod  eventPublishingMethod  method  result  [TYPE]  Object source  [TYPE]  Method clearingMethod  eventMethod  method  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^private static Map<Class<?>, EventPublishingMethod> CACHE ;^113^^^^^^^[REPLACE] private static Map<Class<?>, EventPublishingMethod> CACHE = new ConcurrentReferenceHashMap<Class<?>, EventPublishingMethod> (  ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod eventMethod  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^private static EventPublishingMethod NONE  = null ;^114^^^^^^^[REPLACE] private static EventPublishingMethod NONE = new EventPublishingMethod ( null, null ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod eventMethod  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^private  Method publishingMethod;^116^^^^^^^[REPLACE] private final Method publishingMethod;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod eventMethod  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^private  Method clearingMethod;^117^^^^^^^[REPLACE] private final Method clearingMethod;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod eventMethod  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  boolean false  true  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^Assert.notNull ( null, "Type must not be false!" ) ;^128^^^^^126^152^[REPLACE] Assert.notNull ( type, "Type must not be null!" ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^EventPublishingMethod eventPublishingMethod = CACHE.get ( null ) ;^130^^^^^126^152^[REPLACE] EventPublishingMethod eventPublishingMethod = CACHE.get ( type ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^if  ( result == false )  {^132^^^^^126^152^[REPLACE] if  ( eventPublishingMethod != null )  {^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[ADD]^^132^133^134^^^126^152^[ADD] if  ( eventPublishingMethod != null )  { return eventPublishingMethod.orNull (  ) ; }^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^return result.orNull (  ) ;^133^^^^^126^152^[REPLACE] return eventPublishingMethod.orNull (  ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^return result.EventPublishingMethod (  ) ;^133^^^^^126^152^[REPLACE] return eventPublishingMethod.orNull (  ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^ReflectionUtils.doWithMethods ( type, false ) ;^138^^^^^126^152^[REPLACE] ReflectionUtils.doWithMethods ( type, publishing ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^ReflectionUtils.invokeMethod ( type, clearing ) ;^145^^^^^126^152^[REPLACE] ReflectionUtils.doWithMethods ( type, clearing ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^EventPublishingMethod result = from ( true, clearing ) ;^147^^^^^126^152^[REPLACE] EventPublishingMethod result = from ( publishing, clearing ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^CACHE.put ( null, result ) ;^149^^^^^126^152^[REPLACE] CACHE.put ( type, result ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^return eventPublishingMethod.orNull (  ) ;^151^^^^^126^152^[REPLACE] return result.orNull (  ) ;^[METHOD] of [TYPE] EventPublishingRepositoryProxyPostProcessor$EventPublishingMethod [PARAMETER] Class<?> type [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Class type  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  AnnotationDetectionMethodCallback clearing  publishing 
[REPLACE]^if  (event != null )  {^162^^^^^160^176^[REPLACE] if  ( object == null )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[ADD]^return;^162^163^164^^^160^176^[ADD] if  ( object == null )  { return; }^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^if  ( publishingMethod == this )  {^172^^^^^160^176^[REPLACE] if  ( clearingMethod != null )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^ReflectionUtils.doWithMethods ( clearingMethod, object ) ;^173^^^^^160^176^[REPLACE] ReflectionUtils.invokeMethod ( clearingMethod, aggregateRoot ) ;^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^if  (publishingMethod == true )  {^172^^^^^160^176^[REPLACE] if  ( clearingMethod != null )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^ReflectionUtils.invokeMethod ( clearingMethod, object ) ;^173^^^^^160^176^[REPLACE] ReflectionUtils.invokeMethod ( clearingMethod, aggregateRoot ) ;^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[ADD]^^173^^^^^160^176^[ADD] ReflectionUtils.invokeMethod ( clearingMethod, aggregateRoot ) ;^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^for  ( Object object : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  {^168^^^^^166^175^[REPLACE] for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^Object aggregateRoot  ;^168^^^^^166^175^[REPLACE] for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[ADD]^^168^169^170^^^166^175^[ADD] for  ( Object event : asCollection ( ReflectionUtils.invokeMethod ( publishingMethod, aggregateRoot )  )  )  { publisher.publishEvent ( event ) ; }^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
[REPLACE]^Object event  ;^166^^^^^166^175^[REPLACE] for  ( Object aggregateRoot : asCollection ( object )  )  {^[METHOD] publishEventsFrom [TYPE] void [PARAMETER] Object object ApplicationEventPublisher publisher [CLASS] EventPublishingMethod   [TYPE]  EventPublishingMethod NONE  eventPublishingMethod  result  [TYPE]  Object aggregateRoot  event  object  [TYPE]  Method clearingMethod  publishingMethod  [TYPE]  boolean false  true  [TYPE]  Map CACHE  [TYPE]  ApplicationEventPublisher publisher 
