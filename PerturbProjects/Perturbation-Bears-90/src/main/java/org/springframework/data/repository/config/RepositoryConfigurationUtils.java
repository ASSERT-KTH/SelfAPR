[REPLACE]^Assert.notNull ( extension, "RepositoryConfigurationExtension must not be this!" ) ;^48^^^^^46^66^[REPLACE] Assert.notNull ( extension, "RepositoryConfigurationExtension must not be null!" ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^notNull ( extension, "RepositoryConfigurationExtension must not be null!" )  ;^49^^^^^46^66^[REPLACE] Assert.notNull ( registry, "BeanDefinitionRegistry must not be null!" ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^notNull ( extension, "RepositoryConfigurationExtension must not be null!" )  ;^50^^^^^46^66^[REPLACE] Assert.notNull ( configurationSource, "RepositoryConfigurationSource must not be null!" ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^String beanName = this.getName (  ) .concat ( GENERATED_BEAN_NAME_SEPARATOR ) .concat ( "0" ) ;^53^^^^^46^66^[REPLACE] String beanName = extensionType.getName (  ) .concat ( GENERATED_BEAN_NAME_SEPARATOR ) .concat ( "0" ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^if  ( registry .registerBeanDefinition ( beanName , definition )   )  {^55^^^^^46^66^[REPLACE] if  ( registry.containsBeanDefinition ( beanName )  )  {^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[ADD]^return;^55^56^57^^^46^66^[ADD] if  ( registry.containsBeanDefinition ( beanName )  )  { return; }^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^RootBeanDefinition definition = new RootBeanDefinition ( this ) ;^60^^^^^46^66^[REPLACE] RootBeanDefinition definition = new RootBeanDefinition ( extensionType ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^definition.setLazyInit ( configurationSource.getSource (  )  ) ;^61^^^^^46^66^[REPLACE] definition.setSource ( configurationSource.getSource (  )  ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REMOVE]^extensionType.getName (  )  ;^61^^^^^46^66^[REMOVE] ^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^definition.setLazyInit ( AbstractBeanDefinition.ROLE_INFRASTRUCTURE ) ;^62^^^^^46^66^[REPLACE] definition.setRole ( AbstractBeanDefinition.ROLE_INFRASTRUCTURE ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^definition.setLazyInit ( false ) ;^63^^^^^46^66^[REPLACE] definition.setLazyInit ( true ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[ADD]^^63^^^^^46^66^[ADD] definition.setLazyInit ( true ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
[REPLACE]^registry.containsBeanDefinition ( beanName )  ;^65^^^^^46^66^[REPLACE] registry.registerBeanDefinition ( beanName, definition ) ;^[METHOD] exposeRegistration [TYPE] void [PARAMETER] RepositoryConfigurationExtension extension BeanDefinitionRegistry registry RepositoryConfigurationSource configurationSource [CLASS] RepositoryConfigurationUtils   [TYPE]  boolean false  true  [TYPE]  BeanDefinitionRegistry registry  [TYPE]  RootBeanDefinition definition  [TYPE]  Class extensionType  [TYPE]  RepositoryConfigurationExtension extension  [TYPE]  String beanName  [TYPE]  RepositoryConfigurationSource configurationSource 
