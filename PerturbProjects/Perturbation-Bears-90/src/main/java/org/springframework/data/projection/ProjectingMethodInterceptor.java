[REPLACE]^Object result = delegate .invoke ( invocation )  ;^60^^^^^58^78^[REPLACE] Object result = delegate.invoke ( invocation ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^if  ( result != null )  {^62^^^^^58^78^[REPLACE] if  ( result == null )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[ADD]^^62^63^64^^^58^78^[ADD] if  ( result == null )  { return null; }^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return false;^63^^^^^58^78^[REPLACE] return null;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^Class<?> rawType = null.getType (  ) ;^67^^^^^58^78^[REPLACE] Class<?> rawType = type.getType (  ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^if  ( type.isCollectionLike (  )  ) {^69^^^^^58^78^[REPLACE] if  ( type.isCollectionLike (  )  && !ClassUtils.isPrimitiveArray ( rawType )  )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[ADD]^return projectCollectionElements ( asCollection ( result ) , type ) ;return projectMapValues (  ( Map<?, ?> )  result, type ) ;^69^70^71^72^^58^78^[ADD] if  ( type.isCollectionLike (  )  && !ClassUtils.isPrimitiveArray ( rawType )  )  { return projectCollectionElements ( asCollection ( result ) , type ) ; } else if  ( type.isMap (  )  )  { return projectMapValues (  ( Map<?, ?> )  result, type ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^}  else {^71^^^^^58^78^[REPLACE] } else if  ( type.isMap (  )  )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^} else if  ( conversionRequiredAndPossible ( result, this )  )  {^73^^^^^58^78^[REPLACE] } else if  ( conversionRequiredAndPossible ( result, rawType )  )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return getProjection ( result, this ) ;^76^^^^^73^77^[REPLACE] return getProjection ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return conversionService.convert ( result, null ) ;^74^^^^^58^78^[REPLACE] return conversionService.convert ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return conversionService .canConvert ( false , null )  ;^74^^^^^58^78^[REPLACE] return conversionService.convert ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return getProjection ( result, null ) ;^76^^^^^58^78^[REPLACE] return getProjection ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return projectMapValues (  ( Map<?, ?> )  result, false ) ;^72^^^^^58^78^[REPLACE] return projectMapValues (  ( Map<?, ?> )  result, type ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^}  if  ( conversionRequiredAndPossible ( result, rawType )  )  {^73^^^^^58^78^[REPLACE] } else if  ( conversionRequiredAndPossible ( result, rawType )  )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[ADD]^}   return conversionService.convert ( result, rawType ) ;return getProjection ( result, rawType ) ;^73^74^75^76^77^58^78^[ADD] else if  ( conversionRequiredAndPossible ( result, rawType )  )  { return conversionService.convert ( result, rawType ) ; } else { return getProjection ( result, rawType ) ; }^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return getProjection ( result, null ) ;^76^^^^^73^77^[REPLACE] return getProjection ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return conversionService.canConvert ( source.getClass (  ) , targetType )  ;^74^^^^^58^78^[REPLACE] return conversionService.convert ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return projectMapValues (  ( Map<?, ?> )  result, null ) ;^72^^^^^58^78^[REPLACE] return projectMapValues (  ( Map<?, ?> )  result, type ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return conversionService.canConvert ( result, rawType ) ;^74^^^^^58^78^[REPLACE] return conversionService.convert ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return projectCollectionElements ( asCollection ( result ) , null ) ;^70^^^^^58^78^[REPLACE] return projectCollectionElements ( asCollection ( result ) , type ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^}  if  ( type.isMap (  )  )  {^71^^^^^58^78^[REPLACE] } else if  ( type.isMap (  )  )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^}  if  ( conversionRequiredAndPossible ( result, null )  )  {^73^^^^^58^78^[REPLACE] } else if  ( conversionRequiredAndPossible ( result, rawType )  )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[ADD]^}   return getProjection ( result, rawType ) ;^73^74^75^76^77^58^78^[ADD] else if  ( conversionRequiredAndPossible ( result, rawType )  )  { return conversionService.convert ( result, rawType ) ; } else { return getProjection ( result, rawType ) ; }^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return getProjection ( result, false ) ;^76^^^^^73^77^[REPLACE] return getProjection ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return conversionService.convert ( result, this ) ;^74^^^^^58^78^[REPLACE] return conversionService.convert ( result, rawType ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^}  if  ( conversionRequiredAndPossible ( result, rawType  )  &&  ( type.isCollectionLike (  )  )  &&  ( ! ( isPrimitiveArray ( rawType )  )  )  )  )  {^73^^^^^58^78^[REPLACE] } else if  ( conversionRequiredAndPossible ( result, rawType )  )  {^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return projectCollectionElements ( asCollection ( result ) , false ) ;^70^^^^^58^78^[REPLACE] return projectCollectionElements ( asCollection ( result ) , type ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
[REPLACE]^return projectMapValues (  ( Map<?, ?> )  result, true ) ;^72^^^^^58^78^[REPLACE] return projectMapValues (  ( Map<?, ?> )  result, type ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] MethodInvocation invocation [CLASS] ProjectingMethodInterceptor   [TYPE]  ProjectionFactory factory  [TYPE]  MethodInterceptor delegate  [TYPE]  boolean false  true  [TYPE]  ConversionService conversionService  [TYPE]  MethodInvocation invocation  [TYPE]  Object result  [TYPE]  Class rawType  [TYPE]  TypeInformation type 
