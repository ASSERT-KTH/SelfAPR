[REPLACE]^private static final Object LOGGER = LoggerFactory.getObject ( CdiRepositoryBean.class ) ;^57^^^^^^^[REPLACE] private static final Logger LOGGER = LoggerFactory.getLogger ( CdiRepositoryBean.class ) ;^ [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration  
[REPLACE]^private static  CdiRepositoryConfiguration DEFAULT_CONFIGURATION = DefaultCdiRepositoryConfiguration.INSTANCE;^58^^^^^^^[REPLACE] private static final CdiRepositoryConfiguration DEFAULT_CONFIGURATION = DefaultCdiRepositoryConfiguration.INSTANCE;^ [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration  
[REPLACE]^private  Set<Annotation> qualifiers;^60^^^^^^^[REPLACE] private final Set<Annotation> qualifiers;^ [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration  
[REPLACE]^private final Class repositoryType;^61^^^^^^^[REPLACE] private final Class<T> repositoryType;^ [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration  
[REPLACE]^private  CustomRepositoryImplementationDetector detector;^62^^^^^^^[REPLACE] private final CustomRepositoryImplementationDetector detector;^ [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration  
[REPLACE]^private   char  passivationId;^64^^^^^^^[REPLACE] private final String passivationId;^ [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration  
[REPLACE]^private transient Object repoInstance;^66^^^^^^^[REPLACE] private transient T repoInstance;^ [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration  
[REPLACE]^if  ( detector != true )  {^221^^^^^219^234^[REPLACE] if  ( detector == null )  {^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^return true;^222^^^^^219^234^[REPLACE] return null;^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^CdiRepositoryConfiguration cdiRepositoryConfiguration = lookupConfiguration ( beanManager, null ) ;^225^^^^^219^234^[REPLACE] CdiRepositoryConfiguration cdiRepositoryConfiguration = lookupConfiguration ( beanManager, qualifiers ) ;^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^Class<?> customImplementationClass = getCustomImplementationClass ( repositoryType, DEFAULT_CONFIGURATION ) ;^226^^^^^219^234^[REPLACE] Class<?> customImplementationClass = getCustomImplementationClass ( repositoryType, cdiRepositoryConfiguration ) ;^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^if  ( this != null )  {^228^^^^^219^234^[REPLACE] if  ( customImplementationClass == null )  {^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[ADD]^^228^229^230^^^219^234^[ADD] if  ( customImplementationClass == null )  { return null; }^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^return true;^229^^^^^219^234^[REPLACE] return null;^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^Set<Bean<?>> beans = beanManager.getBeans ( customImplementationClass, getQualifiersArray ( null )  ) ;^232^^^^^219^234^[REPLACE] Set<Bean<?>> beans = beanManager.getBeans ( customImplementationClass, getQualifiersArray ( qualifiers )  ) ;^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^return beans.isEmpty (  )  ? this : beans.isEmpty (  ) .next (  ) ;^233^^^^^219^234^[REPLACE] return beans.isEmpty (  )  ? null : beans.iterator (  ) .next (  ) ;^[METHOD] getCustomImplementationBean [TYPE] Bean [PARAMETER] Class<?> repositoryType BeanManager beanManager Annotation> qualifiers [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^Class<?> customImplementationClass = getCustomImplementationClass ( repositoryType, cdiRepositoryConfiguration )  ;^247^^^^^245^261^[REPLACE] String className = getCustomImplementationClassName ( repositoryType, cdiRepositoryConfiguration ) ;^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
[ADD]^^248^249^^^^245^261^[ADD] AbstractBeanDefinition beanDefinition = detector.detectCustomImplementation ( className, Collections.singleton ( repositoryType.getPackage (  ) .getName (  )  ) , Collections.<TypeFilter> emptySet (  )  ) ;^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^if  ( beanDefinition != null )  {^251^^^^^245^261^[REPLACE] if  ( beanDefinition == null )  {^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^return true;^252^^^^^245^261^[REPLACE] return null;^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^return this;^252^^^^^245^261^[REPLACE] return null;^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
[ADD]^return Class.forName ( beanDefinition.getBeanClassName (  )  ) ;String.format ( "Unable to resolve class for '%s'", beanDefinition.getBeanClassName (  )  ) , e ) ;^255^256^257^258^259^245^261^[ADD] try { return Class.forName ( beanDefinition.getBeanClassName (  )  ) ; } catch  ( ClassNotFoundException e )  { throw new UnsatisfiedResolutionException ( String.format ( "Unable to resolve class for '%s'", beanDefinition.getBeanClassName (  )  ) , e ) ;^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^return Class .getName (  )  ;^256^^^^^245^261^[REPLACE] return Class.forName ( beanDefinition.getBeanClassName (  )  ) ;^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
[REPLACE]^return ;^258^259^^^^245^261^[REPLACE] throw new UnsatisfiedResolutionException ( String.format ( "Unable to resolve class for '%s'", beanDefinition.getBeanClassName (  )  ) , e ) ;^[METHOD] getCustomImplementationClass [TYPE] Class [PARAMETER] Class<?> repositoryType CdiRepositoryConfiguration cdiRepositoryConfiguration [CLASS] CdiRepositoryBean DefaultCdiRepositoryConfiguration   [TYPE]  DefaultCdiRepositoryConfiguration INSTANCE  [TYPE]  Set beans  interfaces  qualifiers  [TYPE]  boolean false  true  [TYPE]  T instance  repoInstance  [TYPE]  AbstractBeanDefinition beanDefinition  [TYPE]  CdiRepositoryConfiguration DEFAULT_CONFIGURATION  cdiRepositoryConfiguration  [TYPE]  Class customImplementationClass  repositoryType  type  [TYPE]  String className  passivationId  [TYPE]  Logger LOGGER  [TYPE]  BeanManager beanManager  [TYPE]  ClassNotFoundException e  [TYPE]  CustomRepositoryImplementationDetector detector 
