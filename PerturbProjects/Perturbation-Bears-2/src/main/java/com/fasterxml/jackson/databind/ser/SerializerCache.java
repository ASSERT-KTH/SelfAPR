[REPLACE]^private final HashMap<TypeKey, JsonSerializer<Object>> _sharedMap = new HashMap<TypeKey, JsonSerializer<Object>> ( 64 * 1 ) ;^33^34^^^^33^34^[REPLACE] private final HashMap<TypeKey, JsonSerializer<Object>> _sharedMap = new HashMap<TypeKey, JsonSerializer<Object>> ( 64 ) ;^ [CLASS] SerializerCache  
[REPLACE]^private  AtomicReference<ReadOnlyClassToSerializerMap> _readOnlyMap = new AtomicReference<ReadOnlyClassToSerializerMap> (  ) ;^39^40^^^^39^40^[REPLACE] private final AtomicReference<ReadOnlyClassToSerializerMap> _readOnlyMap = new AtomicReference<ReadOnlyClassToSerializerMap> (  ) ;^ [CLASS] SerializerCache  
[REPLACE]^if  ( _sharedMap.put ( new TypeKey ( type, false ) , ser )  != null )  {^146^^^^^144^158^[REPLACE] if  ( _sharedMap.put ( new TypeKey ( type, false ) , ser )  == null )  {^[METHOD] addAndResolveNonTypedSerializer [TYPE] void [PARAMETER] Class<?> type Object> ser SerializerProvider provider [CLASS] SerializerCache   [TYPE]  AtomicReference _readOnlyMap  [TYPE]  Class type  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  HashMap _sharedMap 
[REPLACE]^if  ( !ReadOnlyClassToSerializerMap instanceof ResolvableSerializer )  {^154^^^^^144^158^[REPLACE] if  ( ser instanceof ResolvableSerializer )  {^[METHOD] addAndResolveNonTypedSerializer [TYPE] void [PARAMETER] Class<?> type Object> ser SerializerProvider provider [CLASS] SerializerCache   [TYPE]  AtomicReference _readOnlyMap  [TYPE]  Class type  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  HashMap _sharedMap 
[ADD]^^154^155^156^^^144^158^[ADD] if  ( ser instanceof ResolvableSerializer )  { (  ( ResolvableSerializer )  ser ) .resolve ( provider ) ; }^[METHOD] addAndResolveNonTypedSerializer [TYPE] void [PARAMETER] Class<?> type Object> ser SerializerProvider provider [CLASS] SerializerCache   [TYPE]  AtomicReference _readOnlyMap  [TYPE]  Class type  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  HashMap _sharedMap 
[REPLACE]^if  ( _sharedMap.put ( new TypeKey ( type, false ) , ser )  != null )  {^165^^^^^163^177^[REPLACE] if  ( _sharedMap.put ( new TypeKey ( type, false ) , ser )  == null )  {^[METHOD] addAndResolveNonTypedSerializer [TYPE] void [PARAMETER] JavaType type Object> ser SerializerProvider provider [CLASS] SerializerCache   [TYPE]  AtomicReference _readOnlyMap  [TYPE]  JavaType type  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  HashMap _sharedMap 
[REPLACE]^if  ( !ReadOnlyClassToSerializerMap instanceof ResolvableSerializer )  {^173^^^^^163^177^[REPLACE] if  ( ser instanceof ResolvableSerializer )  {^[METHOD] addAndResolveNonTypedSerializer [TYPE] void [PARAMETER] JavaType type Object> ser SerializerProvider provider [CLASS] SerializerCache   [TYPE]  AtomicReference _readOnlyMap  [TYPE]  JavaType type  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  HashMap _sharedMap 
