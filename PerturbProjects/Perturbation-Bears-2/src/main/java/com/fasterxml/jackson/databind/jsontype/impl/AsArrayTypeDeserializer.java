[REPLACE]^private static final long serialVersionUID ;^24^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AsArrayTypeDeserializer  
[ADD]^^86^87^88^89^90^84^117^[ADD] if  ( p.canReadTypeId (  )  )  { Object typeId = p.getTypeId (  ) ; if  ( typeId != null )  { return _deserializeWithNativeTypeId ( p, ctxt, typeId ) ; }^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( typeId == this )  {^88^^^^^84^117^[REPLACE] if  ( typeId != null )  {^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^87^^^^^84^117^[ADD] Object typeId = p.getTypeId (  ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( typeId == null )  {^88^^^^^84^117^[REPLACE] if  ( typeId != null )  {^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^88^89^90^^^84^117^[ADD] if  ( typeId != null )  { return _deserializeWithNativeTypeId ( p, ctxt, typeId ) ; }^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^boolean hadStartArray = p .getCurrentToken (  )  ;^92^^^^^84^117^[REPLACE] boolean hadStartArray = p.isExpectedStartArrayToken (  ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^93^94^^^^84^117^[ADD] String typeId = _locateTypeId ( p, ctxt ) ; JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( hadStartArray &&  (  ( p.nextToken (  )  )  !=  ( JsonToken.END_ARRAY )  )  || ( _typeIdVisible^96^97^98^99^^84^117^[REPLACE] if  ( _typeIdVisible^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^p =  JsonParserSequence.createFlattened ( null.asParser ( p ) , p ) ;^107^^^^^96^109^[REPLACE] p = JsonParserSequence.createFlattened ( tb.asParser ( p ) , p ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^TokenBuffer tb = new TokenBuffer ( this, false ) ;^103^^^^^96^109^[REPLACE] TokenBuffer tb = new TokenBuffer ( null, false ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^107^108^^^^84^117^[ADD] p = JsonParserSequence.createFlattened ( tb.asParser ( p ) , p ) ; p.nextToken (  ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^TokenBuffer tb = new TokenBuffer ( false, false ) ;^103^^^^^84^117^[REPLACE] TokenBuffer tb = new TokenBuffer ( null, false ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^Object value = null.deserialize ( p, ctxt ) ;^110^^^^^84^117^[REPLACE] Object value = deser.deserialize ( p, ctxt ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  (true ) {^112^^^^^84^117^[REPLACE] if  ( hadStartArray && p.nextToken (  )  != JsonToken.END_ARRAY )  {^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^112^113^114^115^^84^117^[ADD] if  ( hadStartArray && p.nextToken (  )  != JsonToken.END_ARRAY )  { throw ctxt.wrongTokenException ( p, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ; }^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^throw ctxt.wrongTokenException ( jp, JsonToken.START_ARRAY,  ( "need JSON Array to contain As.WRAPPER_ARRAY type information for class " +  ( baseTypeName (  )  )  )  )  ;^113^114^^^^84^117^[REPLACE] throw ctxt.wrongTokenException ( p, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^113^114^^^^84^117^[ADD] throw ctxt.wrongTokenException ( p, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return false  ;^116^^^^^84^117^[REPLACE] return value;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^121^^^^^120^140^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _defaultImpl == null )  {^124^^^^^120^140^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^127^^^^^120^140^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t = jp.getTypeId (  ) ;^130^^^^^120^140^[REPLACE] JsonToken t = jp.nextToken (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  !=  JsonToken.VALUE_STRING )  {^131^^^^^120^140^[REPLACE] if  ( t == JsonToken.VALUE_STRING )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String result = jp .getTypeId (  )  ;^132^^^^^120^140^[REPLACE] String result = jp.getText (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String result = jp.getTypeId (  ) ;^132^^^^^120^140^[REPLACE] String result = jp.getText (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _defaultImpl == null )  {^136^^^^^120^140^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.wrongTokenException ( p, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" )  ;^139^^^^^120^140^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
