[REPLACE]^private static final long serialVersionUID ;^28^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] CollectionSerializer  
[REPLACE]^if  ( _elementSerializer == this )  {^119^^^^^118^159^[REPLACE] if  ( _elementSerializer != null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^Iterator<?> it = null.iterator (  ) ;^123^^^^^118^159^[REPLACE] Iterator<?> it = value.iterator (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( !it.hasNext (   )  || _elementType.hasGenericTypes (  )  )  )  {^124^^^^^118^159^[REPLACE] if  ( !it.hasNext (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^return;^124^125^126^^^118^159^[ADD] if  ( !it.hasNext (  )  )  { return; }^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^TypeSerializer typeSer = _valueTypeSerializer  ;^127^^^^^118^159^[REPLACE] PropertySerializerMap serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^128^^^^^118^159^[ADD] final TypeSerializer typeSer = _valueTypeSerializer;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^int i = 0L;^130^^^^^118^159^[REPLACE] int i = 0;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( elem != this )  {^134^^^^^118^159^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( null != null )  {^139^^^^^134^153^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( _elementType.hasGenericTypes (   )  && ! ( it.hasNext (  )  )  )  )  {^140^^^^^134^153^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^144^^^^^140^145^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer =  _findAndAddDynamic ( null, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^141^142^^^^134^153^[REPLACE] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^144^^^^^134^153^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializers  =  serializers ;^146^^^^^134^153^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( _elementType.hasGenericTypes (   )  || ! ( it.hasNext (  )  )  )  )  {^140^^^^^134^153^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^140^141^142^143^144^134^153^[ADD] if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ; } else { serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( typeSer != null )  {^148^^^^^134^153^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^serializer.serialize ( elem, jgen, provider ) ;serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^148^149^150^151^152^134^153^[ADD] if  ( typeSer == null )  { serializer.serialize ( elem, jgen, provider ) ; } else { serializer.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer .serialize ( 0 , jgen , provider )  ;^151^^^^^148^152^[REPLACE] serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REMOVE]^serializeContents ( value, jgen, provider )  ;^151^^^^^148^152^[REMOVE] ^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializeContents ( value, jgen, provider )  ;^149^^^^^134^153^[REPLACE] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^146^^^^^134^153^[ADD] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^Class<?> cc = elem.Object (  ) ;^137^^^^^134^153^[REPLACE] Class<?> cc = elem.getClass (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^138^^^^^134^153^[ADD] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^provider .constructSpecializedType ( null )  ;^135^^^^^118^159^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^135^^^^^118^159^[ADD] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( serializer != true )  {^139^^^^^118^159^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( _elementType.hasGenericTypes (   )  || ! ( it.hasNext (  )  )  )  )  {^140^^^^^118^159^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^140^141^142^143^144^118^159^[ADD] if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ; } else { serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^144^^^^^140^145^[ADD] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^141^142^^^^118^159^[ADD] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer =  _findAndAddDynamic ( null, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^141^142^^^^118^159^[REPLACE] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^144^^^^^118^159^[ADD] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializers  =  serializers ;^146^^^^^118^159^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( ! ( it.hasNext (  )  )  && ( _elementType.hasGenericTypes (  )  )  {^140^^^^^118^159^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( _elementType.hasGenericTypes (  )  && ( typeSer != this  )  {^148^^^^^118^159^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^serializer.serialize ( elem, jgen, provider ) ;serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^148^149^150^151^152^118^159^[ADD] if  ( typeSer == null )  { serializer.serialize ( elem, jgen, provider ) ; } else { serializer.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer.serialize ( elem, jgen, provider )  ;^151^^^^^148^152^[REPLACE] serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializeContents ( value, jgen, provider )  ;^149^^^^^118^159^[REPLACE] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REMOVE]^serializeContents ( value, jgen, provider )  ;^149^^^^^118^159^[REMOVE] ^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^Object elem = it.next (  ) ;provider.defaultSerializeNull ( jgen ) ;^131^132^133^134^135^118^159^[ADD] try { do { Object elem = it.next (  ) ; if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( elem != null )  {^134^^^^^118^159^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( true != null )  {^139^^^^^134^153^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( ! ( it.hasNext (  )  )  && ( _elementType.hasGenericTypes (  )  )  {^140^^^^^134^153^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializers ;^146^^^^^134^153^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^141^142^^^^134^153^[ADD] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( typeSer != this )  {^148^^^^^134^153^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REMOVE]^serializeContents ( value, jgen, provider )  ;^149^^^^^134^153^[REMOVE] ^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^provider .constructSpecializedType ( this )  ;^135^^^^^118^159^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( serializer != null )  {^139^^^^^118^159^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^144^^^^^118^159^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( _elementType.hasGenericTypes (   )  && ! ( it.hasNext (  )  )  )  )  {^140^^^^^118^159^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( typeSer != null )  {^148^^^^^118^159^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^serializers  = null ;^146^^^^^118^159^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^Object elem = this.hasNext (  ) ;^133^^^^^118^159^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^137^138^^^^118^159^[ADD] Class<?> cc = elem.getClass (  ) ; JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^JsonSerializer<Object> serializer = serializers.serializerFor ( this ) ;^138^^^^^118^159^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[ADD]^^146^^^^^118^159^[ADD] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^Object elem = 0.hasNext (  ) ;^133^^^^^118^159^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^Class<?> cc = elem.Object (  ) ;^137^^^^^118^159^[REPLACE] Class<?> cc = elem.getClass (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^JsonSerializer<Object> serializer = serializers.serializerFor ( null ) ;^138^^^^^118^159^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  JsonSerializer serializer  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  SerializerProvider provider 
[REPLACE]^Iterator<?> it = false .isEmpty ( provider , null )  ;^165^^^^^164^187^[REPLACE] Iterator<?> it = value.iterator (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( it.next (  )  )  {^166^^^^^164^187^[REPLACE] if  ( it.hasNext (  )  )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^166^167^168^169^170^164^187^[ADD] if  ( it.hasNext (  )  )  { TypeSerializer typeSer = _valueTypeSerializer; int i = 0; do { Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != null )  {^172^^^^^164^187^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^175^^^^^172^180^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^ser.serialize ( elem, jgen, provider ) ;ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^175^176^177^178^179^172^180^[ADD] if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ; } else { ser.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider.constructSpecializedType ( jgen ) ;^173^^^^^164^187^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^175^^^^^164^187^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser .serialize ( true , jgen , provider )  ;^178^^^^^175^179^[REPLACE] ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REMOVE]^serializeContents ( value, jgen, provider )  ;^178^^^^^175^179^[REMOVE] ^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer.serialize ( elem, jgen, provider )  ;^176^^^^^164^187^[REPLACE] ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^provider.defaultSerializeNull ( jgen ) ;^171^172^173^174^175^164^187^[ADD] try { if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != false )  {^175^^^^^172^180^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^173^^^^^164^187^[ADD] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer.serializeWithType ( elem, jgen, provider, typeSer )  ;^178^^^^^175^179^[REPLACE] ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser .serializeContents ( this , jgen , provider )  ;^176^^^^^164^187^[REPLACE] ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^PropertySerializerMap serializers = _dynamicSerializers  ;^167^^^^^164^187^[REPLACE] TypeSerializer typeSer = _valueTypeSerializer;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^168^^^^^164^187^[ADD] int i = 0;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = true.next (  ) ;^170^^^^^164^187^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^178^^^^^175^179^[ADD] ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^172^173^174^175^176^164^187^[ADD] if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^175^176^177^178^179^172^180^[ADD] if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ; } else { ser.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = false.hasNext (  ) ;^170^^^^^164^187^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  long serialVersionUID  [TYPE]  int i  [TYPE]  Exception e 
