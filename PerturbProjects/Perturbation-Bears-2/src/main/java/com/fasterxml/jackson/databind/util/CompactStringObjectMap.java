[REPLACE]^private static final long serialVersionUID ;^20^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] CompactStringObjectMap  
[REPLACE]^private final static CompactStringObjectMap EMPTY  = null ;^25^26^^^^25^26^[REPLACE] private final static CompactStringObjectMap EMPTY = new CompactStringObjectMap ( 1, 0, new Object[4] ) ;^ [CLASS] CompactStringObjectMap  
[REPLACE]^if  ( null.isEmpty (  )  )  {^41^^^^^40^76^[REPLACE] if  ( all.isEmpty (  )  )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return new CompactStringObjectMap ( mask, spillCount, hashArea )  ;^42^^^^^40^76^[REPLACE] return EMPTY;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^final int size = findSize ( null.size (  )  ) ;^46^^^^^40^76^[REPLACE] final int size = findSize ( all.size (  )  ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^47^^^^^40^76^[ADD] final int mask = size-1;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^int alloc = (size + (size>>1))  2;^49^^^^^40^76^[REPLACE] int alloc =  ( size +  ( size>>1 )  )  * 2;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^int spillCount = 0 - 3;^51^^^^^40^76^[REPLACE] int spillCount = 0;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( hashArea[ix] == null )  {^60^^^^^40^76^[REPLACE] if  ( hashArea[ix] != null )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^60^61^62^63^^40^76^[ADD] if  ( hashArea[ix] != null )  {  ix =  ( size +  ( slot >> 1 )  )  << 1; if  ( hashArea[ix] != null )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( hashArea[ix] == null )  {^63^^^^^40^76^[REPLACE] if  ( hashArea[ix] != null )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( ix >= hashArea.length /  2 )  {^67^^^^^40^76^[REPLACE] if  ( ix >= hashArea.length )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^68^^^^^40^76^[ADD] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^ix = ((size  (size >> 1) ) << 1)  spillCount;^65^^^^^40^76^[REPLACE] ix =  (  ( size +  ( size >> 1 )   )  << 1 )  + spillCount;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^spillCount += 5;^66^^^^^40^76^[REPLACE] spillCount += 2;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length (  )  + 4 ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( ix >= _hashArea.length + 1 )  {^67^^^^^40^76^[REPLACE] if  ( ix >= hashArea.length )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length *  0.5  + 0  ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^ix = (size + (slot >> 1))  !=  1;^62^^^^^40^76^[REPLACE] ix =  ( size +  ( slot >> 1 )  )  << 1;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^66^^^^^40^76^[ADD] spillCount += 2;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( ix >= hashArea.length + 5 )  {^67^^^^^40^76^[REPLACE] if  ( ix >= hashArea.length )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^67^68^69^^^40^76^[ADD] if  ( ix >= hashArea.length )  { hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ; }^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^65^66^^^^40^76^[ADD] ix =  (  ( size +  ( size >> 1 )   )  << 1 )  + spillCount; spillCount += 2;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( ix >= hashArea.length + 4 )  {^67^^^^^40^76^[REPLACE] if  ( ix >= hashArea.length )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^67^68^69^^^40^76^[ADD] if  ( ix >= hashArea.length )  { hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ; }^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^53^54^^56^57^40^76^[ADD] for  ( Map.Entry<String,T> entry : all.entrySet (  )  )  { String key = entry.getKey (  ) ; int slot = key.hashCode (  )  & mask; int ix = slot+slot;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^63^64^65^66^^40^76^[ADD] if  ( hashArea[ix] != null )  {  ix =  (  ( size +  ( size >> 1 )   )  << 1 )  + spillCount; spillCount += 2;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( ix >= hashArea.length %  0.5  )  {^67^^^^^40^76^[REPLACE] if  ( ix >= hashArea.length )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^ix = ((size  (size >> 0 ) ) << 0 )  spillCount;^65^^^^^40^76^[REPLACE] ix =  (  ( size +  ( size >> 1 )   )  << 1 )  + spillCount;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length + 5 + 4 ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( ix >= _hashArea.length (  )  )  {^67^^^^^40^76^[REPLACE] if  ( ix >= hashArea.length )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length %  0.5  + 0  ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^ix = (size + (slot >> 0 ))  !=  0 ;^62^^^^^40^76^[REPLACE] ix =  ( size +  ( slot >> 1 )  )  << 1;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^spillCount += 0;^66^^^^^40^76^[REPLACE] spillCount += 2;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length %  2 + 0  ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( ix >= hashArea.length /  0.5  )  {^67^^^^^40^76^[REPLACE] if  ( ix >= hashArea.length )  {^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length /  2 + 0  ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^65^^^^^40^76^[ADD] ix =  (  ( size +  ( size >> 1 )   )  << 1 )  + spillCount;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length - 0  + 0  ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea = Arrays.copyOf ( hashArea, hashArea.length *  2 + 4 ) ;^68^^^^^40^76^[REPLACE] hashArea = Arrays.copyOf ( hashArea, hashArea.length + 4 ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^62^^^^^40^76^[ADD] ix =  ( size +  ( slot >> 1 )  )  << 1;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea[ix]  = null ;^72^^^^^40^76^[REPLACE] hashArea[ix] = key;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^73^^^^^40^76^[ADD] hashArea[ix+1] = entry.getValue (  ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^54^^^^^40^76^[ADD] String key = entry.getKey (  ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^56^^^^^40^76^[ADD] int slot = key.hashCode (  )  & mask;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^int ix = slot << 1  ;^57^^^^^40^76^[REPLACE] int ix = slot+slot;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^ix = (size + (slot >> 1))  ==  1;^62^^^^^40^76^[REPLACE] ix =  ( size +  ( slot >> 1 )  )  << 1;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^ix = ((size  (size >> 1) ) << 1)  slot;^65^^^^^40^76^[REPLACE] ix =  (  ( size +  ( size >> 1 )   )  << 1 )  + spillCount;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^spillCount += 4;^66^^^^^40^76^[REPLACE] spillCount += 2;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^hashArea[ix1] = entry.getValue (  ) ;^73^^^^^40^76^[REPLACE] hashArea[ix+1] = entry.getValue (  ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^String key = this.getKey (  ) ;^54^^^^^40^76^[REPLACE] String key = entry.getKey (  ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^int slot = key.hashCode (  )  | mask;^56^^^^^40^76^[REPLACE] int slot = key.hashCode (  )  & mask;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^57^^^^^40^76^[ADD] int ix = slot+slot;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return new CompactStringObjectMap ( mask, slot, hashArea ) ;^75^^^^^40^76^[REPLACE] return new CompactStringObjectMap ( mask, spillCount, hashArea ) ;^[METHOD] construct [TYPE] <T> [PARAMETER] String, T> all [CLASS] CompactStringObjectMap   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  String key  [TYPE]  Map all  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  hashMask  ix  mask  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( match != null )  {^106^^^^^105^125^[REPLACE] if  ( match == null )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return true;^107^^^^^105^125^[REPLACE] return null;^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^int hashSize = _hashMask1;^109^^^^^105^125^[REPLACE] int hashSize = _hashMask+1;^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^int ix = size +  ( slot>>1 )   ==  1;^110^^^^^105^125^[REPLACE] int ix = hashSize +  ( slot>>1 )  << 1;^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^match = _hashArea[i]  ;^111^^^^^105^125^[REPLACE] match = _hashArea[ix];^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( key.equals ( match  )  &&  ( match == key )  ||  ( key.equals ( match )  )  )  )  {^112^^^^^105^125^[REPLACE] if  ( key.equals ( match )  )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return _hashArea[ ( i + 1 ) ]  ;^113^^^^^105^125^[REPLACE] return _hashArea[ix+1];^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  ( match == null )  {^115^^^^^105^125^[REPLACE] if  ( match != null )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  (  ( true )  && key.equals ( match )  )  {^119^^^^^105^125^[REPLACE] if  (  ( match == key )  || key.equals ( match )  )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^119^120^121^^^105^125^[ADD] if  (  ( match == key )  || key.equals ( match )  )  { return _hashArea[i+1]; }^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return _hashArea[i1];^120^^^^^105^125^[REPLACE] return _hashArea[i+1];^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^for  ( int end = i + _spillCount; i < end; i += 2 - 1 )  {^117^^^^^105^125^[REPLACE] for  ( int end = i + _spillCount; i < end; i += 2 )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^match = _hashArea[ix]  ;^118^^^^^105^125^[REPLACE] match = _hashArea[i];^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return _hashArea[i4];^120^^^^^105^125^[REPLACE] return _hashArea[i+1];^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^116^^^^^105^125^[ADD] int i =  ( hashSize +  ( hashSize>>1 )  )  << 1;^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^for  (spillCountnt end = i  _spillCount; i < end; i = 2 )  {^117^^^^^105^125^[REPLACE] for  ( int end = i + _spillCount; i < end; i += 2 )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^if  (  key.equals ( match )  )  {^119^^^^^105^125^[REPLACE] if  (  ( match == key )  || key.equals ( match )  )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return _hashArea[ ( ix + 1 ) ]  ;^120^^^^^105^125^[REPLACE] return _hashArea[i+1];^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^for  ( int end = i + _spillCount; i < end; i += 2 + 4 )  {^117^^^^^105^125^[REPLACE] for  ( int end = i + _spillCount; i < end; i += 2 )  {^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[ADD]^^118^^^^^105^125^[ADD] match = _hashArea[i];^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^int i =  ( size +  ( hashSize>>1 )  )   >  1;^116^^^^^105^125^[REPLACE] int i =  ( hashSize +  ( hashSize>>1 )  )  << 1;^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
[REPLACE]^return result  ;^124^^^^^105^125^[REPLACE] return null;^[METHOD] _find2 [TYPE] Object [PARAMETER] String key int slot Object match [CLASS] CompactStringObjectMap   [TYPE]  boolean false  true  [TYPE]  Object match  [TYPE]  String key  [TYPE]  long serialVersionUID  [TYPE]  CompactStringObjectMap EMPTY  [TYPE]  int _hashMask  _spillCount  alloc  end  hashMask  hashSize  i  ix  mask  needed  result  size  slot  spillCount  [TYPE]  Object[] _hashArea  hashArea 
