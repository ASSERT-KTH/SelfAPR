[REPLACE]^private static final  short  serialVersionUID = 1L;^14^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^protected   byte  _input;^100^^^^^^^[REPLACE] protected final String _input;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^protected  short  _index;^102^^^^^^^[REPLACE] protected int _index;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^if  ( !tokens.hasMoreTokens (   )  && "<".equals ( token )  )  )  {^44^^^^^43^61^[REPLACE] if  ( !tokens.hasMoreTokens (  )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REMOVE]^if  ( tokens.hasMoreTokens (  )  )  {     throw _problem ( tokens, "Unexpected tokens after complete type" ) ; }^44^^^^^43^61^[REMOVE] ^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^throw _problem ( tokens, "Unexpected tokens after complete type" )  ;^45^^^^^43^61^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^_problem ( tokens, "Unexpected tokens after complete type" )  ;^45^^^^^43^61^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[ADD]^^45^^^^^43^61^[ADD] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^return ;^45^^^^^43^61^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^Class<?> base = findClass ( tokens .hasMoreTokens (  )  , tokens ) ;^47^^^^^43^61^[REPLACE] Class<?> base = findClass ( tokens.nextToken (  ) , tokens ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^if  ( tokens.nextToken (  )  )  {^50^^^^^43^61^[REPLACE] if  ( tokens.hasMoreTokens (  )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REMOVE]^if  ( "<".equals ( token )  )  {     JavaType> parameterTypes = parseTypes ( tokens ) ;     TypeBindings b = create ( base, parameterTypes ) ;     return _factory._fromClass ( null, base, b ) ; }^50^^^^^43^61^[REMOVE] ^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^if  ( tokens.hasMoreTokens (  )  && ( "<".equals ( token )  )  {^52^^^^^43^61^[REPLACE] if  ( "<".equals ( token )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^return _factory._fromClass ( true, base, b ) ;^55^^^^^43^61^[REPLACE] return _factory._fromClass ( null, base, b ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^JavaType type = parseType ( tokens )  ;^53^^^^^43^61^[REPLACE] List<JavaType> parameterTypes = parseTypes ( tokens ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^TypeBindings b = TypeBindings.create ( this, parameterTypes ) ;^54^^^^^43^61^[REPLACE] TypeBindings b = TypeBindings.create ( base, parameterTypes ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^return _factory._fromClass ( null, base, null )  ;^55^^^^^43^61^[REPLACE] return _factory._fromClass ( null, base, b ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^String token = tokens.hasMoreTokens (  ) ;^51^^^^^43^61^[REPLACE] String token = tokens.nextToken (  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^TypeBindings b = TypeBindings.create ( base, this ) ;^54^^^^^43^61^[REPLACE] TypeBindings b = TypeBindings.create ( base, parameterTypes ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^if  ( "<".substring ( token )  )  {^52^^^^^43^61^[REPLACE] if  ( "<".equals ( token )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^return _factory._fromClass ( this, base, b ) ;^55^^^^^43^61^[REPLACE] return _factory._fromClass ( null, base, b ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[ADD]^^51^^^^^43^61^[ADD] String token = tokens.nextToken (  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[ADD]^^53^54^^^^43^61^[ADD] List<JavaType> parameterTypes = parseTypes ( tokens ) ; TypeBindings b = TypeBindings.create ( base, parameterTypes ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^TypeBindings b = TypeBindings.create ( false, parameterTypes ) ;^54^^^^^43^61^[REPLACE] TypeBindings b = TypeBindings.create ( base, parameterTypes ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^return _factory._fromClass ( false, base, false ) ;^60^^^^^43^61^[REPLACE] return _factory._fromClass ( null, base, null ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  List parameterTypes  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  TypeBindings b 
[REPLACE]^private final String _input;^100^^^^^^^[REPLACE] protected final String _input;^[METHOD] getRemainingInput [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^protected  int  _pushbackToken;^104^^^^^^^[REPLACE] protected String _pushbackToken;^[METHOD] getRemainingInput [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
