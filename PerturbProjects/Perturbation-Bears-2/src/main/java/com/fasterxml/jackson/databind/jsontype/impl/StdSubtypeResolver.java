[REPLACE]^private static final long serialVersionUID ;^19^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] StdSubtypeResolver  
[REPLACE]^protected LinkedHashSet<Collection _registeredSubtypes;^21^^^^^^^[REPLACE] protected LinkedHashSet<NamedType> _registeredSubtypes;^ [CLASS] StdSubtypeResolver  
[REPLACE]^final AnnotationIntrospector ai = false.getAnnotationIntrospector (  ) ;^60^^^^^59^92^[REPLACE] final AnnotationIntrospector ai = config.getAnnotationIntrospector (  ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^Class<?> rawBase =  ( baseType != null )  ? property.getRawType (  )  : baseType.getRawClass (  ) ;^62^^^^^59^92^[REPLACE] Class<?> rawBase =  ( baseType == null )  ? property.getRawType (  )  : baseType.getRawClass (  ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType, NamedType> subtypes = new NamedType, NamedType> (  )  ;^64^^^^^59^92^[REPLACE] HashMap<NamedType, NamedType> collected = new HashMap<NamedType, NamedType> (  ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( _registeredSubtypes == null  && rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^66^^^^^59^92^[REPLACE] if  ( _registeredSubtypes != null )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawBase.isAssignableFrom ( subtype.getName (  )  )  )  {^69^^^^^59^92^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;_collectAndResolve ( curr, subtype, config, ai, collected ) ;^69^70^71^72^^59^92^[ADD] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolve ( curr, subtype, config, ai, collected ) ; }^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( rootType.getType (  ) , config ) ;^70^^^^^59^92^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^67^^^^^66^74^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , config )  ;^70^^^^^66^74^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( this.isAssignableFrom ( subtype.getType (  )  )  )  {^69^^^^^59^92^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , 1 ) ;^70^^^^^59^92^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^67^68^69^70^71^66^74^[ADD] for  ( NamedType subtype : _registeredSubtypes )  {  if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolve ( curr, subtype, config, ai, collected ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( rootType.getType (  ) , config ) ;^70^^^^^66^74^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType> st = ai.findSubtypes ( annotatedType )  ;^77^^^^^59^92^[REPLACE] Collection<NamedType> st = ai.findSubtypes ( property ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( st == true )  {^78^^^^^59^92^[REPLACE] if  ( st != null )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^78^79^80^81^82^59^92^[ADD] if  ( st != null )  { for  ( NamedType nt : st )  { AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , config ) ; _collectAndResolve ( ac, nt, config, ai, collected ) ; }^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^79^80^81^82^^78^83^[ADD] for  ( NamedType nt : st )  { AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , config ) ; _collectAndResolve ( ac, nt, config, ai, collected ) ; }^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getName (  ) , config ) ;^80^^^^^78^83^[REPLACE] AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType nt : this )  {^79^^^^^78^83^[REPLACE] for  ( NamedType nt : st )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^79^^^^^78^83^[REPLACE] for  ( NamedType nt : st )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , null ) ;^80^^^^^78^83^[REPLACE] AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType rootType = new NamedType ( 1, this ) ;^85^^^^^59^92^[REPLACE] NamedType rootType = new NamedType ( rawBase, null ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( 0, config ) ;^86^^^^^59^92^[REPLACE] AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( rawBase, config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^_collectAndResolve ( curr, subtype, config, ai, collected )  ;^89^^^^^59^92^[REPLACE] _collectAndResolve ( ac, rootType, config, ai, collected ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^return  new NamedType> (  )   ) ;^91^^^^^59^92^[REPLACE] return new ArrayList<NamedType> ( collected.values (  )  ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^final AnnotationIntrospector ai = this.getAnnotationIntrospector (  ) ;^98^^^^^97^115^[REPLACE] final AnnotationIntrospector ai = config.getAnnotationIntrospector (  ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^99^^^^^97^115^[ADD] HashMap<NamedType, NamedType> subtypes = new HashMap<NamedType, NamedType> (  ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( _registeredSubtypes == false )  {^101^^^^^97^115^[REPLACE] if  ( _registeredSubtypes != null )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^Class<?> rawBase = type.getRawType (  ) ;^101^102^103^^^97^115^[ADD] if  ( _registeredSubtypes != null )  { Class<?> rawBase = type.getRawType (  ) ; for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawBase.isAssignableFrom ( rootType.getType (  )  )  )  {^105^^^^^97^115^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , true ) ;^106^^^^^97^115^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^103^^^^^101^110^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^106^^^^^101^110^[ADD] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawBase.isAssignableFrom ( subtype.getName (  )  )  )  {^105^^^^^97^115^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;_collectAndResolve ( curr, subtype, config, ai, subtypes ) ;^105^106^107^108^^97^115^[ADD] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolve ( curr, subtype, config, ai, subtypes ) ; }^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( rootType.getType (  ) , config ) ;^106^^^^^97^115^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType rootType : _registeredSubtypes )  {^103^^^^^101^110^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^103^104^105^106^107^101^110^[ADD] for  ( NamedType subtype : _registeredSubtypes )  {  if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolve ( curr, subtype, config, ai, subtypes ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType[] types = new length]  ;^112^^^^^97^115^[REPLACE] NamedType rootType = new NamedType ( type.getRawType (  ) , null ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^_collectAndResolve ( type, rootType, config, ai, this ) ;^113^^^^^97^115^[REPLACE] _collectAndResolve ( type, rootType, config, ai, subtypes ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^return  new NamedType> (  )   ) ;^114^^^^^97^115^[REPLACE] return new ArrayList<NamedType> ( subtypes.values (  )  ) ;^[METHOD] collectAndResolveSubtypesByClass [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^final AnnotationIntrospector ai = null.getAnnotationIntrospector (  ) ;^127^^^^^126^159^[REPLACE] final AnnotationIntrospector ai = config.getAnnotationIntrospector (  ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[ADD]^^128^^^^^126^159^[ADD] Class<?> rawBase =  ( baseType == null )  ? property.getRawType (  )  : baseType.getRawClass (  ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^NamedType, NamedType> collected = new NamedType, NamedType> (  )  ;^132^^^^^126^159^[REPLACE] Map<String,NamedType> byName = new LinkedHashMap<String,NamedType> (  ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^NamedType rootType = new NamedType ( rawBase, true ) ;^135^^^^^126^159^[REPLACE] NamedType rootType = new NamedType ( rawBase, null ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^AnnotatedClass curr = constructWithoutSuperTypes ( subtype.getType (  ) , config )  ;^136^^^^^126^159^[REPLACE] AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( rawBase, config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^_collectAndResolve ( ac, rootType, config, ai, collected )  ;^137^^^^^126^159^[REPLACE] _collectAndResolveByTypeId ( ac, rootType, config, typesHandled, byName ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[ADD]^^140^^^^^126^159^[ADD] Collection<NamedType> st = ai.findSubtypes ( property ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^if  ( st == null )  {^141^^^^^126^159^[REPLACE] if  ( st != null )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[ADD]^^142^143^144^145^^141^146^[ADD] for  ( NamedType nt : st )  { ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , config ) ; _collectAndResolveByTypeId ( ac, nt, config, typesHandled, byName ) ; }^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^ac =  AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^143^^^^^141^146^[REPLACE] ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^NamedType type  ;^142^^^^^141^146^[REPLACE] for  ( NamedType nt : st )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^if  ( _registeredSubtypes == false )  {^149^^^^^126^159^[REPLACE] if  ( _registeredSubtypes != null )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^if  ( rawBase.isAssignableFrom ( subtype.getName (  )  )  )  {^152^^^^^126^159^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , false ) ;^153^^^^^126^159^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[ADD]^^150^151^152^153^154^149^157^[ADD] for  ( NamedType subtype : _registeredSubtypes )  {  if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolveByTypeId ( curr, subtype, config, typesHandled, byName ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , config )  ;^153^^^^^149^157^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^if  ( rawBase.isAssignableFrom ( rootType.getType (  )  )  )  {^152^^^^^126^159^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[ADD]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;_collectAndResolveByTypeId ( curr, subtype, config, typesHandled, byName ) ;^152^153^154^155^^126^159^[ADD] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolveByTypeId ( curr, subtype, config, typesHandled, byName ) ; }^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , true ) ;^153^^^^^126^159^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^NamedType type  ;^150^^^^^149^157^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^return _combineNamedAndUnnamed ( typesHandled, false ) ;^158^^^^^126^159^[REPLACE] return _combineNamedAndUnnamed ( typesHandled, byName ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedMember property JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  long serialVersionUID  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass ac  curr  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  Map byName 
[REPLACE]^NamedType, NamedType> collected = new NamedType, NamedType> (  )  ;^166^^^^^164^182^[REPLACE] Map<String,NamedType> byName = new LinkedHashMap<String,NamedType> (  ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType[] types = new length]  ;^168^^^^^164^182^[REPLACE] NamedType rootType = new NamedType ( type.getRawType (  ) , null ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^_collectAndResolve ( type, rootType, config, ai, subtypes )  ;^169^^^^^164^182^[REPLACE] _collectAndResolveByTypeId ( type, rootType, config, typesHandled, byName ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^^169^^^^^164^182^[ADD] _collectAndResolveByTypeId ( type, rootType, config, typesHandled, byName ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( _registeredSubtypes == null  || rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^171^^^^^164^182^[REPLACE] if  ( _registeredSubtypes != null )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^Class<?> rawBase = type.getRawType (  ) ;^171^172^173^^^164^182^[ADD] if  ( _registeredSubtypes != null )  { Class<?> rawBase = type.getRawType (  ) ; for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawBase.isAssignableFrom ( rootType.getType (  )  )  )  {^175^^^^^164^182^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;_collectAndResolveByTypeId ( curr, subtype, config, typesHandled, byName ) ;^175^176^177^178^^164^182^[ADD] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolveByTypeId ( curr, subtype, config, typesHandled, byName ) ; }^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , config )  ;^176^^^^^164^182^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^^172^^^^^171^180^[ADD] Class<?> rawBase = type.getRawType (  ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^173^^^^^171^180^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , config )  ;^176^^^^^171^180^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawBase.isAssignableFrom ( subtype .getName (  )   )  )  {^175^^^^^164^182^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( rootType.getType (  ) , config ) ;^176^^^^^164^182^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^return _combineNamedAndUnnamed ( typesHandled, this ) ;^181^^^^^164^182^[REPLACE] return _combineNamedAndUnnamed ( typesHandled, byName ) ;^[METHOD] collectAndResolveSubtypesByTypeId [TYPE] Collection [PARAMETER] MapperConfig<?> config AnnotatedClass type [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  NamedType rootType  subtype  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( namedType.hasName (  )  )  {^220^^^^^219^247^[REPLACE] if  ( !namedType.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( name == null )  {^222^^^^^219^247^[REPLACE] if  ( name != null )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^222^223^224^^^219^247^[ADD] if  ( name != null )  { namedType = new NamedType ( namedType.getType (  ) , name ) ; }^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^namedType =  new NamedType ( subtype.getType (  ) , name ) ;^223^^^^^219^247^[REPLACE] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^String name = ai.findTypeName ( subtypeClass ) ;^221^^^^^219^247^[REPLACE] String name = ai.findTypeName ( annotatedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( name == false )  {^222^^^^^219^247^[REPLACE] if  ( name != null )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^namedType =  new NamedType ( null.getType (  ) , name ) ;^223^^^^^219^247^[REPLACE] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^221^^^^^219^247^[ADD] String name = ai.findTypeName ( annotatedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( collectedSubtypes.containsKey ( subtype )  )  {^228^^^^^219^247^[REPLACE] if  ( collectedSubtypes.containsKey ( namedType )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( namedType.hasName (   )  && collectedSubtypes.containsKey ( namedType )  )  )  {^230^^^^^219^247^[REPLACE] if  ( namedType.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^NamedType prev = collectedSubtypes.get ( namedType ) ;collectedSubtypes.put ( namedType, namedType ) ;^230^231^232^233^234^219^247^[ADD] if  ( namedType.hasName (  )  )  { NamedType prev = collectedSubtypes.get ( namedType ) ; if  ( !prev.hasName (  )  )  { collectedSubtypes.put ( namedType, namedType ) ; }^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( prev.hasName (  )  )  {^232^^^^^219^247^[REPLACE] if  ( !prev.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^collectedSubtypes.containsKey ( namedType )  ;^233^^^^^219^247^[REPLACE] collectedSubtypes.put ( namedType, namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^233^^^^^219^247^[ADD] collectedSubtypes.put ( namedType, namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^231^^^^^219^247^[ADD] NamedType prev = collectedSubtypes.get ( namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !prev .getName (  )   )  {^232^^^^^219^247^[REPLACE] if  ( !prev.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^collectedSubtypes.put ( subtype, namedType ) ;^233^^^^^219^247^[REPLACE] collectedSubtypes.put ( namedType, namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType prev = collectedSubtypes.get ( subtype ) ;^231^^^^^219^247^[REPLACE] NamedType prev = collectedSubtypes.get ( namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( namedType.hasName (   )  || collectedSubtypes.containsKey ( namedType )  )  )  {^230^^^^^219^247^[REPLACE] if  ( namedType.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !prev.hasName (   )  && collectedSubtypes.containsKey ( namedType )  )  )  {^232^^^^^219^247^[REPLACE] if  ( !prev.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !prev.NamedType (  )  )  {^232^^^^^219^247^[REPLACE] if  ( !prev.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType prev = null.get ( namedType ) ;^231^^^^^219^247^[REPLACE] NamedType prev = collectedSubtypes.get ( namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^collectedSubtypes.containsKey ( namedType )  ;^239^^^^^219^247^[REPLACE] collectedSubtypes.put ( namedType, namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType> st = ai.findSubtypes ( property )  ;^240^^^^^219^247^[REPLACE] Collection<NamedType> st = ai.findSubtypes ( annotatedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( st == null && !st.isEmpty (  )  )  {^241^^^^^219^247^[REPLACE] if  ( st != null && !st.isEmpty (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^241^242^243^244^245^219^247^[ADD] if  ( st != null && !st.isEmpty (  )  )  { for  ( NamedType subtype : st )  { AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolve ( subtypeClass, subtype, config, ai, collectedSubtypes ) ; }^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType namedType : st )  {^242^^^^^241^246^[REPLACE] for  ( NamedType subtype : st )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^242^^^^^241^246^[REPLACE] for  ( NamedType subtype : st )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass namedTypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getName (  ) , config ) ;^243^^^^^241^246^[REPLACE] AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^243^244^^^^241^246^[ADD] AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolve ( subtypeClass, subtype, config, ai, collectedSubtypes ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^final AnnotationIntrospector ai = false.getAnnotationIntrospector (  ) ;^257^^^^^256^278^[REPLACE] final AnnotationIntrospector ai = config.getAnnotationIntrospector (  ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( namedType.hasName (   )  && typesHandled.add ( namedType.getType (  )  )  )  )  {^258^^^^^256^278^[REPLACE] if  ( !namedType.hasName (  )  )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( name == null )  {^260^^^^^256^278^[REPLACE] if  ( name != null )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^namedType =  new NamedType ( null.getType (  ) , name ) ;^261^^^^^256^278^[REPLACE] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^namedType =  new NamedType ( subtype.getType (  ) , name ) ;^261^^^^^256^278^[REPLACE] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^String name = ai .findSubtypes ( this )  ;^259^^^^^256^278^[REPLACE] String name = ai.findTypeName ( annotatedType ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^^261^^^^^256^278^[ADD] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^String name = ai .findSubtypes ( false )  ;^259^^^^^256^278^[REPLACE] String name = ai.findTypeName ( annotatedType ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( namedType .getName (  )   )  {^264^^^^^256^278^[REPLACE] if  ( namedType.hasName (  )  )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^byName.put ( namedType.getType (  ) , namedType ) ;^265^^^^^256^278^[REPLACE] byName.put ( namedType.getName (  ) , namedType ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^byName.put ( subtype.getType (  ) , namedType ) ;^265^^^^^256^278^[REPLACE] byName.put ( namedType.getName (  ) , namedType ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( typesHandled.add ( namedType.getType (   )  || namedType.hasName (  )  )  )  )  {^269^^^^^256^278^[REPLACE] if  ( typesHandled.add ( namedType.getType (  )  )  )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( st == null && !st.isEmpty (  )  )  {^271^^^^^256^278^[REPLACE] if  ( st != null && !st.isEmpty (  )  )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^^271^272^273^274^275^256^278^[ADD] if  ( st != null && !st.isEmpty (  )  )  { for  ( NamedType subtype : st )  { AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolveByTypeId ( subtypeClass, subtype, config, typesHandled, byName ) ; }^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^^272^273^274^275^^271^276^[ADD] for  ( NamedType subtype : st )  { AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ; _collectAndResolveByTypeId ( subtypeClass, subtype, config, typesHandled, byName ) ; }^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass namedTypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^273^^^^^271^276^[REPLACE] AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType subtype : null )  {^272^^^^^271^276^[REPLACE] for  ( NamedType subtype : st )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[ADD]^^270^^^^^271^276^[ADD] Collection<NamedType> st = ai.findSubtypes ( annotatedType ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , this ) ;^273^^^^^271^276^[REPLACE] AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType namedType : st )  {^272^^^^^271^276^[REPLACE] for  ( NamedType subtype : st )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^272^^^^^271^276^[REPLACE] for  ( NamedType subtype : st )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType subtype : this )  {^272^^^^^271^276^[REPLACE] for  ( NamedType subtype : st )  {^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType> st = ai.findSubtypes ( property )  ;^270^^^^^271^276^[REPLACE] Collection<NamedType> st = ai.findSubtypes ( annotatedType ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = constructWithoutSuperTypes ( subtype.getType (  ) , config )  ;^273^^^^^271^276^[REPLACE] AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , config ) ;^[METHOD] _collectAndResolveByTypeId [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config Class<?>> typesHandled NamedType> byName [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  Set typesHandled  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  NamedType namedType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  Map byName  [TYPE]  long serialVersionUID 
