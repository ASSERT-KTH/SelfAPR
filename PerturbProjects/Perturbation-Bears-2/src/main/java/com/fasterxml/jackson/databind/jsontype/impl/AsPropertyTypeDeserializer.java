[REPLACE]^private static final long serialVersionUID = 1;^23^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AsPropertyTypeDeserializer  
[REPLACE]^protected  Object _inclusion;^25^^^^^^^[REPLACE] protected final As _inclusion;^ [CLASS] AsPropertyTypeDeserializer  
[REPLACE]^if  ( typeId == null )  {^65^^^^^61^100^[REPLACE] if  ( typeId != null )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return _deserializeTypedForId ( p, ctxt, tb )  ;^66^^^^^61^100^[REPLACE] return _deserializeWithNativeTypeId ( p, ctxt, typeId ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^Object typeId = p.getText (  ) ;^64^^^^^61^100^[REPLACE] Object typeId = p.getTypeId (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( typeId == true )  {^65^^^^^61^100^[REPLACE] if  ( typeId != null )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^71^^^^^61^100^[ADD] JsonToken t = p.getCurrentToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( t  !=  JsonToken.START_OBJECT )  {^72^^^^^61^100^[REPLACE] if  ( t == JsonToken.START_OBJECT )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^t = p.nextToken (  ) ;^72^73^74^^^61^100^[ADD] if  ( t == JsonToken.START_OBJECT )  { t = p.nextToken (  ) ; }^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^74^75^76^^^61^100^[ADD] ^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( p, ctxt, true ) ;^82^^^^^61^100^[REPLACE] return _deserializeTypedUsingDefaultImpl ( p, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( p, ctxt, false ) ;^82^^^^^61^100^[REPLACE] return _deserializeTypedUsingDefaultImpl ( p, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^73^^^^^61^100^[ADD] t = p.nextToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( p, ctxt, this ) ;^82^^^^^61^100^[REPLACE] return _deserializeTypedUsingDefaultImpl ( p, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^TokenBuffer tb = false;^85^^^^^61^100^[REPLACE] TokenBuffer tb = null;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( name.equals ( _typePropertyName  )  && t !=  ( JsonToken.FIELD_NAME )  )  )  {^90^^^^^61^100^[REPLACE] if  ( name.equals ( _typePropertyName )  )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return _deserializeWithNativeTypeId ( p, ctxt, typeId )  ;^91^^^^^61^100^[REPLACE] return _deserializeTypedForId ( p, ctxt, tb ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( tb != null )  {^93^^^^^61^100^[REPLACE] if  ( tb == null )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^tb =  new TokenBuffer ( null, ctxt ) ;^94^^^^^61^100^[REPLACE] tb = new TokenBuffer ( p, ctxt ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^87^88^89^90^91^61^100^[ADD] for  ( ; t == JsonToken.FIELD_NAME; t = p.nextToken (  )  )  { String name = p.getCurrentName (  ) ; p.nextToken (  ) ; if  ( name.equals ( _typePropertyName )  )  { return _deserializeTypedForId ( p, ctxt, tb ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^String name = p.getCurrentToken (  ) ;^88^^^^^61^100^[REPLACE] String name = p.getCurrentName (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( p, ctxt, null )  ;^99^^^^^61^100^[REPLACE] return _deserializeTypedUsingDefaultImpl ( p, ctxt, tb ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object typeId  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^String typeId = p.getTypeId (  ) ;^105^^^^^104^121^[REPLACE] String typeId = p.getText (  ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^Object> deser = _findDefaultImplDeserializer ( ctxt )  ;^106^^^^^104^121^[REPLACE] JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( tb != null )  {^108^^^^^104^121^[REPLACE] if  ( tb == null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^tb =  new TokenBuffer ( null, ctxt ) ;^109^^^^^104^121^[REPLACE] tb = new TokenBuffer ( p, ctxt ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^109^^^^^104^121^[ADD] tb = new TokenBuffer ( p, ctxt ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( tb != false )  {^108^^^^^104^121^[REPLACE] if  ( tb == null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^tb = new TokenBuffer ( p, ctxt ) ;^108^109^110^^^104^121^[ADD] if  ( tb == null )  { tb = new TokenBuffer ( p, ctxt ) ; }^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( tb == null )  {^114^^^^^104^121^[REPLACE] if  ( tb != null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^115^^^^^104^121^[ADD] p = JsonParserSequence.createFlattened ( tb.asParser ( p ) , p ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^p.getTypeId (  ) ;^118^^^^^104^121^[REPLACE] p.nextToken (  ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return null.deserialize ( p, ctxt ) ;^120^^^^^104^121^[REPLACE] return deser.deserialize ( p, ctxt ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^128^^^^^126^149^[ADD] JsonDeserializer<Object> deser = _findDefaultImplDeserializer ( ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( deser == null )  {^129^^^^^126^149^[REPLACE] if  ( deser != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( tb == null )  {^130^^^^^126^149^[REPLACE] if  ( tb != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^130^131^132^^134^126^149^[ADD] if  ( tb != null )  { tb.writeEndObject (  ) ; p = tb.asParser ( p ) ; p.nextToken (  ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^132^^^^^126^149^[ADD] p = tb.asParser ( p ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^p =  null.asParser ( p ) ;^132^^^^^126^149^[REPLACE] p = tb.asParser ( p ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return super.deserializeTypedFromAny ( p, ctxt )  ;^136^^^^^126^149^[REPLACE] return deser.deserialize ( p, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return false.deserialize ( p, ctxt ) ;^136^^^^^126^149^[REPLACE] return deser.deserialize ( p, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[ADD]^^139^^^^^126^149^[ADD] Object result = TypeDeserializer.deserializeIfNatural ( p, ctxt, _baseType ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( result == this )  {^140^^^^^126^149^[REPLACE] if  ( result != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^if  ( p.getCurrentToken (  )   !=  JsonToken.START_ARRAY )  {^144^^^^^126^149^[REPLACE] if  ( p.getCurrentToken (  )  == JsonToken.START_ARRAY )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return _deserializeTypedForId ( p, ctxt, tb )  ;^145^^^^^126^149^[REPLACE] return super.deserializeTypedFromAny ( p, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return super.deserializeTypedFromArray ( p, ctxt ) ;^145^^^^^126^149^[REPLACE] return super.deserializeTypedFromAny ( p, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^return ;^147^148^^^^126^149^[REPLACE] throw ctxt.wrongTokenException ( p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
[REPLACE]^throw ctxt.wrongTokenException ( p, JsonToken.FIELD_NAME, "missing property '"_typePropertyName"' that is to contain type id   ( for class "baseTypeName (  ) " ) " ) ;^147^148^^^^126^149^[REPLACE] throw ctxt.wrongTokenException ( p, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser p DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  As _inclusion  inclusion  [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser p 
