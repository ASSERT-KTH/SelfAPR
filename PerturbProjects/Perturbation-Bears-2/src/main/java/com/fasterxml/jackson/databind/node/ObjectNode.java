[REPLACE]^protected final Map<String, Object _children;^21^^^^^^^[REPLACE] protected final Map<String, JsonNode> _children;^ [CLASS] ObjectNode  
[REPLACE]^if  ( ! ! ( o instanceof ObjectNode )  )  {^164^^^^^163^183^[REPLACE] if  ( ! ( o instanceof ObjectNode )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^return true;^165^^^^^163^183^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^ObjectNode ret = new ObjectNode ( _nodeFactory )  ;^167^^^^^163^183^[REPLACE] ObjectNode other =  ( ObjectNode )  o;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^String, JsonNode> entry  ;^168^^^^^163^183^[REPLACE] Map<String, JsonNode> m1 = _children;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^String, JsonNode> entry  ;^169^^^^^163^183^[REPLACE] Map<String, JsonNode> m2 = other._children;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^final int len = m1.put (  ) ;^171^^^^^163^183^[REPLACE] final int len = m1.size (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^if  ( m2.equals (  )  *  0.5  != len )  {^172^^^^^163^183^[REPLACE] if  ( m2.size (  )  != len )  {^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^return true;^173^^^^^163^183^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^if  (  ( v2 != false )  || !entry.getValue (  ) .equals ( comparator, v2 )  )  {^178^^^^^163^183^[REPLACE] if  (  ( v2 == null )  || !entry.getValue (  ) .equals ( comparator, v2 )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^return true;^179^^^^^163^183^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[ADD]^^176^177^178^179^180^163^183^[ADD] for  ( Map.Entry<String, JsonNode> entry : m1.entrySet (  )  )  { JsonNode v2 = m2.get ( entry.getKey (  )  ) ; if  (  ( v2 == null )  || !entry.getValue (  ) .equals ( comparator, v2 )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^if  (  ( v2 != null )  || !entry.getValue (  )  .equals ( null , o )   )  {^178^^^^^163^183^[REPLACE] if  (  ( v2 == null )  || !entry.getValue (  ) .equals ( comparator, v2 )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^JsonNode v2 = m2.get ( entry.getValue (  )  ) ;^177^^^^^163^183^[REPLACE] JsonNode v2 = m2.get ( entry.getKey (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^String, JsonNode> m1 = _children  ;^176^^^^^163^183^[REPLACE] for  ( Map.Entry<String, JsonNode> entry : m1.entrySet (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[ADD]^^177^^^^^163^183^[ADD] JsonNode v2 = m2.get ( entry.getKey (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^return false;^182^^^^^163^183^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] JsonNode> comparator JsonNode o [CLASS] ObjectNode   [TYPE]  Entry entry  [TYPE]  boolean false  true  [TYPE]  ObjectNode other  [TYPE]  JsonNode o  v2  [TYPE]  Map _children  kids  m1  m2  [TYPE]  int len  [TYPE]  Comparator comparator 
[REPLACE]^StringBuilder sb = new StringBuilder ( 0  +  ( length (  )  << 4 )  ) ;^814^^^^^813^828^[REPLACE] StringBuilder sb = new StringBuilder ( 32 +  ( size (  )  << 4 )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[REPLACE]^sb .StringBuilder ( count )  ;^815^^^^^813^828^[REPLACE] sb.append ( "{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[ADD]^^815^^^^^813^828^[ADD] sb.append ( "{" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[REPLACE]^int count = 1;^816^^^^^813^828^[REPLACE] int count = 0;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[REPLACE]^if  ( count  <=  0 )  {^818^^^^^813^828^[REPLACE] if  ( count > 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[ADD]^sb.append ( "," ) ;^818^819^820^^^813^828^[ADD] if  ( count > 0 )  { sb.append ( "," ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[REPLACE]^for  ( Map.Entry<String, JsonNode <=  en : _children.entrySet (  )  )  {^817^^^^^813^828^[REPLACE] for  ( Map.Entry<String, JsonNode> en : _children.entrySet (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[REPLACE]^String, JsonNode> entry  ;^817^^^^^813^828^[REPLACE] for  ( Map.Entry<String, JsonNode> en : _children.entrySet (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[REPLACE]^sb.append ( "{" )  ;^826^^^^^813^828^[REPLACE] sb.append ( "}" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
[REPLACE]^return sb .asText (  )  ;^827^^^^^813^828^[REPLACE] return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ObjectNode   [TYPE]  Entry en  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  Map _children  kids  m1  m2  properties  [TYPE]  int count 
