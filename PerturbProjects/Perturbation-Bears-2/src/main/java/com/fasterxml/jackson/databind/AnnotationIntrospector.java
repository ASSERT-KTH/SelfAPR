[REPLACE]^private final  char  _name;^81^^^^^^^[REPLACE] private final String _name;^ [CLASS] AnnotationIntrospector ReferenceProperty Type  
[ADD]^final TypeFactory tf = config.getTypeFactory (  ) ;^798^799^^^^797^905^[ADD] JavaType type = baseType; final TypeFactory tf = config.getTypeFactory (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^final TypeFactory tf = null.getTypeFactory (  ) ;^799^^^^^797^905^[REPLACE] final TypeFactory tf = config.getTypeFactory (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> keyClass = findSerializationKeyType ( a, keyType )  ;^809^^^^^797^905^[REPLACE] Class<?> serClass = findSerializationType ( a ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( serClass == null )  {^810^^^^^797^905^[REPLACE] if  ( serClass != null )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyType.hasRawClass ( serClass )  )  {^811^^^^^797^905^[REPLACE] if  ( type.hasRawClass ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^811^812^^814^^797^905^[ADD] if  ( type.hasRawClass ( serClass )  )  {  type = type.withStaticTyping (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( null.isAssignableFrom ( currRaw )  )  {^820^^^^^811^835^[REPLACE] if  ( serClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( null  )  || type.isMapLikeType (  )  )  )  {^822^^^^^811^835^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}   type = tf.constructSpecializedType ( type, serClass ) ;^822^823^824^825^826^811^835^[ADD] else if  ( currRaw.isAssignableFrom ( serClass )  )  { type = tf.constructSpecializedType ( type, serClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^825^826^827^^^822^828^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization type %s into %s; types not related", type, null.getName (  )  )  ) ;^826^827^^^^822^828^[REPLACE] String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^a.getName (  )  ;^827^^^^^822^828^[REPLACE] type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructGeneralizedType ( type, serClass )  ;^823^^^^^811^835^[REPLACE] type = tf.constructSpecializedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^823^^^^^811^835^[ADD] type = tf.constructSpecializedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Failed to widen type %s with annotation  ( value %s ) , from '%s': %s", type, serClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae )  ;^825^826^827^^^811^835^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^821^^^^^811^835^[REPLACE] type = tf.constructGeneralizedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( null.isAssignableFrom ( serClass )  )  {^822^^^^^811^835^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type, this.getName (  )  )  ) ;^827^^^^^822^828^[REPLACE] type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^type = tf.constructGeneralizedType ( type, serClass ) ;^817^818^^820^821^811^835^[ADD] try {  if  ( serClass.isAssignableFrom ( currRaw )  )  { type = tf.constructGeneralizedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( serClass.isAssignableFrom ( false )  )  {^820^^^^^811^835^[REPLACE] if  ( serClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^820^821^822^823^^811^835^[ADD] if  ( serClass.isAssignableFrom ( currRaw )  )  { type = tf.constructGeneralizedType ( type, serClass ) ; } else if  ( currRaw.isAssignableFrom ( serClass )  )  { type = tf.constructSpecializedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( true.isAssignableFrom ( serClass )  )  {^822^^^^^811^835^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Failed to widen type %s with annotation  ( value %s ) , from '%s': %s", type, serClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae )  ;^825^826^827^^^822^828^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization keyType %s into %s; types not related", type, serClass.getName (  )  )  ) ;^826^827^^^^822^828^[REPLACE] String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type, null.getName (  )  )  ) ;^827^^^^^822^828^[REPLACE] type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( serClass  )  || type.isMapLikeType (  )  )  )  {^822^^^^^811^835^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type, false.getName (  )  )  ) ;^827^^^^^822^828^[REPLACE] type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = keyType.getRawClass (  ) ;^816^^^^^811^835^[REPLACE] Class<?> currRaw = type.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^825^826^827^^^811^835^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^830^831^832^^^811^835^[ADD] throw new JsonMappingException ( null, String.format ( "Failed to widen type %s with annotation  ( value %s ) , from '%s': %s", type, serClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) ,^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType = keyType.withStaticTyping (  )  ;^814^^^^^797^905^[REPLACE] type = type.withStaticTyping (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( serClass.isAssignableFrom ( null  )  && type.hasRawClass ( serClass )  )  )  {^820^^^^^797^905^[REPLACE] if  ( serClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( serClass )  )  {^822^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}   type = tf.constructSpecializedType ( type, serClass ) ;^822^823^824^825^826^797^905^[ADD] else if  ( currRaw.isAssignableFrom ( serClass )  )  { type = tf.constructSpecializedType ( type, serClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructGeneralizedType ( type, serClass )  ;^823^^^^^797^905^[REPLACE] type = tf.constructSpecializedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^825^826^827^^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^821^^^^^797^905^[REPLACE] type = tf.constructGeneralizedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( serClass  )  || type.isMapLikeType (  )  )  )  {^822^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^type = tf.constructGeneralizedType ( type, serClass ) ;^817^818^^820^821^797^905^[ADD] try {  if  ( serClass.isAssignableFrom ( currRaw )  )  { type = tf.constructGeneralizedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( serClass .getName (   )  && type.hasRawClass ( serClass )  )   )  {^820^^^^^797^905^[REPLACE] if  ( serClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^820^821^822^823^^797^905^[ADD] if  ( serClass.isAssignableFrom ( currRaw )  )  { type = tf.constructGeneralizedType ( type, serClass ) ; } else if  ( currRaw.isAssignableFrom ( serClass )  )  { type = tf.constructSpecializedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( 1.isAssignableFrom ( serClass )  )  {^822^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^825^826^827^^^822^828^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^825^826^827^^^797^905^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( type.isMapLikeType (  )  && ( this.isAssignableFrom ( serClass )  )  {^822^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^827^^^^^822^828^[ADD] type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^823^^^^^797^905^[ADD] type = tf.constructSpecializedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = keyType .hasRawClass ( 1 )  ;^816^^^^^797^905^[REPLACE] Class<?> currRaw = type.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^830^831^832^833^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to widen type %s with annotation  ( value %s ) , from '%s': %s", type, serClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^829^830^831^^^797^905^[ADD] catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null, String.format ( "Failed to widen type %s with annotation  ( value %s ) , from '%s': %s",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( type.withContentType ( serClass )  )  {^811^^^^^797^905^[REPLACE] if  ( type.hasRawClass ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( serClass.isAssignableFrom ( currRaw  )  || type.hasRawClass ( serClass )  )  )  {^820^^^^^811^835^[REPLACE] if  ( serClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  else {^822^^^^^811^835^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization type %s into %s; types not related", type, 1.getName (  )  )  ) ;^826^827^^^^822^828^[REPLACE] String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type, true.getName (  )  )  ) ;^827^^^^^822^828^[REPLACE] type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}^822^823^824^825^826^811^835^[ADD] else if  ( currRaw.isAssignableFrom ( serClass )  )  { type = tf.constructSpecializedType ( type, serClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REMOVE]^type.hasRawClass ( serClass )  ;^827^^^^^822^828^[REMOVE] ^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = keyType.getKeyType (  ) ;^816^^^^^811^835^[REPLACE] Class<?> currRaw = type.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^830^831^832^833^^811^835^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to widen type %s with annotation  ( value %s ) , from '%s': %s", type, serClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( false.isAssignableFrom ( currRaw  )  && type.hasRawClass ( serClass )  )  )  {^820^^^^^797^905^[REPLACE] if  ( serClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^type = tf.constructGeneralizedType ( type, serClass ) ;type = tf.constructSpecializedType ( type, serClass ) ;^820^821^822^823^^797^905^[ADD] if  ( serClass.isAssignableFrom ( currRaw )  )  { type = tf.constructGeneralizedType ( type, serClass ) ; } else if  ( currRaw.isAssignableFrom ( serClass )  )  { type = tf.constructSpecializedType ( type, serClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( null  )  && type.isMapLikeType (  )  )  )  {^822^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( this.isAssignableFrom ( serClass  )  && type.isMapLikeType (  )  )  )  {^822^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( serClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( this.isAssignableFrom ( currRaw )  )  {^820^^^^^797^905^[REPLACE] if  ( serClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}^822^823^824^825^826^797^905^[ADD] else if  ( currRaw.isAssignableFrom ( serClass )  )  { type = tf.constructSpecializedType ( type, serClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Failed to widen type %s with annotation  ( value %s ) , from '%s': %s", type, serClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae )  ;^825^826^827^^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^816^^^^^797^905^[ADD] Class<?> currRaw = type.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( serClass.isAssignableFrom ( currRaw )  && ( type.isMapLikeType (  )  )  {^840^^^^^797^905^[REPLACE] if  ( type.isMapLikeType (  )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass == null  || contentClass.isAssignableFrom ( currRaw )  )  {^843^^^^^797^905^[REPLACE] if  ( keyClass != null )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyType .getRawClass (  )   )  {^844^^^^^797^905^[REPLACE] if  ( keyType.hasRawClass ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( type.hasRawClass ( serClass )  || ( keyClass.isAssignableFrom ( true )  )  {^852^^^^^844^867^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  else {^854^^^^^844^867^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^857^858^859^^^854^860^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass .isAssignableFrom ( null )   )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^serClass.getName (  )  ;^859^^^^^854^860^[REPLACE] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^859^^^^^854^860^[ADD] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^855^^^^^844^867^[REPLACE] keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^857^858^859^^^844^867^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^853^^^^^844^867^[REPLACE] keyType = tf.constructGeneralizedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^857^858^859^^^854^860^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, null.getName (  )  )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^848^849^^^852^844^867^[ADD] try {  if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass.isAssignableFrom ( this  )  || type.hasRawClass ( serClass )  )  )  {^852^^^^^844^867^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( type.isMapLikeType (  )  || ( currRaw.isAssignableFrom ( keyClass )  )  {^854^^^^^844^867^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", type, keyClass.getName (  )  )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType, 0.getName (  )  )  ) ;^859^^^^^854^860^[REPLACE] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^857^858^859^^^844^867^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType, null.getName (  )  )  ) ;^859^^^^^854^860^[REPLACE] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^855^^^^^844^867^[ADD] keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = type.getRawClass (  ) ;^847^^^^^844^867^[REPLACE] Class<?> currRaw = keyType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^862^863^864^^^844^867^[ADD] throw new JsonMappingException ( null, String.format ( "Failed to widen key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) ,^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = type.withStaticTyping (  )  ;^845^^^^^797^905^[REPLACE] keyType = keyType.withStaticTyping (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass.isAssignableFrom ( currRaw  )  || type.hasRawClass ( serClass )  )  )  {^852^^^^^797^905^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  else {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}   keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^854^855^856^857^858^797^905^[ADD] else if  ( currRaw.isAssignableFrom ( keyClass )  )  { keyType = tf.constructSpecializedType ( keyType, keyClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^857^858^859^^^854^860^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType, 1.getName (  )  )  ) ;^859^^^^^854^860^[REPLACE] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^855^^^^^797^905^[REPLACE] keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^857^858^859^^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^853^^^^^797^905^[REPLACE] keyType = tf.constructGeneralizedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, true.getName (  )  )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^858^859^860^^^854^860^[ADD] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ; }^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^848^849^^^852^797^905^[ADD] try {  if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass.isAssignableFrom ( this )  )  {^852^^^^^797^905^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( null  )  || type.isMapLikeType (  )  )  )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, this.getName (  )  )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType, this.getName (  )  )  ) ;^859^^^^^854^860^[REPLACE] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^857^858^859^^^797^905^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( currRaw.isAssignableFrom ( null )  )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^857^858^859^^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^853^^^^^797^905^[ADD] keyType = tf.constructGeneralizedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^868^^^^^797^905^[ADD] type =  (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^847^^^^^797^905^[ADD] Class<?> currRaw = keyType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^862^863^864^865^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to widen key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( serClass.isAssignableFrom ( currRaw )  || ( keyType.hasRawClass ( keyClass )  )  {^844^^^^^797^905^[REPLACE] if  ( keyType.hasRawClass ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( type.hasRawClass ( serClass )  || ( keyClass.isAssignableFrom ( this )  )  {^852^^^^^844^867^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( keyClass )  )  {^854^^^^^844^867^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REMOVE]^type.hasRawClass ( serClass )  ;^859^^^^^854^860^[REMOVE] ^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^857^858^859^^^844^867^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, false .isAssignableFrom ( this )   )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( null.isAssignableFrom ( currRaw )  )  {^852^^^^^844^867^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^862^863^864^865^^844^867^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to widen key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^861^862^863^^^844^867^[ADD] catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null, String.format ( "Failed to widen key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^845^^^^^797^905^[ADD] keyType = keyType.withStaticTyping (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass.isAssignableFrom ( false )  )  {^852^^^^^797^905^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType, keyClass .isAssignableFrom ( null )   )  ) ;^859^^^^^854^860^[REPLACE] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, false.getName (  )  )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^855^^^^^797^905^[ADD] keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( type.hasRawClass ( serClass )  || ( keyClass.isAssignableFrom ( currRaw )  )  {^852^^^^^797^905^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( currRaw .getName (   )  || type.isMapLikeType (  )  )   )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", type, keyClass .isAssignableFrom ( this )   )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( keyClass )  )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type =   (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^868^^^^^797^905^[REPLACE] type =  (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^JavaType keyType = keyType.getKeyType (  ) ;^841^^^^^797^905^[REPLACE] JavaType keyType = type.getKeyType (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> keyClass = findSerializationKeyType ( a, type ) ;^842^^^^^797^905^[REPLACE] Class<?> keyClass = findSerializationKeyType ( a, keyType ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = type.getRawClass (  )  ;^847^^^^^797^905^[REPLACE] Class<?> currRaw = keyType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass == null )  {^843^^^^^797^905^[REPLACE] if  ( keyClass != null )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( type.hasRawClass ( keyClass )  )  {^844^^^^^797^905^[REPLACE] if  ( keyType.hasRawClass ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( null  )  && type.isMapLikeType (  )  )  )  {^854^^^^^844^867^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType, false.getName (  )  )  ) ;^859^^^^^854^860^[REPLACE] keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass.isAssignableFrom ( null )  )  {^852^^^^^844^867^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( type.isMapLikeType (  )  && ( this.isAssignableFrom ( keyClass )  )  {^854^^^^^844^867^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, 0.getName (  )  )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^853^^^^^844^867^[ADD] keyType = tf.constructGeneralizedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = keyType .hasRawClass ( this )  ;^847^^^^^844^867^[REPLACE] Class<?> currRaw = keyType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( type.isMapLikeType (  )  || ( currRaw.isAssignableFrom ( keyClass )  )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, true .isAssignableFrom ( null )   )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( true.isAssignableFrom ( currRaw )  )  {^852^^^^^797^905^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( 0.isAssignableFrom ( keyClass  )  || type.isMapLikeType (  )  )  )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( 1.isAssignableFrom ( currRaw )  )  {^852^^^^^844^867^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^keyType = tf.constructGeneralizedType ( keyType, keyClass ) ;keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^852^853^854^855^^844^867^[ADD] if  ( keyClass.isAssignableFrom ( currRaw )  )  { keyType = tf.constructGeneralizedType ( keyType, keyClass ) ; } else if  ( currRaw.isAssignableFrom ( keyClass )  )  { keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( 0 )  )  {^854^^^^^844^867^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass .getName (  )   )  {^852^^^^^844^867^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( type.isMapLikeType (  )  || ( currRaw.isAssignableFrom ( null )  )  {^854^^^^^844^867^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^847^^^^^844^867^[ADD] Class<?> currRaw = keyType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^862^863^864^865^^844^867^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to widen key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass .getName (   )  && type.hasRawClass ( serClass )  )   )  {^852^^^^^797^905^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^852^853^854^855^^797^905^[ADD] if  ( keyClass.isAssignableFrom ( currRaw )  )  { keyType = tf.constructGeneralizedType ( keyType, keyClass ) ; } else if  ( currRaw.isAssignableFrom ( keyClass )  )  { keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}^854^855^856^857^858^797^905^[ADD] else if  ( currRaw.isAssignableFrom ( keyClass )  )  { keyType = tf.constructSpecializedType ( keyType, keyClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization key type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass .getName (  )   )  {^852^^^^^797^905^[REPLACE] if  ( keyClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^keyType = tf.constructGeneralizedType ( keyType, keyClass ) ;keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^852^853^854^855^^797^905^[ADD] if  ( keyClass.isAssignableFrom ( currRaw )  )  { keyType = tf.constructGeneralizedType ( keyType, keyClass ) ; } else if  ( currRaw.isAssignableFrom ( keyClass )  )  { keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( type.isMapLikeType (  )  && ( currRaw.isAssignableFrom ( keyClass )  )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( null.isAssignableFrom ( keyClass  )  || type.isMapLikeType (  )  )  )  {^854^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( keyClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass .isAssignableFrom ( false )   )  ) ;^858^859^^^^854^860^[REPLACE] String.format ( "Can not refine serialization key type %s into %s; types not related", keyType, keyClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^JavaType keyType = type .getContentType (  )  ;^841^^^^^797^905^[REPLACE] JavaType keyType = type.getKeyType (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> serClass = findSerializationType ( a )  ;^842^^^^^797^905^[REPLACE] Class<?> keyClass = findSerializationKeyType ( a, keyType ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = type.getRawClass (  ) ;^847^^^^^797^905^[REPLACE] Class<?> currRaw = keyType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^862^863^864^865^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to widen key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^JavaType type = baseType  ;^872^^^^^797^905^[REPLACE] JavaType contentType = type.getContentType (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentType == null  && contentClass.isAssignableFrom ( currRaw )  )  {^873^^^^^797^905^[REPLACE] if  ( contentType != null )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass == null )  {^876^^^^^797^905^[REPLACE] if  ( contentClass != null )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^876^877^878^879^^797^905^[ADD] if  ( contentClass != null )  { if  ( contentType.hasRawClass ( contentClass )  )  { contentType = contentType.withStaticTyping (  ) ; } else {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( currRaw.isAssignableFrom ( serClass )  || ( contentType.hasRawClass ( contentClass )  )  {^877^^^^^797^905^[REPLACE] if  ( contentType.hasRawClass ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^contentType = contentType.withStaticTyping (  ) ;^877^878^879^^^797^905^[ADD] if  ( contentType.hasRawClass ( contentClass )  )  { contentType = contentType.withStaticTyping (  ) ; } else {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( null.isAssignableFrom ( currRaw )  )  {^885^^^^^877^900^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  else {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^890^891^892^^^887^893^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", type, contentClass.getName (  )  )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^contentType, this.getName (  )  )  ) ;^892^^^^^887^893^[REPLACE] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^888^^^^^877^900^[REPLACE] contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^890^891^892^^^877^900^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructGeneralizedType ( type, serClass )  ;^886^^^^^877^900^[REPLACE] contentType = tf.constructGeneralizedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^890^891^892^^^887^893^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^contentType, false.getName (  )  )  ) ;^892^^^^^887^893^[REPLACE] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^contentType = tf.constructGeneralizedType ( contentType, contentClass ) ;contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^884^885^886^887^888^877^900^[ADD] try { if  ( contentClass.isAssignableFrom ( currRaw )  )  { contentType = tf.constructGeneralizedType ( contentType, contentClass ) ; } else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass.isAssignableFrom ( 1 )  )  {^885^^^^^877^900^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^885^886^887^888^^877^900^[ADD] if  ( contentClass.isAssignableFrom ( currRaw )  )  { contentType = tf.constructGeneralizedType ( contentType, contentClass ) ; } else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( type.isMapLikeType (  )  && ( currRaw.isAssignableFrom ( contentClass )  )  {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^serClass.getName (  )  ;^892^^^^^887^893^[REPLACE] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^888^^^^^877^900^[ADD] contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^890^891^892^^^877^900^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( contentClass )  )  {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}   contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^887^888^889^890^891^877^900^[ADD] else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^890^891^892^^^887^893^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^890^891^892^^^877^900^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^883^^^^^877^900^[ADD] Class<?> currRaw = contentType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^895^896^897^898^^877^900^[REPLACE] throw new JsonMappingException ( null, String.format ( "Internal error: failed to refine value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, contentClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^keyType = keyType.withStaticTyping (  )  ;^878^^^^^797^905^[REPLACE] contentType = contentType.withStaticTyping (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( false.isAssignableFrom ( currRaw )  )  {^885^^^^^797^905^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw .getName (  )   )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, this.getName (  )  )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^891^892^893^^^887^893^[ADD] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ; }^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^888^^^^^797^905^[REPLACE] contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^890^891^892^^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructGeneralizedType ( type, serClass )  ;^886^^^^^797^905^[REPLACE] contentType = tf.constructGeneralizedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  else {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^contentType, true.getName (  )  )  ) ;^892^^^^^887^893^[REPLACE] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^888^^^^^797^905^[ADD] contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^contentType = tf.constructGeneralizedType ( contentType, contentClass ) ;contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^884^885^886^887^888^797^905^[ADD] try { if  ( contentClass.isAssignableFrom ( currRaw )  )  { contentType = tf.constructGeneralizedType ( contentType, contentClass ) ; } else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( null.isAssignableFrom ( currRaw  )  && type.isMapLikeType (  )  )  )  {^885^^^^^797^905^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^contentType = tf.constructGeneralizedType ( contentType, contentClass ) ;contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^885^886^887^888^^797^905^[ADD] if  ( contentClass.isAssignableFrom ( currRaw )  )  { contentType = tf.constructGeneralizedType ( contentType, contentClass ) ; } else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( type.isMapLikeType (  )  || ( currRaw.isAssignableFrom ( contentClass )  )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}   contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^887^888^889^890^891^797^905^[ADD] else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, null.getName (  )  )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REMOVE]^serClass.getName (  )  ;^892^^^^^887^893^[REMOVE] ^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^890^891^892^^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^886^^^^^797^905^[ADD] contentType = tf.constructGeneralizedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( currRaw.isAssignableFrom ( contentClass  )  || type.isMapLikeType (  )  )  )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass .isAssignableFrom ( 0 )   )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^892^^^^^887^893^[ADD] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^878^^^^^797^905^[ADD] contentType = contentType.withStaticTyping (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type =  keyType.withContentType ( contentType ) ;^901^^^^^797^905^[REPLACE] type = type.withContentType ( contentType ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^883^^^^^797^905^[ADD] Class<?> currRaw = contentType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^895^896^897^898^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Internal error: failed to refine value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, contentClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^894^895^896^^^797^905^[ADD] catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null, String.format ( "Internal error: failed to refine value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentType.hasRawClass ( contentClass  )  || currRaw.isAssignableFrom ( serClass )  )  )  {^877^^^^^797^905^[REPLACE] if  ( contentType.hasRawClass ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass.isAssignableFrom ( this )  )  {^885^^^^^877^900^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( currRaw.isAssignableFrom ( null  )  || type.isMapLikeType (  )  )  )  {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^contentType, null.getName (  )  )  ) ;^892^^^^^887^893^[REPLACE] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}^887^888^889^890^891^877^900^[ADD] else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^886^^^^^877^900^[ADD] contentType = tf.constructGeneralizedType ( contentType, contentClass ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = type.getRawClass (  )  ;^883^^^^^877^900^[REPLACE] Class<?> currRaw = contentType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( false.isAssignableFrom ( currRaw  )  || type.isMapLikeType (  )  )  )  {^885^^^^^797^905^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^contentType, 1.getName (  )  )  ) ;^892^^^^^887^893^[REPLACE] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass.isAssignableFrom ( null  )  && type.isMapLikeType (  )  )  )  {^885^^^^^797^905^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( null  )  || type.isMapLikeType (  )  )  )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, 0.getName (  )  )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, true.getName (  )  )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^890^891^892^^^797^905^[ADD] throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> contentClass = findSerializationContentType ( a, type ) ;^875^^^^^797^905^[REPLACE] Class<?> contentClass = findSerializationContentType ( a, contentType ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = type.getRawClass (  )  ;^883^^^^^797^905^[REPLACE] Class<?> currRaw = contentType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentType .getRawClass (  )   )  {^877^^^^^797^905^[REPLACE] if  ( contentType.hasRawClass ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass.isAssignableFrom ( false )  )  {^885^^^^^877^900^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( null.isAssignableFrom ( contentClass )  )  {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( type.isMapLikeType (  )  || ( contentClass.isAssignableFrom ( currRaw )  )  {^885^^^^^877^900^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( currRaw.isAssignableFrom ( contentClass  )  && type.isMapLikeType (  )  )  )  {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, false.getName (  )  )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^895^896^897^898^^877^900^[REPLACE] throw new JsonMappingException ( null, String.format ( "Internal error: failed to refine value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, contentClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass.isAssignableFrom ( null )  )  {^885^^^^^797^905^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( this )  )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^contentType, 0.getName (  )  )  ) ;^892^^^^^887^893^[REPLACE] contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass .getName (  )   )  {^885^^^^^797^905^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( type.isMapLikeType (  )  && ( currRaw.isAssignableFrom ( contentClass )  )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( this.isAssignableFrom ( contentClass )  )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^895^896^897^898^^797^905^[REPLACE] throw new JsonMappingException ( null, String.format ( "Internal error: failed to refine value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, contentClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass.isAssignableFrom ( true )  )  {^885^^^^^877^900^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( false.isAssignableFrom ( contentClass )  )  {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass.isAssignableFrom ( currRaw  )  && type.isMapLikeType (  )  )  )  {^885^^^^^877^900^[REPLACE] if  ( contentClass.isAssignableFrom ( currRaw )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^} else if  ( currRaw.isAssignableFrom ( null )  )  {^887^^^^^877^900^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> currRaw = type.getRawClass (  ) ;^883^^^^^877^900^[REPLACE] Class<?> currRaw = contentType.getRawClass (  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^895^896^897^^^877^900^[ADD] throw new JsonMappingException ( null, String.format ( "Internal error: failed to refine value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, contentClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) ,^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^894^895^896^^^877^900^[ADD] catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null, String.format ( "Internal error: failed to refine value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^}^887^888^889^890^891^797^905^[ADD] else if  ( currRaw.isAssignableFrom ( contentClass )  )  { contentType = tf.constructSpecializedType ( contentType, contentClass ) ; } else { throw new JsonMappingException ( null, String.format ( "Can not refine serialization content type %s into %s; types not related",^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^}  if  ( currRaw.isAssignableFrom ( contentClass )  )  {^887^^^^^797^905^[REPLACE] } else if  ( currRaw.isAssignableFrom ( contentClass )  )  {^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass .isAssignableFrom ( true )   )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, false .isAssignableFrom ( null )   )  ) ;^891^892^^^^887^893^[REPLACE] String.format ( "Can not refine serialization content type %s into %s; types not related", contentType, contentClass.getName (  )  )  ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^875^^^^^797^905^[ADD] Class<?> contentClass = findSerializationContentType ( a, contentType ) ;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return keyType;^904^^^^^797^905^[REPLACE] return type;^[METHOD] refineSerializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  currRaw  keyClass  serClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^JavaType type = type;^1127^^^^^1126^1184^[REPLACE] JavaType type = baseType;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^final TypeFactory tf = null.getTypeFactory (  ) ;^1128^^^^^1126^1184^[REPLACE] final TypeFactory tf = config.getTypeFactory (  ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> serClass = findSerializationType ( a )  ;^1138^^^^^1126^1184^[REPLACE] Class<?> valueClass = findDeserializationType ( a, type ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  (  !type.hasRawClass ( valueClass )  )  {^1139^^^^^1126^1184^[REPLACE] if  (  ( valueClass != null )  && !type.hasRawClass ( valueClass )  )  {^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^type = tf.constructSpecializedType ( type, valueClass ) ;^1140^1141^1142^1143^1144^1126^1184^[ADD] try { type = tf.constructSpecializedType ( type, valueClass ) ; } catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null, String.format ( "Failed to narrow type %s with annotation  ( value %s ) , from '%s': %s",^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^1141^^^^^1126^1184^[REPLACE] type = tf.constructSpecializedType ( type, valueClass ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1141^^^^^1126^1184^[ADD] type = tf.constructSpecializedType ( type, valueClass ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^1143^1144^1145^1146^^1126^1184^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to narrow type %s with annotation  ( value %s ) , from '%s': %s", type, valueClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1142^1143^1144^^^1126^1184^[ADD] catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null, String.format ( "Failed to narrow type %s with annotation  ( value %s ) , from '%s': %s",^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1143^1144^1145^^^1126^1184^[ADD] throw new JsonMappingException ( null, String.format ( "Failed to narrow type %s with annotation  ( value %s ) , from '%s': %s", type, valueClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) ,^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( type.getKeyType (  )  )  {^1152^^^^^1126^1184^[REPLACE] if  ( type.isMapLikeType (  )  )  {^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( keyClass == null )  {^1155^^^^^1126^1184^[REPLACE] if  ( keyClass != null )  {^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1155^1156^1157^1158^^1126^1184^[ADD] if  ( keyClass != null )  { try { keyType = tf.constructSpecializedType ( keyType, keyClass ) ; type =  (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^keyType = tf.constructSpecializedType ( keyType, keyClass ) ;type =  (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^1156^1157^1158^1159^1160^1126^1184^[ADD] try { keyType = tf.constructSpecializedType ( keyType, keyClass ) ; type =  (  ( MapLikeType )  type ) .withKeyType ( keyType ) ; } catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null,^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^1157^^^^^1126^1184^[REPLACE] keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type =   (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^1158^^^^^1126^1184^[REPLACE] type =  (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1157^1158^^^^1126^1184^[ADD] keyType = tf.constructSpecializedType ( keyType, keyClass ) ; type =  (  ( MapLikeType )  type ) .withKeyType ( keyType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return ;^1160^1161^1162^1163^^1126^1184^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to narrow key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1157^^^^^1126^1184^[ADD] keyType = tf.constructSpecializedType ( keyType, keyClass ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^JavaType keyType = type .getContentType (  )  ;^1153^^^^^1126^1184^[REPLACE] JavaType keyType = type.getKeyType (  ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1154^^^^^1126^1184^[ADD] Class<?> keyClass = findDeserializationKeyType ( a, keyType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^throw new JsonMappingException ( null, format ( "Can not refine serialization type %s into %s; types not related", type, serClass.getName (  )  )  )  ;^1160^1161^1162^1163^^1126^1184^[REPLACE] throw new JsonMappingException ( null, String.format ( "Failed to narrow key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) , iae ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1159^1160^1161^^^1126^1184^[ADD] catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null, String.format ( "Failed to narrow key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s",^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^JavaType keyType = keyType.getContentType (  ) ;^1153^^^^^1126^1184^[REPLACE] JavaType keyType = type.getKeyType (  ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> serClass = findSerializationType ( a )  ;^1154^^^^^1126^1184^[REPLACE] Class<?> keyClass = findDeserializationKeyType ( a, keyType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1160^1161^1162^^^1126^1184^[ADD] throw new JsonMappingException ( null, String.format ( "Failed to narrow key type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, keyClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) ,^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^JavaType type = baseType  ;^1167^^^^^1126^1184^[REPLACE] JavaType contentType = type.getContentType (  ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentType == this )  {^1168^^^^^1126^1184^[REPLACE] if  ( contentType != null )  {^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^if  ( contentClass == null )  {^1171^^^^^1126^1184^[REPLACE] if  ( contentClass != null )  {^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1171^1172^1173^1174^^1126^1184^[ADD] if  ( contentClass != null )  { try { contentType = tf.constructSpecializedType ( contentType, contentClass ) ; type = type.withContentType ( contentType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^contentType = tf.constructSpecializedType ( contentType, contentClass ) ;type = type.withContentType ( contentType ) ;^1172^1173^1174^1175^1176^1126^1184^[ADD] try { contentType = tf.constructSpecializedType ( contentType, contentClass ) ; type = type.withContentType ( contentType ) ; } catch  ( IllegalArgumentException iae )  { throw new JsonMappingException ( null,^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type = tf.constructSpecializedType ( type, serClass )  ;^1173^^^^^1126^1184^[REPLACE] contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type =  keyType.withContentType ( contentType ) ;^1174^^^^^1126^1184^[REPLACE] type = type.withContentType ( contentType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1173^^^^^1126^1184^[ADD] contentType = tf.constructSpecializedType ( contentType, contentClass ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1176^1177^1178^^^1126^1184^[ADD] throw new JsonMappingException ( null, String.format ( "Failed to narrow value type of %s with concrete-type annotation  ( value %s ) , from '%s': %s", type, contentClass.getName (  ) , a.getName (  ) , iae.getMessage (  )  ) ,^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1173^1174^^^^1126^1184^[ADD] contentType = tf.constructSpecializedType ( contentType, contentClass ) ; type = type.withContentType ( contentType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^type =  null.withContentType ( contentType ) ;^1174^^^^^1126^1184^[REPLACE] type = type.withContentType ( contentType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[ADD]^^1170^^^^^1126^1184^[ADD] Class<?> contentClass = findDeserializationContentType ( a, contentType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^Class<?> serClass = findSerializationType ( a )  ;^1170^^^^^1126^1184^[REPLACE] Class<?> contentClass = findDeserializationContentType ( a, contentType ) ;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^return keyType;^1183^^^^^1126^1184^[REPLACE] return type;^[METHOD] refineDeserializationType [TYPE] JavaType [PARAMETER] MapperConfig<?> config Annotated a JavaType baseType [CLASS] AnnotationIntrospector ReferenceProperty Type   [TYPE]  Annotated a  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  JavaType baseType  contentType  keyType  type  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Class contentClass  keyClass  valueClass  [TYPE]  String _name  n  name  [TYPE]  TypeFactory tf  [TYPE]  IllegalArgumentException iae 
[REPLACE]^private final Object _type;^80^^^^^^^[REPLACE] private final Type _type;^[METHOD] _hasOneOf [TYPE] boolean [PARAMETER] Annotated annotated Annotation>[] annoClasses [CLASS] ReferenceProperty Type   [TYPE]  Annotated annotated  [TYPE]  Type BACK_REFERENCE  MANAGED_REFERENCE  _type  t  [TYPE]  String _name  n  name  [TYPE]  Class[] annoClasses  [TYPE]  boolean false  true 
