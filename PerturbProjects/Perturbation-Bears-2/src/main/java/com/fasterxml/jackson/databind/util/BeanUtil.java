[REPLACE]^if  ( name.equals ( "get" )  )  {^35^^^^^34^58^[REPLACE] if  ( name.startsWith ( "get" )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[ADD]^^35^36^^^^34^58^[ADD] if  ( name.startsWith ( "get" )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( "getCallbacks".contains ( name )  )  {^43^^^^^34^58^[REPLACE] if  ( "getCallbacks".equals ( name )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^}  else {^47^^^^^34^58^[REPLACE] } else if  ( "getMetaClass".equals ( name )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( isCglibGetCallbacks ( am )  || ( isGroovyMetaClassGetter ( am )  )  {^49^^^^^34^58^[REPLACE] if  ( isGroovyMetaClassGetter ( am )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return name  ;^50^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return this;^50^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( isGroovyMetaClassGetter ( am  )  || isCglibGetCallbacks ( am )  )  )  {^49^^^^^34^58^[REPLACE] if  ( isGroovyMetaClassGetter ( am )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return false;^50^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( "getCallbacks".equals ( name )  || ( isCglibGetCallbacks ( am )  )  {^44^^^^^34^58^[REPLACE] if  ( isCglibGetCallbacks ( am )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return this;^45^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return true;^45^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( isCglibGetCallbacks ( am  )  || "getCallbacks".equals ( name )  )  )  {^44^^^^^34^58^[REPLACE] if  ( isCglibGetCallbacks ( am )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return true;^50^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( isGroovyMetaClassGetter ( am  )  && isCglibGetCallbacks ( am )  )  )  {^49^^^^^34^58^[REPLACE] if  ( isGroovyMetaClassGetter ( am )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[ADD]^return null;^49^50^51^^^34^58^[ADD] if  ( isGroovyMetaClassGetter ( am )  )  { return null; }^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return stdNaming ? stdManglePropertyName ( name, 3 / 0 ) : legacyManglePropertyName ( name, 3 / 0 ) ;^53^54^55^^^34^58^[REPLACE] return stdNaming ? stdManglePropertyName ( name, 3 ) : legacyManglePropertyName ( name, 3 ) ;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( "getCallbacks" .contains ( null )   )  {^43^^^^^34^58^[REPLACE] if  ( "getCallbacks".equals ( name )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^} else if  ( "getMetaClass".equals ( name  )  && "getCallbacks".equals ( name )  )  )  {^47^^^^^34^58^[REPLACE] } else if  ( "getMetaClass".equals ( name )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( isCglibGetCallbacks ( am )  && ( isGroovyMetaClassGetter ( am )  )  {^49^^^^^34^58^[REPLACE] if  ( isGroovyMetaClassGetter ( am )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return false;^45^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^if  ( isCglibGetCallbacks ( am  )  && "getCallbacks".equals ( name )  )  )  {^44^^^^^34^58^[REPLACE] if  ( isCglibGetCallbacks ( am )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[ADD]^return null;^44^45^46^^^34^58^[ADD] if  ( isCglibGetCallbacks ( am )  )  { return null; }^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^}  if  ( "getMetaClass".equals ( name )  )  {^47^^^^^34^58^[REPLACE] } else if  ( "getMetaClass".equals ( name )  )  {^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return stdNaming ? stdManglePropertyName ( name, 3 + 3 ) : legacyManglePropertyName ( name, 3 + 3 ) ;^53^54^55^^^34^58^[REPLACE] return stdNaming ? stdManglePropertyName ( name, 3 ) : legacyManglePropertyName ( name, 3 ) ;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^return true;^57^^^^^34^58^[REPLACE] return null;^[METHOD] okNameForRegularGetter [TYPE] String [PARAMETER] AnnotatedMethod am String name boolean stdNaming [CLASS] BeanUtil   [TYPE]  boolean false  stdNaming  true  [TYPE]  AnnotatedMethod am  [TYPE]  String name 
[REPLACE]^Class<?> compType = rt.getComponentType (  )  ;^151^^^^^150^176^[REPLACE] Class<?> rt = am.getRawType (  ) ;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^if  ( rt != null ) {^153^^^^^150^176^[REPLACE] if  ( rt == null || !rt.isArray (  )  )  {^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^return true;^154^^^^^150^176^[REPLACE] return false;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^Class<?> compType = false.isArray (  ) ;^160^^^^^150^176^[REPLACE] Class<?> compType = rt.getComponentType (  ) ;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^String pkgName = ClassUtil.getPackageName ( null ) ;^162^^^^^150^176^[REPLACE] String pkgName = ClassUtil.getPackageName ( compType ) ;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^if  ( pkgName == null )  {^163^^^^^150^176^[REPLACE] if  ( pkgName != null )  {^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[ADD]^^163^164^165^^167^150^176^[ADD] if  ( pkgName != null )  { if  ( pkgName.contains ( ".cglib" )  )  { if  ( pkgName.startsWith ( "net.sf.cglib" ) || pkgName.startsWith ( "org.hibernate.repackage.cglib" )^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^if  ( pkgName.equals ( "net.sf.cglib" )  && pkgName.startsWith ( "org.hibernate.repackage.cglib" )^165^166^167^168^^150^176^[REPLACE] if  ( pkgName.startsWith ( "net.sf.cglib" )  || pkgName.startsWith ( "org.hibernate.repackage.cglib" )^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^return false;^171^^^^^165^172^[REPLACE] return true;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^return str  ;^171^^^^^150^176^[REPLACE] return true;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^if  ( pkgName.startsWith ( "net.sf.cglib" )  && pkgName.startsWith ( "org.hibernate.repackage.cglib" )^165^166^167^168^^150^176^[REPLACE] if  ( pkgName.startsWith ( "net.sf.cglib" )  || pkgName.startsWith ( "org.hibernate.repackage.cglib" )^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^return false;^171^^^^^150^176^[REPLACE] return true;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[ADD]^^164^165^^167^^150^176^[ADD] if  ( pkgName.contains ( ".cglib" )  )  { if  ( pkgName.startsWith ( "net.sf.cglib" ) || pkgName.startsWith ( "org.hibernate.repackage.cglib" )^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^return true;^175^^^^^150^176^[REPLACE] return false;^[METHOD] isCglibGetCallbacks [TYPE] boolean [PARAMETER] AnnotatedMethod am [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  AnnotatedMethod am  [TYPE]  Class compType  rt  [TYPE]  String pkgName 
[REPLACE]^final int end = basename .startsWith ( basename )  ;^223^^^^^222^248^[REPLACE] final int end = basename.length (  ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^if  ( end  ||  offset )  {^224^^^^^222^248^[REPLACE] if  ( end == offset )  {^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^return name  ;^225^^^^^222^248^[REPLACE] return null;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^return true;^225^^^^^222^248^[REPLACE] return null;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^char c = basename.substring ( offset ) ;^228^^^^^222^248^[REPLACE] char c = basename.charAt ( offset ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^char d = Character.isUpperCase ( c ) ;^229^^^^^222^248^[REPLACE] char d = Character.toLowerCase ( c ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^if  ( c  ) {^231^^^^^222^248^[REPLACE] if  ( c == d )  {^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[ADD]^return basename.substring ( offset ) ;^231^232^233^^^222^248^[ADD] if  ( c == d )  { return basename.substring ( offset ) ; }^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^return basename.charAt ( offset ) ;^232^^^^^222^248^[REPLACE] return basename.substring ( offset ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^return basename .contains ( this )  ;^232^^^^^222^248^[REPLACE] return basename.substring ( offset ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^StringBuilder sb = new StringBuilder ( end  offset ) ;^235^^^^^222^248^[REPLACE] StringBuilder sb = new StringBuilder ( end - offset ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^sb.StringBuilder ( d ) ;^236^^^^^222^248^[REPLACE] sb.append ( d ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^int i = offset1;^237^^^^^222^248^[REPLACE] int i = offset+1;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^if  (   d )  {^241^^^^^222^248^[REPLACE] if  ( c == d )  {^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^sb.append ( basename,  ( offset + 1 ) , end )  ;^242^^^^^222^248^[REPLACE] sb.append ( basename, i, end ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^c =  null.charAt ( i ) ;^239^^^^^222^248^[REPLACE] c = basename.charAt ( i ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^d =  Charanullter.toLowerCase ( null ) ;^240^^^^^222^248^[REPLACE] d = Character.toLowerCase ( c ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^return sb .StringBuilder ( end )  ;^247^^^^^222^248^[REPLACE] return sb.toString (  ) ;^[METHOD] legacyManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  d  [TYPE]  String basename  [TYPE]  int end  i  offset 
[REPLACE]^final int end = basename .startsWith ( basename )  ;^255^^^^^254^277^[REPLACE] final int end = basename.length (  ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^if  ( end  !=  offset  || c0 == c1  )  {^256^^^^^254^277^[REPLACE] if  ( end == offset )  {^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^return this;^257^^^^^254^277^[REPLACE] return null;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^return name  ;^257^^^^^254^277^[REPLACE] return null;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^char c0 = basename .startsWith ( basename )  ;^260^^^^^254^277^[REPLACE] char c0 = basename.charAt ( offset ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^char c1 = Character.toLowerCase ( c1 ) ;^261^^^^^254^277^[REPLACE] char c1 = Character.toLowerCase ( c0 ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^if  (   c1 )  {^262^^^^^254^277^[REPLACE] if  ( c0 == c1 )  {^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^return basename.charAt ( offset ) ;^263^^^^^254^277^[REPLACE] return basename.substring ( offset ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^return basename .contains ( this )  ;^263^^^^^254^277^[REPLACE] return basename.substring ( offset ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^if  (  ( offset + 1 )   >  end )  {^268^^^^^254^277^[REPLACE] if  (  ( offset + 1 )  < end )  {^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^if  ( Character.isUpperCase ( basename.charAt ( offset1 + 4 )  )  )  {^269^^^^^254^277^[REPLACE] if  ( Character.isUpperCase ( basename.charAt ( offset+1 )  )  )  {^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^return basename.charAt ( offset ) ;^270^^^^^254^277^[REPLACE] return basename.substring ( offset ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^return basename .contains ( true )  ;^270^^^^^254^277^[REPLACE] return basename.substring ( offset ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^if  ( Character.isUpperCase ( basename.length ( offset1 )  )  )  {^269^^^^^254^277^[REPLACE] if  ( Character.isUpperCase ( basename.charAt ( offset+1 )  )  )  {^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^StringBuilder sb = new StringBuilder ( end  offset ) ;^273^^^^^254^277^[REPLACE] StringBuilder sb = new StringBuilder ( end - offset ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^sb.append ( d )  ;^274^^^^^254^277^[REPLACE] sb.append ( c1 ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^sb.append ( basename, offset1, end ) ;^275^^^^^254^277^[REPLACE] sb.append ( basename, offset+1, end ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
[REPLACE]^return sb .StringBuilder ( end )  ;^276^^^^^254^277^[REPLACE] return sb.toString (  ) ;^[METHOD] stdManglePropertyName [TYPE] String [PARAMETER] String basename final int offset [CLASS] BeanUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c0  c1  [TYPE]  String basename  [TYPE]  int end  offset 
