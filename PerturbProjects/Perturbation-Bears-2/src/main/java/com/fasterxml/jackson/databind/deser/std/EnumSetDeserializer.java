[REPLACE]^private static  long serialVersionUID = 1L;^23^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] EnumSetDeserializer  
[REPLACE]^protected  JavaType _enumType;^25^^^^^^^[REPLACE] protected final JavaType _enumType;^ [CLASS] EnumSetDeserializer  
[REPLACE]^protected  Class<Enum> _enumClass;^27^^^^^^^[REPLACE] protected final Class<Enum> _enumClass;^ [CLASS] EnumSetDeserializer  
[REPLACE]^private JsonDeserializer<Enum<?>> _enumDeserializer;^29^^^^^^^[REPLACE] protected JsonDeserializer<Enum<?>> _enumDeserializer;^ [CLASS] EnumSetDeserializer  
[REPLACE]^protected final Object _unwrapSingle;^38^^^^^^^[REPLACE] protected final Boolean _unwrapSingle;^ [CLASS] EnumSetDeserializer  
[REPLACE]^if  ( p.isExpectedStartArrayToken (  )  )  {^126^^^^^124^154^[REPLACE] if  ( !p.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^if  ( t  !=  JsonToken.VALUE_NULL )  {^139^^^^^124^154^[REPLACE] if  ( t == JsonToken.VALUE_NULL )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^return ;^140^^^^^124^154^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^ctxt.mappingException ( class )  ;^140^^^^^124^154^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^140^^^^^124^154^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^if  ( value == null  || t ==  ( JsonToken.VALUE_NULL )  )  {^146^^^^^124^154^[REPLACE] if  ( value != null )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^result.add ( 1 ) ;^147^^^^^124^154^[REPLACE] result.add ( value ) ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^132^133^^^136^124^154^[ADD] try { while  (  ( t = p.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^if  ( value == false  || t ==  ( JsonToken.VALUE_NULL )  )  {^146^^^^^124^154^[REPLACE] if  ( value != null )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^result.add ( true ) ;^147^^^^^124^154^[REPLACE] result.add ( value ) ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^while  (  ( t =  null.nextToken (  )  )  !^133^^^^^124^154^[REPLACE] while  (  ( t = p.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^Enum<?> value = _enumDeserializer .withDeserializer ( null )  ;^142^^^^^124^154^[REPLACE] Enum<?> value = _enumDeserializer.deserialize ( p, ctxt ) ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^151^^^^^124^154^[ADD] throw JsonMappingException.wrapWithPath ( e, result, result.size (  )  ) ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^boolean canWrap =  ( _unwrapSingle == Boolean.TRUE )  || (  ( _unwrapSingle == this )  ;^175^176^177^^^174^197^[REPLACE] boolean canWrap =  ( _unwrapSingle == Boolean.TRUE )  || (  ( _unwrapSingle == null )  && ctxt.isEnabled ( DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY )  ) ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^if  ( canWrap )  {^179^^^^^174^197^[REPLACE] if  ( !canWrap )  {^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^179^180^181^^^174^197^[ADD] if  ( !canWrap )  { throw ctxt.mappingException  (" ")  ; }^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^180^^^^^174^197^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^ctxt.mappingException ( _enumClass )  ;^180^^^^^174^197^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REMOVE]^super ( class )  ;^180^^^^^174^197^[REMOVE] ^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^return ;^180^^^^^174^197^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^throw ctxt.mappingException ( class )  ;^186^^^^^174^197^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^throw ctxt .handleSecondaryContextualization ( null , null , enumType )   ;^186^^^^^174^197^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^186^^^^^174^197^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^if  ( value == this  )  {^190^^^^^174^197^[REPLACE] if  ( value != null )  {^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^result.add ( null ) ;^191^^^^^174^197^[REPLACE] result.add ( value ) ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REMOVE]^( _enumType.getValueHandler (  )  )  ;^191^^^^^174^197^[REMOVE] ^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^Enum<?> value = _enumDeserializer.deserialize ( p, ctxt ) ;result.add ( value ) ;^188^189^190^191^192^174^197^[ADD] try { Enum<?> value = _enumDeserializer.deserialize ( p, ctxt ) ; if  ( value != null )  { result.add ( value ) ; }^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^if  ( value == true )  {^190^^^^^174^197^[REPLACE] if  ( value != null )  {^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^result.add ( value ) ;^190^191^192^^^174^197^[ADD] if  ( value != null )  { result.add ( value ) ; }^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[REPLACE]^result.add ( false ) ;^191^^^^^174^197^[REPLACE] result.add ( value ) ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^189^^^^^174^197^[ADD] Enum<?> value = _enumDeserializer.deserialize ( p, ctxt ) ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
[ADD]^^194^^^^^174^197^[ADD] throw JsonMappingException.wrapWithPath ( e, result, result.size (  )  ) ;^[METHOD] handleNonArray [TYPE] EnumSet [PARAMETER] JsonParser p DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean canWrap  false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  Boolean _unwrapSingle  unwrapSingle  [TYPE]  long serialVersionUID  [TYPE]  Exception e  [TYPE]  JsonParser p 
