[REPLACE]^protected ObjectCodec _nextToken;^44^^^^^^^[REPLACE] protected JsonToken _nextToken;^ [CLASS] TreeTraversingParser  
[REPLACE]^private boolean _startContainer;^50^^^^^^^[REPLACE] protected boolean _startContainer;^ [CLASS] TreeTraversingParser  
[REPLACE]^if  ( _nextToken == null )  {^122^^^^^121^160^[REPLACE] if  ( _nextToken != null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^_nextToken = null;^123^124^^^^121^160^[ADD] _currToken = _nextToken; _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nextToken = true;^124^^^^^121^160^[REPLACE] _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken  =  _currToken ;^123^^^^^121^160^[REPLACE] _currToken = _nextToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = null  ;^124^^^^^121^160^[REPLACE] _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _startContainer  || ! ( _nodeCursor.currentHasChildren (  )  )  )  {^128^^^^^121^160^[REPLACE] if  ( _startContainer )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor.currentHasChildren (   )  &&  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  ||  (  ( _currToken )  ==  ( JsonToken.START_ARRAY )  )  )  )  {^131^^^^^121^160^[REPLACE] if  ( !_nodeCursor.currentHasChildren (  )  )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^131^132^133^134^135^121^160^[ADD] if  ( !_nodeCursor.currentHasChildren (  )  )  { _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY; return _currToken; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken  =  JsonToken.END_ARRAY;^132^133^^^^121^160^[REPLACE] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^138^^^^^121^160^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^139^^^^^121^160^[ADD] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = true;^129^^^^^121^160^[REPLACE] _startContainer = false;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken =  ( _currToken  ||  JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^132^133^^^^121^160^[REPLACE] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = _nodeCursor.getParent (  )  ;^136^^^^^121^160^[REPLACE] _nodeCursor = _nodeCursor.iterateChildren (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.endToken (  )  ;^137^^^^^121^160^[REPLACE] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false;^139^^^^^121^160^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  (  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  ||  (  ( _currToken )  ==  ( JsonToken.START_ARRAY )  )  || ( _nodeCursor.currentHasChildren (  )  )  {^131^^^^^121^160^[REPLACE] if  ( !_nodeCursor.currentHasChildren (  )  )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^132^133^^^^121^160^[ADD] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false  ;^139^^^^^121^160^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^137^^^^^121^160^[ADD] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor != null  || ! ( _nodeCursor.currentHasChildren (  )  )  )  {^144^^^^^121^160^[REPLACE] if  ( _nodeCursor == null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_closed = false;^145^^^^^121^160^[REPLACE] _closed = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false;^146^^^^^121^160^[REPLACE] return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return this;^146^^^^^121^160^[REPLACE] return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.endToken (  )  ;^149^^^^^121^160^[REPLACE] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == false )  {^150^^^^^121^160^[REPLACE] if  ( _currToken != null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^151^^^^^121^160^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false;^152^^^^^121^160^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.nextToken (  )  ;^157^^^^^121^160^[REPLACE] _currToken = _nodeCursor.endToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = _nodeCursor.iterateChildren (  )  ;^158^^^^^121^160^[REPLACE] _nodeCursor = _nodeCursor.getParent (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false  ;^227^^^^^225^247^[REPLACE] return null;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return this;^227^^^^^225^247^[REPLACE] return null;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n == null && n.isBinary (  )  )  {^240^^^^^225^247^[REPLACE] if  ( n != null && n.isBinary (  )  )  {^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^240^241^242^243^^225^247^[ADD] if  ( n != null && n.isBinary (  )  )  {  return n.asText (  ) ; }^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return n.asToken (  ) ;^242^^^^^225^247^[REPLACE] return n.asText (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _nodeCursor.currentNode (  )  ;^232^^^^^225^247^[REPLACE] return _nodeCursor.getCurrentName (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNumericNode (  ) .bigIntegerValue (  )  ;^234^^^^^225^247^[REPLACE] return currentNode (  ) .textValue (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return String.valueOf ( currentNode (  )  .numberType (  )   ) ;^237^^^^^225^247^[REPLACE] return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _currToken.asString (  ) ;^245^^^^^225^247^[REPLACE] return  ( _currToken == null )  ? null : _currToken.asString (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonNode n = currentNumericNode (  )  ;^239^^^^^225^247^[REPLACE] JsonNode n = currentNode (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^JsonNode n = currentNumericNode (  )  ;^348^^^^^346^365^[REPLACE] JsonNode n = currentNode (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n == null )  {^349^^^^^346^365^[REPLACE] if  ( n != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^byte[] data = n.binaryValue (  ) ;return data;^349^350^^352^353^346^365^[ADD] if  ( n != null )  { byte[] data = n.binaryValue (  ) ; if  ( data != null )  { return data;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( data == null )  {^352^^^^^346^365^[REPLACE] if  ( data != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false  ;^353^^^^^346^365^[REPLACE] return data;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( !Object instanceof byte[] )  {^358^^^^^346^365^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^return  ( byte[] )  ob;^358^359^360^^^346^365^[ADD] if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^357^^^^^346^365^[ADD] Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( ! ob instanceof byte[] )  {^358^^^^^346^365^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^350^^^^^346^365^[ADD] byte[] data = n.binaryValue (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n.isObject (  )  )  {^356^^^^^346^365^[REPLACE] if  ( n.isPojo (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( !ObjectCodec instanceof byte[] )  {^358^^^^^346^365^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^Object ob =  (  ( POJONode )  n ) ._throwInternal (  ) ;^357^^^^^346^365^[REPLACE] Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^byte[] data = n.intValue (  ) ;^350^^^^^346^365^[REPLACE] byte[] data = n.binaryValue (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return false;^364^^^^^346^365^[REPLACE] return null;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
