[BugLab_Wrong_Literal]^e = OptionBuilder.isRequired ( false ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Wrong_Literal]^g = OptionBuilder.hasArgs ( 4 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^abcdeOptions.addOptionGroup ( aceOptionGroup ) ;^68^^^^^53^83^abcdeOptions.addOptionGroup ( og ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertTrue ( i.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertTrue ( f.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-a]",CLI2Converter.option ( i ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-a]",CLI2Converter.option ( g ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-a]",CLI2Converter.option ( f ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-bbb]",CLI2Converter.option ( f ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-bbb]",CLI2Converter.option ( h ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( f ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( g ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[--ddd]",CLI2Converter.option ( f ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[--ddd]",CLI2Converter.option ( i ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[--ddd]",CLI2Converter.option ( h ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "-e",CLI2Converter.option ( i ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "-e",CLI2Converter.option ( f ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( g ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( h ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( e ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( i ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( g ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( e ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( e ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( f ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[BugLab_Variable_Misuse]^group =  ( GroupImpl ) CLI2Converter.group ( og ) ;^98^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Wrong_Literal]^aceOptionGroup.setRequired ( false ) ;^103^^^^^95^108^aceOptionGroup.setRequired ( true ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Variable_Misuse]^group =  ( GroupImpl ) CLI2Converter.group ( og ) ;^104^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Wrong_Literal]^assertEquals ( 2,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Wrong_Literal]^assertEquals ( 0,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Variable_Misuse]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^116^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Wrong_Literal]^assertEquals ( 1,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Variable_Misuse]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Variable_Misuse]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^127^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[BugLab_Wrong_Literal]^assertEquals ( -1,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
