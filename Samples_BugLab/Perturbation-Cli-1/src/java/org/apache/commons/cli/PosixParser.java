[buglab_swap_variables]^if  ( token == 2 ) {^134^135^^^^130^157^if  ( tokenLength == 2 ) {^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^if  ( tokenLengthLength == 2 ) {^134^135^^^^130^157^if  ( tokenLength == 2 ) {^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken ( stopAtNonOption, token ) ;^144^^^^^138^145^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken (  stopAtNonOption ) ;^144^^^^^138^145^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken ( token ) ;^144^^^^^138^145^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^else if  ( token.hasOption ( options )  )  {^138^^^^^130^157^else if  ( options.hasOption ( token )  )  {^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken ( stopAtNonOption, token ) ;^144^^^^^130^157^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken (  stopAtNonOption ) ;^144^^^^^130^157^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken ( token ) ;^144^^^^^130^157^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken ( stopAtNonOption, token ) ;^136^^^^^134^145^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken (  stopAtNonOption ) ;^136^^^^^134^145^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken ( token ) ;^136^^^^^134^145^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken ( stopAtNonOption, token ) ;^136^^^^^130^157^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken (  stopAtNonOption ) ;^136^^^^^130^157^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken ( token ) ;^136^^^^^130^157^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^if  ( tokenLengthLength == 2 ) {^134^135^^^^119^149^if  ( tokenLength == 2 ) {^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^else if  ( token.hasOption ( options )  )  {^138^^^^^123^153^else if  ( options.hasOption ( token )  )  {^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken ( stopAtNonOption, token ) ;^144^^^^^129^159^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken (  stopAtNonOption ) ;^144^^^^^129^159^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^burstToken ( token ) ;^144^^^^^129^159^burstToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken ( stopAtNonOption, token ) ;^136^^^^^121^151^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken (  stopAtNonOption ) ;^136^^^^^121^151^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^processOptionToken ( token ) ;^136^^^^^121^151^processOptionToken ( token, stopAtNonOption ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^tokens.add ( token.substring ( 0.indexOf ( '=' )  )  ) ;^115^^^^^113^122^tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1.length (  )  )  ) ;^116^117^^^^113^122^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^tokens.add ( token.substring ( 0.indexOf ( '=' )  )  ) ;^115^^^^^100^130^tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1.length (  )  )  ) ;^116^117^^^^101^131^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^if  ( token == 2 ) {^134^135^^^^119^149^if  ( tokenLength == 2 ) {^[CLASS] PosixParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] Options  options  boolean  eatTheRest  stopAtNonOption  ArrayList  tokens  Iterator  iter  Option  currentOption  String[]  arguments  String  token  int  tokenLength  
[buglab_swap_variables]^if  ( token.hasOption ( this.options )  ) {^241^242^^^^239^250^if  ( this.options.hasOption ( token )  ) {^[CLASS] PosixParser  [METHOD] processOptionToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  
[buglab_swap_variables]^currentOption = token.getOption ( this.options ) ;^243^^^^^239^250^currentOption = this.options.getOption ( token ) ;^[CLASS] PosixParser  [METHOD] processOptionToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  
[buglab_swap_variables]^process ( i.substring ( token )  ) ;^301^^^^^299^306^process ( token.substring ( i )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^process ( i.substring ( token )  ) ;^301^^^^^279^308^process ( token.substring ( i )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^if  ( currentOption.hasArg (  )  &&  ( i.length (  )  !=  ( token + 1 )  )  ) {^292^293^^^^287^306^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^if  ( i.hasArg (  )  &&  ( token.length (  )  !=  ( currentOption + 1 )  )  ) {^292^293^^^^287^306^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^tokens.add ( i.substring ( token + 1 )  ) ;^294^^^^^287^306^tokens.add ( token.substring ( i + 1 )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^currentOption = ch.getOption ( options ) ;^290^^^^^287^306^currentOption = options.getOption ( ch ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^if  ( currentOption.hasArg (  )  &&  ( i.length (  )  !=  ( token + 1 )  )  ) {^292^293^^^^279^308^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^if  ( token.hasArg (  )  &&  ( currentOption.length (  )  !=  ( i + 1 )  )  ) {^292^293^^^^279^308^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^tokens.add ( i.substring ( token + 1 )  ) ;^294^^^^^292^297^tokens.add ( token.substring ( i + 1 )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^for  ( tokenLengthnt i = 1; i < i; i++ ) {^282^283^^^^279^308^for  ( int i = 1; i < tokenLength; i++ ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^process ( i.substring ( token )  ) ;^301^^^^^282^307^process ( token.substring ( i )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^if  ( currentOption.hasArg (  )  &&  ( i.length (  )  !=  ( token + 1 )  )  ) {^292^293^^^^282^307^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^if  ( i.hasArg (  )  &&  ( token.length (  )  !=  ( currentOption + 1 )  )  ) {^292^293^^^^282^307^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^tokens.add ( i.substring ( token + 1 )  ) ;^294^^^^^282^307^tokens.add ( token.substring ( i + 1 )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^currentOption = ch.getOption ( options ) ;^290^^^^^282^307^currentOption = options.getOption ( ch ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^if  ( token.hasArg (  )  &&  ( currentOption.length (  )  !=  ( i + 1 )  )  ) {^292^293^^^^282^307^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^String ch = String.valueOf ( i.charAt ( token )  ) ;^284^^^^^282^307^String ch = String.valueOf ( token.charAt ( i )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^boolean hasOption = ch.hasOption ( options ) ;^285^^^^^282^307^boolean hasOption = options.hasOption ( ch ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^currentOption = ch.getOption ( options ) ;^290^^^^^279^308^currentOption = options.getOption ( ch ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^String ch = String.valueOf ( i.charAt ( token )  ) ;^284^^^^^279^308^String ch = String.valueOf ( token.charAt ( i )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^boolean hasOption = ch.hasOption ( options ) ;^285^^^^^279^308^boolean hasOption = options.hasOption ( ch ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
[buglab_swap_variables]^tokens.add ( i.substring ( token + 1 )  ) ;^294^^^^^279^308^tokens.add ( token.substring ( i + 1 )  ) ;^[CLASS] PosixParser  [METHOD] burstToken [RETURN_TYPE] void   String token boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  boolean  eatTheRest  hasOption  stopAtNonOption  String  ch  token  int  i  tokenLength  
