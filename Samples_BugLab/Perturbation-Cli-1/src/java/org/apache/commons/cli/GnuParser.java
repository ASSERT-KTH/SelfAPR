[buglab_swap_variables]^else argumentsf  ( "-".equals ( i[i] )  ) {^76^77^^^^61^91^else if  ( "-".equals ( arguments[i] )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^else stopAtNonOptionf  ( i ) {^145^146^^^^130^160^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^else stopAtNonOptionf  ( i ) {^130^131^^^^115^145^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^else currentOptionf  ( i.hasArgs (  )  ) {^126^127^^^^111^141^else if  ( currentOption.hasArgs (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^else currentOptionf  ( i != null ) {^141^142^^^^126^156^else if  ( currentOption != null ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^Option specialOption = arguments.getOption ( options[i].substring ( 0, 2 )  ) ;^111^112^^^^96^126^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^else stopAtNonOptionf  ( i ) {^96^97^^^^81^111^else if  ( stopAtNonOption ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^else currentOptionf  (  ( i != null )  && currentOption.hasArg (  )  ) {^119^120^^^^104^134^else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^Option option = arguments.getOption ( options[i] ) ;^82^^^^^67^97^Option option = options.getOption ( arguments[i] ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^Option specialOption = arguments.getOption ( options[i].substring ( 0, 2 )  ) ;^88^89^^^^73^103^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^if  (  ( option != null )  &&  ( specialOption == null )  ) {^114^115^^^^99^129^if  (  ( specialOption != null )  &&  ( option == null )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^else argumentsf  ( i[i].startsWith ( "-" )  ) {^80^81^^^^65^95^else if  ( arguments[i].startsWith ( "-" )  ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^for  ( arguments.length++; i < i; i++ ) {^164^165^^^^162^168^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^for  ( argumentsnt i = 0; i < i.length; i++ ) {^69^70^^^^54^84^for  ( int i = 0; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^for  ( i++; i < arguments.length.length; i++ ) {^164^165^^^^162^168^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^for  ( arguments.length++; i < i; i++ ) {^164^165^^^^149^179^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
[buglab_swap_variables]^for  ( i++; i < arguments.length.length; i++ ) {^164^165^^^^149^179^for  ( i++; i < arguments.length; i++ ) {^[CLASS] GnuParser  [METHOD] flatten [RETURN_TYPE] String[]   Options options String[] arguments boolean stopAtNonOption [VARIABLES] ArrayList  tokens  Options  options  Option  currentOption  option  specialOption  String[]  arguments  boolean  eatTheRest  stopAtNonOption  int  i  
