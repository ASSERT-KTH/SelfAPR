[buglab_swap_variables]^tmpFont = new Font ( fontData, device ) ;^131^^^^^126^133^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font (  fontData ) ;^131^^^^^126^133^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( device ) ;^131^^^^^126^133^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( fontData, device ) ;^142^^^^^137^144^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font (  fontData ) ;^142^^^^^137^144^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( device ) ;^142^^^^^137^144^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( fontData, device ) ;^142^^^^^135^145^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font (  fontData ) ;^142^^^^^135^145^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( device ) ;^142^^^^^135^145^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^while  ( Az.textExtent ( tmpGC ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^137^138^^^^135^145^while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< font.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az )  )  {^138^^^^^135^145^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< Az.getFontMetrics ( font ) .stringWidth ( DUMMY_PANEL )  )  {^138^^^^^135^145^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( font )  )  {^138^^^^^135^145^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( fontData, device ) ;^142^^^^^127^157^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font (  fontData ) ;^142^^^^^127^157^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( device ) ;^142^^^^^127^157^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^else if  ( Az.textExtent ( tmpGC ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^135^136^^^^120^150^else if  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( font )  )  {^136^^^^^121^151^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< Az.getFontMetrics ( font ) .stringWidth ( DUMMY_PANEL )  )  {^136^^^^^121^151^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< font.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az )  )  {^136^^^^^121^151^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^while  ( Az.textExtent ( tmpGC ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^137^138^^^^122^152^while  ( tmpGC.textExtent ( Az ) .x < DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< font.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az )  )  {^138^^^^^123^153^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< Az.getFontMetrics ( font ) .stringWidth ( DUMMY_PANEL )  )  {^138^^^^^123^153^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( fontData, device ) ;^131^^^^^124^145^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font (  fontData ) ;^131^^^^^124^145^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( device ) ;^131^^^^^124^145^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^while  ( Az.textExtent ( tmpGC ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^126^127^^^^124^145^while  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( font )  )  {^127^^^^^124^145^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> Az.getFontMetrics ( font ) .stringWidth ( DUMMY_PANEL )  )  {^127^^^^^124^145^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> font.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az )  )  {^127^^^^^124^145^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( fontData, device ) ;^131^^^^^116^146^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font (  fontData ) ;^131^^^^^116^146^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpFont = new Font ( device ) ;^131^^^^^116^146^tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^Font tmpFont = new Font ( fontData, device ) ;^122^^^^^107^137^Font tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^Font tmpFont = new Font (  fontData ) ;^122^^^^^107^137^Font tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^Font tmpFont = new Font ( device ) ;^122^^^^^107^137^Font tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^if  ( Az.textExtent ( tmpGC ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^124^125^^^^109^139^if  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( font )  )  {^125^^^^^110^140^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> Az.getFontMetrics ( font ) .stringWidth ( DUMMY_PANEL )  )  {^125^^^^^110^140^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> font.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az )  )  {^125^^^^^110^140^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^while  ( Az.textExtent ( tmpGC ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^126^127^^^^111^141^while  ( tmpGC.textExtent ( Az ) .x > DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( font )  )  {^127^^^^^112^142^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> Az.getFontMetrics ( font ) .stringWidth ( DUMMY_PANEL )  )  {^127^^^^^112^142^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^> font.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az )  )  {^127^^^^^112^142^> DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^< DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( font )  )  {^138^^^^^123^153^< DUMMY_PANEL.getFontMetrics ( font ) .stringWidth ( Az )  )  {^[CLASS] SWTUtils  [METHOD] toSwtFontData [RETURN_TYPE] FontData   Device device Font font boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  Font  font  tmpFont  int  height  style  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( height.getName (  ) , style, fontData ) ;^201^202^^^^198^203^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , height, style ) ;^201^202^^^^198^203^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) ,  height ) ;^201^202^^^^198^203^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style ) ;^201^202^^^^198^203^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( height.getName (  ) , style, fontData ) ;^210^211^^^^207^212^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , height, style ) ;^210^211^^^^207^212^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) ,  height ) ;^210^211^^^^207^212^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style ) ;^210^211^^^^207^212^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( style.getName (  ) , fontData, height ) ;^201^202^^^^198^203^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( style.getName (  ) , fontData, height ) ;^210^211^^^^207^212^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( style.getName (  ) , fontData, height ) ;^210^211^^^^205^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , height, style ) ;^210^211^^^^205^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) ,  height ) ;^210^211^^^^205^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( height.getName (  ) , style, fontData ) ;^210^211^^^^205^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style ) ;^210^211^^^^205^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( tmpAwtFont.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^207^208^^^^205^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( tmpAwtFont ) < tmpGC.textExtent ( Az ) .x )  {^207^208^^^^205^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( Az.getFontMetrics ( tmpAwtFont ) .stringWidth ( DUMMY_PANEL ) < tmpGC.textExtent ( Az ) .x )  {^207^208^^^^205^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^< Az.textExtent ( tmpGC ) .x )  {^208^^^^^205^213^< tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( height.getName (  ) , style, fontData ) ;^210^211^^^^195^225^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , height, style ) ;^210^211^^^^195^225^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) ,  height ) ;^210^211^^^^195^225^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style ) ;^210^211^^^^195^225^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( style.getName (  ) , fontData, height ) ;^210^211^^^^195^225^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^else if  ( Az.getFontMetrics ( tmpAwtFont ) .stringWidth ( DUMMY_PANEL ) < tmpGC.textExtent ( Az ) .x )  {^205^206^^^^190^220^else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^else if  ( tmpAwtFont.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^205^206^^^^190^220^else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^< Az.textExtent ( tmpGC ) .x )  {^206^^^^^191^221^< tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( Az.getFontMetrics ( tmpAwtFont ) .stringWidth ( DUMMY_PANEL ) < tmpGC.textExtent ( Az ) .x )  {^207^208^^^^192^222^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( tmpAwtFont.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^207^208^^^^192^222^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^< Az.textExtent ( tmpGC ) .x )  {^208^^^^^193^223^< tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( style.getName (  ) , fontData, height ) ;^201^202^^^^196^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , height, style ) ;^201^202^^^^196^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) ,  height ) ;^201^202^^^^196^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( height.getName (  ) , style, fontData ) ;^201^202^^^^196^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style ) ;^201^202^^^^196^213^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( tmpAwtFont.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^198^199^^^^196^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( tmpAwtFont ) > tmpGC.textExtent ( Az ) .x )  {^198^199^^^^196^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( Az.getFontMetrics ( tmpAwtFont ) .stringWidth ( DUMMY_PANEL ) > tmpGC.textExtent ( Az ) .x )  {^198^199^^^^196^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^> Az.textExtent ( tmpGC ) .x )  {^199^^^^^196^213^> tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( style.getName (  ) , fontData, height ) ;^201^202^^^^186^216^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , height, style ) ;^201^202^^^^186^216^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) ,  height ) ;^201^202^^^^186^216^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style ) ;^201^202^^^^186^216^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^Font tmpFont = new Font ( fontData, device ) ;^191^^^^^176^206^Font tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^Font tmpFont = new Font (  fontData ) ;^191^^^^^176^206^Font tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^Font tmpFont = new Font ( device ) ;^191^^^^^176^206^Font tmpFont = new Font ( device, fontData ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^java.awt.Font tmpAwtFont = new java.awt.Font ( height.getName (  ) , style, fontData ) ;^194^195^^^^179^209^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , height, style ) ;^194^195^^^^179^209^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) ,  height ) ;^194^195^^^^179^209^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style ) ;^194^195^^^^179^209^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^java.awt.Font tmpAwtFont = new java.awt.Font ( style.getName (  ) , fontData, height ) ;^194^195^^^^179^209^java.awt.Font tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^if  ( Az.getFontMetrics ( tmpAwtFont ) .stringWidth ( DUMMY_PANEL ) > tmpGC.textExtent ( Az ) .x )  {^196^197^^^^181^211^if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^if  ( DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( tmpAwtFont ) > tmpGC.textExtent ( Az ) .x )  {^196^197^^^^181^211^if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^if  ( tmpAwtFont.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^196^197^^^^181^211^if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^> Az.textExtent ( tmpGC ) .x )  {^197^^^^^182^212^> tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( tmpAwtFont.getFontMetrics ( DUMMY_PANEL ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^198^199^^^^183^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( tmpAwtFont ) > tmpGC.textExtent ( Az ) .x )  {^198^199^^^^183^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( Az.getFontMetrics ( tmpAwtFont ) .stringWidth ( DUMMY_PANEL ) > tmpGC.textExtent ( Az ) .x )  {^198^199^^^^183^213^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) > tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^> Az.textExtent ( tmpGC ) .x )  {^199^^^^^184^214^> tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^else if  ( DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( tmpAwtFont ) < tmpGC.textExtent ( Az ) .x )  {^205^206^^^^190^220^else if  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^while  ( DUMMY_PANEL.getFontMetrics ( Az ) .stringWidth ( tmpAwtFont ) < tmpGC.textExtent ( Az ) .x )  {^207^208^^^^192^222^while  ( DUMMY_PANEL.getFontMetrics ( tmpAwtFont ) .stringWidth ( Az ) < tmpGC.textExtent ( Az ) .x )  {^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^tmpAwtFont = new java.awt.Font ( height.getName (  ) , style, fontData ) ;^201^202^^^^186^216^tmpAwtFont = new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^return new java.awt.Font ( height.getName (  ) , style, fontData ) ;^217^^^^^202^232^return new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^return new java.awt.Font ( style.getName (  ) , fontData, height ) ;^217^^^^^202^232^return new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^return new java.awt.Font ( fontData.getName (  ) ,  height ) ;^217^^^^^202^232^return new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^return new java.awt.Font ( fontData.getName (  ) , style ) ;^217^^^^^202^232^return new java.awt.Font ( fontData.getName (  ) , style, height ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device FontData fontData boolean ensureSameSize [VARIABLES] JPanel  DUMMY_PANEL  boolean  ensureSameSize  Device  device  FontData  fontData  String  Az  GC  tmpGC  int  height  style  Font  tmpAwtFont  tmpFont  
[buglab_swap_variables]^return toAwtFont ( fontData, device, true ) ;^230^^^^^228^231^return toAwtFont ( device, fontData, true ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device Font font [VARIABLES] JPanel  DUMMY_PANEL  String  Az  boolean  Device  device  Font  font  FontData  fontData  
[buglab_swap_variables]^return toAwtFont (  fontData, true ) ;^230^^^^^228^231^return toAwtFont ( device, fontData, true ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device Font font [VARIABLES] JPanel  DUMMY_PANEL  String  Az  boolean  Device  device  Font  font  FontData  fontData  
[buglab_swap_variables]^return toAwtFont ( device,  true ) ;^230^^^^^228^231^return toAwtFont ( device, fontData, true ) ;^[CLASS] SWTUtils  [METHOD] toAwtFont [RETURN_TYPE] Font   Device device Font font [VARIABLES] JPanel  DUMMY_PANEL  String  Az  boolean  Device  device  Font  font  FontData  fontData  
[buglab_swap_variables]^return new org.eclipse.swt.graphics.Color ( color, device.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^270^271^^^^255^272^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[CLASS] SWTUtils  [METHOD] toSwtColor [RETURN_TYPE] Color   Device device Paint paint [VARIABLES] JPanel  DUMMY_PANEL  boolean  Device  device  Color  color  String  Az  Paint  paint  Exception  e  
[buglab_swap_variables]^return new org.eclipse.swt.graphics.Color (  color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^270^271^^^^255^272^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[CLASS] SWTUtils  [METHOD] toSwtColor [RETURN_TYPE] Color   Device device Paint paint [VARIABLES] JPanel  DUMMY_PANEL  boolean  Device  device  Color  color  String  Az  Paint  paint  Exception  e  
[buglab_swap_variables]^return new org.eclipse.swt.graphics.Color ( device.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^270^271^^^^255^272^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[CLASS] SWTUtils  [METHOD] toSwtColor [RETURN_TYPE] Color   Device device Paint paint [VARIABLES] JPanel  DUMMY_PANEL  boolean  Device  device  Color  color  String  Az  Paint  paint  Exception  e  
[buglab_swap_variables]^return new org.eclipse.swt.graphics.Color ( color, device.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^285^286^^^^284^287^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[CLASS] SWTUtils  [METHOD] toSwtColor [RETURN_TYPE] Color   Device device Color color [VARIABLES] JPanel  DUMMY_PANEL  String  Az  boolean  Device  device  Color  color  
[buglab_swap_variables]^return new org.eclipse.swt.graphics.Color (  color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^285^286^^^^284^287^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[CLASS] SWTUtils  [METHOD] toSwtColor [RETURN_TYPE] Color   Device device Color color [VARIABLES] JPanel  DUMMY_PANEL  String  Az  boolean  Device  device  Color  color  
[buglab_swap_variables]^return new org.eclipse.swt.graphics.Color ( device.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^285^286^^^^284^287^return new org.eclipse.swt.graphics.Color ( device, color.getRed (  ) , color.getGreen (  ) , color.getBlue (  )  ) ;^[CLASS] SWTUtils  [METHOD] toSwtColor [RETURN_TYPE] Color   Device device Color color [VARIABLES] JPanel  DUMMY_PANEL  String  Az  boolean  Device  device  Color  color  
[buglab_swap_variables]^return new Point ( p.y.x, p ) ;^341^^^^^340^342^return new Point ( p.x, p.y ) ;^[CLASS] SWTUtils  [METHOD] toSwtPoint [RETURN_TYPE] Point   Point p [VARIABLES] JPanel  DUMMY_PANEL  String  Az  Point  p  boolean  
[buglab_swap_variables]^return new Point ( p.x.y ) ;^341^^^^^340^342^return new Point ( p.x, p.y ) ;^[CLASS] SWTUtils  [METHOD] toSwtPoint [RETURN_TYPE] Point   Point p [VARIABLES] JPanel  DUMMY_PANEL  String  Az  Point  p  boolean  
[buglab_swap_variables]^return new Point ( p, p.x.y ) ;^341^^^^^340^342^return new Point ( p.x, p.y ) ;^[CLASS] SWTUtils  [METHOD] toSwtPoint [RETURN_TYPE] Point   Point p [VARIABLES] JPanel  DUMMY_PANEL  String  Az  Point  p  boolean  
[buglab_swap_variables]^return new Point (  p.y ) ;^341^^^^^340^342^return new Point ( p.x, p.y ) ;^[CLASS] SWTUtils  [METHOD] toSwtPoint [RETURN_TYPE] Point   Point p [VARIABLES] JPanel  DUMMY_PANEL  String  Az  Point  p  boolean  
[buglab_swap_variables]^return new Point ( p.y, p.x ) ;^341^^^^^340^342^return new Point ( p.x, p.y ) ;^[CLASS] SWTUtils  [METHOD] toSwtPoint [RETURN_TYPE] Point   Point p [VARIABLES] JPanel  DUMMY_PANEL  String  Az  Point  p  boolean  
[buglab_swap_variables]^return new Point ( p.x ) ;^341^^^^^340^342^return new Point ( p.x, p.y ) ;^[CLASS] SWTUtils  [METHOD] toSwtPoint [RETURN_TYPE] Point   Point p [VARIABLES] JPanel  DUMMY_PANEL  String  Az  Point  p  boolean  
