[buglab_swap_variables]^for  ( Iterator resourcePool = it.iterator (  ) ;it.hasNext (  ) ; )  {^141^^^^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  {^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[buglab_swap_variables]^for  ( Iterator it = resourcePoolPool.iterator (  ) ;it.hasNext (  ) ; )  {^141^^^^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  {^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[buglab_swap_variables]^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) fontsPoolsPool.get ( font ) ;^161^162^^^^160^171^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) font.get ( fontsPool ) ;^161^162^^^^160^171^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^swtFont = new org.eclipse.swt.graphics.Font ( font.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , gc, true )  ) ;^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) ,  true )  ) ;^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^SWTUtils.toSwtFontData ( font.getDevice (  ) , gc, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^SWTUtils.toSwtFontData ( gc.getDevice (  ) ,  true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^fontsPool.put ( swtFont, font ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^fontsPool.put (  swtFont ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^fontsPool.put ( font ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[buglab_swap_variables]^swtColor = SWTUtils.toSwtColor ( awtColor.getDevice (  ) , gc ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[buglab_swap_variables]^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  )  ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[buglab_swap_variables]^this.colorsPool.put ( new Integer ( swtColor.getRGB (  )  ) , awtColor ) ;^194^^^^^183^197^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[buglab_swap_variables]^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  )  ) ;^194^^^^^183^197^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[buglab_swap_variables]^type = coords.currentSegment ( pit ) ;^225^^^^^219^249^type = pit.currentSegment ( coords ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[buglab_swap_variables]^path.moveTo ( coords[0][1] ) ;^228^^^^^219^249^path.moveTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[buglab_swap_variables]^path.lineTo ( coords[0][1] ) ;^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[buglab_swap_variables]^path.quadTo ( coords[0][1], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[buglab_swap_variables]^path.cubicTo ( coords[0][1], coords[2], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[buglab_swap_variables]^= new org.eclipse.swt.graphics.Image ( image.getDevice (  ) , convertToSWT ( gc )  ) ;^308^309^^^^305^312^= new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( image.getDevice (  ) , convertToSWT ( gc )  ) ;^307^308^309^^^305^312^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^gc.drawImage ( y, x, im ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^gc.drawImage (  x, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^gc.drawImage ( x, im, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^gc.drawImage ( im,  y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^gc.drawImage ( im, y, x ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^gc.drawImage ( im, x ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[buglab_swap_variables]^gc.drawImage ( y, x, image ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawImage (  x, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawImage ( x, image, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawImage ( image,  y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawImage ( image, y, x ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawImage ( image, x ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawString (  x,  ( int )   ( y - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawString ( text, y,  ( int )   ( x - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawString ( text,   ( int )   ( y - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawString ( y, x,  ( int )   ( text - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawString ( text, x,  ( int )   ( fm - y ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[buglab_swap_variables]^gc.drawString ( y,  ( int )  x,  ( int )   (  text - fm  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[buglab_swap_variables]^gc.drawString (   ( int )  x,  ( int )   (  y - fm  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[buglab_swap_variables]^gc.drawString ( text,  ( int )  x,  ( int )   (  fm - y  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[buglab_swap_variables]^for  ( swtDashes.lengthnt i = 0; i < i; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[buglab_swap_variables]^swtDashes[i] =  ( dashesnt )  i[i];^475^^^^^460^490^swtDashes[i] =  ( int )  dashes[i];^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[buglab_swap_variables]^for  ( swtDashesnt i = 0; i < i.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[buglab_swap_variables]^swtTransform.translate ( y, x ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[buglab_swap_variables]^swtTransform.translate (  y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[buglab_swap_variables]^swtTransform.translate ( x ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[buglab_swap_variables]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( color.getDevice (  ) , gc ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[buglab_swap_variables]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  )  ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[buglab_swap_variables]^return SWTUtils.toAwtFont ( fontData.getDevice (  ) , gc[0], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[buglab_swap_variables]^return SWTUtils.toAwtFont ( gc.getDevice (  ) [0], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[buglab_swap_variables]^clip.intersects ( height, y, width, x ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^clip.intersects (  y, width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^clip.intersects ( x, height, width, y ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^clip.intersects ( x,  width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^clip.intersects ( width, y, x, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^clip.intersects ( x, y,  height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^clip.intersects ( x, y, height, width ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^clip.intersects ( x, y, width ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping ( height, y, width, x ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping (  y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping ( y, x, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping ( x,  width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping ( width, y, x, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping ( x, y,  height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping ( x, height, width, y ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.setClipping ( x, y, width ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.drawLine ( y1, x1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.drawLine (  y1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.drawLine ( x1, y2, x2, y1 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.drawLine ( x1,  x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.drawLine ( x1, x2, y1, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.drawLine ( x1, y1,  y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.drawLine ( y2, y1, x2, x1 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.drawLine ( x1, y1, x2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[buglab_swap_variables]^gc.fillRectangle ( height, y, width, x ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.fillRectangle (  y, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.fillRectangle ( x,  width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.fillRectangle ( x, y,  height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.fillRectangle ( x, y, height, width ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^gc.fillRectangle ( x, y, width ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[buglab_swap_variables]^rgbs[i] = new RGB ( greens[i] & 0xFF, reds[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^rgbs[i] = new RGB ( reds[i] & 0xFF, blues[i] & 0xFF, greens[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^rgbs[i] = new RGB ( reds[i] & 0xFF[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^rgbs[i] = new RGB ( blues[i] & 0xFF, greens[i] & 0xFF, reds[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( y, x, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel (  y, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( x,  pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( pixelArray, y, x ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( x, y ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( y, x, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel (  y, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( x,  pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( pixelArray, y, x[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( x, y[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( x, pixelArray, y ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( colorModel.getWidth (  ) , bufferedImage.getHeight (  ) , bufferedImage.getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) .getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) .getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , palette.getPixelSize (  ) , colorModel ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  )  ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( x, pixelArray, y[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( palette.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , bufferedImage ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^int pixel = pixelArray.getPixel ( new RGB ( palette[0], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^int pixel = palette.getPixel ( new RGB ( pixelArray[0][1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel (  y, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( x,  pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( x, y ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( pixel, y, x ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel (  y, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( x, pixel, y ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( x,  pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( x, y ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( y, x, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( x, pixelArray, y ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^raster.getPixel ( pixelArray, y, x ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( palette.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , bufferedImage ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) .getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( colorModel.getWidth (  ) , bufferedImage.getHeight (  ) , bufferedImage.getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) .getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  )  ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , palette.getPixelSize (  ) , colorModel ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[buglab_swap_variables]^data.setPixel ( y, x, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
