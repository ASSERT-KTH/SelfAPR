[buglab_swap_variables]^result = 37 * gp + result.getColor1 (  ) .hashCode (  ) ;^72^^^^^64^84^result = 37 * result + gp.getColor1 (  ) .hashCode (  ) ;^[CLASS] HashUtilities  [METHOD] hashCodeForPaint [RETURN_TYPE] int   Paint p [VARIABLES] boolean  GradientPaint  gp  Paint  p  int  result  
[buglab_swap_variables]^result = 37 * gp + result.getPoint1 (  ) .hashCode (  ) ;^73^^^^^64^84^result = 37 * result + gp.getPoint1 (  ) .hashCode (  ) ;^[CLASS] HashUtilities  [METHOD] hashCodeForPaint [RETURN_TYPE] int   Paint p [VARIABLES] boolean  GradientPaint  gp  Paint  p  int  result  
[buglab_swap_variables]^result = 37 * gp + result.getColor2 (  ) .hashCode (  ) ;^74^^^^^64^84^result = 37 * result + gp.getColor2 (  ) .hashCode (  ) ;^[CLASS] HashUtilities  [METHOD] hashCodeForPaint [RETURN_TYPE] int   Paint p [VARIABLES] boolean  GradientPaint  gp  Paint  p  int  result  
[buglab_swap_variables]^result = 37 * gp + result.getPoint2 (  ) .hashCode (  ) ;^75^^^^^64^84^result = 37 * result + gp.getPoint2 (  ) .hashCode (  ) ;^[CLASS] HashUtilities  [METHOD] hashCodeForPaint [RETURN_TYPE] int   Paint p [VARIABLES] boolean  GradientPaint  gp  Paint  p  int  result  
[buglab_swap_variables]^for  ( a.lengthnt i = 0; i < i; i++ )  {^100^^^^^94^105^for  ( int i = 0; i < a.length; i++ )  {^[CLASS] HashUtilities  [METHOD] hashCodeForDoubleArray [RETURN_TYPE] int   double[] a [VARIABLES] boolean  double[]  a  int  i  result  long  temp  
[buglab_swap_variables]^result = 29 * temp +  ( int )   ( result ^  ( temp >>> 32 )  ) ;^102^^^^^94^105^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] HashUtilities  [METHOD] hashCodeForDoubleArray [RETURN_TYPE] int   double[] a [VARIABLES] boolean  double[]  a  int  i  result  long  temp  
