[buglab_swap_variables]^this.autoRangeCheckBox = new JCheckBox ( this.autoRange.getString ( "Auto-adjust_range" ) , localizationResources ) ;^142^143^144^^^127^157^this.autoRangeCheckBox = new JCheckBox ( localizationResources.getString ( "Auto-adjust_range" ) , this.autoRange ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[buglab_swap_variables]^this.autoRangeCheckBox = new JCheckBox ( localizationResources.getString ( "Auto-adjust_range" )  ) ;^142^143^144^^^127^157^this.autoRangeCheckBox = new JCheckBox ( localizationResources.getString ( "Auto-adjust_range" ) , this.autoRange ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[buglab_swap_variables]^other.add ( range.getString ( "Range" ) , localizationResources ) ;^176^^^^^161^191^other.add ( localizationResources.getString ( "Range" ) , range ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[buglab_swap_variables]^other.add ( localizationResources.getString ( "Range" )  ) ;^176^^^^^161^191^other.add ( localizationResources.getString ( "Range" ) , range ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[buglab_swap_variables]^int result = JOptionPane.showConfirmDialog ( this,  localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^241^242^243^244^^237^249^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridStrokeSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  StrokeChooserPanel  panel  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  int  result  
[buglab_swap_variables]^int result = JOptionPane.showConfirmDialog ( this, panel.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^241^242^243^244^^237^249^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridStrokeSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  StrokeChooserPanel  panel  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  int  result  
[buglab_swap_variables]^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane. JOptionPane.PLAIN_MESSAGE ) ;^241^242^243^244^^237^249^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridStrokeSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  StrokeChooserPanel  panel  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  int  result  
[buglab_swap_variables]^c = JColorChooser.showDialog ( this.getString ( "Grid_Color" ) , Color.blue ) ;^256^257^258^^^254^262^c = JColorChooser.showDialog ( this, localizationResources.getString ( "Grid_Color" ) , Color.blue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridPaintSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  Color  c  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[buglab_swap_variables]^if  ( this.minimumRangeValue.getSource (  )  == event )  {^279^^^^^278^285^if  ( event.getSource (  )  == this.minimumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[buglab_swap_variables]^else if  ( this.maximumRangeValue.getSource (  )  == event )  {^282^^^^^278^285^else if  ( event.getSource (  )  == this.maximumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[buglab_swap_variables]^if  ( this.maximumValue >= newMin )  {^311^^^^^307^321^if  ( newMin >= this.maximumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[buglab_swap_variables]^if  ( this.minimumValue <= newMax )  {^330^^^^^326^340^if  ( newMax <= this.minimumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[buglab_swap_variables]^numberAxis.setRange ( this.maximumValue, this.minimumValue ) ;^353^^^^^348^355^numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
[buglab_swap_variables]^numberAxis.setRange (  this.maximumValue ) ;^353^^^^^348^355^numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
[buglab_swap_variables]^numberAxis.setRange ( this.minimumValue ) ;^353^^^^^348^355^numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
