[BugLab_Variable_Misuse]^this.gridPaintSample = new PaintSample ( Color.null ) ;^125^^^^^110^140^this.gridPaintSample = new PaintSample ( Color.blue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^this.availableStrokeSamples = new StrokeSample[];^128^^^^^113^143^this.availableStrokeSamples = new StrokeSample[3];^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^this.availableStrokeSamples[-1] = new StrokeSample ( new BasicStroke ( 1.-1f )  ) ;^129^130^^^^114^144^this.availableStrokeSamples[0] = new StrokeSample ( new BasicStroke ( 1.0f )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^this.availableStrokeSamples[0] = new StrokeSample ( new BasicStroke ( 2.0f )  ) ;^131^132^^^^116^146^this.availableStrokeSamples[1] = new StrokeSample ( new BasicStroke ( 2.0f )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^JPanel range = new JPanel ( new LCBLayout ( 2 )  ) ;^138^^^^^123^153^JPanel range = new JPanel ( new LCBLayout ( 3 )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^range.setBorder ( BorderFactory.createEmptyBorder ( 3, 3, 3, 3 )  ) ;^139^^^^^124^154^range.setBorder ( BorderFactory.createEmptyBorder ( 4, 4, 4, 4 )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^range.setBorder ( BorderFactory.createEmptyBorder ( 5, 5, 5, 5 )  ) ;^139^^^^^124^154^range.setBorder ( BorderFactory.createEmptyBorder ( 4, 4, 4, 4 )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^range.setBorder ( BorderFactory.createEmptyBorder ( , , ,  )  ) ;^139^^^^^124^154^range.setBorder ( BorderFactory.createEmptyBorder ( 4, 4, 4, 4 )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.autoRangeCheckBox = new JCheckBox ( localizationResources.getString ( "Auto-adjust_range" ) , autoRange ) ;^142^143^144^^^127^157^this.autoRangeCheckBox = new JCheckBox ( localizationResources.getString ( "Auto-adjust_range" ) , this.autoRange ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Argument_Swapping]^this.autoRangeCheckBox = new JCheckBox ( this.autoRange.getString ( "Auto-adjust_range" ) , localizationResources ) ;^142^143^144^^^127^157^this.autoRangeCheckBox = new JCheckBox ( localizationResources.getString ( "Auto-adjust_range" ) , this.autoRange ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^range.add ( autoRangeCheckBox ) ;^147^^^^^132^162^range.add ( this.autoRangeCheckBox ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.minimumRangeValue = new JTextField ( Double.toString ( minimumValue ) ) ;^153^154^155^^^138^168^this.minimumRangeValue = new JTextField ( Double.toString ( this.minimumValue ) ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^Double.toString ( minimumValue ) ) ;^154^155^^^^139^169^Double.toString ( this.minimumValue ) ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.maximumRangeValue = new JTextField ( Double.toString ( minimumValue ) ) ;^166^167^168^^^151^181^this.maximumRangeValue = new JTextField ( Double.toString ( this.maximumValue ) ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^Double.toString ( minimumValue ) ) ;^167^168^^^^152^182^Double.toString ( this.maximumValue ) ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.maximumRangeValue.setEnabled ( !autoRange ) ;^169^^^^^154^184^this.maximumRangeValue.setEnabled ( !this.autoRange ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^range.add ( minimumRangeValue ) ;^173^^^^^158^188^range.add ( this.maximumRangeValue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Argument_Swapping]^other.add ( range.getString ( "Range" ) , localizationResources ) ;^176^^^^^161^191^other.add ( localizationResources.getString ( "Range" ) , range ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] <init> [RETURN_TYPE] NumberAxis)   NumberAxis axis [VARIABLES] JCheckBox  autoRangeCheckBox  JPanel  range  boolean  autoRange  NumberAxis  axis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  JTabbedPane  other  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^return autoRange;^186^^^^^185^187^return this.autoRange;^[CLASS] DefaultNumberAxisEditor  [METHOD] isAutoRange [RETURN_TYPE] boolean   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^return minimumValue;^204^^^^^203^205^return this.maximumValue;^[CLASS] DefaultNumberAxisEditor  [METHOD] getMaximumValue [RETURN_TYPE] double   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^StrokeChooserPanel panel = new StrokeChooserPanel ( null, availableStrokeSamples ) ;^238^239^240^^^237^249^StrokeChooserPanel panel = new StrokeChooserPanel ( null, this.availableStrokeSamples ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridStrokeSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  StrokeChooserPanel  panel  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  int  result  
[BugLab_Variable_Misuse]^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.result ) ;^241^242^243^244^^237^249^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridStrokeSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  StrokeChooserPanel  panel  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  int  result  
[BugLab_Argument_Swapping]^int result = JOptionPane.showConfirmDialog ( this, localizationResources, panel.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^241^242^243^244^^237^249^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridStrokeSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  StrokeChooserPanel  panel  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  int  result  
[BugLab_Wrong_Operator]^if  ( result != JOptionPane.OK_OPTION )  {^246^^^^^237^249^if  ( result == JOptionPane.OK_OPTION )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridStrokeSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  StrokeChooserPanel  panel  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  int  result  
[BugLab_Variable_Misuse]^c = JColorChooser.showDialog ( this, localizationResources.getString ( "Grid_Color" ) , Color.c ) ;^256^257^258^^^254^262^c = JColorChooser.showDialog ( this, localizationResources.getString ( "Grid_Color" ) , Color.blue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridPaintSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  Color  c  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Operator]^if  ( c == null )  {^259^^^^^254^262^if  ( c != null )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] attemptGridPaintSelection [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  Color  c  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Argument_Swapping]^if  ( this.minimumRangeValue.getSource (  )  == event )  {^279^^^^^278^285^if  ( event.getSource (  )  == this.minimumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[BugLab_Wrong_Operator]^if  ( event.getSource (  )  != this.minimumRangeValue )  {^279^^^^^278^285^if  ( event.getSource (  )  == this.minimumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[BugLab_Wrong_Operator]^if  ( event.getSource (  )  >= this.minimumRangeValue )  {^279^^^^^278^285^if  ( event.getSource (  )  == this.minimumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[BugLab_Variable_Misuse]^else if  ( event.getSource (  )  == minimumRangeValue )  {^282^^^^^278^285^else if  ( event.getSource (  )  == this.maximumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[BugLab_Argument_Swapping]^else if  ( this.maximumRangeValue.getSource (  )  == event )  {^282^^^^^278^285^else if  ( event.getSource (  )  == this.maximumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[BugLab_Wrong_Operator]^else if  ( event.getSource (  )  <= this.maximumRangeValue )  {^282^^^^^278^285^else if  ( event.getSource (  )  == this.maximumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[BugLab_Wrong_Operator]^else if  ( event.getSource (  )  != this.maximumRangeValue )  {^282^^^^^278^285^else if  ( event.getSource (  )  == this.maximumRangeValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] focusLost [RETURN_TYPE] void   FocusEvent event [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  FocusEvent  event  
[BugLab_Variable_Misuse]^this.autoRange = autoRangeCheckBox.isSelected (  ) ;^291^^^^^290^302^this.autoRange = this.autoRangeCheckBox.isSelected (  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^if  ( autoRange )  {^292^^^^^290^302^if  ( this.autoRange )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^this.minimumRangeValue.setEnabled ( false ) ;^299^^^^^290^302^this.minimumRangeValue.setEnabled ( true ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^this.maximumRangeValue.setEnabled ( false ) ;^300^^^^^290^302^this.maximumRangeValue.setEnabled ( true ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.minimumRangeValue.setText ( Double.toString ( minimumValue )  ) ;^293^^^^^290^302^this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^this.minimumRangeValue.setEnabled ( true ) ;^294^^^^^290^302^this.minimumRangeValue.setEnabled ( false ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.maximumRangeValue.setText ( Double.toString ( minimumValue )  ) ;^295^^^^^290^302^this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Literal]^this.maximumRangeValue.setEnabled ( true ) ;^296^^^^^290^302^this.maximumRangeValue.setEnabled ( false ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] toggleAutoRange [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^if  ( minimumValue >= this.maximumValue )  {^311^^^^^307^321^if  ( newMin >= this.maximumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^if  ( newMin >= newMin )  {^311^^^^^307^321^if  ( newMin >= this.maximumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Operator]^if  ( newMin == this.maximumValue )  {^311^^^^^307^321^if  ( newMin >= this.maximumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^newMin = newMin;^312^^^^^307^321^newMin = this.minimumValue;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Argument_Swapping]^if  ( this.maximumValue >= newMin )  {^311^^^^^307^321^if  ( newMin >= this.maximumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Operator]^if  ( newMin > this.maximumValue )  {^311^^^^^307^321^if  ( newMin >= this.maximumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^newMin = minimumValue;^312^^^^^307^321^newMin = this.minimumValue;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^newMin = Double.parseDouble ( minimumRangeValue.getText (  )  ) ;^310^^^^^307^321^newMin = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.minimumValue = minimumValue;^319^^^^^307^321^this.minimumValue = newMin;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.minimumRangeValue.setText ( Double.toString ( newMin )  ) ;^320^^^^^307^321^this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMinimum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^if  ( newMin <= this.minimumValue )  {^330^^^^^326^340^if  ( newMax <= this.minimumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^if  ( newMax <= newMax )  {^330^^^^^326^340^if  ( newMax <= this.minimumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Argument_Swapping]^if  ( this.minimumValue <= newMax )  {^330^^^^^326^340^if  ( newMax <= this.minimumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Operator]^if  ( newMax == this.minimumValue )  {^330^^^^^326^340^if  ( newMax <= this.minimumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^newMax = newMin;^331^^^^^326^340^newMax = this.maximumValue;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Wrong_Operator]^if  ( newMax < this.minimumValue )  {^330^^^^^326^340^if  ( newMax <= this.minimumValue )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^newMax = newMax;^331^^^^^326^340^newMax = this.maximumValue;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^newMax = Double.parseDouble ( minimumRangeValue.getText (  )  ) ;^329^^^^^326^340^newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^newMax = newMax;^335^^^^^326^340^newMax = this.maximumValue;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.maximumValue = newMin;^338^^^^^326^340^this.maximumValue = newMax;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^this.maximumRangeValue.setText ( Double.toString ( newMax )  ) ;^339^^^^^326^340^this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] validateMaximum [RETURN_TYPE] void   [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  NumberFormatException  e  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  
[BugLab_Variable_Misuse]^numberAxis.setAutoRange ( autoRange ) ;^351^^^^^348^355^numberAxis.setAutoRange ( this.autoRange ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
[BugLab_Variable_Misuse]^if  ( !autoRange )  {^352^^^^^348^355^if  ( !this.autoRange )  {^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
[BugLab_Variable_Misuse]^numberAxis.setRange ( newMin, this.maximumValue ) ;^353^^^^^348^355^numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
[BugLab_Variable_Misuse]^numberAxis.setRange ( this.minimumValue, newMax ) ;^353^^^^^348^355^numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
[BugLab_Argument_Swapping]^numberAxis.setRange ( this.maximumValue, this.minimumValue ) ;^353^^^^^348^355^numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[CLASS] DefaultNumberAxisEditor  [METHOD] setAxisProperties [RETURN_TYPE] void   Axis axis [VARIABLES] JCheckBox  autoRangeCheckBox  boolean  autoRange  NumberAxis  numberAxis  PaintSample  gridPaintSample  double  maximumValue  minimumValue  newMax  newMin  ResourceBundle  localizationResources  StrokeSample  gridStrokeSample  JTextField  maximumRangeValue  minimumRangeValue  StrokeSample[]  availableStrokeSamples  Axis  axis  
