[BugLab_Wrong_Operator]^if  ( stream != null )  {^110^^^^^108^133^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^if  ( !isCyclic )  {^115^^^^^108^133^if  ( !isNull )  {^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^else if  ( c.equals ( GradientPaint.c )  )  {^120^^^^^108^133^else if  ( c.equals ( GradientPaint.class )  )  {^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( y2, y1, c1, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, x2, c1, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y1, c1, y2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y1, c1, x2, y1, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isNull ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( y2, y1, c1, x2, x1, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, c1, y1, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, c2, x2, y2, c1, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, x2, c1, y1, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, c1, y2, x2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, isCyclic, c1, x2, y2, c2, y1 ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y1, c1, x2, y2, c1, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( y1, x1, c1, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( c1, y1, x1, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, c1, x2, isCyclic, c2, y2 ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, c1, x2, y2, isCyclic, c2 ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( y1, y1, c1, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y2, c1, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y2, c1, x2, y1, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y1, c1, x2, x2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x2, y1, c1, x1, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, y2, x2, c1, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, c2, c1, x2, y2, y1, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, c1, isCyclic, y2, c2, x2 ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y1, c2, x2, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result = new GradientPaint ( x1, y1, c1, y1, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, isCyclic, x2, y2, c2, c1 ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( isCyclic, y1, c1, x2, y2, c2, x1 ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, x2, c1, y2, c2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new GradientPaint ( x1, y1, c1, x2, c2, y2, isCyclic ) ;^128^^^^^108^133^result = new GradientPaint ( x1, y1, c1, x2, y2, c2, isCyclic ) ;^[CLASS] SerialUtilities  [METHOD] readPaint [RETURN_TYPE] Paint   ObjectInputStream stream [VARIABLES] boolean  isCyclic  isNull  Color  c1  c2  Class  c  Paint  result  float  x1  x2  y1  y2  ObjectInputStream  stream  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^146^^^^^144^170^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( paint == null )  {^149^^^^^144^170^if  ( paint != null )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Literal]^stream.writeBoolean ( false ) ;^167^^^^^149^168^stream.writeBoolean ( true ) ;^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( paint  &&  Serializable )  {^152^^^^^144^170^if  ( paint instanceof Serializable )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( paint  !=  Serializable )  {^152^^^^^144^170^if  ( paint instanceof Serializable )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^else if  ( paint  ||  GradientPaint )  {^155^^^^^144^170^else if  ( paint instanceof GradientPaint )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^else if  ( paint  |  GradientPaint )  {^155^^^^^144^170^else if  ( paint instanceof GradientPaint )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Literal]^stream.writeBoolean ( true ) ;^150^^^^^144^170^stream.writeBoolean ( false ) ;^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( paint  &  Serializable )  {^152^^^^^144^170^if  ( paint instanceof Serializable )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( paint  >>  Serializable )  {^152^^^^^144^170^if  ( paint instanceof Serializable )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^else if  ( paint  &&  GradientPaint )  {^155^^^^^144^170^else if  ( paint instanceof GradientPaint )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^else if  ( paint  <<  GradientPaint )  {^155^^^^^144^170^else if  ( paint instanceof GradientPaint )  {^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Literal]^stream.writeBoolean ( false ) ;^167^^^^^144^170^stream.writeBoolean ( true ) ;^[CLASS] SerialUtilities  [METHOD] writePaint [RETURN_TYPE] void   Paint paint ObjectOutputStream stream [VARIABLES] boolean  GradientPaint  gp  Paint  paint  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^186^^^^^184^209^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^if  ( c.equals ( BasicStroke.c )  )  {^193^^^^^184^209^if  ( c.equals ( BasicStroke.class )  )  {^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( dashPhase, cap, join, miterLimit, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( width, join, join, miterLimit, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( width, cap, join, width, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( width, cap, join, miterLimit, dash, width ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( miterLimit, cap, join, width, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, join, cap, miterLimit, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( dash, cap, join, miterLimit, width, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, cap, join, miterLimit, dashPhase, dash ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( miterLimit, cap, join, miterLimit, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( width, cap, join, miterLimit, dash, miterLimit ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( cap, width, join, miterLimit, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, cap, join, dash, miterLimit, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( dashPhase, cap, join, miterLimit, dash, width ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( width, cap, join, dashPhase, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, cap, dashPhase, miterLimit, dash, join ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, cap, join, dashPhase, dash, miterLimit ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, miterLimit, join, cap, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, cap, miterLimit, join, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, cap, dash, miterLimit, join, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, dash, join, miterLimit, cap, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Variable_Misuse]^result = new BasicStroke ( width, cap, cap, miterLimit, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( join, cap, width, miterLimit, dash, dashPhase ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Argument_Swapping]^result = new BasicStroke ( width, dashPhase, join, miterLimit, dash, cap ) ;^200^201^^^^184^209^result = new BasicStroke ( width, cap, join, miterLimit, dash, dashPhase ) ;^[CLASS] SerialUtilities  [METHOD] readStroke [RETURN_TYPE] Stroke   ObjectInputStream stream [VARIABLES] Stroke  result  boolean  isNull  Class  c  float  dashPhase  miterLimit  width  int  cap  join  ObjectInputStream  stream  float[]  dash  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^225^^^^^223^248^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] writeStroke [RETURN_TYPE] void   Stroke stroke ObjectOutputStream stream [VARIABLES] BasicStroke  s  Stroke  stroke  boolean  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( stroke == null )  {^228^^^^^223^248^if  ( stroke != null )  {^[CLASS] SerialUtilities  [METHOD] writeStroke [RETURN_TYPE] void   Stroke stroke ObjectOutputStream stream [VARIABLES] BasicStroke  s  Stroke  stroke  boolean  ObjectOutputStream  stream  
[BugLab_Wrong_Literal]^stream.writeBoolean ( false ) ;^246^^^^^223^248^stream.writeBoolean ( true ) ;^[CLASS] SerialUtilities  [METHOD] writeStroke [RETURN_TYPE] void   Stroke stroke ObjectOutputStream stream [VARIABLES] BasicStroke  s  Stroke  stroke  boolean  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( stroke  >=  BasicStroke )  {^230^^^^^223^248^if  ( stroke instanceof BasicStroke )  {^[CLASS] SerialUtilities  [METHOD] writeStroke [RETURN_TYPE] void   Stroke stroke ObjectOutputStream stream [VARIABLES] BasicStroke  s  Stroke  stroke  boolean  ObjectOutputStream  stream  
[BugLab_Wrong_Literal]^stream.writeBoolean ( true ) ;^229^^^^^223^248^stream.writeBoolean ( false ) ;^[CLASS] SerialUtilities  [METHOD] writeStroke [RETURN_TYPE] void   Stroke stroke ObjectOutputStream stream [VARIABLES] BasicStroke  s  Stroke  stroke  boolean  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( stroke  &&  BasicStroke )  {^230^^^^^223^248^if  ( stroke instanceof BasicStroke )  {^[CLASS] SerialUtilities  [METHOD] writeStroke [RETURN_TYPE] void   Stroke stroke ObjectOutputStream stream [VARIABLES] BasicStroke  s  Stroke  stroke  boolean  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^264^^^^^249^279^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^while  ( !isNull )  {^306^^^^^291^321^while  ( !hasNext )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^for  ( typent i = 0; i < 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = at; i < 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[-1], args[1] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[i], args[1] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[0], args[type] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[i], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[at], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[-1], args[1], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[3], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[2], args[type] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^if  ( !hasNext )  {^269^^^^^254^284^if  ( !isNull )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < type; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[0], args[] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[0], args[at] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[at], args[1], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[at], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[type], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[2], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[i], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[type], args[1], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[type], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[i], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[2], args[] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^if  ( c.equals ( Line2D.c )  )  {^271^^^^^256^286^if  ( c.equals ( Line2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^if  ( c.equals ( Line3D.class )  )  {^271^^^^^256^286^if  ( c.equals ( Line2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = i; i < 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < i; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[at], args[1] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[1], args[1] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[0], args[i] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[type], args[1], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[6] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[1], args[1], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[1], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[2], args[i] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( c.equals ( Rectangle2D.class )  )  {^278^^^^^263^293^else if  ( c.equals ( Rectangle2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else if  ( c.equals ( Rectangle2D.c )  )  {^278^^^^^263^293^else if  ( c.equals ( Rectangle2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( RectangleiD.class )  )  {^278^^^^^263^293^else if  ( c.equals ( Rectangle2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = ; i < 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = type; i < 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[0], args[0] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[0], args[0] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[0], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[i] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[0], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[at], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( c.equals ( Ellipse2D.class )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else if  ( c.equals ( Ellipse2D.c )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( Ellipse1D.class )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[i], args[1] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[0], args[i] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[1], args[1], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[type], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[2], args[4] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( c.equals ( Arc2D.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else if  ( c.equals ( Arc2D.c )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( ArcatD.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < at; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[-1], args[1] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[2], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[i], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[type], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( c.equals ( GeneralPath.class )  )  {^302^^^^^287^317^else if  ( c.equals ( GeneralPath.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^else if  ( c.equals ( GeneralPath.c )  )  {^302^^^^^287^317^else if  ( c.equals ( GeneralPath.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < 5; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[1], args[1] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[0], args[at] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[type], args[1] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[i], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[], args[1], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[0], args[2] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[at], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[4] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[2], args[at] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[i];^304^^^^^289^319^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[0], args[2] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[i], args[1], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[at], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[5], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[at], args[1], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[at], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[2], args[2] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( y2, y, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y2, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, y, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, y, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, as, y, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( ae, y, w, h, as, x, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, as, w, h, y, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, as, h, w, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, w, ae, as, h, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, w, h, ae, as, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, w, h, at, ae, as ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( y1, y, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, x2, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, x2, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, x2, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, as, y2, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, as, ae, type ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( as, y, w, h, x, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, h, w, y, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( w, y, x, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, ae, h, as, w, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, at, w, h, as, ae, y ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > 6; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[], args[1], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[], args[1] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[3], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( y, y, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, y, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, y2, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, as, y1, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( h, y, w, x, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, w, at, as, ae, h ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, y2, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, y2, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( y, x, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[at];^304^^^^^289^319^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[], args[1] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( y2, y, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, x2, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, w, y2 ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Ellipse2D.Double ( y, x, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Ellipse2D.Double ( x, h, w, y ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Ellipse2D.Double ( x, w, y, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Ellipse2D.Double ( x, y, h, w ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, x2, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, y2, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Ellipse2D.Double ( w, y, x, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^else cf  ( i.equals ( Arc2D.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( ArciD.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( Arc3D.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[1], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[type], args[1] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[at] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[type];^304^^^^^289^319^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[i], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y1, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[at], args[1] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[type], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y1, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, h, w, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, w, as, h, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( y, y, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, w, y ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, y1, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, ae, w, h, as, y, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( at, y, w, h, as, ae, x ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[type], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( y2, y, w, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y1, w, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, y1, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, w, y ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( w, y, x, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( x, w, y, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( x, y, h, w ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( y, y, w, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y2, w, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( x, h, w, y ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( h, y, w, x ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( EllipseiD.class )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( EllipseD.class )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[4], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[i], args[1], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[type] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[5];^304^^^^^289^319^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[3], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[2], args[2], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, w, h, as, at, ae ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, y1, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, w, y, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < 7; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y2, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, w, x2 ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( y1, y, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, w, y1 ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Ellipse2D.Double ( h, y, w, x ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[7];^304^^^^^289^319^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.lineTo ( args[0], args[] ) ;^316^^^^^301^331^gp.lineTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[];^304^^^^^289^319^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, y, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( y, x, w, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, x2, w, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, w, y1 ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, y1, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Arc2D.Double ( x, y, at, h, as, ae, w ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y1, y, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Line2D.Double ( x2, y1, x1, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Line2D.Double ( x1, y2, x2, y1 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Line2D.Double ( y2, y1, x2, x1 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x2, y1, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y1, x2, x1 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Line2D.Double ( x1, x2, y1, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( RectangletypeD.class )  )  {^278^^^^^263^293^else if  ( c.equals ( Rectangle2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.moveTo ( args[0], args[type] ) ;^313^^^^^298^328^gp.moveTo ( args[0], args[1] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < ; i++ )  {^308^^^^^293^323^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, y1, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.curveTo ( args[-1], args[1], args[2], args[3], args[4], args[5] ) ;^319^320^321^322^^304^334^gp.curveTo ( args[0], args[1], args[2], args[3], args[4], args[5] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x2, y, w, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, y2, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, w, y2 ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( Ellipse3D.class )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( ArctypeD.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^gp.quadTo ( args[0], args[1], args[], args[3] ) ;^325^^^^^310^340^gp.quadTo ( args[0], args[1], args[2], args[3] ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, x2, h, as, ae, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Arc2D.Double ( x, y, w, h, as, x2, at ) ;^300^^^^^285^315^result = new Arc2D.Double ( x, y, w, h, as, ae, at ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( ArcD.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y2, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y1, y2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y1, x2, x2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Line2D.Double ( y1, x1, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( y, y1, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y1, x2, y1 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, w, x2 ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^if  ( c.equals ( Line1D.class )  )  {^271^^^^^256^286^if  ( c.equals ( Line2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( EllipseatD.class )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( Arc1D.class )  )  {^292^^^^^277^307^else if  ( c.equals ( Arc2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( EllipsetypeD.class )  )  {^285^^^^^270^300^else if  ( c.equals ( Ellipse2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x2, y, w, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, x1, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( y2, y1, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, x2, x2, y2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Line2D.Double ( x1, y1, x2, y ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Literal]^else if  ( c.equals ( RectangleatD.class )  )  {^278^^^^^263^293^else if  ( c.equals ( Rectangle2D.class )  )  {^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Ellipse2D.Double ( x, y, y, h ) ;^290^^^^^275^305^result = new Ellipse2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Argument_Swapping]^result = new Line2D.Double ( x1, y1, y2, x2 ) ;^276^^^^^261^291^result = new Line2D.Double ( x1, y1, x2, y2 ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( x, y, x2, h ) ;^283^^^^^268^298^result = new Rectangle2D.Double ( x, y, w, h ) ;^[CLASS] SerialUtilities  [METHOD] readShape [RETURN_TYPE] Shape   ObjectInputStream stream [VARIABLES] Shape  result  boolean  hasNext  isNull  GeneralPath  gp  double  ae  as  h  w  x  x1  x2  y  y1  y2  Class  c  int  at  i  type  ObjectInputStream  stream  float[]  args  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^359^^^^^344^374^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^for  ( typent i = 0; i < 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = i; i < 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < ; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Argument_Swapping]^int type = args.currentSegment ( pi ) ;^405^^^^^390^420^int type = pi.currentSegment ( args ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^stream.writeInt ( i ) ;^406^^^^^391^421^stream.writeInt ( type ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape == null )  {^362^^^^^347^377^if  ( shape != null )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^stream.writeBoolean ( false ) ;^423^^^^^408^438^stream.writeBoolean ( true ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < type; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = ; i < 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^if  ( shape typenstanceof Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Argument_Swapping]^if  ( i shapenstanceof Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  &&  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  >  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  |  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  <<  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( shape instanceof Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ==  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <=  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < i; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( shape instanceof Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <=  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  &  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  &&  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = type; i < 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < 7; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( shape instanceof Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >>  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^else typef  ( shape instanceof GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  &  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[5];^402^^^^^387^417^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < 6; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[];^402^^^^^387^417^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ^  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < 5; i++ )  {^409^^^^^394^424^for  ( int i = 0; i < 6; i++ )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[type];^402^^^^^387^417^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^stream.writeObject ( GeneralPath.2 ) ;^400^^^^^385^415^stream.writeObject ( GeneralPath.class ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[7];^402^^^^^387^417^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^stream.writeObject ( Ellipse2D.null ) ;^382^^^^^367^397^stream.writeObject ( Ellipse2D.class ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  &&  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  |  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^float[] args = new float[i];^402^^^^^387^417^float[] args = new float[6];^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ^  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ==  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  |  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ||  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >=  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^stream.writeObject ( GeneralPath.null ) ;^400^^^^^385^415^stream.writeObject ( GeneralPath.class ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >=  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Argument_Swapping]^else shapef  ( i instanceof GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >>  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ||  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >>  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  !=  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <<  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >=  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ^  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Literal]^stream.writeBoolean ( true ) ;^363^^^^^348^378^stream.writeBoolean ( false ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^stream.writeObject ( Arc2D.0 ) ;^390^^^^^375^405^stream.writeObject ( Arc2D.class ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^stream.writeObject ( GeneralPath.3 ) ;^400^^^^^385^415^stream.writeObject ( GeneralPath.class ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  ==  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  >>  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  ||  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( shape  ^  Line2D )  {^364^^^^^349^379^if  ( shape instanceof Line2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  &  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  |  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  !=  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  |  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <=  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  !=  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Variable_Misuse]^stream.writeObject ( Arc2D.null ) ;^390^^^^^375^405^stream.writeObject ( Arc2D.class ) ;^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ==  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <<  Arc2D )  {^388^^^^^373^403^else if  ( shape instanceof Arc2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ^  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >=  Rectangle2D )  {^372^^^^^357^387^else if  ( shape instanceof Rectangle2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  >  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  <<  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  ==  Ellipse2D )  {^380^^^^^365^395^else if  ( shape instanceof Ellipse2D )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^else if  ( shape  &&  GeneralPath )  {^399^^^^^384^414^else if  ( shape instanceof GeneralPath )  {^[CLASS] SerialUtilities  [METHOD] writeShape [RETURN_TYPE] void   Shape shape ObjectOutputStream stream [VARIABLES] Shape  shape  boolean  PathIterator  pi  Rectangle2D  rectangle  ObjectOutputStream  stream  Line2D  line  Arc2D  arc  Ellipse2D  ellipse  int  i  type  float[]  args  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^440^^^^^437^452^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] readPoint2D [RETURN_TYPE] Point2D   ObjectInputStream stream [VARIABLES] boolean  isNull  Point2D  result  double  x  y  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result = new Point2D.Double ( y, x ) ;^448^^^^^437^452^result = new Point2D.Double ( x, y ) ;^[CLASS] SerialUtilities  [METHOD] readPoint2D [RETURN_TYPE] Point2D   ObjectInputStream stream [VARIABLES] boolean  isNull  Point2D  result  double  x  y  ObjectInputStream  stream  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^465^^^^^462^476^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] writePoint2D [RETURN_TYPE] void   Point2D p ObjectOutputStream stream [VARIABLES] boolean  Point2D  p  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( p == null )  {^468^^^^^462^476^if  ( p != null )  {^[CLASS] SerialUtilities  [METHOD] writePoint2D [RETURN_TYPE] void   Point2D p ObjectOutputStream stream [VARIABLES] boolean  Point2D  p  ObjectOutputStream  stream  
[BugLab_Wrong_Literal]^stream.writeBoolean ( false ) ;^474^^^^^462^476^stream.writeBoolean ( true ) ;^[CLASS] SerialUtilities  [METHOD] writePoint2D [RETURN_TYPE] void   Point2D p ObjectOutputStream stream [VARIABLES] boolean  Point2D  p  ObjectOutputStream  stream  
[BugLab_Wrong_Literal]^stream.writeBoolean ( true ) ;^469^^^^^462^476^stream.writeBoolean ( false ) ;^[CLASS] SerialUtilities  [METHOD] writePoint2D [RETURN_TYPE] void   Point2D p ObjectOutputStream stream [VARIABLES] boolean  Point2D  p  ObjectOutputStream  stream  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^494^^^^^490^514^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^while  ( c != CharacterIterator.c )  {^505^^^^^490^514^while  ( c != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Wrong_Operator]^while  ( c == CharacterIterator.DONE )  {^505^^^^^490^514^while  ( c != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^start = start;^509^^^^^490^514^start = limit;^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result.addAttributes ( limit, start, atts ) ;^508^^^^^490^514^result.addAttributes ( atts, start, limit ) ;^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result.addAttributes ( atts, limit, start ) ;^508^^^^^490^514^result.addAttributes ( atts, start, limit ) ;^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Wrong_Operator]^while  ( c > CharacterIterator.DONE )  {^505^^^^^490^514^while  ( c != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result.addAttributes ( atts, limit, limit ) ;^508^^^^^490^514^result.addAttributes ( atts, start, limit ) ;^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Variable_Misuse]^result.addAttributes ( atts, start, start ) ;^508^^^^^490^514^result.addAttributes ( atts, start, limit ) ;^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Wrong_Literal]^int start = limit;^504^^^^^490^514^int start = 0;^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^result.addAttributes ( start, atts, limit ) ;^508^^^^^490^514^result.addAttributes ( atts, start, limit ) ;^[CLASS] SerialUtilities  [METHOD] readAttributedString [RETURN_TYPE] AttributedString   ObjectInputStream stream [VARIABLES] AttributedString  result  boolean  isNull  char  c  String  plainStr  Map  atts  int  limit  start  ObjectInputStream  stream  
[BugLab_Wrong_Operator]^if  ( stream != null )  {^527^^^^^512^542^if  ( stream == null )  {^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^while  ( current == CharacterIterator.DONE )  {^537^^^^^522^552^while  ( current != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Argument_Swapping]^plainStr = current.append ( plainStr ) ;^538^^^^^523^553^plainStr = plainStr.append ( current ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Variable_Misuse]^while  ( current != CharacterIterator.current )  {^546^^^^^531^561^while  ( current != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^while  ( current == CharacterIterator.DONE )  {^546^^^^^531^561^while  ( current != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Variable_Misuse]^current = aci.setIndex ( begin ) ;^559^^^^^544^574^current = aci.setIndex ( limit ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Argument_Swapping]^current = limit.setIndex ( aci ) ;^559^^^^^544^574^current = aci.setIndex ( limit ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Argument_Swapping]^stream.writeInt ( begin - limit ) ;^554^^^^^539^569^stream.writeInt ( limit - begin ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^stream.writeInt ( limit  >  begin ) ;^554^^^^^539^569^stream.writeInt ( limit - begin ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^if  ( as == null )  {^530^^^^^515^545^if  ( as != null )  {^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Literal]^stream.writeBoolean ( false ) ;^567^^^^^552^582^stream.writeBoolean ( true ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^while  ( current <= CharacterIterator.DONE )  {^537^^^^^522^552^while  ( current != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^while  ( current >= CharacterIterator.DONE )  {^546^^^^^531^561^while  ( current != CharacterIterator.DONE )  {^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^stream.writeInt ( limit  |  begin ) ;^554^^^^^539^569^stream.writeInt ( limit - begin ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Literal]^stream.writeBoolean ( true ) ;^531^^^^^516^546^stream.writeBoolean ( false ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Variable_Misuse]^stream.writeInt ( limit - limit ) ;^554^^^^^539^569^stream.writeInt ( limit - begin ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Wrong_Operator]^stream.writeInt ( limit  <<  begin ) ;^554^^^^^539^569^stream.writeInt ( limit - begin ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
[BugLab_Variable_Misuse]^stream.writeChar ( CharacterIterator.current ) ;^563^^^^^548^578^stream.writeChar ( CharacterIterator.DONE ) ;^[CLASS] SerialUtilities  [METHOD] writeAttributedString [RETURN_TYPE] void   AttributedString as ObjectOutputStream stream [VARIABLES] StringBuffer  plainStr  AttributedString  as  boolean  char  current  ObjectOutputStream  stream  Map  atts  int  begin  limit  AttributedCharacterIterator  aci  
