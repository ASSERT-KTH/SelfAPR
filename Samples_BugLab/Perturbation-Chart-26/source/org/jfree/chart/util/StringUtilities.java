[BugLab_Argument_Swapping]^if  ( start.length (  )  < base.length (  )  )  {^67^^^^^66^71^if  ( base.length (  )  < start.length (  )  )  {^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Wrong_Operator]^if  ( base.length (  )  > start.length (  )  )  {^67^^^^^66^71^if  ( base.length (  )  < start.length (  )  )  {^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Wrong_Literal]^return true;^68^^^^^66^71^return false;^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Variable_Misuse]^if  ( start.length (  )  < start.length (  )  )  {^67^^^^^66^71^if  ( base.length (  )  < start.length (  )  )  {^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Variable_Misuse]^if  ( base.length (  )  < base.length (  )  )  {^67^^^^^66^71^if  ( base.length (  )  < start.length (  )  )  {^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Argument_Swapping]^return start.regionMatches ( true, 0, base, 0, start.length (  )  ) ;^70^^^^^66^71^return base.regionMatches ( true, 0, start, 0, start.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Wrong_Literal]^return base.regionMatches ( false, 0, start, 0, start.length (  )  ) ;^70^^^^^66^71^return base.regionMatches ( true, 0, start, 0, start.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Wrong_Literal]^return base.regionMatches ( true, -1, start, -1, start.length (  )  ) ;^70^^^^^66^71^return base.regionMatches ( true, 0, start, 0, start.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Wrong_Literal]^return base.regionMatches ( true, 1, start, 1, start.length (  )  ) ;^70^^^^^66^71^return base.regionMatches ( true, 0, start, 0, start.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] startsWithIgnoreCase [RETURN_TYPE] boolean   String base String start [VARIABLES] boolean  String  base  start  
[BugLab_Argument_Swapping]^if  ( end.length (  )  < base.length (  )  )  {^83^^^^^82^88^if  ( base.length (  )  < end.length (  )  )  {^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Wrong_Operator]^if  ( base.length (  )  <= end.length (  )  )  {^83^^^^^82^88^if  ( base.length (  )  < end.length (  )  )  {^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Wrong_Literal]^return true;^84^^^^^82^88^return false;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Variable_Misuse]^if  ( end.length (  )  < end.length (  )  )  {^83^^^^^82^88^if  ( base.length (  )  < end.length (  )  )  {^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Variable_Misuse]^if  ( base.length (  )  < base.length (  )  )  {^83^^^^^82^88^if  ( base.length (  )  < end.length (  )  )  {^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Argument_Swapping]^return end.regionMatches ( true, base.length (  )  - base.length (  ) , end, 0, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Wrong_Operator]^return base.regionMatches ( true, base.length (  )   &&  end.length (  ) , end, 0, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Wrong_Literal]^return base.regionMatches ( false, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Wrong_Literal]^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 1, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Wrong_Operator]^return base.regionMatches ( true, base.length (  )   ^  end.length (  ) , end, 0, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Wrong_Literal]^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, -1, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Variable_Misuse]^return end.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
[BugLab_Variable_Misuse]^return base.regionMatches ( true, base.length (  )  - base.length (  ) , end, 0, end.length (  )  ) ;^86^87^^^^82^88^return base.regionMatches ( true, base.length (  )  - end.length (  ) , end, 0, end.length (  )  ) ;^[CLASS] StringUtilities  [METHOD] endsWithIgnoreCase [RETURN_TYPE] boolean   String base String end [VARIABLES] boolean  String  base  end  
