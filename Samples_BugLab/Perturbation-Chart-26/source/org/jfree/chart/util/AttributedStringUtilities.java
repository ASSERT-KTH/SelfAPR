[buglab_swap_variables]^if  ( limit2 != limit1 )  {^87^^^^^72^102^if  ( limit1 != limit2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[buglab_swap_variables]^if  ( c2 != c1 )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[buglab_swap_variables]^for  ( startnt i = i; i < limit1; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[buglab_swap_variables]^for  ( limit1nt i = start; i < i; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[buglab_swap_variables]^for  ( int i = limit1; i < start; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
