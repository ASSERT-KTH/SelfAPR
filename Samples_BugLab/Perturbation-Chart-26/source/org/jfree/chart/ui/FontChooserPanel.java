[buglab_swap_variables]^fontPanel.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) .getString ( "Font" )  )  ) ;^104^105^106^^^89^119^fontPanel.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Font" )  )  ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[buglab_swap_variables]^sizePanel.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) .getString ( "Size" )  )  ) ;^114^115^116^^^99^129^sizePanel.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Size" )  )  ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[buglab_swap_variables]^attributes.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) .getString ( "Attributes" )  )  ) ;^127^128^129^^^112^142^attributes.setBorder ( BorderFactory.createTitledBorder ( BorderFactory.createEtchedBorder (  ) , localizationResources.getString ( "Attributes" )  )  ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[buglab_swap_variables]^right.add (  BorderLayout.CENTER ) ;^131^^^^^116^146^right.add ( sizePanel, BorderLayout.CENTER ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[buglab_swap_variables]^right.add (  BorderLayout.SOUTH ) ;^132^^^^^117^147^right.add ( attributes, BorderLayout.SOUTH ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[buglab_swap_variables]^add (  BorderLayout.EAST ) ;^134^^^^^119^149^add ( right, BorderLayout.EAST ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[buglab_swap_variables]^if  ( this.italic.isSelected (  )  && this.bold.isSelected (  )  )  {^164^^^^^163^176^if  ( this.bold.isSelected (  )  && this.italic.isSelected (  )  )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedStyle [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[buglab_swap_variables]^if  ( model.equals ( fontName.getElementAt ( i )  )  )  {^210^^^^^199^225^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[buglab_swap_variables]^if  ( i.equals ( model.getElementAt ( fontName )  )  )  {^210^^^^^199^225^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[buglab_swap_variables]^if  ( fontName.equals ( i.getElementAt ( model )  )  )  {^210^^^^^199^225^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[buglab_swap_variables]^if  ( model.equals ( fontSize.getElementAt ( i )  )  )  {^220^^^^^199^225^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[buglab_swap_variables]^if  ( fontSize.equals ( i.getElementAt ( model )  )  )  {^220^^^^^199^225^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[buglab_swap_variables]^for  ( modelnt i = 0; i < i.getSize (  ) ; i++ )  {^219^^^^^199^225^for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[buglab_swap_variables]^if  ( i.equals ( model.getElementAt ( fontSize )  )  )  {^220^^^^^199^225^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
