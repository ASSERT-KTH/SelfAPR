[BugLab_Variable_Misuse]^this.fontlist = new JList ( SIZES ) ;^107^^^^^92^122^this.fontlist = new JList ( fonts ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^JScrollPane fontpane = new JScrollPane ( sizelist ) ;^108^^^^^93^123^JScrollPane fontpane = new JScrollPane ( this.fontlist ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^fontPanel.add ( sizepane ) ;^110^^^^^95^125^fontPanel.add ( fontpane ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^add ( sizePanel ) ;^111^^^^^96^126^add ( fontPanel ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^this.sizelist = new JList ( fonts ) ;^117^^^^^102^132^this.sizelist = new JList ( SIZES ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^JScrollPane sizepane = new JScrollPane ( sizelist ) ;^118^^^^^103^133^JScrollPane sizepane = new JScrollPane ( this.sizelist ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^sizePanel.add ( fontpane ) ;^120^^^^^105^135^sizePanel.add ( sizepane ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Wrong_Literal]^JPanel attributes = new JPanel ( new GridLayout ( 2, 2 )  ) ;^122^^^^^107^137^JPanel attributes = new JPanel ( new GridLayout ( 1, 2 )  ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Wrong_Literal]^JPanel attributes = new JPanel ( new GridLayout ( 1, 3 )  ) ;^122^^^^^107^137^JPanel attributes = new JPanel ( new GridLayout ( 1, 2 )  ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Wrong_Literal]^JPanel attributes = new JPanel ( new GridLayout ( 1, 1 )  ) ;^122^^^^^107^137^JPanel attributes = new JPanel ( new GridLayout ( 1, 2 )  ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^attributes.add ( italic ) ;^125^^^^^110^140^attributes.add ( this.bold ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^attributes.add ( italic ) ;^126^^^^^111^141^attributes.add ( this.italic ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^right.add ( fontPanel, BorderLayout.CENTER ) ;^131^^^^^116^146^right.add ( sizePanel, BorderLayout.CENTER ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^right.add ( sizePanel, BorderLayout.0 ) ;^131^^^^^116^146^right.add ( sizePanel, BorderLayout.CENTER ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^right.add ( sizePanel, BorderLayout.SOUTH ) ;^132^^^^^117^147^right.add ( attributes, BorderLayout.SOUTH ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^add ( sizePanel, BorderLayout.EAST ) ;^134^^^^^119^149^add ( right, BorderLayout.EAST ) ;^[CLASS] FontChooserPanel  [METHOD] <init> [RETURN_TYPE] Font)   Font font [VARIABLES] JCheckBox  bold  italic  JScrollPane  fontpane  sizepane  JPanel  attributes  fontPanel  right  sizePanel  boolean  ResourceBundle  localizationResources  String[]  SIZES  fonts  GraphicsEnvironment  g  JList  fontlist  sizelist  Font  font  
[BugLab_Variable_Misuse]^return  ( String )  sizelist.getSelectedValue (  ) ;^155^^^^^154^156^return  ( String )  this.fontlist.getSelectedValue (  ) ;^[CLASS] FontChooserPanel  [METHOD] getSelectedName [RETURN_TYPE] String   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[BugLab_Variable_Misuse]^if  ( italic.isSelected (  )  && this.italic.isSelected (  )  )  {^164^^^^^163^176^if  ( this.bold.isSelected (  )  && this.italic.isSelected (  )  )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedStyle [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[BugLab_Variable_Misuse]^if  ( this.bold.isSelected (  )  && italic.isSelected (  )  )  {^164^^^^^163^176^if  ( this.bold.isSelected (  )  && this.italic.isSelected (  )  )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedStyle [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[BugLab_Argument_Swapping]^if  ( this.italic.isSelected (  )  && this.bold.isSelected (  )  )  {^164^^^^^163^176^if  ( this.bold.isSelected (  )  && this.italic.isSelected (  )  )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedStyle [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[BugLab_Wrong_Operator]^if  ( this.bold.isSelected (  )  || this.italic.isSelected (  )  )  {^164^^^^^163^176^if  ( this.bold.isSelected (  )  && this.italic.isSelected (  )  )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedStyle [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[BugLab_Variable_Misuse]^if  ( italic.isSelected (  )  )  {^167^^^^^163^176^if  ( this.bold.isSelected (  )  )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedStyle [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[BugLab_Variable_Misuse]^if  ( italic.isSelected (  )  )  {^170^^^^^163^176^if  ( this.italic.isSelected (  )  )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedStyle [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  boolean  JList  fontlist  sizelist  
[BugLab_Variable_Misuse]^String selected =  ( String )  sizelist.getSelectedValue (  ) ;^184^^^^^183^191^String selected =  ( String )  this.sizelist.getSelectedValue (  ) ;^[CLASS] FontChooserPanel  [METHOD] getSelectedSize [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  selected  boolean  JList  fontlist  sizelist  
[BugLab_Wrong_Operator]^if  ( selected == null )  {^185^^^^^183^191^if  ( selected != null )  {^[CLASS] FontChooserPanel  [METHOD] getSelectedSize [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  selected  boolean  JList  fontlist  sizelist  
[BugLab_Wrong_Literal]^return ;^189^^^^^183^191^return 10;^[CLASS] FontChooserPanel  [METHOD] getSelectedSize [RETURN_TYPE] int   [VARIABLES] JCheckBox  bold  italic  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  selected  boolean  JList  fontlist  sizelist  
[BugLab_Wrong_Operator]^if  ( font != null )  {^200^^^^^199^225^if  ( font == null )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Variable_Misuse]^ListModel model = sizelist.getModel (  ) ;^207^^^^^199^225^ListModel model = this.fontlist.getModel (  ) ;^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Variable_Misuse]^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^210^^^^^199^225^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Argument_Swapping]^if  ( i.equals ( model.getElementAt ( fontName )  )  )  {^210^^^^^199^225^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Argument_Swapping]^if  ( fontName.equals ( i.getElementAt ( model )  )  )  {^210^^^^^199^225^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= model.getSize (  ) ; i++ )  {^209^^^^^199^225^for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < model.getSize (  ) ; i++ )  {^209^^^^^199^225^for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Argument_Swapping]^if  ( model.equals ( fontName.getElementAt ( i )  )  )  {^210^^^^^199^225^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Wrong_Literal]^for  ( int i = ; i < model.getSize (  ) ; i++ )  {^209^^^^^199^225^for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Variable_Misuse]^model = sizelist.getModel (  ) ;^217^^^^^199^225^model = this.sizelist.getModel (  ) ;^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Variable_Misuse]^if  ( fontName.equals ( model.getElementAt ( i )  )  )  {^220^^^^^199^225^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Argument_Swapping]^if  ( fontSize.equals ( i.getElementAt ( model )  )  )  {^220^^^^^199^225^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Argument_Swapping]^for  ( modelnt i = 0; i < i.getSize (  ) ; i++ )  {^219^^^^^199^225^for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > model.getSize (  ) ; i++ )  {^219^^^^^199^225^for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Argument_Swapping]^if  ( model.equals ( fontSize.getElementAt ( i )  )  )  {^220^^^^^199^225^if  ( fontSize.equals ( model.getElementAt ( i )  )  )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < model.getSize (  ) ; i++ )  {^219^^^^^199^225^for  ( int i = 0; i < model.getSize (  ) ; i++ )  {^[CLASS] FontChooserPanel  [METHOD] setSelectedFont [RETURN_TYPE] void   Font font [VARIABLES] JCheckBox  bold  italic  boolean  ListModel  model  ResourceBundle  localizationResources  String[]  SIZES  fonts  String  fontName  fontSize  JList  fontlist  sizelist  Font  font  int  i  
