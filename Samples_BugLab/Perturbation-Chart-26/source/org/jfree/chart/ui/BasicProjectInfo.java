[buglab_swap_variables]^this ( version, name, licenceName, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[buglab_swap_variables]^this (  version, licenceName, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[buglab_swap_variables]^this ( name, info, licenceName, version ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[buglab_swap_variables]^this ( name,  licenceName, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[buglab_swap_variables]^this ( licenceName, version, name, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[buglab_swap_variables]^this ( name, version,  info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[buglab_swap_variables]^this ( name, version, licenceName ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[buglab_swap_variables]^for  ( this.optionalLibrariesnt i = 0; i < i.size (  ) ; i++ )  {^268^^^^^266^277^for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[buglab_swap_variables]^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  i.get ( this.optionalLibraries ) ;^269^270^^^^266^277^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[buglab_swap_variables]^( OptionalLibraryHolder )  i.get ( this.optionalLibraries ) ;^270^^^^^266^277^( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
