[BugLab_Variable_Misuse]^if  ( copyright == null )  {^70^^^^^69^75^if  ( libraryClass == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String libraryClass [VARIABLES] List  libraries  optionalLibraries  String  copyright  libraryClass  Library  library  boolean  
[BugLab_Wrong_Operator]^if  ( libraryClass != null )  {^70^^^^^69^75^if  ( libraryClass == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String libraryClass [VARIABLES] List  libraries  optionalLibraries  String  copyright  libraryClass  Library  library  boolean  
[BugLab_Variable_Misuse]^this.libraryClass = copyright;^74^^^^^69^75^this.libraryClass = libraryClass;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String libraryClass [VARIABLES] List  libraries  optionalLibraries  String  copyright  libraryClass  Library  library  boolean  
[BugLab_Wrong_Operator]^if  ( library != null )  {^83^^^^^82^88^if  ( library == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] Library)   Library library [VARIABLES] List  libraries  optionalLibraries  String  copyright  libraryClass  Library  library  boolean  
[BugLab_Variable_Misuse]^setName ( version ) ;^163^^^^^160^167^setName ( name ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String licence String info [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^setVersion ( name ) ;^164^^^^^160^167^setVersion ( version ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String licence String info [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^setLicenceName ( version ) ;^165^^^^^160^167^setLicenceName ( licence ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String licence String info [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^setInfo ( version ) ;^166^^^^^160^167^setInfo ( info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String licence String info [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this ( version, version, licenceName, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this ( name, licence, licenceName, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this ( name, version, licence, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this ( name, version, licenceName, name ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Argument_Swapping]^this ( version, name, licenceName, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Argument_Swapping]^this ( name, licenceName, version, info ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Argument_Swapping]^this ( name, version, info, licenceName ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Argument_Swapping]^this ( name, info, licenceName, version ) ;^181^^^^^178^183^this ( name, version, licenceName, info ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^setCopyright ( licenceName ) ;^182^^^^^178^183^setCopyright ( copyright ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String name String version String info String copyright String licenceName [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^return licenceName;^96^^^^^95^97^return this.libraryClass;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibraryClass [RETURN_TYPE] String   [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^if  ( library == null )  {^105^^^^^104^109^if  ( this.library == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Wrong_Operator]^if  ( this.library != null )  {^105^^^^^104^109^if  ( this.library == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this.library = loadLibrary ( version ) ;^106^^^^^104^109^this.library = loadLibrary ( this.libraryClass ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this.library = loadLibrary ( name ) ;^106^^^^^104^109^this.library = loadLibrary ( this.libraryClass ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this.library = loadLibrary ( licenceName ) ;^106^^^^^104^109^this.library = loadLibrary ( this.libraryClass ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^return library;^108^^^^^104^109^return this.library;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] List  libraries  optionalLibraries  String  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^if  ( licenceName == null )  {^112^^^^^111^132^if  ( classname == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] boolean  List  libraries  optionalLibraries  Class  c  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  Method  m  Exception  e  
[BugLab_Wrong_Operator]^if  ( classname != null )  {^112^^^^^111^132^if  ( classname == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] boolean  List  libraries  optionalLibraries  Class  c  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  Method  m  Exception  e  
[BugLab_Variable_Misuse]^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( name ) ;^116^117^^^^111^132^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] boolean  List  libraries  optionalLibraries  Class  c  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  Method  m  Exception  e  
[BugLab_Variable_Misuse]^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( licenceName ) ;^116^117^^^^111^132^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] boolean  List  libraries  optionalLibraries  Class  c  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  Method  m  Exception  e  
[BugLab_Variable_Misuse]^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( version ) ;^116^117^^^^111^132^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] boolean  List  libraries  optionalLibraries  Class  c  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  Method  m  Exception  e  
[BugLab_Variable_Misuse]^return version;^191^^^^^190^192^return this.copyright;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getCopyright [RETURN_TYPE] String   [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^this.copyright = version;^200^^^^^199^201^this.copyright = copyright;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] setCopyright [RETURN_TYPE] void   String copyright [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^return  ( Library[] )  optionalLibraries.toArray ( new Library[this.libraries.size (  ) ] ) ;^245^246^^^^244^247^return  ( Library[] )  this.libraries.toArray ( new Library[this.libraries.size (  ) ] ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getLibraries [RETURN_TYPE] Library[]   [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Wrong_Operator]^if  ( library != null )  {^255^^^^^254^259^if  ( library == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addLibrary [RETURN_TYPE] void   Library library [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  library  boolean  
[BugLab_Variable_Misuse]^if  ( library != null )  {^272^^^^^266^277^if  ( l != null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Wrong_Operator]^if  ( l == null )  {^272^^^^^266^277^if  ( l != null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Variable_Misuse]^libraries.add ( library ) ;^273^^^^^266^277^libraries.add ( l ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < optionalLibraries.size (  ) ; i++ )  {^268^^^^^266^277^for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > this.optionalLibraries.size (  ) ; i++ )  {^268^^^^^266^277^for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Wrong_Literal]^for  ( int i = i; i < this.optionalLibraries.size (  ) ; i++ )  {^268^^^^^266^277^for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Variable_Misuse]^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  optionalLibraries.get ( i ) ;^269^270^^^^266^277^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Argument_Swapping]^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  i.get ( this.optionalLibraries ) ;^269^270^^^^266^277^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Variable_Misuse]^( OptionalLibraryHolder )  optionalLibraries.get ( i ) ;^270^^^^^266^277^( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Argument_Swapping]^( OptionalLibraryHolder )  i.get ( this.optionalLibraries ) ;^270^^^^^266^277^( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < this.optionalLibraries.size (  ) ; i++ )  {^268^^^^^266^277^for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] getOptionalLibraries [RETURN_TYPE] Library[]   [VARIABLES] boolean  ArrayList  libraries  List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  int  i  OptionalLibraryHolder  holder  
[BugLab_Variable_Misuse]^if  ( licenceName == null )  {^285^^^^^284^290^if  ( libraryClass == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addOptionalLibrary [RETURN_TYPE] void   String libraryClass [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  boolean  
[BugLab_Wrong_Operator]^if  ( libraryClass != null )  {^285^^^^^284^290^if  ( libraryClass == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addOptionalLibrary [RETURN_TYPE] void   String libraryClass [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  boolean  
[BugLab_Variable_Misuse]^( new OptionalLibraryHolder ( name )  ) ;^289^^^^^284^290^( new OptionalLibraryHolder ( libraryClass )  ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addOptionalLibrary [RETURN_TYPE] void   String libraryClass [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  boolean  
[BugLab_Variable_Misuse]^this.optionalLibraries.add ( new OptionalLibraryHolder ( version )  ) ;^288^289^^^^284^290^this.optionalLibraries.add ( new OptionalLibraryHolder ( libraryClass )  ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addOptionalLibrary [RETURN_TYPE] void   String libraryClass [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  boolean  
[BugLab_Variable_Misuse]^if  ( l == null )  {^301^^^^^300^305^if  ( library == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addOptionalLibrary [RETURN_TYPE] void   Library library [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  boolean  
[BugLab_Wrong_Operator]^if  ( library != null )  {^301^^^^^300^305^if  ( library == null )  {^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addOptionalLibrary [RETURN_TYPE] void   Library library [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  boolean  
[BugLab_Variable_Misuse]^this.optionalLibraries.add ( new OptionalLibraryHolder ( l )  ) ;^304^^^^^300^305^this.optionalLibraries.add ( new OptionalLibraryHolder ( library )  ) ;^[CLASS] BasicProjectInfo OptionalLibraryHolder  [METHOD] addOptionalLibrary [RETURN_TYPE] void   Library library [VARIABLES] List  libraries  optionalLibraries  String  classname  copyright  info  libraryClass  licence  licenceName  name  version  Library  l  library  boolean  
[BugLab_Wrong_Operator]^if  ( libraryClass != null )  {^70^^^^^69^75^if  ( libraryClass == null )  {^[CLASS] OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] String)   String libraryClass [VARIABLES] String  libraryClass  Library  library  boolean  
[BugLab_Wrong_Operator]^if  ( library != null )  {^83^^^^^82^88^if  ( library == null )  {^[CLASS] OptionalLibraryHolder  [METHOD] <init> [RETURN_TYPE] Library)   Library library [VARIABLES] String  libraryClass  Library  library  boolean  
[BugLab_Variable_Misuse]^return libraryClass;^96^^^^^95^97^return this.libraryClass;^[CLASS] OptionalLibraryHolder  [METHOD] getLibraryClass [RETURN_TYPE] String   [VARIABLES] String  libraryClass  Library  library  boolean  
[BugLab_Variable_Misuse]^if  ( library == null )  {^105^^^^^104^109^if  ( this.library == null )  {^[CLASS] OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] String  libraryClass  Library  library  boolean  
[BugLab_Wrong_Operator]^if  ( this.library != null )  {^105^^^^^104^109^if  ( this.library == null )  {^[CLASS] OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] String  libraryClass  Library  library  boolean  
[BugLab_Variable_Misuse]^this.library = loadLibrary ( libraryClass ) ;^106^^^^^104^109^this.library = loadLibrary ( this.libraryClass ) ;^[CLASS] OptionalLibraryHolder  [METHOD] getLibrary [RETURN_TYPE] Library   [VARIABLES] String  libraryClass  Library  library  boolean  
[BugLab_Variable_Misuse]^if  ( libraryClass == null )  {^112^^^^^111^132^if  ( classname == null )  {^[CLASS] OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] Class  c  String  classname  libraryClass  Library  library  Method  m  boolean  Exception  e  
[BugLab_Wrong_Operator]^if  ( classname != null )  {^112^^^^^111^132^if  ( classname == null )  {^[CLASS] OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] Class  c  String  classname  libraryClass  Library  library  Method  m  boolean  Exception  e  
[BugLab_Variable_Misuse]^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( libraryClass ) ;^116^117^^^^111^132^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ;^[CLASS] OptionalLibraryHolder  [METHOD] loadLibrary [RETURN_TYPE] Library   String classname [VARIABLES] Class  c  String  classname  libraryClass  Library  library  Method  m  boolean  Exception  e  
