[BugLab_Variable_Misuse]^this.paint = defaultPaint;^90^^^^^88^91^this.paint = paint;^[CLASS] LookupPaintScale PaintItem  [METHOD] <init> [RETURN_TYPE] Paint)   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( lowerBound >= value )  {^190^^^^^188^201^if  ( lowerBound >= upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] <init> [RETURN_TYPE] Paint)   double lowerBound double upperBound Paint defaultPaint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( upperBound >= lowerBound )  {^190^^^^^188^201^if  ( lowerBound >= upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] <init> [RETURN_TYPE] Paint)   double lowerBound double upperBound Paint defaultPaint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( lowerBound > upperBound )  {^190^^^^^188^201^if  ( lowerBound >= upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] <init> [RETURN_TYPE] Paint)   double lowerBound double upperBound Paint defaultPaint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( defaultPaint != null )  {^194^^^^^188^201^if  ( defaultPaint == null )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] <init> [RETURN_TYPE] Paint)   double lowerBound double upperBound Paint defaultPaint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^this.lowerBound = value;^197^^^^^188^201^this.lowerBound = lowerBound;^[CLASS] LookupPaintScale PaintItem  [METHOD] <init> [RETURN_TYPE] Paint)   double lowerBound double upperBound Paint defaultPaint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^this.defaultPaint = paint;^199^^^^^188^201^this.defaultPaint = defaultPaint;^[CLASS] LookupPaintScale PaintItem  [METHOD] <init> [RETURN_TYPE] Paint)   double lowerBound double upperBound Paint defaultPaint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^double d1 = upperBound;^98^^^^^96^107^double d1 = this.value;^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^double d2 = value;^99^^^^^96^107^double d2 = that.value;^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^double d2 = that.value.value;^99^^^^^96^107^double d2 = that.value;^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^double d2 = that;^99^^^^^96^107^double d2 = that.value;^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( value > d2 )  {^100^^^^^96^107^if  ( d1 > d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( d1 > value )  {^100^^^^^96^107^if  ( d1 > d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( d2 > d1 )  {^100^^^^^96^107^if  ( d1 > d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( d1 == d2 )  {^100^^^^^96^107^if  ( d1 > d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return 0;^101^^^^^96^107^return 1;^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( value < d2 )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( d1 < value )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( d2 < d1 )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( d1 > d2 )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return -0;^104^^^^^96^107^return -1;^[CLASS] LookupPaintScale PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( obj <= this )  {^117^^^^^116^131^if  ( obj == this )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return false;^118^^^^^116^131^return true;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( ! ( obj  ||  PaintItem )  )  {^120^^^^^116^131^if  ( ! ( obj instanceof PaintItem )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^121^^^^^116^131^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( value != that.value )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( this.value != lowerBound )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( that != this.value.value )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( this.value != that )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( this.value >= that.value )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^125^^^^^116^131^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( paint, that.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( this.paint, paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that, this.paint.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that.paint, this.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^128^^^^^116^131^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( this.paint, that.paint.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return false;^130^^^^^116^131^return true;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  PaintItem  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^SerialUtilities.writePaint ( paint, stream ) ;^142^^^^^140^143^SerialUtilities.writePaint ( this.paint, stream ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  ObjectOutputStream  stream  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^SerialUtilities.writePaint ( stream, this.paint ) ;^142^^^^^140^143^SerialUtilities.writePaint ( this.paint, stream ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  ObjectOutputStream  stream  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^return paint;^209^^^^^208^210^return this.defaultPaint;^[CLASS] LookupPaintScale PaintItem  [METHOD] getDefaultPaint [RETURN_TYPE] Paint   [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^return value;^220^^^^^219^221^return this.lowerBound;^[CLASS] LookupPaintScale PaintItem  [METHOD] getLowerBound [RETURN_TYPE] double   [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^return value;^231^^^^^230^232^return this.upperBound;^[CLASS] LookupPaintScale PaintItem  [METHOD] getUpperBound [RETURN_TYPE] double   [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^PaintItem item = new PaintItem ( lowerBound, paint ) ;^245^^^^^244^253^PaintItem item = new PaintItem ( value, paint ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Variable_Misuse]^PaintItem item = new PaintItem ( value, defaultPaint ) ;^245^^^^^244^253^PaintItem item = new PaintItem ( value, paint ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Argument_Swapping]^PaintItem item = new PaintItem ( paint, value ) ;^245^^^^^244^253^PaintItem item = new PaintItem ( value, paint ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Variable_Misuse]^int index = Collections.binarySearch ( lookupTable, item ) ;^246^^^^^244^253^int index = Collections.binarySearch ( this.lookupTable, item ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Argument_Swapping]^int index = Collections.binarySearch ( item, this.lookupTable ) ;^246^^^^^244^253^int index = Collections.binarySearch ( this.lookupTable, item ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Wrong_Operator]^if  ( index > 0 )  {^247^^^^^244^253^if  ( index >= 0 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Wrong_Literal]^if  ( index >= 1 )  {^247^^^^^244^253^if  ( index >= 0 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Argument_Swapping]^this.lookupTable.add ( - ( item + 1 ) , index ) ;^251^^^^^244^253^this.lookupTable.add ( - ( index + 1 ) , item ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Wrong_Operator]^this.lookupTable.add ( - ( index  |  1 ) , item ) ;^251^^^^^244^253^this.lookupTable.add ( - ( index + 1 ) , item ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Wrong_Literal]^this.lookupTable.add ( - ( index + index ) , item ) ;^251^^^^^244^253^this.lookupTable.add ( - ( index + 1 ) , item ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Argument_Swapping]^this.lookupTable.set ( item, index ) ;^248^^^^^244^253^this.lookupTable.set ( index, item ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Wrong_Operator]^this.lookupTable.add ( - ( index  >=  1 ) , item ) ;^251^^^^^244^253^this.lookupTable.add ( - ( index + 1 ) , item ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] add [RETURN_TYPE] void   double value Paint paint [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  index  
[BugLab_Variable_Misuse]^if  ( lowerBound < this.lowerBound )  {^267^^^^^252^282^if  ( value < this.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( this.lowerBound < value )  {^267^^^^^252^282^if  ( value < this.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( value <= this.lowerBound )  {^267^^^^^252^282^if  ( value < this.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^return paint;^268^^^^^253^283^return this.defaultPaint;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( lowerBound > this.upperBound )  {^270^^^^^255^285^if  ( value > this.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( value > upperBound )  {^270^^^^^255^285^if  ( value > this.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( this.upperBound > value )  {^270^^^^^255^285^if  ( value > this.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( value >= this.upperBound )  {^270^^^^^255^285^if  ( value > this.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^return paint;^271^^^^^256^286^return this.defaultPaint;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^int count = lookupTable.size (  ) ;^274^^^^^259^289^int count = this.lookupTable.size (  ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( low == 0 )  {^275^^^^^260^290^if  ( count == 0 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( count <= 0 )  {^275^^^^^260^290^if  ( count == 0 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Literal]^if  ( count == high )  {^275^^^^^260^290^if  ( count == 0 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^return paint;^276^^^^^261^291^return this.defaultPaint;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^PaintItem item =  ( PaintItem )  lookupTable.get ( 0 ) ;^280^^^^^265^295^PaintItem item =  ( PaintItem )  this.lookupTable.get ( 0 ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Literal]^PaintItem item =  ( PaintItem )  this.lookupTable.get ( low ) ;^280^^^^^265^295^PaintItem item =  ( PaintItem )  this.lookupTable.get ( 0 ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( upperBound < item.value )  {^281^^^^^266^296^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( value < upperBound )  {^281^^^^^266^296^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( item.value < value )  {^281^^^^^266^296^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( value < item.value.value )  {^281^^^^^266^296^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( value == item.value )  {^281^^^^^266^296^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^return paint;^282^^^^^267^297^return this.defaultPaint;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Literal]^int low = low;^286^^^^^271^301^int low = 0;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^int high = lookupTable.size (  )  - 1;^287^^^^^272^302^int high = this.lookupTable.size (  )  - 1;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^int high = this.lookupTable.size (  )   >  1;^287^^^^^272^302^int high = this.lookupTable.size (  )  - 1;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Literal]^int high = this.lookupTable.size (  )  ;^287^^^^^272^302^int high = this.lookupTable.size (  )  - 1;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^while  ( high - high > 1 )  {^288^^^^^273^303^while  ( high - low > 1 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^while  ( high - low < 1 )  {^288^^^^^273^303^while  ( high - low > 1 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^while  ( high  <=  low > 1 )  {^288^^^^^273^303^while  ( high - low > 1 )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( value >= value )  {^291^^^^^276^306^if  ( value >= item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( value >= item.value.value )  {^291^^^^^276^306^if  ( value >= item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( value > item.value )  {^291^^^^^276^306^if  ( value >= item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^high = low;^295^^^^^291^296^high = current;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^low = low;^292^^^^^277^307^low = current;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^item =  ( PaintItem )  this.lookupTable.get ( low ) ;^290^^^^^275^305^item =  ( PaintItem )  this.lookupTable.get ( current ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^item =  ( PaintItem )  lookupTable.get ( current ) ;^290^^^^^275^305^item =  ( PaintItem )  this.lookupTable.get ( current ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^item =  ( PaintItem )  current.get ( this.lookupTable ) ;^290^^^^^275^305^item =  ( PaintItem )  this.lookupTable.get ( current ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^high = low;^295^^^^^280^310^high = current;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^int current =  ( high + high )  / 2;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^int current =  ( low + low )  / 2;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^int current =  ( high + low )  / 2;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^int current =  ( low + high )  * 2;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^int current =  ( low  &&  high )  / 2;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( upperBound >= item.value )  {^291^^^^^276^306^if  ( value >= item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( value >= upperBound )  {^291^^^^^276^306^if  ( value >= item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( item.value >= value )  {^291^^^^^276^306^if  ( value >= item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( value == item.value )  {^291^^^^^276^306^if  ( value >= item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^int current =  ( low + high )  + 2;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^int current =  ( low  ||  high )  / 2;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Literal]^int current =  ( low + high )  / high;^289^^^^^274^304^int current =  ( low + high )  / 2;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( current > low )  {^298^^^^^283^313^if  ( high > low )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( high > current )  {^298^^^^^283^313^if  ( high > low )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( low > high )  {^298^^^^^283^313^if  ( high > low )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( high >= low )  {^298^^^^^283^313^if  ( high > low )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( lowerBound < item.value )  {^300^^^^^285^315^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( value < upperBound )  {^300^^^^^285^315^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( item.value < value )  {^300^^^^^285^315^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( value == item.value )  {^300^^^^^285^315^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^item =  ( PaintItem )  this.lookupTable.get ( high ) ;^301^^^^^286^316^item =  ( PaintItem )  this.lookupTable.get ( low ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^item =  ( PaintItem )  low.get ( this.lookupTable ) ;^301^^^^^286^316^item =  ( PaintItem )  this.lookupTable.get ( low ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^item =  ( PaintItem )  lookupTable.get ( low ) ;^301^^^^^286^316^item =  ( PaintItem )  this.lookupTable.get ( low ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^item =  ( PaintItem )  this.lookupTable.get ( low ) ;^299^^^^^284^314^item =  ( PaintItem )  this.lookupTable.get ( high ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^item =  ( PaintItem )  lookupTable.get ( high ) ;^299^^^^^284^314^item =  ( PaintItem )  this.lookupTable.get ( high ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^item =  ( PaintItem )  high.get ( this.lookupTable ) ;^299^^^^^284^314^item =  ( PaintItem )  this.lookupTable.get ( high ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^if  ( value < value )  {^300^^^^^285^315^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^if  ( item < value.value )  {^300^^^^^285^315^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( value <= item.value )  {^300^^^^^285^315^if  ( value < item.value )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Variable_Misuse]^return  ( item != null ? item.paint : paint ) ;^304^^^^^289^319^return  ( item != null ? item.paint : this.defaultPaint ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^return  ( item.paint != null ? item : this.defaultPaint ) ;^304^^^^^289^319^return  ( item != null ? item.paint : this.defaultPaint ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Argument_Swapping]^return  ( item != null ? this.defaultPaint : item.paint ) ;^304^^^^^289^319^return  ( item != null ? item.paint : this.defaultPaint ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^return  ( item == null ? item.paint : this.defaultPaint ) ;^304^^^^^289^319^return  ( item != null ? item.paint : this.defaultPaint ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] getPaint [RETURN_TYPE] Paint   double value [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  PaintItem  item  double  d1  d2  lowerBound  upperBound  value  int  count  current  high  low  
[BugLab_Wrong_Operator]^if  ( obj <= this )  {^316^^^^^315^336^if  ( obj == this )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return false;^317^^^^^315^336^return true;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( ! ( obj  ||  LookupPaintScale )  )  {^319^^^^^315^336^if  ( ! ( obj instanceof LookupPaintScale )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^320^^^^^315^336^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( this.lowerBound != value )  {^323^^^^^315^336^if  ( this.lowerBound != that.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( this.lowerBound != that.lowerBound.lowerBound )  {^323^^^^^315^336^if  ( this.lowerBound != that.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( that != this.lowerBound.lowerBound )  {^323^^^^^315^336^if  ( this.lowerBound != that.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( that.lowerBound != this.lowerBound )  {^323^^^^^315^336^if  ( this.lowerBound != that.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( this.lowerBound == that.lowerBound )  {^323^^^^^315^336^if  ( this.lowerBound != that.lowerBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^324^^^^^315^336^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( lowerBound != that.upperBound )  {^326^^^^^315^336^if  ( this.upperBound != that.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( this.upperBound != value )  {^326^^^^^315^336^if  ( this.upperBound != that.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( this.upperBound != that.upperBound.upperBound )  {^326^^^^^315^336^if  ( this.upperBound != that.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( that.upperBound != this.upperBound )  {^326^^^^^315^336^if  ( this.upperBound != that.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Operator]^if  ( this.upperBound < that.upperBound )  {^326^^^^^315^336^if  ( this.upperBound != that.upperBound )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^327^^^^^315^336^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( paint, that.defaultPaint )  )  {^329^^^^^315^336^if  ( !PaintUtilities.equal ( this.defaultPaint, that.defaultPaint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( this.defaultPaint, paint )  )  {^329^^^^^315^336^if  ( !PaintUtilities.equal ( this.defaultPaint, that.defaultPaint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( this.defaultPaint, that.defaultPaint.defaultPaint )  )  {^329^^^^^315^336^if  ( !PaintUtilities.equal ( this.defaultPaint, that.defaultPaint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that, this.defaultPaint.defaultPaint )  )  {^329^^^^^315^336^if  ( !PaintUtilities.equal ( this.defaultPaint, that.defaultPaint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( this.defaultPaint, that )  )  {^329^^^^^315^336^if  ( !PaintUtilities.equal ( this.defaultPaint, that.defaultPaint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^330^^^^^315^336^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that.defaultPaint, this.defaultPaint )  )  {^329^^^^^315^336^if  ( !PaintUtilities.equal ( this.defaultPaint, that.defaultPaint )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^if  ( !this.lookupTable.equals ( lookupTable )  )  {^332^^^^^315^336^if  ( !this.lookupTable.equals ( that.lookupTable )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !this.lookupTable.equals ( that.lookupTable.lookupTable )  )  {^332^^^^^315^336^if  ( !this.lookupTable.equals ( that.lookupTable )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^if  ( !this.lookupTable.equals ( that )  )  {^332^^^^^315^336^if  ( !this.lookupTable.equals ( that.lookupTable )  )  {^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return true;^333^^^^^315^336^return false;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Wrong_Literal]^return false;^335^^^^^315^336^return true;^[CLASS] LookupPaintScale PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lookupTable  Object  obj  Paint  defaultPaint  paint  boolean  LookupPaintScale  that  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^clone.lookupTable = new java.util.ArrayList ( lookupTable ) ;^348^^^^^346^350^clone.lookupTable = new java.util.ArrayList ( this.lookupTable ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  LookupPaintScale  clone  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^SerialUtilities.writePaint ( paint, stream ) ;^361^^^^^359^362^SerialUtilities.writePaint ( this.defaultPaint, stream ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  ObjectOutputStream  stream  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Argument_Swapping]^SerialUtilities.writePaint ( stream, this.defaultPaint ) ;^361^^^^^359^362^SerialUtilities.writePaint ( this.defaultPaint, stream ) ;^[CLASS] LookupPaintScale PaintItem  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] List  lookupTable  Paint  defaultPaint  paint  boolean  ObjectOutputStream  stream  double  d1  d2  lowerBound  upperBound  value  
[BugLab_Variable_Misuse]^double d2 = value;^99^^^^^96^107^double d2 = that.value;^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^double d2 = that.value.value;^99^^^^^96^107^double d2 = that.value;^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^double d2 = that;^99^^^^^96^107^double d2 = that.value;^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( d2 > d1 )  {^100^^^^^96^107^if  ( d1 > d2 )  {^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Operator]^if  ( d1 >= d2 )  {^100^^^^^96^107^if  ( d1 > d2 )  {^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^if  ( d2 > d2 )  {^100^^^^^96^107^if  ( d1 > d2 )  {^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return 2;^101^^^^^96^107^return 1;^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Variable_Misuse]^if  ( value < d2 )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Variable_Misuse]^if  ( d1 < value )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( d2 < d1 )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Operator]^if  ( d1 <= d2 )  {^103^^^^^96^107^if  ( d1 < d2 )  {^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return -;^104^^^^^96^107^return -1;^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return 1;^106^^^^^96^107^return 0;^[CLASS] PaintItem  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Operator]^if  ( obj != this )  {^117^^^^^116^131^if  ( obj == this )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return false;^118^^^^^116^131^return true;^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Operator]^if  ( ! ( obj  &  PaintItem )  )  {^120^^^^^116^131^if  ( ! ( obj instanceof PaintItem )  )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return true;^121^^^^^116^131^return false;^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Variable_Misuse]^if  ( value != that.value )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( this.value != that.value.value )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( that.value != this.value )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( this.value != that )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Operator]^if  ( this.value == that.value )  {^124^^^^^116^131^if  ( this.value != that.value )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return true;^125^^^^^116^131^return false;^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( paint, that.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( this.paint, paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( this.paint, that.paint.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that.paint, this.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return true;^128^^^^^116^131^return false;^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that, this.paint.paint )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( this.paint, that )  )  {^127^^^^^116^131^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Wrong_Literal]^return false;^130^^^^^116^131^return true;^[CLASS] PaintItem  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Paint  paint  boolean  PaintItem  that  double  d1  d2  value  
[BugLab_Variable_Misuse]^SerialUtilities.writePaint ( paint, stream ) ;^142^^^^^140^143^SerialUtilities.writePaint ( this.paint, stream ) ;^[CLASS] PaintItem  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] Paint  paint  boolean  ObjectOutputStream  stream  double  d1  d2  value  
[BugLab_Argument_Swapping]^SerialUtilities.writePaint ( stream, this.paint ) ;^142^^^^^140^143^SerialUtilities.writePaint ( this.paint, stream ) ;^[CLASS] PaintItem  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] Paint  paint  boolean  ObjectOutputStream  stream  double  d1  d2  value  
