[BugLab_Wrong_Operator]^if  ( paint != null )  {^96^^^^^95^108^if  ( paint == null )  {^[CLASS] LineBorder  [METHOD] <init> [RETURN_TYPE] RectangleInsets)   Paint paint Stroke stroke RectangleInsets insets [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  
[BugLab_Wrong_Operator]^if  ( stroke != null )  {^99^^^^^95^108^if  ( stroke == null )  {^[CLASS] LineBorder  [METHOD] <init> [RETURN_TYPE] RectangleInsets)   Paint paint Stroke stroke RectangleInsets insets [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  
[BugLab_Wrong_Operator]^if  ( insets != null )  {^102^^^^^95^108^if  ( insets == null )  {^[CLASS] LineBorder  [METHOD] <init> [RETURN_TYPE] RectangleInsets)   Paint paint Stroke stroke RectangleInsets insets [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  
[BugLab_Variable_Misuse]^return paint;^116^^^^^115^117^return this.paint;^[CLASS] LineBorder  [METHOD] getPaint [RETURN_TYPE] Paint   [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  
[BugLab_Variable_Misuse]^return insets;^125^^^^^124^126^return this.insets;^[CLASS] LineBorder  [METHOD] getInsets [RETURN_TYPE] RectangleInsets   [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  
[BugLab_Variable_Misuse]^return stroke;^134^^^^^133^135^return this.stroke;^[CLASS] LineBorder  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  
[BugLab_Variable_Misuse]^if  ( y1 <= 0.0 || h <= 0.0 )  {^147^^^^^132^162^if  ( w <= 0.0 || h <= 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^if  ( w <= 0.0 || x1 <= 0.0 )  {^147^^^^^132^162^if  ( w <= 0.0 || h <= 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^if  ( h <= 0.0 || w <= 0.0 )  {^147^^^^^132^162^if  ( w <= 0.0 || h <= 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( w <= 0.0 && h <= 0.0 )  {^147^^^^^132^162^if  ( w <= 0.0 || h <= 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( w < 0.0 || h <= 0.0 )  {^147^^^^^132^162^if  ( w <= 0.0 || h <= 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( w <= 0.0 || h > 0.0 )  {^147^^^^^132^162^if  ( w <= 0.0 || h <= 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double t = this.insets.calculateTopInset ( y0 ) ;^150^^^^^135^165^double t = this.insets.calculateTopInset ( h ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double t = insets.calculateTopInset ( h ) ;^150^^^^^135^165^double t = this.insets.calculateTopInset ( h ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double t = h.calculateTopInset ( this.insets ) ;^150^^^^^135^165^double t = this.insets.calculateTopInset ( h ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double b = this.insets.calculateBottomInset ( x1 ) ;^151^^^^^136^166^double b = this.insets.calculateBottomInset ( h ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double b = insets.calculateBottomInset ( h ) ;^151^^^^^136^166^double b = this.insets.calculateBottomInset ( h ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double b = h.calculateBottomInset ( this.insets ) ;^151^^^^^136^166^double b = this.insets.calculateBottomInset ( h ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double b = this.insets.calculateBottomInset ( x0 ) ;^151^^^^^136^166^double b = this.insets.calculateBottomInset ( h ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double l = this.insets.calculateLeftInset ( y1 ) ;^152^^^^^137^167^double l = this.insets.calculateLeftInset ( w ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double l = insets.calculateLeftInset ( w ) ;^152^^^^^137^167^double l = this.insets.calculateLeftInset ( w ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double l = w.calculateLeftInset ( this.insets ) ;^152^^^^^137^167^double l = this.insets.calculateLeftInset ( w ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double l = this.insets.calculateLeftInset ( y ) ;^152^^^^^137^167^double l = this.insets.calculateLeftInset ( w ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double r = this.insets.calculateRightInset ( y1 ) ;^153^^^^^138^168^double r = this.insets.calculateRightInset ( w ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double r = w.calculateRightInset ( this.insets ) ;^153^^^^^138^168^double r = this.insets.calculateRightInset ( w ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double r = this.insets.calculateRightInset ( x0 ) ;^153^^^^^138^168^double r = this.insets.calculateRightInset ( w ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double y10 = x + l / 2.0;^156^^^^^141^171^double x0 = x + l / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double x0 = x + y1 / 2.0;^156^^^^^141^171^double x0 = x + l / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double l0 = x + x / 2.0;^156^^^^^141^171^double x0 = x + l / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double x0 = x + l + 2.0;^156^^^^^141^171^double x0 = x + l / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double y1 = x + w - r / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double x1 = x + y1 - r / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double x1 = x + w - y1 / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double w1 = x + x - r / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double x1 = x + r - w / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double r1 = x + w - x / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double x1 = x + w  ||  r / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double x1 = x   instanceof   w - r / 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double x1 = x + w - r - 2.0;^157^^^^^142^172^double x1 = x + w - r / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double x0 = y + h - b / 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double y0 = y + y1 - b / 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double y0 = y + h - x0 / 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double b0 = y + h - y / 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double y0 = y + b - h / 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double y0 = y + h  <<  b / 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double y0 = y  >  h - b / 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double y0 = y + h - b + 2.0;^158^^^^^143^173^double y0 = y + h - b / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double x1 = y + t / 2.0;^159^^^^^144^174^double y1 = y + t / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^double y1 = y + x0 / 2.0;^159^^^^^144^174^double y1 = y + t / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^double t1 = y + y / 2.0;^159^^^^^144^174^double y1 = y + t / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^double y1 = y + t + 2.0;^159^^^^^144^174^double y1 = y + t / 2.0;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^if  ( y1 > 0.0 )  {^163^^^^^148^178^if  ( t > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( t >= 0.0 )  {^163^^^^^148^178^if  ( t > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x, y1, x1, y1 ) ;^164^^^^^149^179^line.setLine ( x0, y1, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, x, x1, y1 ) ;^164^^^^^149^179^line.setLine ( x0, y1, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, y1, y1, y1 ) ;^164^^^^^149^179^line.setLine ( x0, y1, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( y1, x0, x1, y1 ) ;^164^^^^^149^179^line.setLine ( x0, y1, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( x0, x1, y1, y1 ) ;^164^^^^^149^179^line.setLine ( x0, y1, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( x1, y1, x0, y1 ) ;^164^^^^^149^179^line.setLine ( x0, y1, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, x0, x1, y1 ) ;^164^^^^^149^179^line.setLine ( x0, y1, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^if  ( y1 > 0.0 )  {^167^^^^^152^182^if  ( b > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( b >= 0.0 )  {^167^^^^^152^182^if  ( b > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x1, y0, x1, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, y, x1, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, y0, y1, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( x1, y0, x0, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( y0, x0, x1, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( x0, x1, y0, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( y1, y0, x1, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, x, x1, y0 ) ;^168^^^^^153^183^line.setLine ( x0, y0, x1, y0 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^if  ( y0 > 0.0 )  {^171^^^^^156^186^if  ( l > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( l >= 0.0 )  {^171^^^^^156^186^if  ( l > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x1, y0, x0, y1 ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, y, x0, y1 ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, y0, x0, x1 ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( y1, y0, x0, x0 ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( x0, y1, x0, y0 ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( y1, y0, x0, y1 ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, x1, x0, y1 ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x0, y0, x0, x ) ;^172^^^^^157^187^line.setLine ( x0, y0, x0, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^if  ( y1 > 0.0 )  {^175^^^^^160^190^if  ( r > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( r >= 0.0 )  {^175^^^^^160^190^if  ( r > 0.0 )  {^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( y0, y0, x1, y1 ) ;^176^^^^^161^191^line.setLine ( x1, y0, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x1, y1, x1, y1 ) ;^176^^^^^161^191^line.setLine ( x1, y0, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x1, y0, x1, x0 ) ;^176^^^^^161^191^line.setLine ( x1, y0, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( y0, x1, x1, y1 ) ;^176^^^^^161^191^line.setLine ( x1, y0, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( x1, y1, x1, y0 ) ;^176^^^^^161^191^line.setLine ( x1, y0, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Variable_Misuse]^line.setLine ( x1, x0, x1, y1 ) ;^176^^^^^161^191^line.setLine ( x1, y0, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Argument_Swapping]^line.setLine ( y1, y0, x1, x1 ) ;^176^^^^^161^191^line.setLine ( x1, y0, x1, y1 ) ;^[CLASS] LineBorder  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area [VARIABLES] Stroke  stroke  boolean  double  b  h  l  r  t  w  x  x0  x1  y  y0  y1  Rectangle2D  area  RectangleInsets  insets  Paint  paint  Line2D  line  Graphics2D  g2  
[BugLab_Wrong_Operator]^if  ( obj != this )  {^189^^^^^188^206^if  ( obj == this )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Wrong_Literal]^return false;^190^^^^^188^206^return true;^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Wrong_Operator]^if  ( ! ( obj  <=  LineBorder )  )  {^192^^^^^188^206^if  ( ! ( obj instanceof LineBorder )  )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Wrong_Literal]^return true;^193^^^^^188^206^return false;^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( paint, that.paint )  )  {^196^^^^^188^206^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Variable_Misuse]^if  ( !PaintUtilities.equal ( this.paint, paint )  )  {^196^^^^^188^206^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that, this.paint.paint )  )  {^196^^^^^188^206^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( that.paint, this.paint )  )  {^196^^^^^188^206^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Wrong_Literal]^return true;^197^^^^^188^206^return false;^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Argument_Swapping]^if  ( !PaintUtilities.equal ( this.paint, that.paint.paint )  )  {^196^^^^^188^206^if  ( !PaintUtilities.equal ( this.paint, that.paint )  )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Variable_Misuse]^if  ( !ObjectUtilities.equal ( stroke, that.stroke )  ) {^199^^^^^188^206^if  ( !ObjectUtilities.equal ( this.stroke, that.stroke )  ) {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Variable_Misuse]^if  ( !ObjectUtilities.equal ( this.stroke, stroke )  ) {^199^^^^^188^206^if  ( !ObjectUtilities.equal ( this.stroke, that.stroke )  ) {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Argument_Swapping]^if  ( !ObjectUtilities.equal ( this.stroke, that.stroke.stroke )  ) {^199^^^^^188^206^if  ( !ObjectUtilities.equal ( this.stroke, that.stroke )  ) {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Argument_Swapping]^if  ( !ObjectUtilities.equal ( that.stroke, this.stroke )  ) {^199^^^^^188^206^if  ( !ObjectUtilities.equal ( this.stroke, that.stroke )  ) {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Wrong_Literal]^return true;^200^^^^^188^206^return false;^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Argument_Swapping]^if  ( !ObjectUtilities.equal ( that, this.stroke.stroke )  ) {^199^^^^^188^206^if  ( !ObjectUtilities.equal ( this.stroke, that.stroke )  ) {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Variable_Misuse]^if  ( !this.insets.equals ( insets )  )  {^202^^^^^188^206^if  ( !this.insets.equals ( that.insets )  )  {^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Wrong_Literal]^return true;^203^^^^^188^206^return false;^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Wrong_Literal]^return false;^205^^^^^188^206^return true;^[CLASS] LineBorder  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] RectangleInsets  insets  Stroke  stroke  Object  obj  Paint  paint  boolean  LineBorder  that  
[BugLab_Variable_Misuse]^SerialUtilities.writePaint ( paint, stream ) ;^217^^^^^215^219^SerialUtilities.writePaint ( this.paint, stream ) ;^[CLASS] LineBorder  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  ObjectOutputStream  stream  
[BugLab_Argument_Swapping]^SerialUtilities.writePaint ( stream, this.paint ) ;^217^^^^^215^219^SerialUtilities.writePaint ( this.paint, stream ) ;^[CLASS] LineBorder  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  ObjectOutputStream  stream  
[BugLab_Variable_Misuse]^SerialUtilities.writeStroke ( stroke, stream ) ;^218^^^^^215^219^SerialUtilities.writeStroke ( this.stroke, stream ) ;^[CLASS] LineBorder  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  ObjectOutputStream  stream  
[BugLab_Argument_Swapping]^SerialUtilities.writeStroke ( stream, this.stroke ) ;^218^^^^^215^219^SerialUtilities.writeStroke ( this.stroke, stream ) ;^[CLASS] LineBorder  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] RectangleInsets  insets  Stroke  stroke  Paint  paint  boolean  ObjectOutputStream  stream  
