[BugLab_Variable_Misuse]^return top;^94^^^^^93^95^return this.top;^[CLASS] AxisSpace  [METHOD] getTop [RETURN_TYPE] double   [VARIABLES] double  bottom  left  right  top  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^this.top = right;^103^^^^^102^104^this.top = space;^[CLASS] AxisSpace  [METHOD] setTop [RETURN_TYPE] void   double space [VARIABLES] double  bottom  left  right  space  top  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return top;^112^^^^^111^113^return this.bottom;^[CLASS] AxisSpace  [METHOD] getBottom [RETURN_TYPE] double   [VARIABLES] double  bottom  left  right  space  top  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^this.bottom = top;^121^^^^^120^122^this.bottom = space;^[CLASS] AxisSpace  [METHOD] setBottom [RETURN_TYPE] void   double space [VARIABLES] double  bottom  left  right  space  top  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return right;^130^^^^^129^131^return this.left;^[CLASS] AxisSpace  [METHOD] getLeft [RETURN_TYPE] double   [VARIABLES] double  bottom  left  right  space  top  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^this.left = right;^139^^^^^138^140^this.left = space;^[CLASS] AxisSpace  [METHOD] setLeft [RETURN_TYPE] void   double space [VARIABLES] double  bottom  left  right  space  top  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return right;^148^^^^^147^149^return this.right;^[CLASS] AxisSpace  [METHOD] getRight [RETURN_TYPE] double   [VARIABLES] double  bottom  left  right  space  top  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^this.right = right;^157^^^^^156^158^this.right = space;^[CLASS] AxisSpace  [METHOD] setRight [RETURN_TYPE] void   double space [VARIABLES] double  bottom  left  right  space  top  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( edge != null )  {^167^^^^^166^185^if  ( edge == null )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge <= RectangleEdge.TOP )  {^170^^^^^166^185^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge != RectangleEdge.TOP )  {^170^^^^^166^185^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge < RectangleEdge.TOP )  {^170^^^^^166^185^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.BOTTOM )  {^173^^^^^166^185^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.LEFT )  {^176^^^^^166^185^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.LEFT )  {^176^^^^^166^185^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.RIGHT )  {^179^^^^^166^185^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.right += top;^180^^^^^166^185^this.right += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.left += right;^177^^^^^166^185^this.left += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge > RectangleEdge.RIGHT )  {^179^^^^^166^185^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.right += right;^180^^^^^166^185^this.right += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.left += top;^177^^^^^166^185^this.left += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.bottom += top;^174^^^^^166^185^this.bottom += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge < RectangleEdge.LEFT )  {^176^^^^^166^185^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^else if  ( edge == RectangleEdge.3 )  {^179^^^^^166^185^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.RIGHT )  {^179^^^^^166^185^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.RIGHT )  {^179^^^^^166^185^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.top += top;^171^^^^^166^185^this.top += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.BOTTOM )  {^173^^^^^166^185^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.BOTTOM )  {^173^^^^^166^185^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.LEFT )  {^176^^^^^166^185^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^else if  ( edge == RectangleEdge.null )  {^179^^^^^166^185^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.bottom += right;^174^^^^^166^185^this.bottom += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.top += right;^171^^^^^166^185^this.top += space;^[CLASS] AxisSpace  [METHOD] add [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.top = Math.max ( top, space.top ) ;^193^^^^^192^197^this.top = Math.max ( this.top, space.top ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.top = Math.max ( this.top, right ) ;^193^^^^^192^197^this.top = Math.max ( this.top, space.top ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.top = Math.max ( space, this.top.top ) ;^193^^^^^192^197^this.top = Math.max ( this.top, space.top ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.top = Math.max ( space.top, this.top ) ;^193^^^^^192^197^this.top = Math.max ( this.top, space.top ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.bottom = Math.max ( top, space.bottom ) ;^194^^^^^192^197^this.bottom = Math.max ( this.bottom, space.bottom ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.bottom = Math.max ( this.bottom, top ) ;^194^^^^^192^197^this.bottom = Math.max ( this.bottom, space.bottom ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.bottom = Math.max ( this.bottom, space.bottom.bottom ) ;^194^^^^^192^197^this.bottom = Math.max ( this.bottom, space.bottom ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.bottom = Math.max ( space, this.bottom.bottom ) ;^194^^^^^192^197^this.bottom = Math.max ( this.bottom, space.bottom ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.bottom = Math.max ( space.bottom, this.bottom ) ;^194^^^^^192^197^this.bottom = Math.max ( this.bottom, space.bottom ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.bottom = Math.max ( this.bottom, right ) ;^194^^^^^192^197^this.bottom = Math.max ( this.bottom, space.bottom ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.left = Math.max ( top, space.left ) ;^195^^^^^192^197^this.left = Math.max ( this.left, space.left ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.left = Math.max ( this.left, top ) ;^195^^^^^192^197^this.left = Math.max ( this.left, space.left ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.left = Math.max ( this.left, space.left.left ) ;^195^^^^^192^197^this.left = Math.max ( this.left, space.left ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.left = Math.max ( space.left, this.left ) ;^195^^^^^192^197^this.left = Math.max ( this.left, space.left ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.left = Math.max ( right, space.left ) ;^195^^^^^192^197^this.left = Math.max ( this.left, space.left ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.left = Math.max ( space, this.left.left ) ;^195^^^^^192^197^this.left = Math.max ( this.left, space.left ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.right = Math.max ( space, space.right ) ;^196^^^^^192^197^this.right = Math.max ( this.right, space.right ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.right = Math.max ( this.right, top ) ;^196^^^^^192^197^this.right = Math.max ( this.right, space.right ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.right = Math.max ( this.right, space.right.right ) ;^196^^^^^192^197^this.right = Math.max ( this.right, space.right ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.right = Math.max ( space.right, this.right ) ;^196^^^^^192^197^this.right = Math.max ( this.right, space.right ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^this.right = Math.max ( space, this.right.right ) ;^196^^^^^192^197^this.right = Math.max ( this.right, space.right ) ;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   AxisSpace space [VARIABLES] AxisSpace  space  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( edge != RectangleEdge.TOP )  {^207^^^^^206^232^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge <= RectangleEdge.TOP )  {^207^^^^^206^232^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.BOTTOM )  {^212^^^^^206^232^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.LEFT )  {^217^^^^^206^232^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.RIGHT )  {^222^^^^^206^232^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( this.right < top )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( top < space )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^if  ( space < this.right )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.right == space )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.right = top;^224^^^^^206^232^this.right = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.right <= space )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( this.left < top )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( top < space )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^if  ( space < this.left )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.left <= space )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.left = top;^219^^^^^206^232^this.left = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.left > space )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.left = right;^219^^^^^206^232^this.left = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.RIGHT )  {^222^^^^^206^232^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( this.right < right )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.right = right;^224^^^^^206^232^this.right = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( right < space )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.right > space )  {^223^^^^^206^232^if  ( this.right < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( this.bottom < top )  {^213^^^^^206^232^if  ( this.bottom < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( top < space )  {^213^^^^^206^232^if  ( this.bottom < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^if  ( space < this.bottom )  {^213^^^^^206^232^if  ( this.bottom < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.bottom <= space )  {^213^^^^^206^232^if  ( this.bottom < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.bottom = right;^214^^^^^206^232^this.bottom = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.bottom = top;^214^^^^^206^232^this.bottom = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.LEFT )  {^217^^^^^206^232^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^else if  ( edge == RectangleEdge.4 )  {^222^^^^^206^232^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge < RectangleEdge.RIGHT )  {^222^^^^^206^232^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( this.left < right )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( this.top < top )  {^208^^^^^206^232^if  ( this.top < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( top < space )  {^208^^^^^206^232^if  ( this.top < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^if  ( space < this.top )  {^208^^^^^206^232^if  ( this.top < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.top <= space )  {^208^^^^^206^232^if  ( this.top < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.top = top;^209^^^^^206^232^this.top = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.top = right;^209^^^^^206^232^this.top = space;^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.BOTTOM )  {^212^^^^^206^232^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.LEFT )  {^217^^^^^206^232^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( right < space )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( this.left == space )  {^218^^^^^206^232^if  ( this.left < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.RIGHT )  {^222^^^^^206^232^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( this.bottom < right )  {^213^^^^^206^232^if  ( this.bottom < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( right < space )  {^213^^^^^206^232^if  ( this.bottom < space )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^else if  ( edge == RectangleEdge.0 )  {^217^^^^^206^232^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] ensureAtLeast [RETURN_TYPE] void   double space RectangleEdge edge [VARIABLES] boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^if  ( area == null )  {^243^^^^^242^253^if  ( result == null )  {^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( result != null )  {^243^^^^^242^253^if  ( result == null )  {^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^result.setRect ( result.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^result.setRect ( area.getX (  )  + space, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + top, area.getWidth (  )  - this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - top,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^result.setRect ( this.top.getX (  )  + this.left, area.getY (  )  + area, area.getWidth (  )  - this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.right, area.getWidth (  )  - this.left - this.top,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  >>  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  &  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )    instanceof   this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )   <=  this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )   >=  this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )   >  this.left - this.right,^246^247^248^249^^242^253^result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^area.getX (  )  + this.left, result.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom^247^248^249^250^^242^253^area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^area.getY (  )  + this.top, result.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom ) ;^248^249^250^251^^242^253^area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom ) ;^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^area.getWidth (  )  - this.left - this.right, result.getHeight (  )  - this.top - this.bottom ) ;^249^250^251^^^242^253^area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom ) ;^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^return area;^252^^^^^242^253^return result;^[CLASS] AxisSpace  [METHOD] shrink [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( area == null )  {^264^^^^^263^274^if  ( result == null )  {^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( result != null )  {^264^^^^^263^274^if  ( result == null )  {^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^result.setRect ( area.getX (  )  - space, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - right, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + top,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^result.setRect ( area.getX (  )  - this.right, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.left,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.right, area.getWidth (  )  + this.left + this.top,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  )   <<  this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  )   !=  this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  !=  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )    instanceof   this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  <=  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^result.setRect ( area.getX (  >=  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^area.getX (  )  - this.left, result.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom^268^269^270^271^^263^274^area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^area.getY (  )  - this.top, result.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom ) ;^269^270^271^272^^263^274^area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom ) ;^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^area.getWidth (  )  + this.left + this.right, result.getHeight (  )  + this.top + this.bottom ) ;^270^271^272^^^263^274^area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom ) ;^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^return area;^273^^^^^263^274^return result;^[CLASS] AxisSpace  [METHOD] expand [RETURN_TYPE] Rectangle2D   Rectangle2D area Rectangle2D result [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( edge != RectangleEdge.TOP )  {^286^^^^^284^309^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge <= RectangleEdge.TOP )  {^286^^^^^284^309^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.BOTTOM )  {^291^^^^^284^309^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.BOTTOM )  {^291^^^^^284^309^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.LEFT )  {^297^^^^^284^309^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge < RectangleEdge.LEFT )  {^297^^^^^284^309^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.RIGHT )  {^302^^^^^284^309^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( result.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getMaxX (  )  - right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( this.right.getMaxX (  )  - area, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   |  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getMaxX (  )  - space, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   ||  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^area.getMaxX (  )  - this.right, result.getY (  ) , this.right, area.getHeight (  ) ) ;^304^305^306^^^284^309^area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^this.right, result.getHeight (  ) ) ;^305^306^^^^284^309^this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   <  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getMaxX (  )  - top, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   !=  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( result.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^298^299^300^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , top, area.getHeight (  ) ) ;^298^299^300^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( this.left.getX (  ) , area.getY (  ) , area, area.getHeight (  ) ) ;^298^299^300^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , space, area.getHeight (  ) ) ;^298^299^300^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^area.getX (  ) , result.getY (  ) , this.left, area.getHeight (  ) ) ;^299^300^^^^284^309^area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   <=  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   &&  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   >>  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , right, area.getHeight (  ) ) ;^298^299^300^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( result.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( this.bottom.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , area ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.bottom, area.getWidth (  ) , this.top ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )    instanceof   this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , top ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( this.top.getX (  ) , area.getMaxY (  )  - area, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )   >>  this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^area.getX (  ) , result.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^293^294^295^^^284^309^area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.LEFT )  {^297^^^^^284^309^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   &  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - right, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )   ^  this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , space ) ;^287^288^289^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Argument_Swapping]^result = new Rectangle2D.Double ( this.top.getX (  ) , area.getY (  ) , area.getWidth (  ) , area ) ;^287^288^289^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( result.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^287^288^289^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , top ) ;^287^288^289^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^area.getX (  ) , result.getY (  ) , area.getWidth (  ) , this.top ) ;^288^289^^^^284^309^area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^else if  ( edge == RectangleEdge.4 )  {^291^^^^^284^309^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge > RectangleEdge.BOTTOM )  {^291^^^^^284^309^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.BOTTOM )  {^291^^^^^284^309^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )    instanceof   this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   >=  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   >  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.RIGHT )  {^302^^^^^284^309^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getMaxX (  )   ==  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.RIGHT )  {^302^^^^^284^309^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , right ) ;^287^288^289^^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , right ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )   |  this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )   ||  this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Variable_Misuse]^return area;^308^^^^^284^309^return result;^[CLASS] AxisSpace  [METHOD] reserved [RETURN_TYPE] Rectangle2D   Rectangle2D area RectangleEdge edge [VARIABLES] Rectangle2D  area  result  boolean  double  bottom  left  right  space  top  long  serialVersionUID  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( obj != this )  {^331^^^^^330^351^if  ( obj == this )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^332^^^^^330^351^return true;^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ! ( obj  &&  AxisSpace )  )  {^334^^^^^330^351^if  ( ! ( obj instanceof AxisSpace )  )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^335^^^^^330^351^return false;^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( top != that.top )  {^338^^^^^330^351^if  ( this.top != that.top )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( this.top != top )  {^338^^^^^330^351^if  ( this.top != that.top )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( that != this.top.top )  {^338^^^^^330^351^if  ( this.top != that.top )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( that.top != this.top )  {^338^^^^^330^351^if  ( this.top != that.top )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( this.top != that )  {^338^^^^^330^351^if  ( this.top != that.top )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( this.top >= that.top )  {^338^^^^^330^351^if  ( this.top != that.top )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^339^^^^^330^351^return false;^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( top != that.bottom )  {^341^^^^^330^351^if  ( this.bottom != that.bottom )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( this.bottom != right )  {^341^^^^^330^351^if  ( this.bottom != that.bottom )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( this.bottom != that.bottom.bottom )  {^341^^^^^330^351^if  ( this.bottom != that.bottom )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( that.bottom != this.bottom )  {^341^^^^^330^351^if  ( this.bottom != that.bottom )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( this.bottom == that.bottom )  {^341^^^^^330^351^if  ( this.bottom != that.bottom )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^342^^^^^330^351^return false;^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( right != that.left )  {^344^^^^^330^351^if  ( this.left != that.left )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( this.left != space )  {^344^^^^^330^351^if  ( this.left != that.left )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( this.left != that.left.left )  {^344^^^^^330^351^if  ( this.left != that.left )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( that.left != this.left )  {^344^^^^^330^351^if  ( this.left != that.left )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( this.left != that )  {^344^^^^^330^351^if  ( this.left != that.left )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( this.left >= that.left )  {^344^^^^^330^351^if  ( this.left != that.left )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^345^^^^^330^351^return false;^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( top != that.right )  {^347^^^^^330^351^if  ( this.right != that.right )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( this.right != space )  {^347^^^^^330^351^if  ( this.right != that.right )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( that != this.right.right )  {^347^^^^^330^351^if  ( this.right != that.right )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( that.right != this.right )  {^347^^^^^330^351^if  ( this.right != that.right )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( this.right == that.right )  {^347^^^^^330^351^if  ( this.right != that.right )  {^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^348^^^^^330^351^return false;^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^350^^^^^330^351^return true;^[CLASS] AxisSpace  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  AxisSpace  that  boolean  double  bottom  left  right  space  top  long  serialVersionUID  
[BugLab_Wrong_Literal]^int result = result;^359^^^^^358^369^int result = 23;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^long l = Double.doubleToLongBits ( top ) ;^360^^^^^358^369^long l = Double.doubleToLongBits ( this.top ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^result = 37 * result +  ( int )   ( serialVersionUID ^  ( l >>> 32 )  ) ;^361^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Argument_Swapping]^result = 37 * l +  ( int )   ( result ^  ( l >>> 32 )  ) ;^361^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  >  ( int )   ( l ^  ( l >>> 32 )  ) ;^361^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 + result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^361^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  ( int )   ( l ^  ( l  ^  32 )  ) ;^361^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = 37 * result +  ( int )   ( l ^  ( l >>>  )  ) ;^361^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^l = Double.doubleToLongBits ( top ) ;^362^^^^^358^369^l = Double.doubleToLongBits ( this.bottom ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^result = 37 * result +  ( int )   ( serialVersionUID ^  ( l >>> 32 )  ) ;^363^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Argument_Swapping]^result = 37 * l +  ( int )   ( result ^  ( l >>> 32 )  ) ;^363^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  >  ( int )   ( l ^  ( l >>> 32 )  ) ;^363^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 - result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^363^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  ( int )   ( l ^  ( l  >>  32 )  ) ;^363^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = 38 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^363^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = 37 * result +  ( int )   ( l ^  ( l >>>  )  ) ;^363^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^l = Double.doubleToLongBits ( top ) ;^364^^^^^358^369^l = Double.doubleToLongBits ( this.left ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^result = 37 * result +  ( int )   ( serialVersionUID ^  ( l >>> 32 )  ) ;^365^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Argument_Swapping]^result = 37 * l +  ( int )   ( result ^  ( l >>> 32 )  ) ;^365^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  >=  ( int )   ( l ^  ( l >>> 32 )  ) ;^365^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 / result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^365^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  ( int )   ( l ^  ( l  ^  32 )  ) ;^365^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = result * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^365^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = 37 * result +  ( int )   ( l ^  ( l >>> result )  ) ;^365^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^l = Double.doubleToLongBits ( space ) ;^366^^^^^358^369^l = Double.doubleToLongBits ( this.right ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^l = Double.doubleToLongBits ( top ) ;^366^^^^^358^369^l = Double.doubleToLongBits ( this.right ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^result = 37 * result +  ( int )   ( serialVersionUID ^  ( l >>> 32 )  ) ;^367^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Argument_Swapping]^result = 37 * l +  ( int )   ( result ^  ( l >>> 32 )  ) ;^367^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  >>  ( int )   ( l ^  ( l >>> 32 )  ) ;^367^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 / result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^367^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = 37 * result +  ( int )   ( l ^  ( l  ==  32 )  ) ;^367^^^^^358^369^result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[CLASS] AxisSpace  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  bottom  left  right  space  top  long  l  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^return super.toString (  ||  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^377^378^^^^376^379^return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[CLASS] AxisSpace  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  bottom  left  right  space  top  long  l  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return super.toString (  &&  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^377^378^^^^376^379^return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[CLASS] AxisSpace  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  bottom  left  right  space  top  long  l  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return super.toString (  <=  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^377^378^^^^376^379^return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[CLASS] AxisSpace  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  bottom  left  right  space  top  long  l  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return super.toString (  <  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^377^378^^^^376^379^return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[CLASS] AxisSpace  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  bottom  left  right  space  top  long  l  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return super.toString (  &  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^377^378^^^^376^379^return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[CLASS] AxisSpace  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  bottom  left  right  space  top  long  l  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return super.toString (  ==  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^377^378^^^^376^379^return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[CLASS] AxisSpace  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  bottom  left  right  space  top  long  l  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return super.toString (  )   ==  "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^377^378^^^^376^379^return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[CLASS] AxisSpace  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  bottom  left  right  space  top  long  l  serialVersionUID  boolean  
