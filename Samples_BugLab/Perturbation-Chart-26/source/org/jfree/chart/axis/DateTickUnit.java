[buglab_swap_variables]^this ( count, unit, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this (  count, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this ( unit,  null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this ( count, unit, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this (  count, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this ( unit, formatter, unit, count, count ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this ( unit,  unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this ( formatter, count, unit, count, unit ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^this ( unit, count, unit, count ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^super ( DateTickUnit.getMillisecondCount ( count, unit )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^super ( DateTickUnit.getMillisecondCount (  count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^super ( DateTickUnit.getMillisecondCount ( unit )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^return date.format ( this.formatter ) ;^222^^^^^221^223^return this.formatter.format ( date ) ;^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.count ) , this.unit ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.unit )  ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.count ) , this.unit ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.unit )  ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.rollCount ) , this.rollUnit ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.rollUnit )  ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.rollCount ) , this.rollUnit ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^calendar.add ( getCalendarField ( this.rollUnit )  ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[buglab_swap_variables]^if  ( this.unit != that.unit.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( that.unit != this.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( this.count != that.count.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( that.count != this.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( !ObjectUtilities.equal ( this.formatter.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( !ObjectUtilities.equal ( that.formatter, this.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( !ObjectUtilities.equal (  that.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( !ObjectUtilities.equal ( this.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^if  ( !ObjectUtilities.equal ( that, this.formatter.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[buglab_swap_variables]^result = 37 * this.unit + result;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^result = 37 * this.count + result;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[buglab_swap_variables]^result = 37 * this.formatter + result.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
