[BugLab_Wrong_Literal]^public static final int YEAR = 1;^76^^^^^71^81^public static final int YEAR = 0;^[CLASS] DateTickUnit   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final int MONTH = 0;^79^^^^^74^84^public static final int MONTH = 1;^[CLASS] DateTickUnit   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final int DAY = 1;^82^^^^^77^87^public static final int DAY = 2;^[CLASS] DateTickUnit   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final int MINUTE = 5;^88^^^^^83^93^public static final int MINUTE = 4;^[CLASS] DateTickUnit   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final int MILLISECOND = 5;^94^^^^^89^99^public static final int MILLISECOND = 6;^[CLASS] DateTickUnit   [VARIABLES] 
[BugLab_Variable_Misuse]^this ( unit, rollUnit, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^this ( count, unit, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^this ( SECOND, count, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^this ( unit, SECOND, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^this ( formatter, count, unit, count, unit ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^this ( count, unit, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^this ( unit, formatter, unit, count, count ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^super ( DateTickUnit.getMillisecondCount ( rollUnit, count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^super ( DateTickUnit.getMillisecondCount ( unit, SECOND )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^super ( DateTickUnit.getMillisecondCount ( count, unit )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^super ( DateTickUnit.getMillisecondCount ( SECOND, count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^this.unit = rollUnit;^149^^^^^146^157^this.unit = unit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^this.count = YEAR;^150^^^^^146^157^this.count = count;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^this.rollUnit = rollCount;^151^^^^^146^157^this.rollUnit = rollUnit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^this.rollCount = YEAR;^152^^^^^146^157^this.rollCount = rollCount;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^if  ( formatter != null )  {^154^^^^^146^157^if  ( formatter == null )  {^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^this.formatter = DateFormat.getDateInstance ( DateFormat.YEAR ) ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return SECOND;^170^^^^^169^171^return this.unit;^[CLASS] DateTickUnit  [METHOD] getUnit [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return SECOND;^179^^^^^178^180^return this.count;^[CLASS] DateTickUnit  [METHOD] getCount [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return count;^191^^^^^190^192^return this.rollUnit;^[CLASS] DateTickUnit  [METHOD] getRollUnit [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return rollCount;^200^^^^^199^201^return this.rollCount;^[CLASS] DateTickUnit  [METHOD] getRollCount [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return formatter.format ( new Date (  ( long )  milliseconds )  ) ;^211^^^^^210^212^return this.formatter.format ( new Date (  ( long )  milliseconds )  ) ;^[CLASS] DateTickUnit  [METHOD] valueToString [RETURN_TYPE] String   double milliseconds [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  double  milliseconds  DateFormat  formatter  
[BugLab_Variable_Misuse]^return formatter.format ( date ) ;^222^^^^^221^223^return this.formatter.format ( date ) ;^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[BugLab_Argument_Swapping]^return date.format ( this.formatter ) ;^222^^^^^221^223^return this.formatter.format ( date ) ;^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( unit ) , this.count ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( this.unit ) , SECOND ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Argument_Swapping]^calendar.add ( getCalendarField ( this.count ) , this.unit ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( this.unit ) , YEAR ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Argument_Swapping]^calendar.add ( getCalendarField ( this.count ) , this.unit ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( rollCount ) , this.count ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( SECOND ) , this.rollCount ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( this.rollUnit ) , SECOND ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Argument_Swapping]^calendar.add ( getCalendarField ( this.rollCount ) , this.rollUnit ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( count ) , this.rollCount ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( this.rollUnit ) , unit ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Argument_Swapping]^calendar.add ( getCalendarField ( this.rollCount ) , this.rollUnit ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^calendar.add ( getCalendarField ( SECOND ) , this.rollCount ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[BugLab_Variable_Misuse]^return getCalendarField ( YEAR ) ;^302^^^^^301^303^return getCalendarField ( this.unit ) ;^[CLASS] DateTickUnit  [METHOD] getCalendarField [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return getCalendarField ( SECOND ) ;^302^^^^^301^303^return getCalendarField ( this.unit ) ;^[CLASS] DateTickUnit  [METHOD] getCalendarField [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return  ( 365L * 24L * 60L * 60L * 1000L )  * rollCount;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return + ( 365L * 24L * 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return / ( 365L * 24L * 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 365L - 24L - 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 365L + 24L * 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return  ( 31L * 24L * 60L * 60L * 1000L )  * rollCount;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return / ( 31L * 24L * 60L * 60L * 1000L )  * count;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return + ( 31L * 24L * 60L * 60L * 1000L )  * count;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 31L - 24L - 60L * 60L * 1000L )  * count;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 31L - 24L * 60L * 60L * 1000L )  * count;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return  ( 24L * 60L * 60L * 1000L )  * unit;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return - ( 24L * 60L * 60L * 1000L )  * count;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 24L / 60L / 60L * 1000L )  * count;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 24L / 60L * 60L * 1000L )  * count;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return  ( 60L * 60L * 1000L )  * unit;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return + ( 60L * 60L * 1000L )  * count;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 60L / 60L / 1000L )  * count;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 60L / 60L * 1000L )  * count;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return  ( 60L * 1000L )  * rollCount;^362^^^^^350^377^return  ( 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return / ( 60L * 1000L )  * count;^362^^^^^350^377^return  ( 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return  ( 60L - 1000L )  * count;^362^^^^^350^377^return  ( 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return 1000L * rollCount;^364^^^^^350^377^return 1000L * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^return - 1000L * count;^364^^^^^350^377^return 1000L * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return rollCount;^366^^^^^350^377^return count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  <<  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (   instanceof   )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  <=  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  !=  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  >=  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  >  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^if  ( obj != this )  {^387^^^^^386^407^if  ( obj == this )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Literal]^return false;^388^^^^^386^407^return true;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Operator]^if  ( ! ( obj  <<  DateTickUnit )  )  {^390^^^^^386^407^if  ( ! ( obj instanceof DateTickUnit )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Literal]^return true;^391^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Literal]^return true;^394^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Variable_Misuse]^if  ( rollCount != that.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Variable_Misuse]^if  ( this.unit != count )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Argument_Swapping]^if  ( that != this.unit.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Argument_Swapping]^if  ( that.unit != this.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Operator]^if  ( this.unit > that.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Literal]^return true;^398^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Variable_Misuse]^if  ( count != that.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Variable_Misuse]^if  ( this.count != count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Argument_Swapping]^if  ( that != this.count.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Argument_Swapping]^if  ( that.count != this.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Argument_Swapping]^if  ( this.count != that )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Operator]^if  ( this.count >= that.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Literal]^return true;^401^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Variable_Misuse]^if  ( !ObjectUtilities.equal ( formatter, that.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Variable_Misuse]^if  ( !ObjectUtilities.equal ( this.formatter, formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Argument_Swapping]^if  ( !ObjectUtilities.equal ( that, this.formatter.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Argument_Swapping]^if  ( !ObjectUtilities.equal ( that.formatter, this.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Literal]^return true;^404^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Wrong_Literal]^return false;^406^^^^^386^407^return true;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[BugLab_Variable_Misuse]^result = 37 * YEAR + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^result = 37 * result + YEAR;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^result = 37 * this.unit + result;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^result = 37 / result + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Literal]^result = 36 * result + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^result = 37 * unit + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^result = 37 * this.count + result;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^result = 37 / result + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^result = 37 * YEAR + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^result = 37 * result + formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Argument_Swapping]^result = 37 * this.formatter + result.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^result = 37 * result + this.formatter.hashCode (  ==  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Operator]^result = 37 / result + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Wrong_Literal]^result =  * result + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return rollCount;^419^^^^^414^420^return result;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[BugLab_Variable_Misuse]^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + rollCount + "]";^435^436^^^^434^437^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "]";^[CLASS] DateTickUnit  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
