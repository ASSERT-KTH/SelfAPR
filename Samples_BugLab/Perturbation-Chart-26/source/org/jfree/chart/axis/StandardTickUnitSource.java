[BugLab_Variable_Misuse]^double log = Math.log ( higher )  / LOG_10_VALUE;^65^^^^^63^69^double log = Math.log ( x )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getLargerTickUnit [RETURN_TYPE] TickUnit   TickUnit unit [VARIABLES] TickUnit  unit  double  LOG_10_VALUE  higher  log  x  boolean  
[BugLab_Argument_Swapping]^double log = Math.log ( LOG_10_VALUE )  / x;^65^^^^^63^69^double log = Math.log ( x )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getLargerTickUnit [RETURN_TYPE] TickUnit   TickUnit unit [VARIABLES] TickUnit  unit  double  LOG_10_VALUE  higher  log  x  boolean  
[BugLab_Wrong_Operator]^double log = Math.log ( x )  - LOG_10_VALUE;^65^^^^^63^69^double log = Math.log ( x )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getLargerTickUnit [RETURN_TYPE] TickUnit   TickUnit unit [VARIABLES] TickUnit  unit  double  LOG_10_VALUE  higher  log  x  boolean  
[BugLab_Variable_Misuse]^double log = Math.log ( log )  / LOG_10_VALUE;^65^^^^^63^69^double log = Math.log ( x )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getLargerTickUnit [RETURN_TYPE] TickUnit   TickUnit unit [VARIABLES] TickUnit  unit  double  LOG_10_VALUE  higher  log  x  boolean  
[BugLab_Variable_Misuse]^double higher = Math.ceil ( x ) ;^66^^^^^63^69^double higher = Math.ceil ( log ) ;^[CLASS] StandardTickUnitSource  [METHOD] getLargerTickUnit [RETURN_TYPE] TickUnit   TickUnit unit [VARIABLES] TickUnit  unit  double  LOG_10_VALUE  higher  log  x  boolean  
[BugLab_Wrong_Literal]^return new NumberTickUnit ( Math.pow ( , higher ) , new DecimalFormat ( "0.0E0" )  ) ;^67^68^^^^63^69^return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^[CLASS] StandardTickUnitSource  [METHOD] getLargerTickUnit [RETURN_TYPE] TickUnit   TickUnit unit [VARIABLES] TickUnit  unit  double  LOG_10_VALUE  higher  log  x  boolean  
[BugLab_Variable_Misuse]^return new NumberTickUnit ( Math.pow ( 10, x ) , new DecimalFormat ( "0.0E0" )  ) ;^67^68^^^^63^69^return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^[CLASS] StandardTickUnitSource  [METHOD] getLargerTickUnit [RETURN_TYPE] TickUnit   TickUnit unit [VARIABLES] TickUnit  unit  double  LOG_10_VALUE  higher  log  x  boolean  
[BugLab_Variable_Misuse]^double log = Math.log ( x )  / LOG_10_VALUE;^92^^^^^91^96^double log = Math.log ( size )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
[BugLab_Variable_Misuse]^double log = Math.log ( size )  / x;^92^^^^^91^96^double log = Math.log ( size )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
[BugLab_Argument_Swapping]^double log = Math.log ( LOG_10_VALUE )  / size;^92^^^^^91^96^double log = Math.log ( size )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
[BugLab_Wrong_Operator]^double log = Math.log ( size )  - LOG_10_VALUE;^92^^^^^91^96^double log = Math.log ( size )  / LOG_10_VALUE;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
[BugLab_Variable_Misuse]^double higher = Math.ceil ( x ) ;^93^^^^^91^96^double higher = Math.ceil ( log ) ;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
[BugLab_Variable_Misuse]^return new NumberTickUnit ( Math.pow ( 10, x ) , new DecimalFormat ( "0.0E0" )  ) ;^94^95^^^^91^96^return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
[BugLab_Variable_Misuse]^return new NumberTickUnit ( Math.pow ( 10, size ) , new DecimalFormat ( "0.0E0" )  ) ;^94^95^^^^91^96^return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
[BugLab_Wrong_Literal]^return new NumberTickUnit ( Math.pow ( 11, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^94^95^^^^91^96^return new NumberTickUnit ( Math.pow ( 10, higher ) , new DecimalFormat ( "0.0E0" )  ) ;^[CLASS] StandardTickUnitSource  [METHOD] getCeilingTickUnit [RETURN_TYPE] TickUnit   double size [VARIABLES] double  LOG_10_VALUE  higher  log  size  x  boolean  
