[BugLab_Variable_Misuse]^return axesAtTop;^85^^^^^84^86^return this.axesAtTop;^[CLASS] AxisCollection  [METHOD] getAxesAtTop [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[BugLab_Variable_Misuse]^return axesAtTop;^95^^^^^94^96^return this.axesAtBottom;^[CLASS] AxisCollection  [METHOD] getAxesAtBottom [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[BugLab_Variable_Misuse]^return axesAtTop;^105^^^^^104^106^return this.axesAtLeft;^[CLASS] AxisCollection  [METHOD] getAxesAtLeft [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[BugLab_Variable_Misuse]^return axesAtTop;^115^^^^^114^116^return this.axesAtRight;^[CLASS] AxisCollection  [METHOD] getAxesAtRight [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[BugLab_Wrong_Operator]^if  ( axis != null )  {^126^^^^^125^144^if  ( axis == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge != null )  {^129^^^^^125^144^if  ( edge == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge <= RectangleEdge.TOP )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge != RectangleEdge.TOP )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^if  ( edge < RectangleEdge.TOP )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.BOTTOM )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.BOTTOM )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge > RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge != RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge >= RectangleEdge.BOTTOM )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge > RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge < RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[BugLab_Wrong_Operator]^else if  ( edge <= RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
