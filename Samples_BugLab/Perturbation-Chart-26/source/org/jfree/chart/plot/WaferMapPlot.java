[buglab_swap_variables]^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke. BasicStroke.JOIN_BEVEL, 0.0f,^82^83^84^85^^82^87^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^[CLASS] WaferMapPlot   [VARIABLES] 
[buglab_swap_variables]^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke. 0.0f,^82^83^84^85^^82^87^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^[CLASS] WaferMapPlot   [VARIABLES] 
[buglab_swap_variables]^boolean b1 =  ( MINIMUM_WIDTH_TO_DRAW.getWidth (  )  <= area ) ;^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^boolean b2 =  ( MINIMUM_HEIGHT_TO_DRAW.getHeight (  )  <= area ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^if  ( b2 || b1 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^drawChipGrid ( area, g2 ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^drawChipGrid (  area ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^drawChipGrid ( g2 ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^drawWaferEdge ( area, g2 ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^drawWaferEdge (  area ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^drawWaferEdge ( g2 ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[buglab_swap_variables]^if  ( minor.getWidth (  )  == plotArea )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^startX +=  ( minor - major )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( xchips.getHeight (  )  -  ( space * plotArea - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( space.getHeight (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( ychips.getHeight (  )  -  ( space * plotArea - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( plotArea.getHeight (  )  -  ( ychips * space - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^startY +=  ( minor - major )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( space.getWidth (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( plotArea.getWidth (  )  -  ( xchips * space - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( xchips.getWidth (  )  -  ( space * plotArea - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( ychips.getWidth (  )  -  ( space * plotArea - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( space.getWidth (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( plotArea.getWidth (  )  -  ( ychips * space - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^startX +=  ( minor - major )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( xchips.getHeight (  )  -  ( space * plotArea - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( space.getHeight (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( plotArea.getHeight (  )  -  ( xchips * space - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( space.getHeight (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( plotArea.getHeight (  )  -  ( ychips * space - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipWidth =  ( plotArea.getHeight (  )  -  ( xchips * space - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( space.getHeight (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chipHeight =  ( ychips.getHeight (  )  -  ( space * plotArea - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( this.dataset.getChipValue ( y - 1, xchips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( this.dataset.getChipValue ( ychips - 1, x - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( this.dataset.getChipValue ( x - 1 - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( this.dataset.getChipValue ( x - 1chips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( ychips.getChipValue ( x - 1, this.dataset - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, x - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - ychips - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1 - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, xchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1chips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( y.getChipColor ( this.dataset.getChipValue ( x - 1, this.rendererchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( y.getChipValue ( x - 1, this.datasetchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, x - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - ychips - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1 - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, xchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1chips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( y.getChipValue ( x - 1, this.datasetchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.dataset.getChipValue ( y - 1, xchips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.dataset.getChipValue ( x - 1, y - ychips - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.dataset.getChipValue ( x - 1 - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.dataset.getChipValue ( x - 1chips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( x.getChipValue ( this.dataset - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( x.getChipColor ( this.dataset.getChipValue ( this.renderer - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( x.getChipValue ( this.dataset - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.dataset.getChipValue ( ychips - 1, x - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( this.dataset.getChipValue ( x - 1, y - ychips - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( ychips.getChipColor ( this.dataset.getChipValue ( x - 1, this.renderer - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( ychips.getChipValue ( x - 1, this.dataset - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( ychips.getChipValue ( x - 1, this.dataset - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftY =  ( chipHeight - startY )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftY =  ( startY - space )  +  ( chipHeight * y ) +  ( chipHeight *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftY =  ( startY - y )  +  ( chipHeight * chipHeight ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftY =  ( space - chipHeight )  +  ( chipHeight * y ) +  ( startY *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, upperLeftY, chipWidthWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, upperLeftYWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( chipHeight, upperLeftY, chipWidth, upperLeftX ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame (  upperLeftY, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, chipWidth, upperLeftY, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX,  chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( chipWidth, upperLeftY, upperLeftX, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, upperLeftY,  chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, upperLeftY, chipHeightWidth, chip ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^if  ( x.getChipValue ( this.dataset - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.dataset.getChipColor ( this.renderer.getChipValue ( x - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftX =  ( space - chipWidth )  +  ( chipWidth * x ) +  ( startX *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftX =  ( startX - space )  +  ( chipWidth * x ) +  ( chipWidth *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * space ) +  ( x *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftY =  ( y - chipHeight )  +  ( chipHeight * startY ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * space ) +  ( y *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftY, upperLeftX, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, upperLeftY, chipHeight, chipWidth ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^for  ( int ychips = 1; y <= y; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, chip, upperLeftYWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( upperLeftX, chipHeight, chipWidth, upperLeftY ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftX =  ( chipWidth - startX )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^double upperLeftX =  ( startX - x )  +  ( chipWidth * chipWidth ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^chip.setFrame ( chip, upperLeftY, upperLeftXWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^upperLeftX = major.getX (  )  +  ( plotArea - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^upperLeftX = plotArea.getX (  )  +  ( minor - major )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^upperLeftY = minor.getY (  )  +  ( major - plotArea )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^upperLeftY = plotArea.getY (  )  +  ( minor - major )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^upperLeftY = major.getY (  )  +  ( plotArea - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^upperLeftX = minor.getX (  )  +  ( major - plotArea )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^upperLeftX = major.getX (  )  +  ( plotArea - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^upperLeftX = plotArea.getX (  )  +  ( minor - major )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^if  ( minor.getWidth (  )  == plotArea )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^edge.setFrame ( upperLeftY, upperLeftX, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^edge.setFrame (  upperLeftY, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^edge.setFrame ( upperLeftX,  diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^edge.setFrame ( upperLeftX, upperLeftY,  diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[buglab_swap_variables]^if  ( PlotOrientation.HORIZONTAL == this.orientation )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^notch = new Arc2D.Double (  0d, 180d, Arc2D.OPEN ) ;^407^^^^^389^408^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^notch = new Arc2D.Double (  90d, 180d, Arc2D.OPEN ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^new Rectangle2D.Double ( notchDiameter.getX (  )  + waferFrame.getWidth (  ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) .getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  + waferFrame.getWidth (  ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) .getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^notch = new Arc2D.Double (  0d, 180d, Arc2D.OPEN ) ;^407^^^^^392^422^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[buglab_swap_variables]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
