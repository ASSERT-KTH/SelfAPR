[BugLab_Wrong_Literal]^public static final boolean DEFAULT_CROSSHAIR_VISIBLE = true;^93^^^^^88^98^public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;^[CLASS] WaferMapPlot   [VARIABLES] 
[BugLab_Wrong_Operator]^if  ( dataset == null )  {^150^^^^^143^160^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( renderer == null )  {^155^^^^^143^160^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Variable_Misuse]^return dataset;^177^^^^^176^178^return this.dataset;^[CLASS] WaferMapPlot  [METHOD] getDataset [RETURN_TYPE] WaferMapDataset   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( dataset != null )  {^189^^^^^186^202^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( this.dataset == null )  {^189^^^^^186^202^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( dataset == null )  {^195^^^^^186^202^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( renderer != null )  {^213^^^^^211^224^if  ( this.renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( this.renderer == null )  {^213^^^^^211^224^if  ( this.renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( renderer == null )  {^218^^^^^211^224^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[BugLab_Argument_Swapping]^boolean b1 =  ( MINIMUM_WIDTH_TO_DRAW.getWidth (  )  <= area ) ;^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Wrong_Operator]^boolean b1 =  ( area.getWidth (  )  < MINIMUM_WIDTH_TO_DRAW ) ;^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Argument_Swapping]^boolean b2 =  ( MINIMUM_HEIGHT_TO_DRAW.getHeight (  )  <= area ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Wrong_Operator]^boolean b2 =  ( area.getHeight (  )  < MINIMUM_HEIGHT_TO_DRAW ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Variable_Misuse]^if  ( DEFAULT_CROSSHAIR_VISIBLE || b2 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Variable_Misuse]^if  ( b1 || DEFAULT_CROSSHAIR_VISIBLE )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Argument_Swapping]^if  ( b2 || b1 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Wrong_Operator]^if  ( b1 && b2 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Wrong_Operator]^if  ( info == null )  {^247^^^^^235^258^if  ( info != null )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Argument_Swapping]^drawChipGrid ( area, g2 ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Argument_Swapping]^drawWaferEdge ( area, g2 ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[BugLab_Variable_Misuse]^g2.setClip ( getWaferEdge ( chip )  ) ;^269^^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^int xchips = 34;^271^^^^^256^286^int xchips = 35;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset == null )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^xchips = dataset.getMaxChipX (  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^xchips = this.dataset.getMaxChipX (  >=  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^xchips = this.dataset.getMaxChipX (  )  ;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^ychips = dataset.getMaxChipY (  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^ychips = this.dataset.getMaxChipY (  <=  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^ychips = this.dataset.getMaxChipY (  )  ;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^space = dataset.getChipSpace (  ) ;^277^^^^^262^292^space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^xchips = this.dataset.getMaxChipX (  ==  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^xchips = this.dataset.getMaxChipX (  )  + x;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^ychips = this.dataset.getMaxChipY (  <<  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^ychips = this.dataset.getMaxChipY (  )  + y;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double startX = chip.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double startY = chip.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( chip.getWidth (  )  != plotArea.getHeight (  )  )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  <= plotArea.getHeight (  )  )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( chip.getWidth (  )  > plotArea.getHeight (  )  )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  >= plotArea.getHeight (  )  )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^major = chip.getHeight (  ) ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^minor = chip.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^minor = chip.getHeight (  ) ;^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^major = chip.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( chip.getWidth (  )  == minor )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( plotArea.getWidth (  )  == startY )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  < minor )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startX +=  ( upperLeftY - minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startX +=  ( major - upperLeftY )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^startX +=  ( minor - major )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startX +=  ( major - minor )  * 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startX +=  ( major  >=  minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( chip.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( xchips.getHeight (  )  -  ( space * plotArea - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( space.getHeight (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) + xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )   ^   ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  <=  1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space - xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( chip.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getHeight (  )  -  ( upperLeftX * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * y - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( space.getHeight (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( plotArea.getHeight (  )  -  ( ychips * space - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) - ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )   >=   ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  &  1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space - ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - ychips )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startY +=  ( upperLeftY - minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startY +=  ( major - startY )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^startY +=  ( minor - major )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startY +=  ( major - minor )  + 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startY +=  ( major  <  minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( chip.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getWidth (  )  -  ( startY * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( space.getWidth (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( plotArea.getWidth (  )  -  ( xchips * space - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) - xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )   >>   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  |  1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space / xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( chip.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getWidth (  )  -  ( startX * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * y - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( ychips.getWidth (  )  -  ( space * plotArea - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( space.getWidth (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) - ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )   &&   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  &  1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space + ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips -  )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^major = chip.getHeight (  ) ;^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startY +=  ( startY - minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startY +=  ( major - upperLeftX )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startY +=  ( major  ^  minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^startY +=  ( major - minor )  / x;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getWidth (  )  -  ( startX * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) + xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )   &&   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  ==  1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space - xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - ychips )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getWidth (  )  -  ( upperLeftY * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( plotArea.getWidth (  )  -  ( ychips * space - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) + ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )   ==   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips   instanceof   1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - xchips )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startX +=  ( startY - minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^startX +=  ( minor - major )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startX +=  ( major - minor )  + 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startX +=  ( major  >=  minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^startX +=  ( major - minor )  / 3;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( chip.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getHeight (  )  -  ( upperLeftY * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( xchips.getHeight (  )  -  ( space * plotArea - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( space.getHeight (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) + xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )   |   ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  ==  1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space + xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( chip.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getHeight (  )  -  ( upperLeftY * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * y - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( ychips.getHeight (  )  -  ( space * plotArea - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( space.getHeight (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) + ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )   >=   ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  >  1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space / ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^minor = chip.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( plotArea.getWidth (  )  == upperLeftY )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  >= minor )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startX +=  ( startY - minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startX +=  ( major - upperLeftX )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startX +=  ( major - minor )  + 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startX +=  ( major  ||  minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^startX +=  ( major - minor )  / 1;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getHeight (  )  -  ( upperLeftY * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( plotArea.getHeight (  )  -  ( xchips * space - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )    instanceof    ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  >  1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space / xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips -  )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getHeight (  )  -  ( startX * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( ychips.getHeight (  )  -  ( space * plotArea - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) + ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )   !=   ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  !=  1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space / ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startY +=  ( major - upperLeftY )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startY +=  ( major  >>  minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^startY +=  ( major - minor )  / 3;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getWidth (  )  -  ( upperLeftX * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )   <=   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  >=  1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) * ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )   ||   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  !=  1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space - ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - ychips )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startY +=  ( major   instanceof   minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( xchips.getWidth (  )  -  ( space * plotArea - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) * xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getWidth (  )   ^   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getWidth (  )  -  ( startY * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getWidth (  )   &   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startX +=  ( upperLeftY - minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^startX +=  ( major - upperLeftY )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^startX +=  ( major  >  minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^startX +=  ( major - minor )  / 1;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipWidth =  ( plotArea.getHeight (  )  -  ( startX * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipWidth =  ( plotArea.getHeight (  )  -  ( xchips * space - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  !=  1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space - xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chipHeight =  ( plotArea.getHeight (  )  -  ( startX * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chipHeight =  ( plotArea.getHeight (  )  -  ( ychips * space - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) * ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  !=  1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space - ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - y )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( this.dataset.getChipValue ( ychips - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( this.dataset.getChipValue ( x - 1, y - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( this.dataset.getChipValue ( x - 1, xchipschips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^if  ( this.dataset.getChipValue ( ychips - 1, x - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^if  ( this.dataset.getChipValue ( x - 1, y - ychips - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^if  ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  == null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  !=  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips   instanceof   y   instanceof   1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  &  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  ||  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  >>  y  >>  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips   instanceof   y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^if  ( this.dataset.getChipValue ( x , ychips - y  )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^if  ( this.dataset.getChipValue ( x - ychips, ychips - y - ychips )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^if  ( this.dataset.getChipValue ( x - y, ychips - y - y )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setPaint ( renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setPaint ( this.renderer.getChipColor ( dataset.getChipValue ( x - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, x - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, xchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( x.getChipColor ( this.dataset.getChipValue ( this.renderer - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( this.renderer.getChipColor ( y.getChipValue ( x - 1, this.datasetchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  ==  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &&  y  &&  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >=  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x , ychips - y  ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - , ychips - y -  ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.renderer.getChipColor ( dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.renderer.getChipColor ( x.getChipValue ( this.dataset - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, x - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.renderer.getChipColor ( y.getChipValue ( x - 1, this.datasetchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  |  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >>  y  >>  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  ^  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - xchips, ychips - y - xchips ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - x, ychips - y - x ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.dataset.getChipValue ( y - 1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.dataset.getChipValue ( x - 1, y - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.dataset.getChipValue ( y - 1, xchips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.dataset.getChipValue ( x - 1, y - ychips - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x  |  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  <<  y  <<  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  ==  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.dataset.getChipValue ( x , ychips - y  ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^for  ( int ychips = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^for  ( int x = 1; x <= ychips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^for  ( int xchips = 1; x <= x; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  ( int x = 1; x < xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  >>  ( int x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  &  ( int x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  ^  ( int x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for   instanceof   ( int x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int x = xchips; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int x = 2; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int x = y; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^if  ( this.dataset.getChipValue ( y - 1, xchips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^if  ( ychips.getChipValue ( x - 1, this.dataset - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  >  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ^  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  <<  y  <<  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^if  ( this.dataset.getChipValue ( x - xchips, ychips - y - xchips )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( ychips.getChipColor ( this.dataset.getChipValue ( x - 1, this.renderer - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( this.dataset.getChipColor ( this.renderer.getChipValue ( x - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  ||  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <<  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchipschips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  >=  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  |  y  |  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  ||  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x , ychips - y  ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.dataset.getChipValue ( ychips - 1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.dataset.getChipValue ( ychips - 1, x - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x  >  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  <  y  <  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  >=  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^for  ( int ychips = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^for  ( int y = 1; y <= xchips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^for  ( int ychips = 1; y <= y; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  ( int y = 1; y > ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  ==  ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  &&  ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int y = x; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int y = 0; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int y = ychips; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( this.dataset.getChipValue ( x - 1, xchips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  >=  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  !=  y  !=  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  |  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  <=  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  >  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchipschips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - ychips - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( y.getChipColor ( this.dataset.getChipValue ( x - 1, this.rendererchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  !=  y  !=  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  !=  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - ychips - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  <  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >  y  >  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - y, ychips - y - y ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.dataset.getChipValue ( x - 1, xchips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x   instanceof   1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips   instanceof   y   instanceof   1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips   instanceof   y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.dataset.getChipValue ( x - y, ychips - y - y ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftY =  ( upperLeftX - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftY =  ( startY - upperLeftX )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * ychips ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( upperLeftX *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftY =  ( chipHeight - startY )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * space ) +  ( y *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftY =  ( startY - space )  +  ( chipHeight * y ) +  ( chipHeight *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =   instanceof   ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  >  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY  >=  chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight + y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double / upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  !=  1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - x )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftY, plotAreaWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftY, upperLeftY, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, space, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, upperLeftY ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( upperLeftX, upperLeftY, chipWidthWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( chipWidth, upperLeftY, upperLeftX, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( upperLeftX, chipHeight, chipWidth, upperLeftY ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( upperLeftX, upperLeftY, chipHeight, chipWidth ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( chipHeight, upperLeftY, chipWidth, upperLeftX ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.setColor ( Color.null ) ;^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^if  ( y.getChipValue ( x - 1, this.datasetchips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^if  ( x.getChipValue ( this.dataset - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  ^  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ||  y  ||  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  <  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^if  ( this.dataset.getChipValue ( x - x, ychips - y - x )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( this.renderer.getChipColor ( ychips.getChipValue ( x - 1, this.dataset - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  <<  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <=  y  <=  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips   instanceof   y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, xchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  &&  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  !=  y  !=  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <=  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x  >=  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  &&  y  &&  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  <=  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.dataset.getChipValue ( x - x, ychips - y - x ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.dataset.getChipValue ( x - xchips, ychips - y - xchips ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.fill ( plotArea ) ;^326^^^^^311^341^g2.fill ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^g2.draw ( plotArea ) ;^328^^^^^313^343^g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftX =  ( space - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftX =  ( startX - upperLeftY )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * ychips ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( upperLeftY *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftX =  ( chipWidth - startX )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftX =  ( x - chipWidth )  +  ( chipWidth * startX ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * space ) +  ( x *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  |  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =   instanceof   ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  ( startX  ||  chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth + x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double - upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x  >  1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x  )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int y = y; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftY =  ( space - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( startY *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  &&  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  <<  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY  >>  chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double - upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  &&  1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftY, upperLeftX, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( chip, upperLeftY, upperLeftXWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( upperLeftY, upperLeftX, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( upperLeftX, chipWidth, upperLeftY, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( this.dataset.getChipValue ( y - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  <<  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  >>  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^g2.setPaint ( this.renderer.getChipColor ( x.getChipValue ( this.dataset - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  >>  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - ychips, ychips - y - ychips ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^this.renderer.getChipColor ( ychips.getChipValue ( x - 1, this.dataset - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  <<  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  |  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - ychips, ychips - y - ychips ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x  &  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  &  y  &  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  ( int y = 1; y < ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for  &  ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^for   instanceof   ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^for  ( int y = ; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  &  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ==  y  ==  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  &&  y  &&  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  <=  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  !=  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &  y  &  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - x, ychips - y - x ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - y, ychips - y - y ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  ^  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <  y  <  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  |  y  |  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  !=  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftY =  ( startY - startX )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftY =  ( y - chipHeight )  +  ( chipHeight * startY ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  &  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  <  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY  >  chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  <  1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - xchips )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftX, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftY, startX, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, startX ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( upperLeftX, chip, upperLeftYWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  <  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  |  y  |  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  <<  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  <  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  >>  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &&  y  &&  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &&  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^this.dataset.getChipValue ( x - 1, xchipschips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x  ||  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  ||  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( startY *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftX =  ( space - chipWidth )  +  ( chipWidth * x ) +  ( startX *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftX =  ( startX - x )  +  ( chipWidth * chipWidth ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  <=  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  !=  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth / x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double + upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x  &&  1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - y )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftY =  ( space - chipHeight )  +  ( chipHeight * y ) +  ( startY *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^double upperLeftY =  ( startY - y )  +  ( chipHeight * chipHeight ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  |  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ==  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY  &  chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  ==  1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y -  )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftY, startY, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, upperLeftX ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^chip.setFrame ( upperLeftX, upperLeftY, chipHeightWidth, chip ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.dataset.getChipValue ( x  |  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <  y  <  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >>  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - xchips, ychips - y - xchips ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  >  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &  y  &  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >=  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x  <=  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^this.dataset.getChipValue ( x - 1, ychips  ^  y  ^  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^this.dataset.getChipValue ( x - ychips, ychips - y - ychips ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  == plotArea.getHeight (  )  )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  < plotArea.getHeight (  )  )  {^350^^^^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^if  ( plotArea.getWidth (  )  == upperLeftY )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  != minor )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^upperLeftX = plotArea.getX (  )  +  ( upperLeftY - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^upperLeftX = plotArea.getX (  )  +  ( major - upperLeftY )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftX = major.getX (  )  +  ( plotArea - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftX = plotArea.getX (  )  +  ( minor - major )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  &  )  +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  * 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  )  +  ( major  &  minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Literal]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 1;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^upperLeftY = plotArea.getY (  )  +  ( upperLeftY - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^upperLeftY = plotArea.getY (  )  +  ( major - upperLeftY )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftY = minor.getY (  )  +  ( major - plotArea )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftY = plotArea.getY (  )  +  ( minor - major )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  <=  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  * 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  )  +  ( major  <=  minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Literal]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 3;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^diameter = upperLeftY;^359^^^^^341^370^diameter = minor;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  ||  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Literal]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 1;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^upperLeftX = plotArea.getX (  )  +  ( upperLeftY - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^upperLeftX = plotArea.getX (  )  +  ( major - upperLeftY )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftX = major.getX (  )  +  ( plotArea - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftX = plotArea.getX (  )  +  ( minor - major )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  !=  )  +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  * 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  )  +  ( major   instanceof   minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  >= plotArea.getHeight (  )  )  {^350^^^^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^if  ( minor.getWidth (  )  == plotArea )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^if  ( plotArea.getWidth (  )  < minor )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftX = minor.getX (  )  +  ( major - plotArea )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  &&  )  +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  )  +  ( major  >=  minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftY = major.getY (  )  +  ( plotArea - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  >=  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  )  +  ( major   instanceof   minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  ==  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  - 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftY = plotArea.getY (  )  +  ( major  >=  minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^upperLeftX = plotArea.getX (  )  +  ( major - upperLeftX )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^upperLeftX = minor.getX (  )  +  ( major - plotArea )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  >>  )  +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Wrong_Operator]^upperLeftX = plotArea.getX (  )  +  ( major  ||  minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^edge.setFrame ( minor, upperLeftY, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^edge.setFrame ( upperLeftX, minor, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^edge.setFrame ( upperLeftX, upperLeftY, upperLeftX, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Argument_Swapping]^edge.setFrame ( upperLeftX, diameter, upperLeftY, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[BugLab_Variable_Misuse]^Ellipse2D waferEdge = getWaferEdge ( waferFrame ) ;^380^^^^^365^395^Ellipse2D waferEdge = getWaferEdge ( plotArea ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^double notchDiameter = plotArea.getWidth (  )  * 0.04;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^double + notchDiameter = waferFrame.getWidth (  )  * 0.04;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^if  ( orientation == PlotOrientation.HORIZONTAL )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^if  ( this.orientation <= PlotOrientation.HORIZONTAL )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^notch = new Arc2D.Double ( waferFrame, 0d, 180d, Arc2D.OPEN ) ;^407^^^^^389^408^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  ==   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  >  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  + 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter - 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter - 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  <=   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  ||  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter + 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter + 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^new RectangleD.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  /  ) -  ( notchDiameter /  ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter /  ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^new Rectangle1D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 1 ) -  ( notchDiameter / 1 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 1 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  ^   ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  !=  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  + 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter + 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  &&   ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  <=  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^Rectangle3D notchFrame = new Rectangle3D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 3 ) -  ( notchDiameter / 3 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^waferFrame.getX (  )  +  ( plotArea.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^389^408^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^-  ( notchDiameter / 2 ) , plotArea.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^403^404^405^406^^389^408^-  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^+ plotArea.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^404^405^406^^^389^408^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^notch = new Arc2D.Double ( waferFrame, 90d, 180d, Arc2D.OPEN ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^new Rectangle2D.Double ( plotArea.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^new Rectangle2D.Double ( notchDiameter.getX (  )  + waferFrame.getWidth (  ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  !=   ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )   &  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter * 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter * 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  <=   ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (   instanceof   )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  * 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter + 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter + 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^new Rectangle1D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 1 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 1 )  -  ( notchDiameter / 1 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^new RectangleD.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter /  ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  /  )  -  ( notchDiameter /  ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  + waferFrame.getWidth (  ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  ==   ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )   <<  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter * 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )   instanceof    ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  &&  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter - 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^Rectangle4D notchFrame = new Rectangle4D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 4 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^waferFrame.getX (  )  + plotArea.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^392^393^394^395^^377^407^waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^-  ( notchDiameter / 2 ) , plotArea.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^393^394^395^396^^378^408^-  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^+  ( plotArea.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^394^395^396^^^379^409^+  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^notch = new Arc2D.Double ( waferFrame, 0d, 180d, Arc2D.OPEN ) ;^407^^^^^392^422^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  >=   ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )   <  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  &  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  - 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^new Rectangle3D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 3 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 3 )  -  ( notchDiameter / 3 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.2 ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  >   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  |  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  - 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter * 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter * 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  &&   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  >>  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter - 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter - 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  >>   ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )   &&  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  ||   ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (   instanceof   )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^Rectangle1D notchFrame = new Rectangle1D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 1 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^Rectangle3D notchFrame = new Rectangle3D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 3 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Argument_Swapping]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  !=   ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  >>  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  * 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter * 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  >=   ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  <  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter + 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Wrong_Literal]^Rectangle3D notchFrame = new Rectangle3D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 3 ) -  ( notchDiameter / 3 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^waferFrame.getX (  )  +  ( plotArea.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^387^417^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^-  ( notchDiameter / 2 ) , plotArea.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^403^404^405^406^^388^418^-  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^+ plotArea.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^404^405^406^^^389^419^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[BugLab_Variable_Misuse]^return renderer.getLegendCollection (  ) ;^422^^^^^421^423^return this.renderer.getLegendCollection (  ) ;^[CLASS] WaferMapPlot  [METHOD] getLegendItems [RETURN_TYPE] LegendItemCollection   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
