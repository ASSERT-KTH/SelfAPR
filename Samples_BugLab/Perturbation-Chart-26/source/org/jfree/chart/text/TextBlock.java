[buglab_swap_variables]^addLine ( new TextLine ( paint, font, text )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[buglab_swap_variables]^addLine ( new TextLine (  font, paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[buglab_swap_variables]^addLine ( new TextLine ( text, paint, font )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[buglab_swap_variables]^addLine ( new TextLine ( text,  paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[buglab_swap_variables]^addLine ( new TextLine ( text, font )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[buglab_swap_variables]^addLine ( new TextLine ( font, text, paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[buglab_swap_variables]^last =  ( TextLine )  index.get ( this.lines ) ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[buglab_swap_variables]^width = Math.max ( dimension, width.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^width = Math.max (  dimension.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^width = Math.max ( width.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^height = dimension + height.getHeight (  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^Size2D dimension = g2.calculateDimensions ( line ) ;^169^^^^^163^174^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^return new Size2D ( height, width ) ;^173^^^^^163^174^return new Size2D ( width, height ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^return new Size2D (  height ) ;^173^^^^^163^174^return new Size2D ( width, height ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^return new Size2D ( width ) ;^173^^^^^163^174^return new Size2D ( width, height ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^float[] offsets = calculateOffsets ( d, anchor.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^float[] offsets = calculateOffsets (  d.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^float[] offsets = calculateOffsets ( anchor.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Rectangle2D bounds = new Rectangle2D.Double ( d + offsets[0], anchorY + offsets[1], anchorX.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + d[0], anchorY + offsets[1], offsets.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Rectangle2D bounds = new Rectangle2D.Double ( anchorY + offsets[0], anchorX + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0] + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1].getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Rectangle2D bounds = new Rectangle2D.Double ( offsets + anchorX[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], d + offsets[1], anchorY.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( rotateX, angle, bounds, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape (  angle, rotateX, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( angle, bounds, rotateX, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds,  rotateX, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateY, rotateX ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle,  rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( rotateY, angle, rotateX, bounds ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, rotateY, rotateX, angle ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, rotateX, angle, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^draw ( anchor, x, y, g2, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^draw (  x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^draw ( g2, y, x, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^draw ( g2,  y, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^draw ( g2, x,  anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^draw ( g2, anchor, y, x, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^draw ( g2, x, y,  0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[buglab_swap_variables]^float[] offsets = calculateOffsets ( d, anchor.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^float[] offsets = calculateOffsets (  d.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^float[] offsets = calculateOffsets ( anchor.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^lineOffset =  ( float )   ( dimension.getWidth (  )  - d.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^lineOffset =  ( float )   ( dimension.getWidth (  )  - d.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^yCursor = dimension +  ( float )  yCursor.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^Size2D dimension = g2.calculateDimensions ( line ) ;^238^^^^^228^253^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + yCursorOffset, anchorY + offsets[1] + line, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( rotateX, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, g2, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw (  anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, rotateY + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, anchorX, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2 + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( offsets, anchorX + g2[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, lineOffset + offsets[0] + anchorX, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] +  anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, rotateX + offsets[1] + yCursor, TextAnchor.TOP_LEFT, anchorY, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, yCursor + offsets[1] + anchorY, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] +  TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, rotateX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, anchorX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT,  rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + rotateY, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, lineOffset, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX,  angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + angleOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, line ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + anchorYOffset, line + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorY + offsets[0] + lineOffset, anchorX + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + anchorY[0] + lineOffset, offsets + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + anchorY, lineOffset + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + rotateY, TextAnchor.TOP_LEFT, rotateX, yCursor, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, angle, rotateY ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[buglab_swap_variables]^if  ( anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.TOP_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( TextBlockAnchor.BOTTOM_RIGHT == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == anchor )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.TOP_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( TextBlockAnchor.CENTER == anchor_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( TextBlockAnchor.BOTTOM_CENTER == TextBlockAnchor.BOTTOM_LEFT || anchor == anchor || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_LEFT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( TextBlockAnchor.BOTTOM_LEFT == anchor || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_LEFT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^else if  ( TextBlockAnchor.BOTTOM_RIGHT == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == anchor )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[buglab_swap_variables]^return this.lines.equals ( block.lines.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[buglab_swap_variables]^return block.equals ( this.lines.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[buglab_swap_variables]^return block.lines.equals ( this.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
