[BugLab_Variable_Misuse]^return lineAlignment;^98^^^^^97^99^return this.lineAlignment;^[CLASS] TextBlock  [METHOD] getLineAlignment [RETURN_TYPE] HorizontalAlignment   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[BugLab_Variable_Misuse]^if  ( lineAlignment == null )  {^107^^^^^106^111^if  ( alignment == null )  {^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Wrong_Operator]^if  ( alignment != null )  {^107^^^^^106^111^if  ( alignment == null )  {^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Variable_Misuse]^this.lineAlignment = lineAlignment;^110^^^^^106^111^this.lineAlignment = alignment;^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Argument_Swapping]^addLine ( new TextLine ( paint, font, text )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[BugLab_Argument_Swapping]^addLine ( new TextLine ( text, paint, font )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[BugLab_Argument_Swapping]^addLine ( new TextLine ( font, text, paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[BugLab_Variable_Misuse]^final int index = lines.size (  )  - 1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[BugLab_Wrong_Operator]^final int index = this.lines.size (  )   &  1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[BugLab_Wrong_Literal]^final int index = this.lines.size (  )  - index;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[BugLab_Wrong_Operator]^if  ( index > 0 )  {^141^^^^^138^145^if  ( index >= 0 )  {^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[BugLab_Wrong_Literal]^if  ( index >= index )  {^141^^^^^138^145^if  ( index >= 0 )  {^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[BugLab_Variable_Misuse]^last =  ( TextLine )  lines.get ( index ) ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[BugLab_Argument_Swapping]^last =  ( TextLine )  index.get ( this.lines ) ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[BugLab_Variable_Misuse]^return Collections.unmodifiableList ( lines ) ;^153^^^^^152^154^return Collections.unmodifiableList ( this.lines ) ;^[CLASS] TextBlock  [METHOD] getLines [RETURN_TYPE] List   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Variable_Misuse]^Iterator iterator = lines.iterator (  ) ;^166^^^^^163^174^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Variable_Misuse]^width = Math.max ( height, dimension.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Argument_Swapping]^width = Math.max ( dimension, width.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Variable_Misuse]^height = width + dimension.getHeight (  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Argument_Swapping]^height = dimension + height.getHeight (  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Wrong_Operator]^height = height + dimension.getHeight (  ==  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Argument_Swapping]^Size2D dimension = g2.calculateDimensions ( line ) ;^169^^^^^163^174^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Wrong_Operator]^height = height + dimension.getHeight (  &&  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Argument_Swapping]^return new Size2D ( height, width ) ;^173^^^^^163^174^return new Size2D ( width, height ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Argument_Swapping]^float[] offsets = calculateOffsets ( d, anchor.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^Rectangle2D bounds = new Rectangle2D.Double ( rotateY + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], rotateY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Rectangle2D bounds = new Rectangle2D.Double ( anchorY + offsets[0], anchorX + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Rectangle2D bounds = new Rectangle2D.Double ( offsets + anchorX[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + d[0], anchorY + offsets[1], offsets.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  <  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ||  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[1], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], d + offsets[1], anchorY.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  !=  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ^  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[0], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateY, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateX ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Shape rotatedBounds = ShapeUtilities.rotateShape ( angle, bounds, rotateX, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, rotateY, rotateX, angle ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateY, rotateX ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Shape rotatedBounds = ShapeUtilities.rotateShape ( rotateY, angle, rotateX, bounds ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, anchorY, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, anchorY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, rotateX, angle, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^draw ( y, x, g2, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Argument_Swapping]^draw ( g2, y, x, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Argument_Swapping]^draw ( anchor, x, y, g2, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[BugLab_Variable_Misuse]^float[] offsets = calculateOffsets ( anchor, dimension.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^float[] offsets = calculateOffsets ( d, anchor.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^Iterator iterator = lines.iterator (  ) ;^234^^^^^228^253^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^if  ( lineAlignment == HorizontalAlignment.CENTER )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^if  ( this.lineAlignment > HorizontalAlignment.CENTER )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^if  ( this.lineAlignment != HorizontalAlignment.CENTER )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^else if  ( lineAlignment == HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^else if  ( this.lineAlignment != HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^lineOffset =  ( float )   ( dimension.getWidth (  )  - d.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   ==  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^lineOffset =  ( float )   ( dimension.getWidth (  )  - dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^lineOffset =  ( float )   ( d.getWidth (  )  - d.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   >>  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^lineOffset =  ( float )   ( dimension.getWidth (  )  - d.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) * 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   ||  dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^lineOffset =  ( float )   ( dimension.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^else if  ( this.lineAlignment >= HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   &&  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) - 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   >>  dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   ||  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^yCursor = rotateY +  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^yCursor = yCursor +  ( float )  d.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^yCursor = dimension +  ( float )  yCursor.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^yCursor = yCursor +  <<  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^Size2D dimension = g2.calculateDimensions ( line ) ;^238^^^^^228^253^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^lineOffset =  ( float )   ( d.getWidth (  )  - d.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^line.draw ( g2, yCursor + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^line.draw ( g2, anchorX + offsets[0] + lineOffset, rotateY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + rotateY, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, yCursor, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, yCursor, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + anchorYOffset, line + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( line, anchorX + offsets[0] + g2Offset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, lineOffset + offsets[0] + anchorX, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + lineOffset[0] + offsets, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + rotateY, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, lineOffset, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorY + offsets[0] + lineOffset, anchorX + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + rotateY, TextAnchor.TOP_LEFT, rotateX, yCursor, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + rotateX, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, lineOffset, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + lineOffset, rotateY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, anchorY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + angle, TextAnchor.TOP_LEFT, rotateX, rotateY, yCursor ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^line.draw ( g2, anchorX  >>  offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY  >=  offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^line.draw ( g2, anchorX + offsets[] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[2] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^else if  ( this.lineAlignment <= HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   >=  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   &  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )    instanceof   dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^else if  ( this.lineAlignment < HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   <  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   <<  dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^yCursor = rotateX +  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^yCursor = yCursor +  ||  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^line.draw ( g2, anchorX + offsets[0] + yCursor, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Variable_Misuse]^line.draw ( g2, anchorX + offsets[0] + lineOffset, yCursor + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + line[0] + offsetsOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( anchorX, g2 + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, rotateX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, anchorX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, offsets + anchorX[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + anchorY, lineOffset + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, yCursor + offsets[0] + lineOffset, anchorY + offsets[1] + anchorX, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateY, rotateX, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Argument_Swapping]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, angle, rotateY, rotateX ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^line.draw ( g2, anchorX  !=  offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY  >>  offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^line.draw ( g2, anchorX + offsets[-1] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Literal]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[0] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[BugLab_Wrong_Operator]^if  ( anchor == TextBlockAnchor.TOP_CENTER && anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor != TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor > TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor > TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor <= TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Variable_Misuse]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == 0 )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( TextBlockAnchor.TOP_RIGHT == anchor || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.TOP_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT && anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor <= TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor <= TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor != TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Variable_Misuse]^xAdj =  ( float )  -height / 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^xAdj =  ( float )  -width * 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( TextBlockAnchor.CENTER_RIGHT == TextBlockAnchor.TOP_RIGHT || anchor == anchor || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor != TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor != TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor <= TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Variable_Misuse]^xAdj =  ( float )  -height / 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^xAdj =  ( float )  -width * 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor == TextBlockAnchor.TOP_LEFT && anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor != TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor != TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor >= TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor < TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( anchor >= TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_LEFT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT && anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor >= TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor != TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor != TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor < TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( TextBlockAnchor.BOTTOM_CENTER == TextBlockAnchor.BOTTOM_LEFT || anchor == anchor || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT && anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor >= TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor > TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor > TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^yAdj =  ( float )  -height * 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( TextBlockAnchor.BOTTOM_LEFT == anchor || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( TextBlockAnchor.BOTTOM_RIGHT == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == anchor )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor > TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor <= TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Variable_Misuse]^yAdj =  ( float )  -width / 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^yAdj =  ( float )  -height + 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( TextBlockAnchor.CENTER_RIGHT == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == anchor )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor <= TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor <= TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor != TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Argument_Swapping]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_LEFT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor < TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor >= TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Variable_Misuse]^yAdj =  ( float )  -width / 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^yAdj =  ( float )  -height + 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor != TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor != TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^yAdj =  ( float )  -height - 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Variable_Misuse]^result[1] = xAdj;^309^^^^^294^324^result[1] = yAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Literal]^result[] = yAdj;^309^^^^^294^324^result[1] = yAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[BugLab_Wrong_Operator]^if  ( obj >= this )  {^321^^^^^320^329^if  ( obj == this )  {^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Wrong_Literal]^return false;^322^^^^^320^329^return true;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Wrong_Operator]^if  ( obj  &  TextBlock )  {^324^^^^^320^329^if  ( obj instanceof TextBlock )  {^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Variable_Misuse]^return this.lines.equals ( lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Argument_Swapping]^return block.equals ( this.lines.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Argument_Swapping]^return block.lines.equals ( this.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Argument_Swapping]^return this.lines.equals ( block ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Variable_Misuse]^return lines.equals ( block.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Argument_Swapping]^return this.lines.equals ( block.lines.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Wrong_Literal]^return true;^328^^^^^320^329^return false;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Variable_Misuse]^return  ( lines != null ? this.lines.hashCode (  )  : 0 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Wrong_Operator]^return  ( this.lines == null ? this.lines.hashCode (  )  : 0 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[BugLab_Wrong_Literal]^return  ( this.lines != null ? this.lines.hashCode (  )  : -1 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
