[BugLab_Wrong_Operator]^if  ( key != null )  {^93^^^^^92^97^if  ( key == null )  {^[CLASS] StrokeMap  [METHOD] getStroke [RETURN_TYPE] Stroke   Comparable key [VARIABLES] Map  store  Comparable  key  boolean  
[BugLab_Variable_Misuse]^return  ( Stroke )  store.get ( key ) ;^96^^^^^92^97^return  ( Stroke )  this.store.get ( key ) ;^[CLASS] StrokeMap  [METHOD] getStroke [RETURN_TYPE] Stroke   Comparable key [VARIABLES] Map  store  Comparable  key  boolean  
[BugLab_Argument_Swapping]^return  ( Stroke )  key.get ( this.store ) ;^96^^^^^92^97^return  ( Stroke )  this.store.get ( key ) ;^[CLASS] StrokeMap  [METHOD] getStroke [RETURN_TYPE] Stroke   Comparable key [VARIABLES] Map  store  Comparable  key  boolean  
[BugLab_Variable_Misuse]^return store.containsKey ( key ) ;^109^^^^^108^110^return this.store.containsKey ( key ) ;^[CLASS] StrokeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Comparable key [VARIABLES] Map  store  Comparable  key  boolean  
[BugLab_Argument_Swapping]^return key.containsKey ( this.store ) ;^109^^^^^108^110^return this.store.containsKey ( key ) ;^[CLASS] StrokeMap  [METHOD] containsKey [RETURN_TYPE] boolean   Comparable key [VARIABLES] Map  store  Comparable  key  boolean  
[BugLab_Wrong_Operator]^if  ( key != null )  {^120^^^^^119^124^if  ( key == null )  {^[CLASS] StrokeMap  [METHOD] put [RETURN_TYPE] void   Comparable key Stroke stroke [VARIABLES] Comparable  key  Stroke  stroke  boolean  Map  store  
[BugLab_Argument_Swapping]^this.store.put ( stroke, key ) ;^123^^^^^119^124^this.store.put ( key, stroke ) ;^[CLASS] StrokeMap  [METHOD] put [RETURN_TYPE] void   Comparable key Stroke stroke [VARIABLES] Comparable  key  Stroke  stroke  boolean  Map  store  
[BugLab_Wrong_Operator]^if  ( obj >= this )  {^141^^^^^140^162^if  ( obj == this )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Wrong_Literal]^return false;^142^^^^^140^162^return true;^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Wrong_Operator]^if  ( ! ( obj  |  StrokeMap )  )  {^144^^^^^140^162^if  ( ! ( obj instanceof StrokeMap )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Wrong_Literal]^return true;^145^^^^^140^162^return false;^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Variable_Misuse]^if  ( store.size (  )  != that.store.size (  )  )  {^148^^^^^140^162^if  ( this.store.size (  )  != that.store.size (  )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Argument_Swapping]^if  ( that.size (  )  != this.store.store.size (  )  )  {^148^^^^^140^162^if  ( this.store.size (  )  != that.store.size (  )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Argument_Swapping]^if  ( that.store.size (  )  != this.store.size (  )  )  {^148^^^^^140^162^if  ( this.store.size (  )  != that.store.size (  )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Wrong_Operator]^if  ( this.store.size (  )  == that.store.size (  )  )  {^148^^^^^140^162^if  ( this.store.size (  )  != that.store.size (  )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Wrong_Literal]^return true;^149^^^^^140^162^return false;^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Variable_Misuse]^if  ( this.store.size (  )  != store.size (  )  )  {^148^^^^^140^162^if  ( this.store.size (  )  != that.store.size (  )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Argument_Swapping]^if  ( this.store.size (  )  != that.store.store.size (  )  )  {^148^^^^^140^162^if  ( this.store.size (  )  != that.store.size (  )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Argument_Swapping]^if  ( this.store.size (  )  != that.size (  )  )  {^148^^^^^140^162^if  ( this.store.size (  )  != that.store.size (  )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Variable_Misuse]^Set keys = store.keySet (  ) ;^151^^^^^140^162^Set keys = this.store.keySet (  ) ;^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Argument_Swapping]^if  ( !ObjectUtilities.equal ( s2, s1 )  )  {^157^^^^^140^162^if  ( !ObjectUtilities.equal ( s1, s2 )  )  {^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Wrong_Literal]^return true;^158^^^^^140^162^return false;^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Argument_Swapping]^Stroke s2 = key.getStroke ( that ) ;^156^^^^^140^162^Stroke s2 = that.getStroke ( key ) ;^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Wrong_Literal]^return false;^161^^^^^140^162^return true;^[CLASS] StrokeMap  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Comparable  key  Stroke  s1  s2  Set  keys  boolean  Iterator  iterator  Object  obj  Map  store  StrokeMap  that  
[BugLab_Variable_Misuse]^stream.writeInt ( store.size (  )  ) ;^186^^^^^184^195^stream.writeInt ( this.store.size (  )  ) ;^[CLASS] StrokeMap  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] Comparable  key  Stroke  stroke  Set  keys  boolean  Iterator  iterator  ObjectOutputStream  stream  Map  store  
[BugLab_Variable_Misuse]^Set keys = store.keySet (  ) ;^187^^^^^184^195^Set keys = this.store.keySet (  ) ;^[CLASS] StrokeMap  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] Comparable  key  Stroke  stroke  Set  keys  boolean  Iterator  iterator  ObjectOutputStream  stream  Map  store  
[BugLab_Argument_Swapping]^SerialUtilities.writeStroke ( stream, stroke ) ;^193^^^^^184^195^SerialUtilities.writeStroke ( stroke, stream ) ;^[CLASS] StrokeMap  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream stream [VARIABLES] Comparable  key  Stroke  stroke  Set  keys  boolean  Iterator  iterator  ObjectOutputStream  stream  Map  store  
[BugLab_Variable_Misuse]^for  ( keyCountnt i = 0; i < keyCount; i++ )  {^210^^^^^205^215^for  ( int i = 0; i < keyCount; i++ )  {^[CLASS] StrokeMap  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream stream [VARIABLES] Comparable  key  Stroke  stroke  boolean  Map  store  int  i  keyCount  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^for  ( keyCountnt i = 0; i < i; i++ )  {^210^^^^^205^215^for  ( int i = 0; i < keyCount; i++ )  {^[CLASS] StrokeMap  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream stream [VARIABLES] Comparable  key  Stroke  stroke  boolean  Map  store  int  i  keyCount  ObjectInputStream  stream  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= keyCount; i++ )  {^210^^^^^205^215^for  ( int i = 0; i < keyCount; i++ )  {^[CLASS] StrokeMap  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream stream [VARIABLES] Comparable  key  Stroke  stroke  boolean  Map  store  int  i  keyCount  ObjectInputStream  stream  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < keyCount; i++ )  {^210^^^^^205^215^for  ( int i = 0; i < keyCount; i++ )  {^[CLASS] StrokeMap  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream stream [VARIABLES] Comparable  key  Stroke  stroke  boolean  Map  store  int  i  keyCount  ObjectInputStream  stream  
[BugLab_Argument_Swapping]^this.store.put ( stroke, key ) ;^213^^^^^205^215^this.store.put ( key, stroke ) ;^[CLASS] StrokeMap  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream stream [VARIABLES] Comparable  key  Stroke  stroke  boolean  Map  store  int  i  keyCount  ObjectInputStream  stream  
