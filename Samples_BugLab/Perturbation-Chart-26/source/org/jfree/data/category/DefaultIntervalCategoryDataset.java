[BugLab_Argument_Swapping]^this ( DataUtilities.createNumberArray2D ( ends ) , DataUtilities.createNumberArray2D ( starts )  ) ;^88^89^^^^87^90^this ( DataUtilities.createNumberArray2D ( starts ) , DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this ( DataUtilities.createNumberArray2D ( ends ) , DataUtilities.createNumberArray2D ( ends )  ) ;^88^89^^^^87^90^this ( DataUtilities.createNumberArray2D ( starts ) , DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^DataUtilities.createNumberArray2D ( starts )  ) ;^89^^^^^87^90^DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this ( null, null, startData, ends ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Variable_Misuse]^this ( null, null, starts, startData ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Argument_Swapping]^this ( null, null, ends, starts ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Variable_Misuse]^this ( seriesNames, null, startData, ends ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this ( seriesNames, null, starts, startData ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^this ( starts, null, seriesNames, ends ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^this ( seriesNames, null, ends, starts ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.startData = startData;^141^^^^^126^156^this.startData = starts;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.endData = starts;^142^^^^^127^157^this.endData = ends;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( startData != null && ends != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( starts != null && starts != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( ends != null && starts != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( starts != null || ends != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( starts == null && ends != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( starts != null && ends == null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryCount != ends.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesCount != starts.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesCount != seriesCount )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( ends.length != seriesCount )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( ends != seriesCount.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesCount <= ends.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  >=  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryCount > 0 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesCount >= 0 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( seriesCount > categoryCount )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryKeys != null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesKeys == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.seriesKeys = generateKeys ( categoryCount, prefix ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.seriesKeys = generateKeys ( seriesCount, errMsg ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^this.seriesKeys = generateKeys ( prefix, seriesCount ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "series.default-prefix" )  !=  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryKeys.length != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKeys.length != categoryCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesCount != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( seriesCount.length != seriesKeys )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( seriesCount != seriesKeys.length )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesKeys.length == seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  <  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  <=  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  |  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  ||  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryCount != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  >=  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesCount != ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryCount != starts[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( ends[0].length != ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( ends != categoryCount[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryCount > ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( categoryCount != ends[categoryCount].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  <<  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKeys != null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryKeys == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.categoryKeys = generateKeys ( seriesCount, prefix ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.categoryKeys = generateKeys ( categoryCount, errMsg ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^this.categoryKeys = generateKeys ( prefix, categoryCount ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  &  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( categoryKeys.length.length != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( categoryCount != categoryKeys.length )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( categoryKeys != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryKeys.length <= categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  |  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  <=  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.categoryKeys = seriesKeys;^191^^^^^176^206^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  ||  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKeys.length != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryKeys.length != seriesCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesCount != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( categoryCount.length != categoryKeys )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  <<  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.seriesKeys = generateKeys ( categoryCount, prefix ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.seriesKeys = generateKeys ( seriesCount, errMsg ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^this.seriesKeys = generateKeys ( prefix, seriesCount ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.categoryKeys = generateKeys ( seriesCount, prefix ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.categoryKeys = generateKeys ( categoryCount, errMsg ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^this.categoryKeys = generateKeys ( prefix, categoryCount ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  >>  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  &&  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "series.default-prefix" )  <<  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int categoryCount = startData[0].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^int categoryCount = starts[0].length[0].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^int categoryCount = starts[categoryCount].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  >>  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  >>  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "series.default-prefix" )  ^  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( seriesKeys.length.length != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesKeys.length < seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  &&  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.seriesKeys = categoryKeys;^168^^^^^153^183^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "   instanceof   "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  !=  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( seriesKeys != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryCount == ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  &&  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  |  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "   instanceof   "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  !=  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  <  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryKeys.length == categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  &  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  ==  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  >>  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^ResourceBundle resources = ResourceBundle.getBundle ( prefix ) ;^147^^^^^132^162^ResourceBundle resources = ResourceBundle.getBundle ( baseName ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int seriesCount = startData.length;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int seriesCount = categoryCount;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^int seriesCount = starts.length.length;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^int seriesCount = starts;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  <=  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "series.default-prefix" )  &  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^int categoryCount = starts[-1].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "   instanceof   "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  <<  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  >=  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesCount == ends.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  >>  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( seriesCount > -1 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( seriesCount > seriesCount )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "series.default-prefix" )   instanceof   + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  ^  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesKeys.length <= seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  &  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  <  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryKeys.length >= categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  >  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  ^  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  |  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "series.default-prefix" )  ==  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  <<  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesKeys.length >= seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  &  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  >  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( categoryCount != ends[0].length[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryCount >= ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( categoryCount != ends[1].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  >  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "series.default-prefix" )  <=  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^int categoryCount = starts[1].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  >=  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^int result = result;^217^^^^^216^222^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( starts != null )  {^218^^^^^216^222^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( this.startData == null )  {^218^^^^^216^222^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^result = starts.length;^219^^^^^216^222^result = this.startData.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^int result = -result;^235^^^^^234^243^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKey.equals ( seriesKeys[i] )  )  {^237^^^^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( this.seriesKeys.equals ( seriesKey[i] )  )  {^237^^^^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^result = result;^238^^^^^234^243^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^for  ( resultnt i = 0; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^for  ( this.seriesKeysnt i = 0; i < i.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = i; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series >= getSeriesCount (  )  )  &&  ( series < 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series > getSeriesCount (  )  )  ||  ( series < 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series >= getSeriesCount (  )  )  ||  ( series > 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^return seriesKeys[series];^258^^^^^254^259^return this.seriesKeys[series];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryKeys == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Wrong_Operator]^if  ( seriesKeys != null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Variable_Misuse]^if  ( categoryKeys.length != getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Argument_Swapping]^if  ( seriesKeys.length.length != getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Argument_Swapping]^if  ( seriesKeys != getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Wrong_Operator]^if  ( seriesKeys.length == getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Variable_Misuse]^this.seriesKeys = categoryKeys;^278^^^^^270^280^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Wrong_Literal]^int result = result;^290^^^^^289^297^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( startData != null )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( this.startData == null )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( getSeriesCount (  )  == 0 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( getSeriesCount (  )  > -1 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^result = starts[0].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^result = this.startData[result].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^result = startData[0].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( getSeriesCount (  )  < 0 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( getSeriesCount (  )  > 1 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^result = this.startData[-1].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKeys == null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Wrong_Operator]^if  ( this.categoryKeys != null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Variable_Misuse]^return Collections.unmodifiableList ( Arrays.asList ( seriesKeys )  ) ;^314^315^^^^307^317^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[BugLab_Variable_Misuse]^if  ( seriesKeys == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryKeys != null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKeys.length != this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( i != this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryKeys.i != this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( categoryKeys.length != startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( categoryKeys != this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( this.startData != categoryKeys.length[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryKeys.length >= this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( categoryKeys.length != this.startData[].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKeys[i] == null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryKeys[i] != null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  >>  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  >  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < seriesKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^for  ( categoryKeys.lengthnt i = 0; i < i; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^for  ( categoryKeysnt i = 0; i < i.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == categoryKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < categoryKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < categoryKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  ||  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  <<  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  ^  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  <  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  &  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^this.categoryKeys = seriesKeys;^343^^^^^328^345^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int categoryIndex = getSeriesIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesIndex > 0 )  {^362^^^^^360^370^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int itemIndex = getColumnIndex ( series ) ;^365^^^^^360^370^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesIndex < 0 )  {^366^^^^^360^370^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( itemIndex <= 0 )  {^366^^^^^360^370^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^return getValue ( itemIndex, seriesIndex ) ;^369^^^^^360^370^return getValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^return getEndValue ( category, series ) ;^386^^^^^385^387^return getEndValue ( series, category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int categoryIndex = getSeriesIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( itemIndex < 0 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesIndex > 0 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( seriesIndex < 1 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int itemIndex = getColumnIndex ( series ) ;^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesIndex < 0 )  {^406^^^^^400^410^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( itemIndex <= 0 )  {^406^^^^^400^410^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^return getStartValue ( itemIndex, seriesIndex ) ;^409^^^^^400^410^return getStartValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  (  ( category < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  &&  ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series <= 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  >=  "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ==  "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  <  "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  (  ( series < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( category < 0 )  &&  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( category > 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( category < 0 )  ||  ( category == getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  (  ( category < -1 )  ||  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  >  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  >>  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  &  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ==  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^return starts[series][category];^439^^^^^423^441^return this.startData[series][category];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int categoryIndex = getSeriesIndex ( series ) ;^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( itemIndex < 0 )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( seriesIndex <= 0 )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( seriesIndex < seriesIndex )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^int itemIndex = getColumnIndex ( series ) ;^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesIndex < 0 )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( itemIndex <= 0 )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( itemIndex < 1 )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^return getEndValue ( itemIndex, seriesIndex ) ;^462^^^^^453^463^return getEndValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  (  ( category < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  &&  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series <= 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  ||  ( series < getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  (  ( series < series )  ||  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  >=  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  &&  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  <  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ^  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  (  ( series < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( category < 0 )  &&  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( category <= 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( category < 0 )  ||  ( category == getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  (  ( category < 1 )  ||  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  |  "category index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  &&  "category index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^return starts[series][category];^488^^^^^475^489^return this.endData[series][category];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  (  ( categoryIndex < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  &&  ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series <= 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )   &&  1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )   )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  !=  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ^  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >=  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  &  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( series < 0 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryIndex <= 0 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  ( categoryIndex < series )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "   instanceof   "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  <=  "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ==  "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ^  "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  (  ( categoryIndex < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  &&  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series <= 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )   &  1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  (  ( series < series )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )   )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ^  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  <  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  <=  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( series < 0 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^if  ( categoryIndex <= 0 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  &&  "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ||  "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >  "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^int result = -2;^567^^^^^566^575^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^if  ( category.equals ( seriesKeys[i] )  )  {^569^^^^^566^575^if  ( category.equals ( this.categoryKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Argument_Swapping]^if  ( this.categoryKeys.equals ( category[i] )  )  {^569^^^^^566^575^if  ( category.equals ( this.categoryKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^for  ( resultnt i = 0; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < seriesKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = i; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^result = result;^570^^^^^566^575^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = result; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^return i;^574^^^^^566^575^return result;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^for  ( countnt i = 0; i < i; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^for  >=  ( int i = 0; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^for  ^  ( int i = 0; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = count; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^name = name +  ( i + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^name = prefix +  ( count + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^name = i +  ( prefix + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^name = prefix +  <<  ( i + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^name = prefix +  ( i  |  1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^name = prefix +  ( i + count ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^result[i] = prefix;^591^^^^^586^594^result[i] = name;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^name = prefix +  ( i + i ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^return seriesKeys;^593^^^^^586^594^return result;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^return seriesKeys[column];^606^^^^^605^607^return this.categoryKeys[column];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKey [RETURN_TYPE] Comparable   int column [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  column  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  ( columnKey != null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( seriesKeys == null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[BugLab_Wrong_Operator]^if  ( this.seriesKeys != null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[BugLab_Variable_Misuse]^return Collections.unmodifiableList ( Arrays.asList ( seriesKeys )  ) ;^653^^^^^646^655^return Collections.unmodifiableList ( Arrays.asList ( this.seriesKeys )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[BugLab_Variable_Misuse]^return Collections.unmodifiableList ( Arrays.asList ( result )  ) ;^653^^^^^646^655^return Collections.unmodifiableList ( Arrays.asList ( this.seriesKeys )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[BugLab_Wrong_Operator]^if  (  ( row >= getRowCount (  )  )  &&  ( row < 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( row < getRowCount (  )  )  ||  ( row < 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  (  ( row >= getRowCount (  )  )  ||  ( row <= 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^if  (  ( row >= getRowCount (  )  )  ||  ( row < row )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^return result[row];^671^^^^^666^672^return this.seriesKeys[row];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^return seriesKeys.length;^684^^^^^683^685^return this.categoryKeys.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[BugLab_Wrong_Operator]^if  ( obj >= this )  {^707^^^^^706^729^if  ( obj == this )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return false;^708^^^^^706^729^return true;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  ( ! ( obj  |  DefaultIntervalCategoryDataset )  )  {^710^^^^^706^729^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^711^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( seriesKeys, that.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( this.seriesKeys, seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !Arrays.equals ( that, this.seriesKeys.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !Arrays.equals ( this.seriesKeys, that )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^716^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !Arrays.equals ( that.seriesKeys, this.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( result, that.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( this.categoryKeys, seriesKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !Arrays.equals ( that.categoryKeys, this.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^719^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( seriesKeys, that.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( this.categoryKeys, result )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !Arrays.equals ( that, this.categoryKeys.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !equal ( starts, that.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !equal ( this.startData, startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !equal ( this.startData, that.startData.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !equal ( that.startData, this.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !equal ( this.startData, that )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^722^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !equal ( this.startData, starts )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !equal ( that, this.startData.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !equal ( starts, that.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !equal ( this.endData, that.endData.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !equal ( that.endData, this.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^725^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !equal ( this.endData, starts )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !equal ( that, this.endData.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return false;^728^^^^^706^729^return true;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^clone.categoryKeys =  ( Comparable[] )  seriesKeys.clone (  ) ;^742^^^^^739^747^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^clone.seriesKeys =  ( Comparable[] )  result.clone (  ) ;^743^^^^^739^747^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^clone.seriesKeys =  ( Comparable[] )  seriesKeys.clone (  ) ;^743^^^^^739^747^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^clone.startData = clone ( starts ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^clone.startData = this.startData ( clone ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^clone.endData = clone ( starts ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^clone.endData = this.endData ( clone ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^clone.endData = clone ( startData ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( starts == null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  ( array1 != null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^return  ( starts == null ) ;^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^return  ( array2 != null ) ;^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( starts == null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  ( array2 != null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^762^^^^^757^773^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( starts.length != array2.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( array1.length != starts.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( i != array2.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( array1.length.length != array2.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( array1.length != array2.length.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( array2.length != array1.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  ( array1.length >= array2.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^765^^^^^757^773^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( array1[i], starts[i] )  )  {^768^^^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^if  ( !Arrays.equals ( array2[i], array1[i] )  )  {^768^^^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return true;^769^^^^^757^773^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < startData.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^for  ( array1nt i = 0; i < i.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^for  ( array1.lengthnt i = 0; i < i; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= array1.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = ; i < array1.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^if  ( !Arrays.equals ( starts[i], array2[i] )  )  {^768^^^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^return false;^772^^^^^757^773^return true;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^if  ( array != null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < startData.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < array; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^for  ( int i = i; i < array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^result[i] = child;^791^^^^^782^794^result[i] = copychild;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^Number[] child = starts[i];^788^^^^^782^794^Number[] child = array[i];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^System.arraycopy ( child, 0, copychild, 0, i ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^System.arraycopy ( copychild, 0, child, 0, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^System.arraycopy ( child, 0, child.length, 0, copychild ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Argument_Swapping]^System.arraycopy ( child.length, 0, copychild, 0, child ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^System.arraycopy ( child, i, copychild, i, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Wrong_Literal]^System.arraycopy ( child, -1, copychild, -1, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[BugLab_Variable_Misuse]^return starts;^793^^^^^782^794^return result;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
