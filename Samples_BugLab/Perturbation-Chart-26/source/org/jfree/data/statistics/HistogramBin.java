[buglab_swap_variables]^if  ( endBoundary > startBoundary )  {^75^^^^^74^82^if  ( startBoundary > endBoundary )  {^[CLASS] HistogramBin  [METHOD] <init> [RETURN_TYPE] HistogramBin(double,double)   double startBoundary double endBoundary [VARIABLES] boolean  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^return this.startBoundary - this.endBoundary;^124^^^^^123^125^return this.endBoundary - this.startBoundary;^[CLASS] HistogramBin  [METHOD] getBinWidth [RETURN_TYPE] double   [VARIABLES] boolean  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^return b1 && b0 && b2;^146^^^^^134^149^return b0 && b1 && b2;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^return b0 && b2 && b1;^146^^^^^134^149^return b0 && b1 && b2;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^boolean b0 = bin.startBoundary.startBoundary == this.startBoundary;^143^^^^^134^149^boolean b0 = bin.startBoundary == this.startBoundary;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^boolean b0 = this.startBoundary == bin.startBoundary;^143^^^^^134^149^boolean b0 = bin.startBoundary == this.startBoundary;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^boolean b1 = this.endBoundary.endBoundary == bin;^144^^^^^134^149^boolean b1 = bin.endBoundary == this.endBoundary;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^boolean b1 = this.endBoundary == bin.endBoundary;^144^^^^^134^149^boolean b1 = bin.endBoundary == this.endBoundary;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^boolean b2 = this.count.count == bin;^145^^^^^134^149^boolean b2 = bin.count == this.count;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^boolean b2 = this.count == bin.count;^145^^^^^134^149^boolean b2 = bin.count == this.count;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^return b2 && b1 && b0;^146^^^^^134^149^return b0 && b1 && b2;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
[buglab_swap_variables]^boolean b1 = bin.endBoundary.endBoundary == this.endBoundary;^144^^^^^134^149^boolean b1 = bin.endBoundary == this.endBoundary;^[CLASS] HistogramBin  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] HistogramBin  bin  Object  obj  boolean  b0  b1  b2  double  endBoundary  startBoundary  long  serialVersionUID  int  count  
