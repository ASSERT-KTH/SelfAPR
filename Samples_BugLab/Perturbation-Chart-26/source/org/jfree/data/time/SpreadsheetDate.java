[BugLab_Variable_Misuse]^if  (  ( serial >= 1900 )  &&  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( year >= 1900 )  ||  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( year == 1900 )  &&  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( year >= 1900 )  &&  ( year < 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Literal]^if  (  ( year >= 1899 )  &&  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^this.year = serial;^112^^^^^97^127^this.year = year;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^if  (  ( year >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= null )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Argument_Swapping]^if  (  ( MonthConstants.JANUARY >= month ) &&  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Argument_Swapping]^if  (  ( month >= MonthConstants.DECEMBER ) &&  ( month <= MonthConstants.JANUARY )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( month >= MonthConstants.JANUARY ) ||  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( month < MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month < MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^this.month = year;^122^^^^^120^128^this.month = month;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^this.month = year;^122^^^^^107^137^this.month = month;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^if  (  ( year >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( year, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, serial )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Argument_Swapping]^if  (  ( month >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( day, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Argument_Swapping]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( year, month )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( day >= 1 )  ||  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( day > 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Wrong_Operator]^if  (  ( day >= 1 )  &&  ( day < SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^this.day = year;^131^^^^^116^146^this.day = day;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( serial, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^this.serial = calcSerial ( serial, month, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^this.serial = calcSerial ( day, serial, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^this.serial = calcSerial ( day, month, serial ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Argument_Swapping]^this.serial = calcSerial ( month, day, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Argument_Swapping]^this.serial = calcSerial ( year, month, day ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Argument_Swapping]^this.serial = calcSerial ( day, year, month ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[BugLab_Variable_Misuse]^if  (  ( ss1 >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^if  (  ( SERIAL_LOWER_BOUND >= serial )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^if  (  ( serial >= SERIAL_UPPER_BOUND )  &&  ( serial <= SERIAL_LOWER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^if  (  ( serial >= SERIAL_LOWER_BOUND )  ||  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^if  (  ( serial > SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial < SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^this.serial = ss1;^151^^^^^136^166^this.serial = serial;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^this.serial = overestimatedYYYY;^151^^^^^136^166^this.serial = serial;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^final int days = serial - SERIAL_LOWER_BOUND;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^final int days = SERIAL_LOWER_BOUND - this.serial;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^final int days = this.serial  <=  SERIAL_LOWER_BOUND;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^final int overestimatedYYYY = 1900 +  ( ss2 / 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^final int overestimatedYYYY = 1900 +  >=  ( days / 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^final int overestimatedYYYY = 1900 +  ( days - 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^final int overestimatedYYYY = 1900 +  ( days / leaps ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^final int leaps = SerialDate.leapYearCount ( year ) ;^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^final int leaps = SerialDate.leapYearCount ( serial ) ;^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^final int nonleapdays = sss - leaps;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^final int nonleapdays = leaps - days;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^final int nonleapdays = days  <<  leaps;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^int underestimatedYYYY = 1900 +  ( serial / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^int underestimatedYYYY = 1900 +  <=  ( nonleapdays / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^int underestimatedYYYY = 1900 +  ( nonleapdays + 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int underestimatedYYYY = 1900 +  ( nonleapdays / nonleapdays ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^while  ( serial <= this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^while  ( ss1 <= serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^while  ( ss1 < this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^while  ( ss0 <= this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^while  ( ss <= this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^underestimatedYYYY = year + 1;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^underestimatedYYYY = underestimatedYYYY + ;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^ss1 = calcSerial ( 1, 1, sss ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^ss2 = calcSerial ( 2, 2, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^ss0 = calcSerial ( 0, 0, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^ss1 = calcSerial ( 1, 1, overestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^if  ( sss == overestimatedYYYY )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^if  ( underestimatedYYYY == serial )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^if  ( overestimatedYYYY == underestimatedYYYY )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^if  ( underestimatedYYYY != overestimatedYYYY )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^while  ( ss2 <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^while  ( ss1 <= overestimatedYYYY )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^while  ( this.serial <= ss1 )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^while  ( ss1 < this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^while  ( ssss1 <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^while  ( ssyear <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^while  ( ss0 <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^underestimatedYYYY = ss1 + 1;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^underestimatedYYYY = underestimatedYYYY + mm;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^ss1 = calcSerial ( 1, 1, ss2 ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^ss = calcSerial ( , , underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^sssss = calcSerial ( sss, sss, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^ss1 = calcSerial ( 1, 1, overestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^underestimatedYYYY = ss2 + 1;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^underestimatedYYYY = underestimatedYYYY ;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^ss1 = calcSerial ( 1, 1, ss1 ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^ssday = calcSerial ( day, day, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^ssmm = calcSerial ( mm, mm, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^this.year = serial - 1;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^this.year = underestimatedYYYY  <<  1;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^this.year = underestimatedYYYY - underestimatedYYYY;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^int ss1 = calcSerial ( 1, 1, overestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int ss0 = calcSerial ( 0, 0, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int sssss = calcSerial ( sss, sss, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int ss2 = calcSerial ( 2, 2, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int ssss2 = calcSerial ( ss2, ss2, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^ss2 = calcSerial ( 2, 2, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^this.year = overestimatedYYYY;^169^^^^^154^184^this.year = underestimatedYYYY;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^this.year = year;^169^^^^^154^184^this.year = underestimatedYYYY;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^underestimatedYYYY = underestimatedYYYY + leaps;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^ssmm = calcSerial ( mm, mm, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^this.year = underestimatedYYYY  >>  1;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^this.year = underestimatedYYYY ;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^int ss1 = calcSerial ( 1, 1, overestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int sssss = calcSerial ( sss, sss, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int ss0 = calcSerial ( 0, 0, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int ssleaps = calcSerial ( leaps, leaps, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int ss = calcSerial ( , , underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^final int ss2 = calcSerial ( 1, 1, underestimatedYYYY ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^final int ss2 = calcSerial ( leaps, leaps, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^final int ss2 = calcSerial ( sss, sss, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^final int ss2 = calcSerial ( 1, 1, ss2 ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^final int ss2 = calcSerial ( 0, 0, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^final int ss2 = calcSerial ( nonleapdays, nonleapdays, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( serial )  )  {^185^^^^^170^200^if  ( isLeapYear ( this.year )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( overestimatedYYYY )  )  {^185^^^^^170^200^if  ( isLeapYear ( this.year )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int mm = days;^191^^^^^176^206^int mm = 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^int sss = year + daysToEndOfPrecedingMonth[mm] - 1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^int sss = daysToEndOfPrecedingMonth + ss2[mm] - 1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^int sss = ss2 + daysToEndOfPrecedingMonth[mm]  &  1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^int sss = ss2  |  daysToEndOfPrecedingMonth[mm] - 1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - nonleapdays;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^while  ( year < this.serial )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^while  ( sss < overestimatedYYYY )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^while  ( sss <= this.serial )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^mm = ss1 + 1;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^mm = mm + overestimatedYYYY;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^sss = sss + daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^sss = ss2 + daysToEndOfPrecedingMonth[mm]  !=  1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^sss = ss2  ^  daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^sss = ss2 + daysToEndOfPrecedingMonth[mm] ;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^mm = mm ;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^sss = serial + daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^sss = ss2 + daysToEndOfPrecedingMonth[mm]  >  1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^sss = ss2  &&  daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^this.month = serial - 1;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^this.month = mm  |  1;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^this.month = mm - sss;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^this.day = serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Argument_Swapping]^this.day = this.serial - daysToEndOfPrecedingMonth - ss2[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^this.day = this.serial  ==  ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Operator]^this.day = this.serial  <  ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Wrong_Literal]^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] ;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[BugLab_Variable_Misuse]^return underestimatedYYYY;^213^^^^^212^214^return this.serial;^[CLASS] SpreadsheetDate  [METHOD] toSerial [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Operator]^calendar.set ( getYYYY (  ) , getMonth (  )   &  1, getDayOfMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( getYYYY (  ) , getMonth (  )  , getDayOfMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , -1, -1, -1 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , month, month, month ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[BugLab_Variable_Misuse]^return serial;^233^^^^^232^234^return this.year;^[CLASS] SpreadsheetDate  [METHOD] getYYYY [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Variable_Misuse]^return ss2;^242^^^^^241^243^return this.month;^[CLASS] SpreadsheetDate  [METHOD] getMonth [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Variable_Misuse]^return sss;^251^^^^^250^252^return this.day;^[CLASS] SpreadsheetDate  [METHOD] getDayOfMonth [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Variable_Misuse]^return  ( overestimatedYYYY + 6 )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Operator]^return  <  ( this.serial + 6 )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Operator]^return  ( this.serial + 6 )   &  7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Operator]^return  ( this.serial  >>  6 )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Literal]^return  ( this.serial + leaps )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Literal]^return  ( this.serial + 6 )  % days + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Literal]^return  ( this.serial + 6 )  % 7 ;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[BugLab_Wrong_Operator]^if  ( object  >  SerialDate )  {^281^^^^^279^289^if  ( object instanceof SerialDate )  {^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[BugLab_Wrong_Literal]^return true;^286^^^^^279^289^return false;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[BugLab_Wrong_Operator]^return  ( s.toSerial (  )  != this.toSerial (  )  ) ;^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[BugLab_Wrong_Operator]^return  ( s.toSerial (  )  >= this.toSerial (  )  ) ;^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[BugLab_Variable_Misuse]^return year - other.toSerial (  ) ;^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Argument_Swapping]^return other - this.serial.toSerial (  ) ;^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Wrong_Operator]^return this.serial  <  other.toSerial (  ) ;^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Variable_Misuse]^return  ( overestimatedYYYY == other.toSerial (  )  ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Argument_Swapping]^return  ( other == this.serial.toSerial (  )  ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Wrong_Operator]^return  ( this.serial >= other.toSerial (  )  ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Variable_Misuse]^return  ( overestimatedYYYY < other.toSerial (  )  ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Argument_Swapping]^return  ( other < this.serial.toSerial (  )  ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Wrong_Operator]^return  ( this.serial == other.toSerial (  )  ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Variable_Misuse]^return  ( sss <= other.toSerial (  )  ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Argument_Swapping]^return  ( other <= this.serial.toSerial (  )  ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Wrong_Operator]^return  ( this.serial < other.toSerial (  )  ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Variable_Misuse]^return  ( overestimatedYYYY > other.toSerial (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Argument_Swapping]^return  ( other > this.serial.toSerial (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Wrong_Operator]^return  ( this.serial >= other.toSerial (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Variable_Misuse]^return  ( overestimatedYYYY >= other.toSerial (  )  ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Argument_Swapping]^return  ( other >= this.serial.toSerial (  )  ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Wrong_Operator]^return  ( this.serial < other.toSerial (  )  ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[BugLab_Argument_Swapping]^return isInRange ( d2, d1, SerialDate.INCLUDE_BOTH ) ;^401^^^^^400^402^return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int s1 = d2.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int s2 = d1.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int start = Math.min ( ss2, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int start = Math.min ( s1, s ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^final int start = Math.min ( s2, s1 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int start = Math.min ( s, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^final int end = Math.max ( s2, s1 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int end = Math.max ( s, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int end = Math.max ( s1, s ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^if  ( s2 == SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^if  ( include < SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^if  ( include > SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^if  ( include != SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^else if  ( s1 == SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^else if  ( include <= SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^else if  ( include != SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^else if  ( ss2 == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^else if  ( include >= SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( ss2 > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > underestimatedYYYY && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s < start ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( start > s && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( s > end && s < start ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( end > start && s < s ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s > start || s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s > start && s == end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s2 > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > s2 && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s <= s1 ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( end > start && s <= s ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( start > s && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s > start || s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s > start && s < end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( year > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > serial && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s == start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( sss > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > s1 && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s < s2 ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( ss1 >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= s1 && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= start && s < s2 ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( end >= start && s < s ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( s >= end && s < start ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start || s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s > start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start && s <= end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^else if  ( ss1 == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^else if  ( include <= SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( ss1 > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > s2 && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s < start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s > start && s <= end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > s1 && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s <= year ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( s > end && s <= start ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( year >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= serial && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= start && s < start ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( start >= s && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s == start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s <= serial ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s < start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > ss2 && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s < ss2 ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s == start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( underestimatedYYYY >= start && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= s1 && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= start && s <= ss1 ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( end >= start && s <= s ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( start >= s && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^return  ( s >= end && s <= start ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start || s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s > start && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start && s < end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^else if  ( ss1 == SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^else if  ( serial == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^else if  ( include == null )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( year > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( ss1 > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > ss1 && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( serial > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > year && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( sss >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= ss1 && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= start && s < s1 ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s < start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start && s > end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^else if  ( s2 == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Argument_Swapping]^else if  ( SerialDate.INCLUDE_SECOND == include )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^else if  ( include != SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s < underestimatedYYYY ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( serial > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > ss2 && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( serial >= start && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= start && s <= s2 ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s2 >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s >= year && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Wrong_Operator]^return  ( s >= start && s == end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^return  ( s > start && s < ss1 ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[BugLab_Variable_Misuse]^final int s1y =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^final int yy =  ||  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^final / int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^final int yy =  (  ( y  >  1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y   instanceof   1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^final int yy =  (  ( y - m )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^final int yy =  (  ( y - 1900 )  * 364 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^final int yy =  (  ( y - days900 )  * 365 )  + SerialDate.leapYearCount ( y - days ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^final int ss1y =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y  <  1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^final int yy =  (  ( y - s1900 )  * 365 )  + SerialDate.leapYearCount ( y - s1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^int s2m = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^452^^^^^450^460^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Argument_Swapping]^int SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTHm = m[m];^452^^^^^450^460^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^if  ( s1 > MonthConstants.FEBRUARY )  {^453^^^^^450^460^if  ( m > MonthConstants.FEBRUARY )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^if  ( m >= MonthConstants.FEBRUARY )  {^453^^^^^450^460^if  ( m > MonthConstants.FEBRUARY )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^if  ( SerialDate.isLeapYear ( ss2 )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^mm = mm ;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^mm = s2 + 1;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^mm = mm + day;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^if  ( SerialDate.isLeapYear ( s )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^if  ( SerialDate.isLeapYear ( s2 )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^mm = serial + 1;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^mm = mm + ;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^if  ( SerialDate.isLeapYear ( s1 )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^final int ss1d = d;^458^^^^^450^460^final int dd = d;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^return s1 + mm + dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Variable_Misuse]^return yy + underestimatedYYYY + dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Argument_Swapping]^return dd + mm + yy + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Argument_Swapping]^return yy + dd + mm + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^return yy   instanceof   mm   instanceof   dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Operator]^return yy   instanceof   mm + dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[BugLab_Wrong_Literal]^return yy + mm + dd ;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
