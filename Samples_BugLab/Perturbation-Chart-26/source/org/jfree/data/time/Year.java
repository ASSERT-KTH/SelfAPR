[BugLab_Argument_Swapping]^if  (  ( SerialDate.MAXIMUM_YEAR_SUPPORTED < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > year )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Argument_Swapping]^if  (  ( year < SerialDate.MAXIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MINIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) &&  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^if  (  ( year <= SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year >= SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  ==  year  ==  " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  >  year + " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  <  year  <  " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  ==  year + " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  !=  year  !=  " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  <  year + " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  <<  year  <<  " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  |  year + " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[BugLab_Variable_Misuse]^return year;^138^^^^^137^139^return this.year;^[CLASS] Year  [METHOD] getYear [RETURN_TYPE] int   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return serialVersionUID;^152^^^^^151^153^return this.firstMillisecond;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return serialVersionUID;^166^^^^^165^167^return this.lastMillisecond;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^if  ( SerialDate.MINIMUM_YEAR_SUPPORTED > this.year )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( this.year >= SerialDate.MINIMUM_YEAR_SUPPORTED )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return new Year ( year - 1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  !=  1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return new Year ( this.year  ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  ||  1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  <<  1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return new Year ( this.year - null ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  &  1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return new Year ( this.year -  ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^if  ( SerialDate.MAXIMUM_YEAR_SUPPORTED < this.year )  {^204^^^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( this.year == SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^204^^^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return new Year ( year + 1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  <  1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Literal]^return new Year ( this.year  ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  |  1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  &&  1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return new Year ( this.year  >  1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return year;^220^^^^^219^221^return this.year;^[CLASS] Year  [METHOD] getSerialIndex [RETURN_TYPE] long   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^calendar.set ( year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( this.year, Calendar.JANUARY, 1, -1, -1, -1 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( Calendar.MILLISECOND, 1 ) ;^236^^^^^234^240^calendar.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[BugLab_Variable_Misuse]^calendar.set ( year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( this.year, Calendar.DECEMBER, 31, 24, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 60, 60 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[BugLab_Wrong_Literal]^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 58, 58 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[BugLab_Wrong_Operator]^if  ( object == null )  {^273^^^^^272^285^if  ( object != null )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^283^^^^^272^285^return false;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( object  ==  Year )  {^274^^^^^272^285^if  ( object instanceof Year )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^279^^^^^272^285^return false;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Variable_Misuse]^return  ( year == target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Argument_Swapping]^return  ( target == this.year.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( this.year >= target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( this.year != target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( object  >=  Year )  {^274^^^^^272^285^if  ( object instanceof Year )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Wrong_Operator]^return  ( this.year > target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[BugLab_Argument_Swapping]^result = 37 * c + result;^299^^^^^296^301^result = 37 * result + c;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[BugLab_Wrong_Operator]^result = 37 + result + c;^299^^^^^296^301^result = 37 * result + c;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[BugLab_Wrong_Literal]^result =  * result + c;^299^^^^^296^301^result = 37 * result + c;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[BugLab_Variable_Misuse]^return c;^300^^^^^296^301^return result;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[BugLab_Wrong_Operator]^if  ( o1  <<  Year )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^if  ( o1  >=  Year )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^if  ( oresult instanceof Year )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^else if  ( o1  ||  RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^else if  ( o instanceof RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = result;^335^^^^^326^336^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = -1;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = result;^335^^^^^313^340^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^result = year - y.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Argument_Swapping]^result = y - this.year.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = this.year  |  y.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^else if  ( o1  >>  RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^else if  ( o0 instanceof RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = 1;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Operator]^result = this.year  <=  y.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Wrong_Literal]^result = ;^335^^^^^313^340^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[BugLab_Variable_Misuse]^return Integer.toString ( year ) ;^348^^^^^347^349^return Integer.toString ( this.year ) ;^[CLASS] Year  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
