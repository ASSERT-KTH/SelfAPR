[BugLab_Variable_Misuse]^this.x = y;^75^^^^^74^77^this.x = x;^[CLASS] XYCoordinate  [METHOD] <init> [RETURN_TYPE] XYCoordinate(double,double)   double x double y [VARIABLES] double  x  y  boolean  
[BugLab_Variable_Misuse]^this.y = x;^76^^^^^74^77^this.y = y;^[CLASS] XYCoordinate  [METHOD] <init> [RETURN_TYPE] XYCoordinate(double,double)   double x double y [VARIABLES] double  x  y  boolean  
[BugLab_Variable_Misuse]^return y;^85^^^^^84^86^return this.x;^[CLASS] XYCoordinate  [METHOD] getX [RETURN_TYPE] double   [VARIABLES] double  x  y  boolean  
[BugLab_Variable_Misuse]^return y;^94^^^^^93^95^return this.y;^[CLASS] XYCoordinate  [METHOD] getY [RETURN_TYPE] double   [VARIABLES] double  x  y  boolean  
[BugLab_Wrong_Operator]^if  ( obj <= this )  {^105^^^^^104^119^if  ( obj == this )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return false;^106^^^^^104^119^return true;^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^if  ( ! ( obj  >=  XYCoordinate )  )  {^108^^^^^104^119^if  ( ! ( obj instanceof XYCoordinate )  )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return true;^109^^^^^104^119^return false;^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( y != that.x )  {^112^^^^^104^119^if  ( this.x != that.x )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( this.x != y )  {^112^^^^^104^119^if  ( this.x != that.x )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( this.x != that.x.x )  {^112^^^^^104^119^if  ( this.x != that.x )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( that.x != this.x )  {^112^^^^^104^119^if  ( this.x != that.x )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^if  ( this.x == that.x )  {^112^^^^^104^119^if  ( this.x != that.x )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return true;^113^^^^^104^119^return false;^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( y != that.y )  {^115^^^^^104^119^if  ( this.y != that.y )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( this.y != y )  {^115^^^^^104^119^if  ( this.y != that.y )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( that != this.y.y )  {^115^^^^^104^119^if  ( this.y != that.y )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( that.y != this.y )  {^115^^^^^104^119^if  ( this.y != that.y )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( this.y != that )  {^115^^^^^104^119^if  ( this.y != that.y )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^if  ( this.y == that.y )  {^115^^^^^104^119^if  ( this.y != that.y )  {^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return true;^116^^^^^104^119^return false;^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return false;^118^^^^^104^119^return true;^[CLASS] XYCoordinate  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^int result = result;^127^^^^^126^133^int result = 193;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Variable_Misuse]^long temp = Double.doubleToLongBits ( y ) ;^128^^^^^126^133^long temp = Double.doubleToLongBits ( this.x ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Argument_Swapping]^result = 37 * temp +  ( int )   ( result ^  ( temp >>> 32 )  ) ;^129^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Wrong_Operator]^result = 37 * result +  &&  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^129^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Wrong_Operator]^result = 37 + result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^129^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Wrong_Operator]^result = 37 * result +  ( int )   ( temp ^  ( temp  ||  32 )  ) ;^129^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Wrong_Literal]^result = 38 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^129^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Variable_Misuse]^temp = Double.doubleToLongBits ( y ) ;^130^^^^^126^133^temp = Double.doubleToLongBits ( this.y ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Argument_Swapping]^result = 37 * temp +  ( int )   ( result ^  ( temp >>> 32 )  ) ;^131^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Wrong_Operator]^result = 37 * result +  >  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^131^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Wrong_Operator]^result = 37 - result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^131^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Wrong_Operator]^result = 37 * result +  ( int )   ( temp ^  ( temp  |  32 )  ) ;^131^^^^^126^133^result = 37 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] XYCoordinate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  x  y  int  result  long  temp  
[BugLab_Variable_Misuse]^return " ( " + y + ", " + this.y + " ) ";^142^^^^^141^143^return " ( " + this.x + ", " + this.y + " ) ";^[CLASS] XYCoordinate  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  x  y  boolean  
[BugLab_Argument_Swapping]^return " ( " + this.y + ", " + this.x + " ) ";^142^^^^^141^143^return " ( " + this.x + ", " + this.y + " ) ";^[CLASS] XYCoordinate  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  x  y  boolean  
[BugLab_Wrong_Operator]^return " ( "  <=  this.x + ", " + this.y + " ) ";^142^^^^^141^143^return " ( " + this.x + ", " + this.y + " ) ";^[CLASS] XYCoordinate  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  x  y  boolean  
[BugLab_Wrong_Operator]^if  ( ! ( obj  <<  XYCoordinate )  )  {^153^^^^^152^172^if  ( ! ( obj instanceof XYCoordinate )  )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( y > that.x )  {^157^^^^^152^172^if  ( this.x > that.x )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( this.x > y )  {^157^^^^^152^172^if  ( this.x > that.x )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^if  ( this.x >= that.x )  {^157^^^^^152^172^if  ( this.x > that.x )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^else if  ( y < that.x )  {^160^^^^^152^172^else if  ( this.x < that.x )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^else if  ( this.x < y )  {^160^^^^^152^172^else if  ( this.x < that.x )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^else if  ( this.x < that.x.x )  {^160^^^^^152^172^else if  ( this.x < that.x )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^else if  ( this.x <= that.x )  {^160^^^^^152^172^else if  ( this.x < that.x )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( y > that.y )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( this.y > that.y.y )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( that > this.y.y )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( this.y > that )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^if  ( this.y >= that.y )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^else if  ( y < that.y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^else if  ( this.y < y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^else if  ( this.y < that.y.y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^else if  ( that.y < this.y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^else if  ( this.y <= that.y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return -4;^168^^^^^152^172^return -1;^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return 0;^165^^^^^152^172^return 1;^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^else if  ( that < this.y.y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^else if  ( this.y < that )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^else if  ( this.y == that.y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return -2;^168^^^^^152^172^return -1;^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return 4;^165^^^^^152^172^return 1;^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return -0;^168^^^^^152^172^return -1;^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Variable_Misuse]^if  ( this.y > y )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Argument_Swapping]^if  ( that.y > this.y )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^if  ( this.y < that.y )  {^164^^^^^152^172^if  ( this.y > that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return 2;^165^^^^^152^172^return 1;^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Operator]^else if  ( this.y > that.y )  {^167^^^^^152^172^else if  ( this.y < that.y )  {^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
[BugLab_Wrong_Literal]^return 0;^158^^^^^152^172^return 1;^[CLASS] XYCoordinate  [METHOD] compareTo [RETURN_TYPE] int   Object obj [VARIABLES] XYCoordinate  that  Object  obj  boolean  double  x  y  
