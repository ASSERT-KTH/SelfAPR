[buglab_swap_variables]^super ( autoSort, key, allowDuplicateXValues ) ;^83^^^^^81^84^super ( key, autoSort, allowDuplicateXValues ) ;^[CLASS] VectorSeries  [METHOD] <init> [RETURN_TYPE] Comparable,boolean,boolean)   Comparable key boolean autoSort boolean allowDuplicateXValues [VARIABLES] Comparable  key  boolean  allowDuplicateXValues  autoSort  
[buglab_swap_variables]^super (  autoSort, allowDuplicateXValues ) ;^83^^^^^81^84^super ( key, autoSort, allowDuplicateXValues ) ;^[CLASS] VectorSeries  [METHOD] <init> [RETURN_TYPE] Comparable,boolean,boolean)   Comparable key boolean autoSort boolean allowDuplicateXValues [VARIABLES] Comparable  key  boolean  allowDuplicateXValues  autoSort  
[buglab_swap_variables]^super ( key, allowDuplicateXValues, autoSort ) ;^83^^^^^81^84^super ( key, autoSort, allowDuplicateXValues ) ;^[CLASS] VectorSeries  [METHOD] <init> [RETURN_TYPE] Comparable,boolean,boolean)   Comparable key boolean autoSort boolean allowDuplicateXValues [VARIABLES] Comparable  key  boolean  allowDuplicateXValues  autoSort  
[buglab_swap_variables]^super ( key,  allowDuplicateXValues ) ;^83^^^^^81^84^super ( key, autoSort, allowDuplicateXValues ) ;^[CLASS] VectorSeries  [METHOD] <init> [RETURN_TYPE] Comparable,boolean,boolean)   Comparable key boolean autoSort boolean allowDuplicateXValues [VARIABLES] Comparable  key  boolean  allowDuplicateXValues  autoSort  
[buglab_swap_variables]^super ( key, autoSort ) ;^83^^^^^81^84^super ( key, autoSort, allowDuplicateXValues ) ;^[CLASS] VectorSeries  [METHOD] <init> [RETURN_TYPE] Comparable,boolean,boolean)   Comparable key boolean autoSort boolean allowDuplicateXValues [VARIABLES] Comparable  key  boolean  allowDuplicateXValues  autoSort  
[buglab_swap_variables]^super.add ( new VectorDataItem ( deltaX, y, x, deltaY ) , true ) ;^95^^^^^94^96^super.add ( new VectorDataItem ( x, y, deltaX, deltaY ) , true ) ;^[CLASS] VectorSeries  [METHOD] add [RETURN_TYPE] void   double x double y double deltaX double deltaY [VARIABLES] boolean  double  deltaX  deltaY  x  y  
[buglab_swap_variables]^super.add ( new VectorDataItem (  y, deltaX, deltaY ) , true ) ;^95^^^^^94^96^super.add ( new VectorDataItem ( x, y, deltaX, deltaY ) , true ) ;^[CLASS] VectorSeries  [METHOD] add [RETURN_TYPE] void   double x double y double deltaX double deltaY [VARIABLES] boolean  double  deltaX  deltaY  x  y  
[buglab_swap_variables]^super.add ( new VectorDataItem ( x, deltaY, deltaX, y ) , true ) ;^95^^^^^94^96^super.add ( new VectorDataItem ( x, y, deltaX, deltaY ) , true ) ;^[CLASS] VectorSeries  [METHOD] add [RETURN_TYPE] void   double x double y double deltaX double deltaY [VARIABLES] boolean  double  deltaX  deltaY  x  y  
[buglab_swap_variables]^super.add ( new VectorDataItem ( x,  deltaX, deltaY ) , true ) ;^95^^^^^94^96^super.add ( new VectorDataItem ( x, y, deltaX, deltaY ) , true ) ;^[CLASS] VectorSeries  [METHOD] add [RETURN_TYPE] void   double x double y double deltaX double deltaY [VARIABLES] boolean  double  deltaX  deltaY  x  y  
[buglab_swap_variables]^super.add ( new VectorDataItem ( x, deltaX, y, deltaY ) , true ) ;^95^^^^^94^96^super.add ( new VectorDataItem ( x, y, deltaX, deltaY ) , true ) ;^[CLASS] VectorSeries  [METHOD] add [RETURN_TYPE] void   double x double y double deltaX double deltaY [VARIABLES] boolean  double  deltaX  deltaY  x  y  
[buglab_swap_variables]^super.add ( new VectorDataItem ( x, y,  deltaY ) , true ) ;^95^^^^^94^96^super.add ( new VectorDataItem ( x, y, deltaX, deltaY ) , true ) ;^[CLASS] VectorSeries  [METHOD] add [RETURN_TYPE] void   double x double y double deltaX double deltaY [VARIABLES] boolean  double  deltaX  deltaY  x  y  
[buglab_swap_variables]^super.add ( new VectorDataItem ( x, y, deltaX ) , true ) ;^95^^^^^94^96^super.add ( new VectorDataItem ( x, y, deltaX, deltaY ) , true ) ;^[CLASS] VectorSeries  [METHOD] add [RETURN_TYPE] void   double x double y double deltaX double deltaY [VARIABLES] boolean  double  deltaX  deltaY  x  y  
