[BugLab_Wrong_Operator]^if  ( dataset != null )  {^154^^^^^153^174^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Wrong_Literal]^double totalValue = ;^158^^^^^153^174^double totalValue = 0;^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Wrong_Operator]^if  ( current == null )  {^162^^^^^153^174^if  ( current != null )  {^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Wrong_Operator]^if  ( value == null )  {^165^^^^^153^174^if  ( value != null )  {^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Wrong_Operator]^if  ( v >= 0 )  {^168^^^^^153^174^if  ( v > 0 )  {^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Argument_Swapping]^totalValue = v + totalValue;^169^^^^^153^174^totalValue = totalValue + v;^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Argument_Swapping]^Number value = current.getValue ( dataset ) ;^163^^^^^153^174^Number value = dataset.getValue ( current ) ;^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Wrong_Operator]^if  ( v < 0 )  {^168^^^^^153^174^if  ( v > 0 )  {^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Wrong_Literal]^if  ( v > -1 )  {^168^^^^^153^174^if  ( v > 0 )  {^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Variable_Misuse]^return v;^173^^^^^153^174^return totalValue;^[CLASS] DatasetUtilities  [METHOD] calculatePieDatasetTotal [RETURN_TYPE] double   PieDataset dataset [VARIABLES] Comparable  current  boolean  Number  value  PieDataset  dataset  double  totalValue  v  Iterator  iterator  List  keys  
[BugLab_Argument_Swapping]^int row = rowKey.getRowIndex ( dataset ) ;^187^^^^^185^189^int row = dataset.getRowIndex ( rowKey ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset Comparable rowKey [VARIABLES] Comparable  rowKey  boolean  CategoryDataset  dataset  int  row  
[BugLab_Argument_Swapping]^return createPieDatasetForRow ( row, dataset ) ;^188^^^^^185^189^return createPieDatasetForRow ( dataset, row ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset Comparable rowKey [VARIABLES] Comparable  rowKey  boolean  CategoryDataset  dataset  int  row  
[BugLab_Variable_Misuse]^for  ( int row = 0; current < columnCount; current++ )  {^204^^^^^200^209^for  ( int current = 0; current < columnCount; current++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Variable_Misuse]^for  ( int current = 0; current < row; current++ )  {^204^^^^^200^209^for  ( int current = 0; current < columnCount; current++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Wrong_Operator]^for  ( int current = 0; current <= columnCount; current++ )  {^204^^^^^200^209^for  ( int current = 0; current < columnCount; current++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Variable_Misuse]^Comparable columnKey = dataset.getColumnKey ( row ) ;^205^^^^^200^209^Comparable columnKey = dataset.getColumnKey ( current ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Argument_Swapping]^Comparable columnKey = current.getColumnKey ( dataset ) ;^205^^^^^200^209^Comparable columnKey = dataset.getColumnKey ( current ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Variable_Misuse]^result.setValue ( columnKey, dataset.getValue ( columnCount, current )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Variable_Misuse]^result.setValue ( columnKey, dataset.getValue ( row, columnCount )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Argument_Swapping]^result.setValue ( columnKey, row.getValue ( dataset, current )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Argument_Swapping]^result.setValue ( columnKey, dataset.getValue ( current, row )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Variable_Misuse]^result.setValue ( columnKey, dataset.getValue ( current, current )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Variable_Misuse]^result.setValue ( columnKey, dataset.getValue ( row, row )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Wrong_Literal]^for  ( int current = current; current < columnCount; current++ )  {^204^^^^^200^209^for  ( int current = 0; current < columnCount; current++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Argument_Swapping]^result.setValue ( current, dataset.getValue ( row, columnKey )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Argument_Swapping]^result.setValue ( dataset, columnKey.getValue ( row, current )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Argument_Swapping]^result.setValue ( columnKey, current.getValue ( row, dataset )  ) ;^206^^^^^200^209^result.setValue ( columnKey, dataset.getValue ( row, current )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForRow [RETURN_TYPE] PieDataset   CategoryDataset dataset int row [VARIABLES] DefaultPieDataset  result  Comparable  columnKey  boolean  CategoryDataset  dataset  int  columnCount  current  row  
[BugLab_Argument_Swapping]^int column = columnKey.getColumnIndex ( dataset ) ;^222^^^^^220^224^int column = dataset.getColumnIndex ( columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset Comparable columnKey [VARIABLES] Comparable  columnKey  boolean  CategoryDataset  dataset  int  column  
[BugLab_Argument_Swapping]^return createPieDatasetForColumn ( column, dataset ) ;^223^^^^^220^224^return createPieDatasetForColumn ( dataset, column ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset Comparable columnKey [VARIABLES] Comparable  columnKey  boolean  CategoryDataset  dataset  int  column  
[BugLab_Variable_Misuse]^for  ( rowCountnt i = 0; i < rowCount; i++ )  {^239^^^^^235^244^for  ( int i = 0; i < rowCount; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < column; i++ )  {^239^^^^^235^244^for  ( int i = 0; i < rowCount; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^for  ( rowCountnt i = 0; i < i; i++ )  {^239^^^^^235^244^for  ( int i = 0; i < rowCount; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > rowCount; i++ )  {^239^^^^^235^244^for  ( int i = 0; i < rowCount; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Wrong_Literal]^for  ( int i = rowCount; i < rowCount; i++ )  {^239^^^^^235^244^for  ( int i = 0; i < rowCount; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Variable_Misuse]^Comparable rowKey = dataset.getRowKey ( rowCount ) ;^240^^^^^235^244^Comparable rowKey = dataset.getRowKey ( i ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^Comparable rowKey = i.getRowKey ( dataset ) ;^240^^^^^235^244^Comparable rowKey = dataset.getRowKey ( i ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Variable_Misuse]^result.setValue ( rowKey, dataset.getValue ( rowCount, column )  ) ;^241^^^^^235^244^result.setValue ( rowKey, dataset.getValue ( i, column )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^result.setValue ( dataset, rowKey.getValue ( i, column )  ) ;^241^^^^^235^244^result.setValue ( rowKey, dataset.getValue ( i, column )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^result.setValue ( rowKey, i.getValue ( dataset, column )  ) ;^241^^^^^235^244^result.setValue ( rowKey, dataset.getValue ( i, column )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^result.setValue ( rowKey, dataset.getValue ( column, i )  ) ;^241^^^^^235^244^result.setValue ( rowKey, dataset.getValue ( i, column )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Variable_Misuse]^result.setValue ( rowKey, dataset.getValue ( i, rowCount )  ) ;^241^^^^^235^244^result.setValue ( rowKey, dataset.getValue ( i, column )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^result.setValue ( rowKey, column.getValue ( i, dataset )  ) ;^241^^^^^235^244^result.setValue ( rowKey, dataset.getValue ( i, column )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < rowCount; i++ )  {^239^^^^^235^244^for  ( int i = 0; i < rowCount; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^result.setValue ( i, dataset.getValue ( rowKey, column )  ) ;^241^^^^^235^244^result.setValue ( rowKey, dataset.getValue ( i, column )  ) ;^[CLASS] DatasetUtilities  [METHOD] createPieDatasetForColumn [RETURN_TYPE] PieDataset   CategoryDataset dataset int column [VARIABLES] DefaultPieDataset  result  Comparable  rowKey  boolean  CategoryDataset  dataset  int  column  i  rowCount  
[BugLab_Argument_Swapping]^return DatasetUtilities.createConsolidatedPieDataset ( minimumPercent, key, source, 2 ) ;^263^264^265^^^259^266^return DatasetUtilities.createConsolidatedPieDataset ( source, key, minimumPercent, 2 ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent [VARIABLES] Comparable  key  boolean  PieDataset  source  double  minimumPercent  
[BugLab_Argument_Swapping]^return DatasetUtilities.createConsolidatedPieDataset ( key, source, minimumPercent, 2 ) ;^263^264^265^^^259^266^return DatasetUtilities.createConsolidatedPieDataset ( source, key, minimumPercent, 2 ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent [VARIABLES] Comparable  key  boolean  PieDataset  source  double  minimumPercent  
[BugLab_Argument_Swapping]^return DatasetUtilities.createConsolidatedPieDataset ( source, minimumPercent, key, 2 ) ;^263^264^265^^^259^266^return DatasetUtilities.createConsolidatedPieDataset ( source, key, minimumPercent, 2 ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent [VARIABLES] Comparable  key  boolean  PieDataset  source  double  minimumPercent  
[BugLab_Wrong_Literal]^return DatasetUtilities.createConsolidatedPieDataset ( source, key, minimumPercent, 1 ) ;^263^264^265^^^259^266^return DatasetUtilities.createConsolidatedPieDataset ( source, key, minimumPercent, 2 ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent [VARIABLES] Comparable  key  boolean  PieDataset  source  double  minimumPercent  
[BugLab_Wrong_Operator]^if  ( dataValue == null )  {^298^^^^^283^313^if  ( dataValue != null )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^if  ( total / total < minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^if  ( value / otherValue < minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^if  ( value / total < value )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^if  ( minimumPercent / total < value )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^if  ( value / minimumPercent < total )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( value / total == minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( value - total < minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^otherKeys.add ( key ) ;^301^^^^^286^316^otherKeys.add ( currentKey ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^if  ( value / value < minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^if  ( total / value < minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( value / total <= minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( value + total < minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^Number dataValue = source.getValue ( key ) ;^297^^^^^282^312^Number dataValue = source.getValue ( currentKey ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^Number dataValue = currentKey.getValue ( source ) ;^297^^^^^282^312^Number dataValue = source.getValue ( currentKey ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^if  ( value / total < total )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( value * total < minimumPercent )  {^300^^^^^285^315^if  ( value / total < minimumPercent )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( dataValue == null )  {^312^^^^^297^327^if  ( dataValue != null )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^if  ( otherKeys.contains ( key ) && otherKeys.size (  )  >= minItems )  {^313^314^^^^298^328^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  >= minItems )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( otherKeys.contains ( currentKey ) || otherKeys.size (  )  >= minItems )  {^313^314^^^^298^328^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  >= minItems )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  == minItems )  {^313^314^^^^298^328^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  >= minItems )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^result.setValue ( key, dataValue ) ;^320^^^^^313^321^result.setValue ( currentKey, dataValue ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^if  ( currentKey.contains ( otherKeys ) && otherKeys.size (  )  >= minItems )  {^313^314^^^^298^328^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  >= minItems )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^result.setValue ( key, dataValue ) ;^320^^^^^305^335^result.setValue ( currentKey, dataValue ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^result.setValue ( dataValue, currentKey ) ;^320^^^^^305^335^result.setValue ( currentKey, dataValue ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  > minItems )  {^313^314^^^^298^328^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  >= minItems )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^result.setValue ( dataValue, currentKey ) ;^320^^^^^313^321^result.setValue ( currentKey, dataValue ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^Number dataValue = source.getValue ( key ) ;^311^^^^^296^326^Number dataValue = source.getValue ( currentKey ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^Number dataValue = currentKey.getValue ( source ) ;^311^^^^^296^326^Number dataValue = source.getValue ( currentKey ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^if  ( minItems.contains ( currentKey ) && otherKeys.size (  )  >= otherKeys )  {^313^314^^^^298^328^if  ( otherKeys.contains ( currentKey ) && otherKeys.size (  )  >= minItems )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Wrong_Operator]^if  ( otherKeys.size (  )  > minItems )  {^325^^^^^310^340^if  ( otherKeys.size (  )  >= minItems )  {^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^result.setValue ( currentKey, otherValue ) ;^326^^^^^311^341^result.setValue ( key, otherValue ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^result.setValue ( key, value ) ;^326^^^^^311^341^result.setValue ( key, otherValue ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Argument_Swapping]^result.setValue ( otherValue, key ) ;^326^^^^^311^341^result.setValue ( key, otherValue ) ;^[CLASS] DatasetUtilities  [METHOD] createConsolidatedPieDataset [RETURN_TYPE] PieDataset   PieDataset source Comparable key double minimumPercent int minItems [VARIABLES] Comparable  currentKey  key  DefaultPieDataset  result  boolean  Number  dataValue  PieDataset  source  double  minimumPercent  otherValue  total  value  ArrayList  otherKeys  Iterator  iterator  List  keys  int  minItems  
[BugLab_Variable_Misuse]^for  ( int c = 0; r < data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^for  ( int r = 0; r < c; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  ( int r = 0; r <= data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  !=  ( int r = 0; r < data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for   instanceof   ( int r = 0; r < data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  ^  ( int r = 0; r < data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  >  ( int r = 0; r < data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^for  ( int r = 1; r < data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^for  ( int r = 0; c < data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^for  ( int c = 0; c < data[r].length[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  ( int c = 0; c <= data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  &&  ( int c = 0; c < data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  <<  ( int c = 0; c < data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( r[r][c] ) , dataowKey, columnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , cowKey, rolumnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String columnKey = rowKeyPrefix +  ( c + 1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String rolumnKey = columnKeyPrefix +  ( c + 1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^String columnKeyPrefixolumnKey = c +  ( c + 1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  <  ( c + 1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  ==  1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^String columnKey = columnKeyPrefix +  ( c  ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , rowKey, rolumnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , rowKeyPrefix, columnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , rowKey, rowKeyPrefix ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( rowKey[r][c] ) , data, columnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , c, rowKeyolumnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , columnKey, rowKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String rowKey = columnKeyPrefix +  ( r + 1 ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String cowKey = rowKeyPrefix +  ( r + 1 ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^String rowKeyPrefixowKey = r +  ( r + 1 ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +  ||  ( r + 1 ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +  ( r  &  1 ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^String rowKey = rowKeyPrefix +  ( r + c ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^for  ( int c = r; c < data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  <<  ( c + 1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  <<  1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^String columnKey = columnKeyPrefix +  ( c + c ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( columnKey[r][c] ) , rowKey, data ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , rowKeyowKey, columnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^for  ( int data[r].length = 0; c < data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  ( int c = 0; c == data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  <  ( int c = 0; c < data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  ==  ( int c = 0; c < data[r].length; c++ )  {^352^^^^^345^359^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( c[r][c] ) , rowKey, dataolumnKey ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ==  ( c + 1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  <  1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^for  ( int r = c; r < data.length; r++ )  {^350^^^^^345^359^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +  |  ( r + 1 ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +  ( r   instanceof   1 ) ;^351^^^^^345^359^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  ^  1 ) ;^353^^^^^345^359^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , columnKeyowKey, r ) ;^354^^^^^345^359^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix double[][] data [VARIABLES] boolean  double[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^for  ( int c = 0; r < data.length; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^for  ( int r = 0; r < c; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  ( int r = 0; r <= data.length; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  |  ( int r = 0; r < data.length; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  <  ( int r = 0; r < data.length; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  &  ( int r = 0; r < data.length; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^for  ( int r = c; r < data.length; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^for  ( int r = 0; c < data[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^for  ( int data[r].length = 0; c < data[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^for  ( int c = 0; c < data[r].length[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  ( int c = 0; c <= data[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  >>  ( int c = 0; c < data[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^for  ( int c = c; c < data[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String rolumnKey = columnKeyPrefix +  ( c + 1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^String columnKeyPrefixolumnKey = c +  ( c + 1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  <  ( c + 1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  !=  1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^String columnKey = columnKeyPrefix +  ( c + c ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^result.addValue ( data[r][c], rowKeyPrefix, columnKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^result.addValue ( data[r][c], rowKey, rowKeyPrefix ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( rowKey[r][c], data, columnKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( data[r][c], columnKeyowKey, r ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( data[r][c], cowKey, rolumnKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( data[r][c], columnKey, rowKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String rowKey = columnKeyPrefix +  ( r + 1 ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String cowKey = rowKeyPrefix +  ( r + 1 ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^String rowKeyPrefixowKey = r +  ( r + 1 ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +  <<  ( r + 1 ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +  ( r  ==  1 ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^String rowKey = rowKeyPrefix +  ( r + c ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^for  ( int c = r; c < data[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^String columnKey = rowKeyPrefix +  ( c + 1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  <=  ( c + 1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  ||  1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^result.addValue ( data[r][c], cowKey, columnKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( data[r][c], r, columnKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^for  &&  ( int c = 0; c < data[r].length; c++ )  {^381^^^^^374^388^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  &&  ( c + 1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  >>  1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( columnKey[r][c], rowKey, data ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^for  ( int r = r; r < data.length; r++ )  {^379^^^^^374^388^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +   instanceof   ( r + 1 ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String rowKey = rowKeyPrefix +  ( r  >  1 ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^String rowKey = rowKeyPrefix +  ( r  ) ;^380^^^^^374^388^String rowKey = rowKeyPrefix +  ( r + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  <<  ( c + 1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Operator]^String columnKey = columnKeyPrefix +  ( c  |  1 ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Wrong_Literal]^String columnKey = columnKeyPrefix +  ( c  ) ;^382^^^^^374^388^String columnKey = columnKeyPrefix +  ( c + 1 ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^result.addValue ( data[r][c], rowKey, rolumnKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Argument_Swapping]^result.addValue ( c[r][c], rowKey, dataolumnKey ) ;^383^^^^^374^388^result.addValue ( data[r][c], rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   String rowKeyPrefix String columnKeyPrefix Number[][] data [VARIABLES] boolean  Number[][]  data  String  columnKey  columnKeyPrefix  rowKey  rowKeyPrefix  DefaultCategoryDataset  result  int  c  r  
[BugLab_Variable_Misuse]^if  ( columnKeys == null )  {^408^^^^^393^423^if  ( rowKeys == null )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^if  ( rowKeys != null )  {^408^^^^^393^423^if  ( rowKeys == null )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( rowKeys == null )  {^411^^^^^396^426^if  ( columnKeys == null )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^if  ( columnKeys != null )  {^411^^^^^396^426^if  ( columnKeys == null )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( ArrayUtilities.hasDuplicateItems ( columnKeys )  )  {^414^^^^^399^429^if  ( ArrayUtilities.hasDuplicateItems ( rowKeys )  )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( ArrayUtilities.hasDuplicateItems ( rowKeys )  )  {^417^^^^^402^432^if  ( ArrayUtilities.hasDuplicateItems ( columnKeys )  )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( columnKeys.length != data.length )  {^422^^^^^407^437^if  ( rowKeys.length != data.length )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( r != data.length )  {^422^^^^^407^437^if  ( rowKeys.length != data.length )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^if  ( rowKeys.length.length != data.length )  {^422^^^^^407^437^if  ( rowKeys.length != data.length )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^if  ( data != rowKeys.length.length )  {^422^^^^^407^437^if  ( rowKeys.length != data.length )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^if  ( data.length != rowKeys.length )  {^422^^^^^407^437^if  ( rowKeys.length != data.length )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^if  ( rowKeys.length != data )  {^422^^^^^407^437^if  ( rowKeys.length != data.length )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^if  ( rowKeys.length < data.length )  {^422^^^^^407^437^if  ( rowKeys.length != data.length )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in "  <=  "the data array." ) ;^423^424^425^426^^408^438^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in " + "the data array." ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in "  &  "the data array." ) ;^423^424^425^426^^408^438^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in " + "the data array." ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in "  ||  "the data array." ) ;^423^424^425^426^^408^438^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in " + "the data array." ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in "  &&  "the data array." ) ;^423^424^425^426^^408^438^throw new IllegalArgumentException ( "The number of row keys does not match the number of rows in " + "the data array." ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Literal]^int columnCount = ;^428^^^^^413^443^int columnCount = 0;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^for  ( int columnCount = 0; r < data.length; r++ )  {^429^^^^^414^444^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^for  ( int data = 0; r < r.length; r++ )  {^429^^^^^414^444^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^for  ( int data.length = 0; r < r; r++ )  {^429^^^^^414^444^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^for  ( int r = 0; r <= data.length; r++ )  {^429^^^^^414^444^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^columnCount = Math.max ( r, data[r].length ) ;^430^^^^^415^445^columnCount = Math.max ( columnCount, data[r].length ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^columnCount = Math.max ( columnCount, data[r].length[r].length ) ;^430^^^^^415^445^columnCount = Math.max ( columnCount, data[r].length ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^columnCount = Math.max ( data, columnCount[r].length ) ;^430^^^^^415^445^columnCount = Math.max ( columnCount, data[r].length ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^columnCount = Math.max ( data[r].length, data[r].length ) ;^430^^^^^415^445^columnCount = Math.max ( columnCount, data[r].length ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Literal]^for  ( int r = r; r < data.length; r++ )  {^429^^^^^414^444^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( rowKeys.length != columnCount )  {^432^^^^^417^447^if  ( columnKeys.length != columnCount )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( columnKeys.length != r )  {^432^^^^^417^447^if  ( columnKeys.length != columnCount )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^if  ( r != columnCount )  {^432^^^^^417^447^if  ( columnKeys.length != columnCount )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^if  ( columnKeys.length.length != columnCount )  {^432^^^^^417^447^if  ( columnKeys.length != columnCount )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^if  ( columnCount.length != columnKeys )  {^432^^^^^417^447^if  ( columnKeys.length != columnCount )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^if  ( columnCount != columnKeys.length )  {^432^^^^^417^447^if  ( columnKeys.length != columnCount )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^if  ( columnKeys.length == columnCount )  {^432^^^^^417^447^if  ( columnKeys.length != columnCount )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of column keys does not match the number of "  ^  "columns in the data array." ) ;^433^434^435^436^^418^448^throw new IllegalArgumentException ( "The number of column keys does not match the number of " + "columns in the data array." ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of column keys does not match the number of "  <<  "columns in the data array." ) ;^433^434^435^436^^418^448^throw new IllegalArgumentException ( "The number of column keys does not match the number of " + "columns in the data array." ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "The number of column keys does not match the number of "   instanceof   "columns in the data array." ) ;^433^434^435^436^^418^448^throw new IllegalArgumentException ( "The number of column keys does not match the number of " + "columns in the data array." ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^for  ( int columnCount = 0; r < data.length; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^for  ( int r = 0; r < columnCount; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^for  ( int data.length = 0; r < r; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^for  ( int r = 0; r < data; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^for  ( int r = 0; r <= data.length; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^for  ( int r = 0; r > data.length; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Literal]^for  ( int r = -1; r < data.length; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^for  ( int r = 0; c < data[r].length; c++ )  {^443^^^^^428^458^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^for  ( int data[r].length = 0; c < data[r].length; c++ )  {^443^^^^^428^458^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^for  ( int c = 0; c == data[r].length; c++ )  {^443^^^^^428^458^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , columnCountowKey, columnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , rowKey, rolumnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( r[r][c] ) , dataowKey, columnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , cowKey, rolumnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^Comparable columnKey = rowKeys[c];^444^^^^^429^459^Comparable columnKey = columnKeys[c];^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^Comparable rolumnKey = columnKeys[c];^444^^^^^429^459^Comparable columnKey = columnKeys[c];^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^Comparable columnKeysolumnKey = c[c];^444^^^^^429^459^Comparable columnKey = columnKeys[c];^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , columnKey, columnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKeyolumnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , columnKeyowKey, r ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , rowKey, columnCountolumnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( c[r][c] ) , rowKey, dataolumnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^Comparable columnCountowKey = rowKeys[r];^442^^^^^427^457^Comparable rowKey = rowKeys[r];^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^Comparable rowKeysowKey = r[r];^442^^^^^427^457^Comparable rowKey = rowKeys[r];^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Literal]^for  ( int c = r; c < data[r].length; c++ )  {^443^^^^^428^458^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^result.addValue ( new Double ( data[r][c] ) , rowKey, rowKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , columnKey, rowKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , rowKey, c ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Variable_Misuse]^focolumnCount  ( int c = 0; c < data[r].length; c++ )  {^443^^^^^428^458^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^for  ( int c = 0; c <= data[r].length; c++ )  {^443^^^^^428^458^for  ( int c = 0; c < data[r].length; c++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( columnKey[r][c] ) , rowKey, data ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Argument_Swapping]^result.addValue ( new Double ( data[r][c] ) , c, rowKeyolumnKey ) ;^445^^^^^430^460^result.addValue ( new Double ( data[r][c] ) , rowKey, columnKey ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Literal]^for  ( int r = 1; r < data.length; r++ )  {^441^^^^^426^456^for  ( int r = 0; r < data.length; r++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable[] rowKeys Comparable[] columnKeys double[][] data [VARIABLES] Comparable  columnKey  rowKey  boolean  double[][]  data  DefaultCategoryDataset  result  int  c  columnCount  r  Comparable[]  columnKeys  rowKeys  
[BugLab_Wrong_Operator]^if  ( rowKey != null )  {^464^^^^^461^476^if  ( rowKey == null )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable rowKey KeyedValues rowData [VARIABLES] Comparable  rowKey  KeyedValues  rowData  boolean  DefaultCategoryDataset  result  int  i  
[BugLab_Wrong_Operator]^if  ( rowData != null )  {^467^^^^^461^476^if  ( rowData == null )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable rowKey KeyedValues rowData [VARIABLES] Comparable  rowKey  KeyedValues  rowData  boolean  DefaultCategoryDataset  result  int  i  
[BugLab_Argument_Swapping]^for  ( rowDatant i = 0; i < i.getItemCount (  ) ; i++ )  {^471^^^^^461^476^for  ( int i = 0; i < rowData.getItemCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable rowKey KeyedValues rowData [VARIABLES] Comparable  rowKey  KeyedValues  rowData  boolean  DefaultCategoryDataset  result  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= rowData.getItemCount (  ) ; i++ )  {^471^^^^^461^476^for  ( int i = 0; i < rowData.getItemCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable rowKey KeyedValues rowData [VARIABLES] Comparable  rowKey  KeyedValues  rowData  boolean  DefaultCategoryDataset  result  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < rowData.getItemCount (  ) ; i++ )  {^471^^^^^461^476^for  ( int i = 0; i < rowData.getItemCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable rowKey KeyedValues rowData [VARIABLES] Comparable  rowKey  KeyedValues  rowData  boolean  DefaultCategoryDataset  result  int  i  
[BugLab_Argument_Swapping]^result.addValue ( i.getValue ( rowData ) , rowKey, rowData.getKey ( i )  ) ;^472^^^^^461^476^result.addValue ( rowData.getValue ( i ) , rowKey, rowData.getKey ( i )  ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable rowKey KeyedValues rowData [VARIABLES] Comparable  rowKey  KeyedValues  rowData  boolean  DefaultCategoryDataset  result  int  i  
[BugLab_Argument_Swapping]^result.addValue ( rowKey.getValue ( i ) , rowData, rowData.getKey ( i )  ) ;^472^^^^^461^476^result.addValue ( rowData.getValue ( i ) , rowKey, rowData.getKey ( i )  ) ;^[CLASS] DatasetUtilities  [METHOD] createCategoryDataset [RETURN_TYPE] CategoryDataset   Comparable rowKey KeyedValues rowData [VARIABLES] Comparable  rowKey  KeyedValues  rowData  boolean  DefaultCategoryDataset  result  int  i  
[BugLab_Wrong_Operator]^if  ( f != null )  {^497^^^^^495^519^if  ( f == null )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^if  ( seriesKey != null )  {^500^^^^^495^519^if  ( seriesKey == null )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^if  ( x >= end )  {^503^^^^^495^519^if  ( start >= end )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^if  ( start >= x )  {^503^^^^^495^519^if  ( start >= end )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^if  ( end >= start )  {^503^^^^^495^519^if  ( start >= end )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^if  ( start > end )  {^503^^^^^495^519^if  ( start >= end )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^if  ( i < 2 )  {^506^^^^^495^519^if  ( samples < 2 )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^if  ( samples <= 2 )  {^506^^^^^495^519^if  ( samples < 2 )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Literal]^if  ( samples < samples )  {^506^^^^^495^519^if  ( samples < 2 )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^double step =  ( x - start )  / samples;^511^^^^^495^519^double step =  ( end - start )  / samples;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^double step =  ( end - x )  / samples;^511^^^^^495^519^double step =  ( end - start )  / samples;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^double step =  ( end - start )  / i;^511^^^^^495^519^double step =  ( end - start )  / samples;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^double step =  ( start - end )  / samples;^511^^^^^495^519^double step =  ( end - start )  / samples;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^double step =  ( end - samples )  / start;^511^^^^^495^519^double step =  ( end - start )  / samples;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^double step =  ( end - start )  * samples;^511^^^^^495^519^double step =  ( end - start )  / samples;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^double step =  ( end  !=  start )  / samples;^511^^^^^495^519^double step =  ( end - start )  / samples;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^for  ( samplesnt i = 0; i <= samples; i++ )  {^512^^^^^495^519^for  ( int i = 0; i <= samples; i++ )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^for  ( samplesnt i = 0; i <= i; i++ )  {^512^^^^^495^519^for  ( int i = 0; i <= samples; i++ )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < samples; i++ )  {^512^^^^^495^519^for  ( int i = 0; i <= samples; i++ )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i <= samples; i++ )  {^512^^^^^495^519^for  ( int i = 0; i <= samples; i++ )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Literal]^for  ( int i = -1; i <= samples; i++ )  {^512^^^^^495^519^for  ( int i = 0; i <= samples; i++ )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^double x = step +  ( step * i ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^double x = start +  ( start * i ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^double x = start +  ( step * samples ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^double x = step +  ( start * i ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^double x = i +  ( step * start ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^double x = start +  ^  ( step * i ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^double x = start +  ( step / i ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Variable_Misuse]^series.add ( step, f.getValue ( x )  ) ;^514^^^^^495^519^series.add ( x, f.getValue ( x )  ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^series.add ( f, x.getValue ( x )  ) ;^514^^^^^495^519^series.add ( x, f.getValue ( x )  ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Literal]^for  ( int i = 1; i <= samples; i++ )  {^512^^^^^495^519^for  ( int i = 0; i <= samples; i++ )  {^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Argument_Swapping]^double x = start +  ( i * step ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^double x = start +  ||  ( step * i ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^double x = start +  ( step - i ) ;^513^^^^^495^519^double x = start +  ( step * i ) ;^[CLASS] DatasetUtilities  [METHOD] sampleFunction2D [RETURN_TYPE] XYDataset   Function2D f double start double end int samples Comparable seriesKey [VARIABLES] XYSeries  series  Comparable  seriesKey  boolean  double  end  start  step  x  Function2D  f  XYSeriesCollection  collection  int  i  samples  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^531^^^^^529^552^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Literal]^return false;^532^^^^^529^552^return true;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Variable_Misuse]^if  ( item == 0 )  {^536^^^^^529^552^if  ( itemCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Operator]^if  ( itemCount >= 0 )  {^536^^^^^529^552^if  ( itemCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Literal]^if  ( itemCount == itemCount )  {^536^^^^^529^552^if  ( itemCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Literal]^return false;^537^^^^^529^552^return true;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Operator]^if  ( y == null )  {^542^^^^^529^552^if  ( y != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Operator]^if  ( yy >= 0.0 )  {^544^^^^^529^552^if  ( yy > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Literal]^return true;^545^^^^^529^552^return false;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Variable_Misuse]^for  ( int itemCount = 0; item < itemCount; item++ )  {^540^^^^^529^552^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^540^^^^^529^552^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Literal]^for  ( int item = ; item < itemCount; item++ )  {^540^^^^^529^552^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Variable_Misuse]^Number y = dataset.getValue ( itemCount ) ;^541^^^^^529^552^Number y = dataset.getValue ( item ) ;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Argument_Swapping]^Number y = item.getValue ( dataset ) ;^541^^^^^529^552^Number y = dataset.getValue ( item ) ;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Literal]^return false;^550^^^^^529^552^return true;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   PieDataset dataset [VARIABLES] boolean  Number  y  PieDataset  dataset  double  yy  int  item  itemCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^564^^^^^562^585^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^return false;^565^^^^^562^585^return true;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^if  ( r == 0 || columnCount == 0 )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^if  ( rowCount == 0 || r == 0 )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Argument_Swapping]^if  ( columnCount == 0 || rowCount == 0 )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^if  ( rowCount == 0 && columnCount == 0 )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^if  ( rowCount < 0 || columnCount == 0 )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^if  ( rowCount == 0 || columnCount >= 0 )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^if  ( rowCount == columnCount || columnCount == columnCount )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^if  ( rowCount == 1 || columnCount == 1 )  {^570^^^^^562^585^if  ( rowCount == 0 || columnCount == 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^return false;^571^^^^^562^585^return true;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^if  ( dataset.getValue ( rowCount, c )  != null )  {^576^^^^^562^585^if  ( dataset.getValue ( r, c )  != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^if  ( dataset.getValue ( r, rowCount )  != null )  {^576^^^^^562^585^if  ( dataset.getValue ( r, c )  != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Argument_Swapping]^if  ( c.getValue ( r, dataset )  != null )  {^576^^^^^562^585^if  ( dataset.getValue ( r, c )  != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Argument_Swapping]^if  ( dataset.getValue ( c, r )  != null )  {^576^^^^^562^585^if  ( dataset.getValue ( r, c )  != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^if  ( dataset.getValue ( r, c )  == null )  {^576^^^^^562^585^if  ( dataset.getValue ( r, c )  != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^return true;^577^^^^^562^585^return false;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; r < rowCount; r++ )  {^574^^^^^562^585^for  ( int r = 0; r < rowCount; r++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^for  ( int r = 0; r < columnCount; r++ )  {^574^^^^^562^585^for  ( int r = 0; r < rowCount; r++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^for  ( int r = 0; r <= rowCount; r++ )  {^574^^^^^562^585^for  ( int r = 0; r < rowCount; r++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^for  ( int r = 0; r == rowCount; r++ )  {^574^^^^^562^585^for  ( int r = 0; r < rowCount; r++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^for  ( int r = rowCount; r < rowCount; r++ )  {^574^^^^^562^585^for  ( int r = 0; r < rowCount; r++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Argument_Swapping]^if  ( r.getValue ( dataset, c )  != null )  {^576^^^^^562^585^if  ( dataset.getValue ( r, c )  != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; c < columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^for  ( int c = 0; c < rowCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Variable_Misuse]^forowCount  ( int c = 0; c < columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; c < c; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^for  ( int c = 0; c > columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^for  ( int c = r; c < columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^for  ( int c = c; c < columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Operator]^for  ( int c = 0; c <= columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^for  ( int c = columnCount; c < columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^for  ( int r = r; r < rowCount; r++ )  {^574^^^^^562^585^for  ( int r = 0; r < rowCount; r++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^for  ( int c = rowCount; c < columnCount; c++ )  {^575^^^^^562^585^for  ( int c = 0; c < columnCount; c++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^return false;^583^^^^^562^585^return true;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  int  c  columnCount  r  rowCount  
[BugLab_Wrong_Literal]^boolean result = false;^597^^^^^595^610^boolean result = true;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Operator]^if  ( dataset == null )  {^599^^^^^595^610^if  ( dataset != null )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Argument_Swapping]^if  ( s.getItemCount ( dataset )  > 0 )  {^601^^^^^595^610^if  ( dataset.getItemCount ( s )  > 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Operator]^if  ( dataset.getItemCount ( s )  >= 0 )  {^601^^^^^595^610^if  ( dataset.getItemCount ( s )  > 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Literal]^result = true;^602^^^^^595^610^result = false;^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Argument_Swapping]^for  ( int dataset = 0; s < s.getSeriesCount (  ) ; s++ )  {^600^^^^^595^610^for  ( int s = 0; s < dataset.getSeriesCount (  ) ; s++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Operator]^for  ( int s = 0; s == dataset.getSeriesCount (  ) ; s++ )  {^600^^^^^595^610^for  ( int s = 0; s < dataset.getSeriesCount (  ) ; s++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Literal]^for  ( int s = s; s < dataset.getSeriesCount (  ) ; s++ )  {^600^^^^^595^610^for  ( int s = 0; s < dataset.getSeriesCount (  ) ; s++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Literal]^if  ( dataset.getItemCount ( s )  > s )  {^601^^^^^595^610^if  ( dataset.getItemCount ( s )  > 0 )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Literal]^for  ( int s = 1; s < dataset.getSeriesCount (  ) ; s++ )  {^600^^^^^595^610^for  ( int s = 0; s < dataset.getSeriesCount (  ) ; s++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Operator]^for  ( int s = 0; s <= dataset.getSeriesCount (  ) ; s++ )  {^600^^^^^595^610^for  ( int s = 0; s < dataset.getSeriesCount (  ) ; s++ )  {^[CLASS] DatasetUtilities  [METHOD] isEmptyOrNull [RETURN_TYPE] boolean   XYDataset dataset [VARIABLES] boolean  result  XYDataset  dataset  int  s  
[BugLab_Wrong_Literal]^return findDomainBounds ( dataset, false ) ;^620^^^^^619^621^return findDomainBounds ( dataset, true ) ;^[CLASS] DatasetUtilities  [METHOD] findDomainBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] boolean  XYDataset  dataset  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^636^^^^^633^651^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  XYDataset  dataset  DomainInfo  info  Range  result  
[BugLab_Wrong_Operator]^if  ( dataset  >=  DomainInfo )  {^642^^^^^633^651^if  ( dataset instanceof DomainInfo )  {^[CLASS] DatasetUtilities  [METHOD] findDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  XYDataset  dataset  DomainInfo  info  Range  result  
[BugLab_Argument_Swapping]^result = iterateDomainBounds ( includeInterval, dataset ) ;^647^^^^^633^651^result = iterateDomainBounds ( dataset, includeInterval ) ;^[CLASS] DatasetUtilities  [METHOD] findDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  XYDataset  dataset  DomainInfo  info  Range  result  
[BugLab_Argument_Swapping]^result = includeInterval.getDomainBounds ( info ) ;^644^^^^^633^651^result = info.getDomainBounds ( includeInterval ) ;^[CLASS] DatasetUtilities  [METHOD] findDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  XYDataset  dataset  DomainInfo  info  Range  result  
[BugLab_Wrong_Literal]^return iterateDomainBounds ( dataset, false ) ;^662^^^^^661^663^return iterateDomainBounds ( dataset, true ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] boolean  XYDataset  dataset  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^678^^^^^663^693^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( includeInterval || dataset instanceof IntervalXYDataset )  {^686^^^^^671^701^if  ( includeInterval && dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( includeInterval && dataset  |  IntervalXYDataset )  {^686^^^^^671^701^if  ( includeInterval && dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^699^^^^^686^708^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^699^^^^^686^708^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^699^^^^^686^708^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^699^^^^^686^708^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = itemCount; series < seriesCount; series++ )  {^699^^^^^686^708^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^699^^^^^686^708^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^701^^^^^686^708^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^701^^^^^686^708^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^701^^^^^686^708^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^701^^^^^686^708^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^701^^^^^686^708^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getXValue ( seriesCount, item ) ;^702^^^^^686^708^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getXValue ( series, seriesCount ) ;^702^^^^^686^708^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = series.getXValue ( dataset, item ) ;^702^^^^^686^708^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = dataset.getXValue ( item, series ) ;^702^^^^^686^708^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = uvalue;^703^^^^^686^708^uvalue = lvalue;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, uvalue ) ;^704^^^^^686^708^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( lvalue, minimum ) ;^704^^^^^686^708^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( minimum, uvalue ) ;^705^^^^^686^708^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, minimum ) ;^705^^^^^686^708^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( uvalue, maximum ) ;^705^^^^^686^708^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( uvalue, lvalue ) ;^704^^^^^686^708^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = item.getXValue ( series, dataset ) ;^702^^^^^686^708^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^700^^^^^686^708^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^700^^^^^686^708^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = itemCount; item < itemCount; item++ )  {^701^^^^^686^708^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^701^^^^^686^708^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^699^^^^^686^708^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = item; item < itemCount; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = intervalXYData.getStartXValue ( seriesCount, item ) ;^691^^^^^676^706^lvalue = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = intervalXYData.getStartXValue ( series, seriesCount ) ;^691^^^^^676^706^lvalue = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = series.getStartXValue ( intervalXYData, item ) ;^691^^^^^676^706^lvalue = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = item.getStartXValue ( series, intervalXYData ) ;^691^^^^^676^706^lvalue = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = intervalXYData.getEndXValue ( seriesCount, item ) ;^692^^^^^677^707^uvalue = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = intervalXYData.getEndXValue ( series, seriesCount ) ;^692^^^^^677^707^uvalue = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = item.getEndXValue ( series, intervalXYData ) ;^692^^^^^677^707^uvalue = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = intervalXYData.getEndXValue ( item, series ) ;^692^^^^^677^707^uvalue = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( uvalue, lvalue ) ;^693^^^^^678^708^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, uvalue ) ;^693^^^^^678^708^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( lvalue, minimum ) ;^693^^^^^678^708^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( minimum, uvalue ) ;^694^^^^^679^709^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, minimum ) ;^694^^^^^679^709^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( uvalue, maximum ) ;^694^^^^^679^709^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = intervalXYData.getStartXValue ( item, series ) ;^691^^^^^676^706^lvalue = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = series.getEndXValue ( intervalXYData, item ) ;^692^^^^^677^707^uvalue = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^689^^^^^674^704^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^689^^^^^674^704^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > itemCount; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = itemCount; item < itemCount; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = series; series < seriesCount; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = itemCount; series < seriesCount; series++ )  {^688^^^^^673^703^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^690^^^^^675^705^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^699^^^^^684^714^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^699^^^^^684^714^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^699^^^^^684^714^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^699^^^^^684^714^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = itemCount; series < seriesCount; series++ )  {^699^^^^^684^714^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^699^^^^^684^714^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^701^^^^^686^716^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^701^^^^^686^716^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getXValue ( seriesCount, item ) ;^702^^^^^687^717^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getXValue ( series, seriesCount ) ;^702^^^^^687^717^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = series.getXValue ( dataset, item ) ;^702^^^^^687^717^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = dataset.getXValue ( item, series ) ;^702^^^^^687^717^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( uvalue, lvalue ) ;^704^^^^^689^719^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( lvalue, minimum ) ;^704^^^^^689^719^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( minimum, uvalue ) ;^705^^^^^690^720^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, minimum ) ;^705^^^^^690^720^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( uvalue, maximum ) ;^705^^^^^690^720^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, uvalue ) ;^704^^^^^689^719^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = uvalue;^703^^^^^688^718^uvalue = lvalue;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^700^^^^^685^715^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^700^^^^^685^715^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = item; item < itemCount; item++ )  {^701^^^^^686^716^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = item.getXValue ( series, dataset ) ;^702^^^^^687^717^lvalue = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^701^^^^^686^716^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^701^^^^^686^716^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^701^^^^^686^716^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( minimum > uvalue )  {^709^^^^^694^724^if  ( minimum > maximum )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^if  ( maximum > minimum )  {^709^^^^^694^724^if  ( minimum > maximum )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( minimum >= maximum )  {^709^^^^^694^724^if  ( minimum > maximum )  {^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( uvalue, maximum ) ;^713^^^^^709^714^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( minimum, uvalue ) ;^713^^^^^709^714^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^713^^^^^709^714^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( uvalue, maximum ) ;^713^^^^^698^728^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( minimum, uvalue ) ;^713^^^^^698^728^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^713^^^^^698^728^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateDomainBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^return findRangeBounds ( dataset, false ) ;^725^^^^^724^726^return findRangeBounds ( dataset, true ) ;^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  CategoryDataset  dataset  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^739^^^^^737^751^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  CategoryDataset  dataset  RangeInfo  info  Range  result  
[BugLab_Wrong_Operator]^if  ( dataset  ==  RangeInfo )  {^743^^^^^737^751^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  CategoryDataset  dataset  RangeInfo  info  Range  result  
[BugLab_Argument_Swapping]^result = iterateCategoryRangeBounds ( includeInterval, dataset ) ;^748^^^^^737^751^result = iterateCategoryRangeBounds ( dataset, includeInterval ) ;^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  CategoryDataset  dataset  RangeInfo  info  Range  result  
[BugLab_Argument_Swapping]^result = includeInterval.getRangeBounds ( info ) ;^745^^^^^737^751^result = info.getRangeBounds ( includeInterval ) ;^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  CategoryDataset  dataset  RangeInfo  info  Range  result  
[BugLab_Wrong_Literal]^return findRangeBounds ( dataset, false ) ;^762^^^^^761^763^return findRangeBounds ( dataset, true ) ;^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] boolean  XYDataset  dataset  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^778^^^^^776^790^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  XYDataset  dataset  RangeInfo  info  Range  result  
[BugLab_Wrong_Operator]^if  ( dataset  >>  RangeInfo )  {^782^^^^^776^790^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  XYDataset  dataset  RangeInfo  info  Range  result  
[BugLab_Argument_Swapping]^result = includeInterval.getRangeBounds ( info ) ;^784^^^^^776^790^result = info.getRangeBounds ( includeInterval ) ;^[CLASS] DatasetUtilities  [METHOD] findRangeBounds [RETURN_TYPE] Range   XYDataset dataset boolean includeInterval [VARIABLES] boolean  includeInterval  XYDataset  dataset  RangeInfo  info  Range  result  
[BugLab_Argument_Swapping]^boolean interval = dataset && includeInterval instanceof IntervalCategoryDataset;^806^807^^^^791^821^boolean interval = includeInterval && dataset instanceof IntervalCategoryDataset;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^boolean interval = includeInterval || dataset instanceof IntervalCategoryDataset;^806^807^^^^791^821^boolean interval = includeInterval && dataset instanceof IntervalCategoryDataset;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^boolean interval = includeInterval && dataset  ==  IntervalCategoryDataset;^806^807^^^^791^821^boolean interval = includeInterval && dataset instanceof IntervalCategoryDataset;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^if  ( includeInterval )  {^814^^^^^799^829^if  ( interval )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getValue ( rowCount, column ) ;^821^^^^^814^823^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getValue ( row, rowCount ) ;^821^^^^^814^823^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = column.getValue ( row, dataset ) ;^821^^^^^814^823^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = dataset.getValue ( column, row ) ;^821^^^^^814^823^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^uvalue = uvalue;^822^^^^^814^823^uvalue = lvalue;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = row.getValue ( dataset, column ) ;^821^^^^^814^823^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^lvalue = icd.getStartValue ( rowCount, column ) ;^817^^^^^802^832^lvalue = icd.getStartValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^lvalue = icd.getStartValue ( row, rowCount ) ;^817^^^^^802^832^lvalue = icd.getStartValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = row.getStartValue ( icd, column ) ;^817^^^^^802^832^lvalue = icd.getStartValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = icd.getStartValue ( column, row ) ;^817^^^^^802^832^lvalue = icd.getStartValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^uvalue = icd.getEndValue ( rowCount, column ) ;^818^^^^^803^833^uvalue = icd.getEndValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^uvalue = icd.getEndValue ( row, rowCount ) ;^818^^^^^803^833^uvalue = icd.getEndValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^uvalue = row.getEndValue ( icd, column ) ;^818^^^^^803^833^uvalue = icd.getEndValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^uvalue = icd.getEndValue ( column, row ) ;^818^^^^^803^833^uvalue = icd.getEndValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^uvalue = column.getEndValue ( row, icd ) ;^818^^^^^803^833^uvalue = icd.getEndValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^if  ( uvalue != null )  {^824^^^^^809^839^if  ( lvalue != null )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^if  ( lvalue == null )  {^824^^^^^809^839^if  ( lvalue != null )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( maximum, lvalue.doubleValue (  )  ) ;^825^^^^^810^840^minimum = Math.min ( minimum, lvalue.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, uvalue.doubleValue (  )  ) ;^825^^^^^810^840^minimum = Math.min ( minimum, lvalue.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( lvalue, minimum.doubleValue (  )  ) ;^825^^^^^810^840^minimum = Math.min ( minimum, lvalue.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^if  ( lvalue != null )  {^827^^^^^812^842^if  ( uvalue != null )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^if  ( uvalue == null )  {^827^^^^^812^842^if  ( uvalue != null )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( minimum, uvalue.doubleValue (  )  ) ;^828^^^^^813^843^maximum = Math.max ( maximum, uvalue.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, lvalue.doubleValue (  )  ) ;^828^^^^^813^843^maximum = Math.max ( maximum, uvalue.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( uvalue, maximum.doubleValue (  )  ) ;^828^^^^^813^843^maximum = Math.max ( maximum, uvalue.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; row < rowCount; row++ )  {^810^^^^^795^825^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < columnCount; row++ )  {^810^^^^^795^825^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^for  ( int rowCount = 0; row < row; row++ )  {^810^^^^^795^825^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > rowCount; row++ )  {^810^^^^^795^825^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^810^^^^^795^825^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = column.getStartValue ( row, icd ) ;^817^^^^^802^832^lvalue = icd.getStartValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^for  ( int column = 0; column < rowCount; column++ )  {^811^^^^^796^826^for  ( int column = 0; column < columnCount; column++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; column < column; column++ )  {^811^^^^^796^826^for  ( int column = 0; column < columnCount; column++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^for  ( int column = 0; column <= columnCount; column++ )  {^811^^^^^796^826^for  ( int column = 0; column < columnCount; column++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Literal]^for  ( int column = rowCount; column < columnCount; column++ )  {^811^^^^^796^826^for  ( int column = 0; column < columnCount; column++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getValue ( rowCount, column ) ;^821^^^^^806^836^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getValue ( row, rowCount ) ;^821^^^^^806^836^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = row.getValue ( dataset, column ) ;^821^^^^^806^836^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = dataset.getValue ( column, row ) ;^821^^^^^806^836^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^uvalue = uvalue;^822^^^^^807^837^uvalue = lvalue;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^lvalue = column.getValue ( row, dataset ) ;^821^^^^^806^836^lvalue = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Literal]^for  ( int column = 1; column < columnCount; column++ )  {^811^^^^^796^826^for  ( int column = 0; column < columnCount; column++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; column < columnCount; column++ )  {^811^^^^^796^826^for  ( int column = 0; column < columnCount; column++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Literal]^for  ( int row = ; row < rowCount; row++ )  {^810^^^^^795^825^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^if  ( maximum == Double.POSITIVE_INFINITY )  {^832^^^^^817^847^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Variable_Misuse]^if  ( minimum == Double.maximum )  {^832^^^^^817^847^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^if  ( minimum != Double.POSITIVE_INFINITY )  {^832^^^^^817^847^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^836^^^^^832^837^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^836^^^^^821^851^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateCategoryRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset boolean includeInterval [VARIABLES] IntervalCategoryDataset  icd  boolean  includeInterval  interval  Number  lvalue  uvalue  double  maximum  minimum  CategoryDataset  dataset  int  column  columnCount  row  rowCount  
[BugLab_Wrong_Operator]^if  ( dataset  >>  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ==  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  <=  OHLCDataset )  {^863^^^^^848^878^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getYValue ( seriesCount, item ) ;^869^^^^^863^871^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getYValue ( series, seriesCount ) ;^869^^^^^863^871^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = series.getYValue ( dataset, item ) ;^869^^^^^863^871^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = dataset.getYValue ( item, series ) ;^869^^^^^863^871^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = item.getYValue ( series, dataset ) ;^869^^^^^863^871^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = uvalue;^870^^^^^863^871^uvalue = lvalue;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = highLowData.getLowValue ( seriesCount, item ) ;^865^^^^^850^880^lvalue = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = highLowData.getLowValue ( series, seriesCount ) ;^865^^^^^850^880^lvalue = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = series.getLowValue ( highLowData, item ) ;^865^^^^^850^880^lvalue = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = highLowData.getLowValue ( item, series ) ;^865^^^^^850^880^lvalue = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = item.getLowValue ( series, highLowData ) ;^865^^^^^850^880^lvalue = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = highLowData.getHighValue ( seriesCount, item ) ;^866^^^^^851^881^uvalue = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = highLowData.getHighValue ( series, seriesCount ) ;^866^^^^^851^881^uvalue = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = item.getHighValue ( series, highLowData ) ;^866^^^^^851^881^uvalue = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = highLowData.getHighValue ( item, series ) ;^866^^^^^851^881^uvalue = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = series.getHighValue ( highLowData, item ) ;^866^^^^^851^881^uvalue = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getYValue ( seriesCount, item ) ;^869^^^^^854^884^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = dataset.getYValue ( series, seriesCount ) ;^869^^^^^854^884^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = series.getYValue ( dataset, item ) ;^869^^^^^854^884^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = dataset.getYValue ( item, series ) ;^869^^^^^854^884^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = item.getYValue ( series, dataset ) ;^869^^^^^854^884^lvalue = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = uvalue;^870^^^^^855^885^uvalue = lvalue;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = intervalXYData.getStartYValue ( seriesCount, item ) ;^860^^^^^845^875^lvalue = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^lvalue = intervalXYData.getStartYValue ( series, seriesCount ) ;^860^^^^^845^875^lvalue = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = series.getStartYValue ( intervalXYData, item ) ;^860^^^^^845^875^lvalue = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = intervalXYData.getStartYValue ( item, series ) ;^860^^^^^845^875^lvalue = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = intervalXYData.getEndYValue ( seriesCount, item ) ;^861^^^^^846^876^uvalue = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^uvalue = intervalXYData.getEndYValue ( series, seriesCount ) ;^861^^^^^846^876^uvalue = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = item.getEndYValue ( series, intervalXYData ) ;^861^^^^^846^876^uvalue = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = series.getEndYValue ( intervalXYData, item ) ;^861^^^^^846^876^uvalue = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^uvalue = intervalXYData.getEndYValue ( item, series ) ;^861^^^^^846^876^uvalue = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  ||  OHLCDataset )  {^863^^^^^848^878^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( uvalue )  )  {^872^^^^^857^887^if  ( !Double.isNaN ( lvalue )  )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( uvalue, lvalue ) ;^873^^^^^858^888^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( lvalue, minimum ) ;^873^^^^^858^888^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, uvalue ) ;^873^^^^^858^888^minimum = Math.min ( minimum, lvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( minimum )  )  {^875^^^^^860^890^if  ( !Double.isNaN ( uvalue )  )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( minimum, uvalue ) ;^876^^^^^861^891^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, minimum ) ;^876^^^^^861^891^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( uvalue, maximum ) ;^876^^^^^861^891^maximum = Math.max ( maximum, uvalue ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^852^^^^^837^867^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^852^^^^^837^867^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^852^^^^^837^867^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = series; series < seriesCount; series++ )  {^852^^^^^837^867^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = 1; series < seriesCount; series++ )  {^852^^^^^837^867^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  !=  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  |  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^lvalue = item.getStartYValue ( series, intervalXYData ) ;^860^^^^^845^875^lvalue = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  ==  OHLCDataset )  {^863^^^^^848^878^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^854^^^^^839^869^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item == itemCount; item++ )  {^854^^^^^839^869^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = seriesCount; item < itemCount; item++ )  {^854^^^^^839^869^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <=  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ||  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  <  OHLCDataset )  {^863^^^^^848^878^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  |  OHLCDataset )  {^863^^^^^848^878^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^853^^^^^838^868^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^853^^^^^838^868^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^854^^^^^839^869^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^854^^^^^839^869^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^854^^^^^839^869^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^854^^^^^839^869^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >=  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &&  IntervalXYDataset )  {^857^^^^^842^872^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( uvalue == Double.POSITIVE_INFINITY )  {^880^^^^^865^895^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( minimum == Double.uvalue )  {^880^^^^^865^895^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( minimum <= Double.POSITIVE_INFINITY )  {^880^^^^^865^895^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( uvalue, maximum ) ;^884^^^^^880^885^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( minimum, uvalue ) ;^884^^^^^880^885^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^884^^^^^880^885^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( uvalue, maximum ) ;^884^^^^^869^899^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Range ( minimum, uvalue ) ;^884^^^^^869^899^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^884^^^^^869^899^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] iterateXYRangeBounds [RETURN_TYPE] Range   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  lvalue  maximum  minimum  uvalue  IntervalXYDataset  intervalXYData  XYDataset  dataset  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^902^^^^^887^917^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <<  DomainInfo )  {^907^^^^^892^922^if  ( dataset instanceof DomainInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >  DomainInfo )  {^907^^^^^892^922^if  ( dataset instanceof DomainInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <<  IntervalXYDataset )  {^919^^^^^904^934^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( series, seriesCount ) ;^925^^^^^919^926^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getXValue ( dataset, item ) ;^925^^^^^919^926^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getXValue ( item, series ) ;^925^^^^^919^926^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getXValue ( series, dataset ) ;^925^^^^^919^926^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( seriesCount, item ) ;^925^^^^^919^926^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getStartXValue ( seriesCount, item ) ;^922^^^^^907^937^value = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getStartXValue ( series, seriesCount ) ;^922^^^^^907^937^value = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getStartXValue ( series, intervalXYData ) ;^922^^^^^907^937^value = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = intervalXYData.getStartXValue ( item, series ) ;^922^^^^^907^937^value = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( value, minimum ) ;^928^^^^^913^943^minimum = Math.min ( minimum, value ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( value == Double.POSITIVE_INFINITY )  {^933^^^^^918^948^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( minimum >= Double.POSITIVE_INFINITY )  {^933^^^^^918^948^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Double ( value ) ;^937^^^^^933^938^result = new Double ( minimum ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = itemCount; series < seriesCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <  IntervalXYDataset )  {^919^^^^^904^934^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getStartXValue ( intervalXYData, item ) ;^922^^^^^907^937^value = intervalXYData.getStartXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = item; item < itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &  IntervalXYDataset )  {^919^^^^^904^934^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( seriesCount, item ) ;^925^^^^^910^940^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( series, seriesCount ) ;^925^^^^^910^940^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getXValue ( series, dataset ) ;^925^^^^^910^940^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getXValue ( dataset, item ) ;^925^^^^^910^940^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getXValue ( item, series ) ;^925^^^^^910^940^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^915^^^^^900^930^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^915^^^^^900^930^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = 1; item < itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( minimum )  )  {^927^^^^^912^942^if  ( !Double.isNaN ( value )  )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  |  IntervalXYDataset )  {^919^^^^^904^934^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Double ( value ) ;^937^^^^^922^952^result = new Double ( minimum ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = series; series < seriesCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^return new Double ( info.getDomainLowerBound ( false )  ) ;^909^^^^^894^924^return new Double ( info.getDomainLowerBound ( true )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( minimum == Double.value )  {^933^^^^^918^948^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( minimum != Double.POSITIVE_INFINITY )  {^933^^^^^918^948^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ||  IntervalXYDataset )  {^919^^^^^904^934^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item == itemCount; item++ )  {^916^^^^^901^931^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = 1; series < seriesCount; series++ )  {^914^^^^^899^929^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^957^^^^^942^972^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <<  DomainInfo )  {^962^^^^^947^977^if  ( dataset instanceof DomainInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  !=  DomainInfo )  {^962^^^^^947^977^if  ( dataset instanceof DomainInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ==  IntervalXYDataset )  {^976^^^^^961^991^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( seriesCount, item ) ;^982^^^^^976^983^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getXValue ( dataset, item ) ;^982^^^^^976^983^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getXValue ( item, series ) ;^982^^^^^976^983^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( series, seriesCount ) ;^982^^^^^976^983^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getEndXValue ( seriesCount, item ) ;^979^^^^^964^994^value = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getEndXValue ( series, seriesCount ) ;^979^^^^^964^994^value = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getEndXValue ( series, intervalXYData ) ;^979^^^^^964^994^value = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = intervalXYData.getEndXValue ( item, series ) ;^979^^^^^964^994^value = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getEndXValue ( intervalXYData, item ) ;^979^^^^^964^994^value = intervalXYData.getEndXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( value, maximum ) ;^985^^^^^970^1000^maximum = Math.max ( maximum, value ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( value == Double.NEGATIVE_INFINITY )  {^989^^^^^974^1004^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( maximum == Double.value )  {^989^^^^^974^1004^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( maximum != Double.NEGATIVE_INFINITY )  {^989^^^^^974^1004^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Double ( value ) ;^993^^^^^989^994^result = new Double ( maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^971^^^^^956^986^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^971^^^^^956^986^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^971^^^^^956^986^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = 1; series < seriesCount; series++ )  {^971^^^^^956^986^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = series; series < seriesCount; series++ )  {^971^^^^^956^986^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ^  IntervalXYDataset )  {^976^^^^^961^991^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &&  IntervalXYDataset )  {^976^^^^^961^991^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getXValue ( series, dataset ) ;^982^^^^^976^983^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( seriesCount, item ) ;^982^^^^^967^997^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getXValue ( series, seriesCount ) ;^982^^^^^967^997^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getXValue ( dataset, item ) ;^982^^^^^967^997^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getXValue ( item, series ) ;^982^^^^^967^997^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getXValue ( series, dataset ) ;^982^^^^^967^997^value = dataset.getXValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( maximum )  )  {^984^^^^^969^999^if  ( !Double.isNaN ( value )  )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^972^^^^^957^987^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^972^^^^^957^987^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <  IntervalXYDataset )  {^976^^^^^961^991^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Double ( value ) ;^993^^^^^978^1008^result = new Double ( maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^971^^^^^956^986^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = 1; item < itemCount; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^return new Double ( info.getDomainUpperBound ( false )  ) ;^964^^^^^949^979^return new Double ( info.getDomainUpperBound ( true )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = itemCount; series < seriesCount; series++ )  {^971^^^^^956^986^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > itemCount; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >=  IntervalXYDataset )  {^976^^^^^961^991^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >  IntervalXYDataset )  {^976^^^^^961^991^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = item; item < itemCount; item++ )  {^973^^^^^958^988^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumDomainValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] boolean  Number  result  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  DomainInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^1016^^^^^1001^1031^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ^  RangeInfo )  {^1021^^^^^1006^1036^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <  RangeInfo )  {^1021^^^^^1006^1036^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <<  IntervalCategoryDataset )  {^1034^^^^^1019^1049^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( seriesCount, item ) ;^1040^^^^^1034^1041^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( series, seriesCount ) ;^1040^^^^^1034^1041^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getValue ( dataset, item ) ;^1040^^^^^1034^1041^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getValue ( item, series ) ;^1040^^^^^1034^1041^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getValue ( series, dataset ) ;^1040^^^^^1034^1041^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = icd.getStartValue ( series, seriesCount ) ;^1037^^^^^1022^1052^value = icd.getStartValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getStartValue ( series, icd ) ;^1037^^^^^1022^1052^value = icd.getStartValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = icd.getStartValue ( item, series ) ;^1037^^^^^1022^1052^value = icd.getStartValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = icd.getStartValue ( seriesCount, item ) ;^1037^^^^^1022^1052^value = icd.getStartValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == null )  {^1042^^^^^1027^1057^if  ( value != null )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( value, minimum.doubleValue (  )  ) ;^1043^^^^^1028^1058^minimum = Math.min ( minimum, value.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( minimum != Double.POSITIVE_INFINITY )  {^1047^^^^^1032^1062^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series > seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = item; series < seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ||  IntervalCategoryDataset )  {^1034^^^^^1019^1049^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ^  IntervalCategoryDataset )  {^1034^^^^^1019^1049^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getStartValue ( icd, item ) ;^1037^^^^^1022^1052^value = icd.getStartValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( seriesCount, item ) ;^1040^^^^^1025^1055^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( series, seriesCount ) ;^1040^^^^^1025^1055^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getValue ( dataset, item ) ;^1040^^^^^1025^1055^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getValue ( item, series ) ;^1040^^^^^1025^1055^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getValue ( series, dataset ) ;^1040^^^^^1025^1055^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >>  IntervalCategoryDataset )  {^1034^^^^^1019^1049^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = itemCount; series < seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^return new Double ( info.getRangeLowerBound ( false )  ) ;^1023^^^^^1008^1038^return new Double ( info.getRangeLowerBound ( true )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &  IntervalCategoryDataset )  {^1034^^^^^1019^1049^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = 1; series < seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > itemCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = item; item < itemCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >=  IntervalCategoryDataset )  {^1034^^^^^1019^1049^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = seriesCount; item < itemCount; item++ )  {^1032^^^^^1017^1047^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  |  IntervalCategoryDataset )  {^1034^^^^^1019^1049^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = ; series < seriesCount; series++ )  {^1031^^^^^1016^1046^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  minimum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^1072^^^^^1057^1087^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ==  RangeInfo )  {^1077^^^^^1062^1092^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >>  RangeInfo )  {^1077^^^^^1062^1092^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ||  RangeInfo )  {^1077^^^^^1062^1092^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ==  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <=  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  ^  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( seriesCount, item ) ;^1101^^^^^1096^1102^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( series, seriesCount ) ;^1101^^^^^1096^1102^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getYValue ( series, dataset ) ;^1101^^^^^1096^1102^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getYValue ( item, series ) ;^1101^^^^^1096^1102^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getYValue ( dataset, item ) ;^1101^^^^^1096^1102^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = highLowData.getLowValue ( series, seriesCount ) ;^1098^^^^^1083^1113^value = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getLowValue ( highLowData, item ) ;^1098^^^^^1083^1113^value = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = highLowData.getLowValue ( item, series ) ;^1098^^^^^1083^1113^value = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getLowValue ( series, highLowData ) ;^1098^^^^^1083^1113^value = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = highLowData.getLowValue ( seriesCount, item ) ;^1098^^^^^1083^1113^value = highLowData.getLowValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( seriesCount, item ) ;^1101^^^^^1086^1116^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( series, seriesCount ) ;^1101^^^^^1086^1116^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getYValue ( series, dataset ) ;^1101^^^^^1086^1116^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getYValue ( dataset, item ) ;^1101^^^^^1086^1116^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getYValue ( item, series ) ;^1101^^^^^1086^1116^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getStartYValue ( seriesCount, item ) ;^1094^^^^^1079^1109^value = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getStartYValue ( series, seriesCount ) ;^1094^^^^^1079^1109^value = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getStartYValue ( series, intervalXYData ) ;^1094^^^^^1079^1109^value = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = intervalXYData.getStartYValue ( item, series ) ;^1094^^^^^1079^1109^value = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  &&  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( value, minimum ) ;^1104^^^^^1089^1119^minimum = Math.min ( minimum, value ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( value == Double.POSITIVE_INFINITY )  {^1109^^^^^1094^1124^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( minimum == Double.value )  {^1109^^^^^1094^1124^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( minimum != Double.POSITIVE_INFINITY )  {^1109^^^^^1094^1124^if  ( minimum == Double.POSITIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Double ( value ) ;^1113^^^^^1109^1114^return new Double ( minimum ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1086^^^^^1071^1101^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^1086^^^^^1071^1101^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^1086^^^^^1071^1101^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1086^^^^^1071^1101^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = item; series < seriesCount; series++ )  {^1086^^^^^1071^1101^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ^  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  !=  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  >>  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getStartYValue ( intervalXYData, item ) ;^1094^^^^^1079^1109^value = intervalXYData.getStartYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > itemCount; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ||  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  |  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  <  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  !=  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( minimum )  )  {^1103^^^^^1088^1118^if  ( !Double.isNaN ( value )  )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^1087^^^^^1072^1102^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^1087^^^^^1072^1102^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &&  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  >  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Double ( value ) ;^1113^^^^^1098^1128^return new Double ( minimum ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^return new Double ( info.getRangeLowerBound ( false )  ) ;^1079^^^^^1064^1094^return new Double ( info.getRangeLowerBound ( true )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >>  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  ==  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  &  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series > seriesCount; series++ )  {^1086^^^^^1071^1101^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^1086^^^^^1071^1101^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >=  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >  IntervalXYDataset )  {^1091^^^^^1076^1106^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  |  OHLCDataset )  {^1096^^^^^1081^1111^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = itemCount; item < itemCount; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^1088^^^^^1073^1103^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  minimum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^1133^^^^^1118^1148^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <=  RangeInfo )  {^1138^^^^^1123^1153^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <<  RangeInfo )  {^1138^^^^^1123^1153^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <=  IntervalCategoryDataset )  {^1152^^^^^1137^1167^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( seriesCount, item ) ;^1158^^^^^1152^1159^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( series, seriesCount ) ;^1158^^^^^1152^1159^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getValue ( dataset, item ) ;^1158^^^^^1152^1159^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getValue ( item, series ) ;^1158^^^^^1152^1159^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getValue ( series, dataset ) ;^1158^^^^^1152^1159^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = icd.getEndValue ( seriesCount, item ) ;^1155^^^^^1140^1170^value = icd.getEndValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = icd.getEndValue ( series, seriesCount ) ;^1155^^^^^1140^1170^value = icd.getEndValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getEndValue ( icd, item ) ;^1155^^^^^1140^1170^value = icd.getEndValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = icd.getEndValue ( item, series ) ;^1155^^^^^1140^1170^value = icd.getEndValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getEndValue ( series, icd ) ;^1155^^^^^1140^1170^value = icd.getEndValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == null )  {^1160^^^^^1145^1175^if  ( value != null )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( value, maximum.doubleValue (  )  ) ;^1161^^^^^1146^1176^maximum = Math.max ( maximum, value.doubleValue (  )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( maximum <= Double.NEGATIVE_INFINITY )  {^1165^^^^^1150^1180^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series > seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = series; series < seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >  IntervalCategoryDataset )  {^1152^^^^^1137^1167^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  !=  IntervalCategoryDataset )  {^1152^^^^^1137^1167^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( seriesCount, item ) ;^1158^^^^^1143^1173^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getValue ( series, seriesCount ) ;^1158^^^^^1143^1173^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getValue ( series, dataset ) ;^1158^^^^^1143^1173^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getValue ( item, series ) ;^1158^^^^^1143^1173^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getValue ( dataset, item ) ;^1158^^^^^1143^1173^value = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = 1; item < itemCount; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &  IntervalCategoryDataset )  {^1152^^^^^1137^1167^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^return new Double ( info.getRangeUpperBound ( false )  ) ;^1140^^^^^1125^1155^return new Double ( info.getRangeUpperBound ( true )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( maximum != Double.NEGATIVE_INFINITY )  {^1165^^^^^1150^1180^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = item; series < seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = 1; series < seriesCount; series++ )  {^1149^^^^^1134^1164^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >=  IntervalCategoryDataset )  {^1152^^^^^1137^1167^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = itemCount; item < itemCount; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = ; item < itemCount; item++ )  {^1150^^^^^1135^1165^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &&  IntervalCategoryDataset )  {^1152^^^^^1137^1167^if  ( dataset instanceof IntervalCategoryDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] IntervalCategoryDataset  icd  boolean  Number  value  double  maximum  CategoryDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^1189^^^^^1174^1204^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ||  RangeInfo )  {^1194^^^^^1179^1209^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >>  RangeInfo )  {^1194^^^^^1179^1209^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <=  RangeInfo )  {^1194^^^^^1179^1209^if  ( dataset instanceof RangeInfo )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ||  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  !=  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  ^  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( seriesCount, item ) ;^1218^^^^^1213^1219^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( series, seriesCount ) ;^1218^^^^^1213^1219^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getYValue ( series, dataset ) ;^1218^^^^^1213^1219^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getYValue ( item, series ) ;^1218^^^^^1213^1219^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getYValue ( dataset, item ) ;^1218^^^^^1213^1219^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = highLowData.getHighValue ( seriesCount, item ) ;^1215^^^^^1200^1230^value = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = highLowData.getHighValue ( series, seriesCount ) ;^1215^^^^^1200^1230^value = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getHighValue ( series, highLowData ) ;^1215^^^^^1200^1230^value = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = highLowData.getHighValue ( item, series ) ;^1215^^^^^1200^1230^value = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getHighValue ( highLowData, item ) ;^1215^^^^^1200^1230^value = highLowData.getHighValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( seriesCount, item ) ;^1218^^^^^1203^1233^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = dataset.getYValue ( series, seriesCount ) ;^1218^^^^^1203^1233^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getYValue ( dataset, item ) ;^1218^^^^^1203^1233^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = dataset.getYValue ( item, series ) ;^1218^^^^^1203^1233^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getYValue ( series, dataset ) ;^1218^^^^^1203^1233^value = dataset.getYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getEndYValue ( seriesCount, item ) ;^1211^^^^^1196^1226^value = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^value = intervalXYData.getEndYValue ( series, seriesCount ) ;^1211^^^^^1196^1226^value = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = series.getEndYValue ( intervalXYData, item ) ;^1211^^^^^1196^1226^value = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = item.getEndYValue ( series, intervalXYData ) ;^1211^^^^^1196^1226^value = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  >>  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( value, maximum ) ;^1221^^^^^1206^1236^maximum = Math.max ( maximum, value ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( value == Double.NEGATIVE_INFINITY )  {^1225^^^^^1210^1240^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( maximum == Double.value )  {^1225^^^^^1210^1240^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( maximum != Double.NEGATIVE_INFINITY )  {^1225^^^^^1210^1240^if  ( maximum == Double.NEGATIVE_INFINITY )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Double ( value ) ;^1229^^^^^1225^1230^return new Double ( maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < itemCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = itemCount; series < seriesCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  >=  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  &  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^value = intervalXYData.getEndYValue ( item, series ) ;^1211^^^^^1196^1226^value = intervalXYData.getEndYValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  >=  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < itemCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= itemCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <=  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <<  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  ||  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( maximum )  )  {^1220^^^^^1205^1235^if  ( !Double.isNaN ( value )  )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^int itemCount = dataset.getItemCount ( seriesCount ) ;^1205^^^^^1190^1220^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^int itemCount = series.getItemCount ( dataset ) ;^1205^^^^^1190^1220^int itemCount = dataset.getItemCount ( series ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < itemCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int itemCount = 0; item < item; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = itemCount; item < itemCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  <=  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Variable_Misuse]^return new Double ( value ) ;^1229^^^^^1214^1244^return new Double ( maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < itemCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^return new Double ( info.getRangeUpperBound ( false )  ) ;^1196^^^^^1181^1211^return new Double ( info.getRangeUpperBound ( true )  ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ==  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  &&  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  &&  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = series; series < seriesCount; series++ )  {^1204^^^^^1189^1219^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  ^  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  <  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = item; item < itemCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset  |  IntervalXYDataset )  {^1208^^^^^1193^1223^if  ( dataset instanceof IntervalXYDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^else if  ( dataset  <  OHLCDataset )  {^1213^^^^^1198^1228^else if  ( dataset instanceof OHLCDataset )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = 1; item < itemCount; item++ )  {^1206^^^^^1191^1221^for  ( int item = 0; item < itemCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumRangeValue [RETURN_TYPE] Number   XYDataset dataset [VARIABLES] OHLCDataset  highLowData  boolean  double  maximum  value  IntervalXYDataset  intervalXYData  XYDataset  dataset  RangeInfo  info  int  item  itemCount  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^1259^^^^^1244^1274^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( number == null )  {^1272^^^^^1257^1287^if  ( number != null )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( negative > 0.0 )  {^1274^^^^^1259^1289^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == 0.0 )  {^1274^^^^^1259^1289^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^positive = value + positive;^1275^^^^^1260^1290^positive = positive + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( positive < 0.0 )  {^1277^^^^^1262^1292^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value <= 0.0 )  {^1277^^^^^1262^1292^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^negative = positive + value;^1278^^^^^1263^1293^negative = negative + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^negative = negative + positive;^1278^^^^^1263^1293^negative = negative + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^negative = value + negative;^1278^^^^^1263^1293^negative = negative + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^positive = negative + value;^1275^^^^^1260^1290^positive = positive + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^positive = positive + negative;^1275^^^^^1260^1290^positive = positive + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value >= 0.0 )  {^1274^^^^^1259^1289^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == 0.0 )  {^1277^^^^^1262^1292^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < categoryCount; item++ )  {^1266^^^^^1251^1281^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1266^^^^^1251^1281^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int categoryCount = 0; item < item; item++ )  {^1266^^^^^1251^1281^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= categoryCount; item++ )  {^1266^^^^^1251^1281^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  !=  ( int item = 0; item < categoryCount; item++ )  {^1266^^^^^1251^1281^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = 1; item < categoryCount; item++ )  {^1266^^^^^1251^1281^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value > 0.0 )  {^1277^^^^^1262^1292^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < item; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  <=  ( int series = 0; series < seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  &  ( int series = 0; series < seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( seriesCount, item ) ;^1271^^^^^1256^1286^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( series, seriesCount ) ;^1271^^^^^1256^1286^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = series.getValue ( dataset, item ) ;^1271^^^^^1256^1286^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = dataset.getValue ( item, series ) ;^1271^^^^^1256^1286^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = item.getValue ( series, dataset ) ;^1271^^^^^1256^1286^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( value, negative ) ;^1283^^^^^1268^1298^minimum = Math.min ( minimum, negative ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, value ) ;^1283^^^^^1268^1298^minimum = Math.min ( minimum, negative ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( negative, minimum ) ;^1283^^^^^1268^1298^minimum = Math.min ( minimum, negative ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( value, positive ) ;^1284^^^^^1269^1299^maximum = Math.max ( maximum, positive ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, value ) ;^1284^^^^^1269^1299^maximum = Math.max ( maximum, positive ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( positive, maximum ) ;^1284^^^^^1269^1299^maximum = Math.max ( maximum, positive ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^double negative = value;^1268^^^^^1253^1283^double negative = base;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  !=  ( int series = 0; series < seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ||  ( int series = 0; series < seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^1270^^^^^1255^1285^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^double positive = value;^1267^^^^^1252^1282^double positive = base;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( value <= maximum )  {^1286^^^^^1271^1301^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( minimum <= value )  {^1286^^^^^1271^1301^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^if  ( maximum <= minimum )  {^1286^^^^^1271^1301^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( minimum < maximum )  {^1286^^^^^1271^1301^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Range ( minimum, value ) ;^1287^^^^^1272^1302^result = new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^result = new Range ( maximum, minimum ) ;^1287^^^^^1272^1302^result = new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Range ( value, maximum ) ;^1287^^^^^1272^1302^result = new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset double base [VARIABLES] boolean  Number  number  double  base  maximum  minimum  negative  positive  value  CategoryDataset  dataset  Range  result  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset == null )  {^1307^^^^^1292^1322^if  ( dataset != null )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( number == null )  {^1329^^^^^1314^1344^if  ( number != null )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value >= 0.0 )  {^1331^^^^^1316^1346^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^positive[groupIndex[series]] = negative[groupIndex[series]] + value;^1332^1333^^^^1317^1347^positive[groupIndex[series]] = positive[groupIndex[series]] + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^positive[groupIndex[series]] = value[groupIndex[series]] + positive;^1332^1333^^^^1317^1347^positive[groupIndex[series]] = positive[groupIndex[series]] + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value <= 0.0 )  {^1335^^^^^1320^1350^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^negative[groupIndex[series]] = positive[groupIndex[series]] + value;^1336^1337^^^^1321^1351^negative[groupIndex[series]] = negative[groupIndex[series]] + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^negative[groupIndex[series]] = value[groupIndex[series]] + negative;^1336^1337^^^^1321^1351^negative[groupIndex[series]] = negative[groupIndex[series]] + value;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == 0.0 )  {^1331^^^^^1316^1346^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( seriesnt i = 0; i < dataset.getRowCount (  ) ; i++ )  {^1311^^^^^1296^1326^for  ( int i = 0; i < dataset.getRowCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= dataset.getRowCount (  ) ; i++ )  {^1311^^^^^1296^1326^for  ( int i = 0; i < dataset.getRowCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( j )  ) ) ;^1312^1313^1314^^^1297^1327^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^groupIndex[i] = i.getGroupIndex ( map.getGroup ( dataset.getRowKey ( map )  ) ) ;^1312^1313^1314^^^1297^1327^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^groupIndex[i] = dataset.getGroupIndex ( map.getGroup ( map.getRowKey ( i )  ) ) ;^1312^1313^1314^^^1297^1327^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( series )  ) ) ;^1312^1313^1314^^^1297^1327^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^groupIndex[i] = map.getGroupIndex ( map.getGroup ( i.getRowKey ( dataset )  ) ) ;^1312^1313^1314^^^1297^1327^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^map.getGroup ( dataset.getRowKey ( series )  ) ) ;^1313^1314^^^^1298^1328^map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^map.getGroup ( i.getRowKey ( dataset )  ) ) ;^1313^1314^^^^1298^1328^map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int j = 0; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ^  ( int item = 0; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  >=  ( int item = 0; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = ; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = i; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = 1; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value > 0.0 )  {^1335^^^^^1320^1350^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int j = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < j; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  >  ( int series = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  <=  ( int series = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = categoryCount; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value < 0.0 )  {^1331^^^^^1316^1346^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( series, seriesCount ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = item.getValue ( series, dataset ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = dataset.getValue ( item, series ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( item, item ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( series, j ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; g < groupCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int g = 0; g < series; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int groupCount = 0; g < g; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int g = 0; g <= groupCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^minimum[g] = Math.min ( positive[g], negative[g] ) ;^1343^^^^^1328^1358^minimum[g] = Math.min ( minimum[g], negative[g] ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^minimum[g] = Math.min ( minimum[g], positive[g] ) ;^1343^^^^^1328^1358^minimum[g] = Math.min ( minimum[g], negative[g] ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^minimum[g] = Math.min ( negative[g], minimum[g] ) ;^1343^^^^^1328^1358^minimum[g] = Math.min ( minimum[g], negative[g] ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^maximum[g] = Math.max ( positive[g], positive[g] ) ;^1344^^^^^1329^1359^maximum[g] = Math.max ( maximum[g], positive[g] ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^maximum[g] = Math.max ( maximum[g], negative[g] ) ;^1344^^^^^1329^1359^maximum[g] = Math.max ( maximum[g], positive[g] ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^maximum[g] = Math.max ( positive[g], maximum[g] ) ;^1344^^^^^1329^1359^maximum[g] = Math.max ( maximum[g], positive[g] ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^maximum[g] = Math.max ( negative[g], positive[g] ) ;^1344^^^^^1329^1359^maximum[g] = Math.max ( maximum[g], positive[g] ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( seriesCount, item ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( series, series ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = series.getValue ( dataset, item ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( j, item ) ;^1328^^^^^1313^1343^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ||  ( int series = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = item; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == 0.0 )  {^1335^^^^^1320^1350^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; g < groupCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int g = i; g < groupCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; j < groupCount; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < seriesCount; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int groupCount = 0; j < j; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == groupCount; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int j = series; j < groupCount; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^result = Range.combine ( result, new Range ( positive[j], maximum[j] ) ) ;^1348^1349^1350^^^1333^1363^result = Range.combine ( result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^result = Range.combine ( result, new Range ( minimum[j], positive[j] ) ) ;^1348^1349^1350^^^1333^1363^result = Range.combine ( result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^result = Range.combine ( minimum, new Range ( result[j], maximum[j] ) ) ;^1348^1349^1350^^^1333^1363^result = Range.combine ( result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^result = Range.combine ( result, new Range ( maximum[j], minimum[j] ) ) ;^1348^1349^1350^^^1333^1363^result = Range.combine ( result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^result, new Range ( positive[j], maximum[j] ) ) ;^1349^1350^^^^1334^1364^result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^result, new Range ( minimum[j], positive[j] ) ) ;^1349^1350^^^^1334^1364^result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^result, new Range ( maximum[j], minimum[j] ) ) ;^1349^1350^^^^1334^1364^result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^result = Range.combine ( maximum, new Range ( minimum[j], result[j] ) ) ;^1348^1349^1350^^^1333^1363^result = Range.combine ( result, new Range ( minimum[j], maximum[j] ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int g = -1; g < groupCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int j = item; j < groupCount; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( seriesCountnt i = 0; i < dataset.getRowCount (  ) ; i++ )  {^1311^^^^^1296^1326^for  ( int i = 0; i < dataset.getRowCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( datasetnt i = 0; i < i.getRowCount (  ) ; i++ )  {^1311^^^^^1296^1326^for  ( int i = 0; i < dataset.getRowCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > dataset.getRowCount (  ) ; i++ )  {^1311^^^^^1296^1326^for  ( int i = 0; i < dataset.getRowCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int i = seriesCount; i < dataset.getRowCount (  ) ; i++ )  {^1311^^^^^1296^1326^for  ( int i = 0; i < dataset.getRowCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( seriesCount )  ) ) ;^1312^1313^1314^^^1297^1327^groupIndex[i] = map.getGroupIndex ( map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^map.getGroup ( dataset.getRowKey ( seriesCount )  ) ) ;^1313^1314^^^^1298^1328^map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int categoryCount = 0; item < item; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for   instanceof   ( int item = 0; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  !=  ( int item = 0; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < categoryCount; item++ )  {^1323^^^^^1308^1338^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  &  ( int series = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int g = 0; g < seriesCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int g = series; g < groupCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < item; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  &&  ( int series = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series > seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ^  ( int series = 0; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= groupCount; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < dataset.getRowCount (  ) ; i++ )  {^1311^^^^^1296^1326^for  ( int i = 0; i < dataset.getRowCount (  ) ; i++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = groupCount; series < seriesCount; series++ )  {^1327^^^^^1312^1342^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int g = groupCount; g < groupCount; g++ )  {^1342^^^^^1327^1357^for  ( int g = 0; g < groupCount; g++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int j = ; j < groupCount; j++ )  {^1347^^^^^1332^1362^for  ( int j = 0; j < groupCount; j++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Variable_Misuse]^map.getGroup ( dataset.getRowKey ( j )  ) ) ;^1313^1314^^^^1298^1328^map.getGroup ( dataset.getRowKey ( i )  ) ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset KeyToGroupMap map [VARIABLES] boolean  double[]  maximum  minimum  negative  positive  Number  number  double  value  CategoryDataset  dataset  KeyToGroupMap  map  int[]  groupIndex  Range  result  int  categoryCount  g  groupCount  i  item  j  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset == null )  {^1368^^^^^1365^1392^if  ( dataset != null )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( result != null )  {^1377^^^^^1365^1392^if  ( number != null )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( number == null )  {^1377^^^^^1365^1392^if  ( number != null )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( minimum < 0.0 )  {^1379^^^^^1365^1392^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value <= 0.0 )  {^1379^^^^^1365^1392^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^total = minimum + value;^1380^^^^^1365^1392^total = total + value;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^total = total + minimum;^1380^^^^^1365^1392^total = total + value;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^total = value + total;^1380^^^^^1365^1392^total = total + value;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^double value = result.doubleValue (  ) ;^1378^^^^^1365^1392^double value = number.doubleValue (  ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value > 0.0 )  {^1379^^^^^1365^1392^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int categoryCount = 0; item < item; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  >=  ( int item = 0; item < categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = seriesCount; item < categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = series; item < categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == 0.0 )  {^1379^^^^^1365^1392^if  ( value < 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < item; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; series < series; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  !=  ( int series = 0; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( seriesCount, item ) ;^1376^^^^^1365^1392^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( series, seriesCount ) ;^1376^^^^^1365^1392^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = series.getValue ( dataset, item ) ;^1376^^^^^1365^1392^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = dataset.getValue ( item, series ) ;^1376^^^^^1365^1392^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = item.getValue ( series, dataset ) ;^1376^^^^^1365^1392^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( value, total ) ;^1385^^^^^1365^1392^minimum = Math.min ( minimum, total ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, value ) ;^1385^^^^^1365^1392^minimum = Math.min ( minimum, total ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^minimum = Math.min ( total, minimum ) ;^1385^^^^^1365^1392^minimum = Math.min ( minimum, total ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = item; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series > seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  >  ( int series = 0; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = seriesCount; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Double ( value ) ;^1388^^^^^1365^1392^result = new Double ( minimum ) ;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = 1; item < categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item == categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  <=  ( int item = 0; item < categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = -1; item < categoryCount; item++ )  {^1371^^^^^1365^1392^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  &  ( int series = 0; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = 1; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for   instanceof   ( int series = 0; series < seriesCount; series++ )  {^1375^^^^^1365^1392^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^return number;^1390^^^^^1365^1392^return result;^[CLASS] DatasetUtilities  [METHOD] findMinimumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  minimum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset == null )  {^1406^^^^^1402^1428^if  ( dataset != null )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( result != null )  {^1414^^^^^1402^1428^if  ( number != null )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( number == null )  {^1414^^^^^1402^1428^if  ( number != null )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value >= 0.0 )  {^1416^^^^^1402^1428^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^total = maximum + value;^1417^^^^^1402^1428^total = total + value;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^total = total + maximum;^1417^^^^^1402^1428^total = total + value;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^total = value + total;^1417^^^^^1402^1428^total = total + value;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^double value = result.doubleValue (  ) ;^1415^^^^^1402^1428^double value = number.doubleValue (  ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^if  ( maximum > 0.0 )  {^1416^^^^^1402^1428^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; item < categoryCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int item = 0; item < seriesCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item <= categoryCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int item = 0; item > categoryCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ||  ( int item = 0; item < categoryCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = categoryCount; item < categoryCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^for  ( int series = 0; series < item; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series <= seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  >  ( int series = 0; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value == 0.0 )  {^1416^^^^^1402^1428^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( seriesCount, item ) ;^1413^^^^^1402^1428^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^Number number = dataset.getValue ( series, seriesCount ) ;^1413^^^^^1402^1428^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = item.getValue ( series, dataset ) ;^1413^^^^^1402^1428^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = dataset.getValue ( item, series ) ;^1413^^^^^1402^1428^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^Number number = series.getValue ( dataset, item ) ;^1413^^^^^1402^1428^Number number = dataset.getValue ( series, item ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( value, total ) ;^1421^^^^^1402^1428^maximum = Math.max ( maximum, total ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, value ) ;^1421^^^^^1402^1428^maximum = Math.max ( maximum, total ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Argument_Swapping]^maximum = Math.max ( total, maximum ) ;^1421^^^^^1402^1428^maximum = Math.max ( maximum, total ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  <=  ( int series = 0; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = -1; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^result = new Double ( value ) ;^1423^^^^^1402^1428^result = new Double ( maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = series; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  <=  ( int item = 0; item < categoryCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int item = seriesCount; item < categoryCount; item++ )  {^1409^^^^^1402^1428^for  ( int item = 0; item < categoryCount; item++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ( int series = 0; series == seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  !=  ( int series = 0; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^for  ==  ( int series = 0; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Literal]^for  ( int series = categoryCount; series < seriesCount; series++ )  {^1412^^^^^1402^1428^for  ( int series = 0; series < seriesCount; series++ )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( value < 0.0 )  {^1416^^^^^1402^1428^if  ( value > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Variable_Misuse]^return number;^1426^^^^^1402^1428^return result;^[CLASS] DatasetUtilities  [METHOD] findMaximumStackedRangeValue [RETURN_TYPE] Number   CategoryDataset dataset [VARIABLES] boolean  Number  number  result  double  maximum  total  value  CategoryDataset  dataset  int  categoryCount  item  series  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^1453^^^^^1438^1468^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^double minimum = y;^1456^^^^^1441^1471^double minimum = base;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^double maximum = y;^1457^^^^^1442^1472^double maximum = base;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( positive )  )  {^1464^^^^^1449^1479^if  ( !Double.isNaN ( y )  )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^if  ( y == 0.0 )  {^1465^^^^^1450^1480^if  ( y > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^positive += negative;^1466^^^^^1451^1481^positive += y;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^negative += positive;^1469^^^^^1454^1484^negative += y;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( positive > 0.0 )  {^1465^^^^^1450^1480^if  ( y > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^if  ( y >= 0.0 )  {^1465^^^^^1450^1480^if  ( y > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^negative += positive;^1469^^^^^1465^1470^negative += y;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( y > maximum )  {^1473^^^^^1458^1488^if  ( positive > maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( positive > y )  {^1473^^^^^1458^1488^if  ( positive > maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^if  ( maximum > positive )  {^1473^^^^^1458^1488^if  ( positive > maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^if  ( positive >= maximum )  {^1473^^^^^1458^1488^if  ( positive > maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^maximum = y;^1474^^^^^1459^1489^maximum = positive;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( y < minimum )  {^1476^^^^^1461^1491^if  ( negative < minimum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( negative < y )  {^1476^^^^^1461^1491^if  ( negative < minimum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^if  ( minimum < negative )  {^1476^^^^^1461^1491^if  ( negative < minimum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^if  ( negative > minimum )  {^1476^^^^^1461^1491^if  ( negative < minimum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^minimum = y;^1477^^^^^1462^1492^minimum = negative;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^for  ( int seriesNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^1458^^^^^1443^1473^for  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  ( int itemNo = 0; itemNo > dataset.getItemCount (  ) ; itemNo++ )  {^1458^^^^^1443^1473^for  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  ( int itemNo = 0; itemNo <= dataset.getItemCount (  ) ; itemNo++ )  {^1458^^^^^1443^1473^for  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  &&  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^1458^^^^^1443^1473^for  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  >  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^1458^^^^^1443^1473^for  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Literal]^for  ( int itemNo = itemNo; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^1458^^^^^1443^1473^for  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( negative > 0.0 )  {^1465^^^^^1450^1480^if  ( y > 0.0 )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^positive += positive;^1466^^^^^1451^1481^positive += y;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^negative += negative;^1469^^^^^1454^1484^negative += y;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^if  ( negative <= minimum )  {^1476^^^^^1461^1491^if  ( negative < minimum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; seriesNo < seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^for  ( int seriesNo = 0; seriesNo < itemNo; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  ( int seriesNo = 0; seriesNo == seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  &&  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  >>  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( negative )  )  {^1464^^^^^1449^1479^if  ( !Double.isNaN ( y )  )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^double y = dataset.getYValue ( seriesCount, itemNo ) ;^1463^^^^^1448^1478^double y = dataset.getYValue ( seriesNo, itemNo ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^double y = dataset.getYValue ( seriesNo, seriesNo ) ;^1463^^^^^1448^1478^double y = dataset.getYValue ( seriesNo, itemNo ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^double y = itemNo.getYValue ( seriesNo, dataset ) ;^1463^^^^^1448^1478^double y = dataset.getYValue ( seriesNo, itemNo ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^double y = seriesNo.getYValue ( dataset, itemNo ) ;^1463^^^^^1448^1478^double y = dataset.getYValue ( seriesNo, itemNo ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^double y = dataset.getYValue ( itemNo, seriesNo ) ;^1463^^^^^1448^1478^double y = dataset.getYValue ( seriesNo, itemNo ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^double y = dataset.getYValue ( seriesNo, seriesCount ) ;^1463^^^^^1448^1478^double y = dataset.getYValue ( seriesNo, itemNo ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^double positive = y;^1459^^^^^1444^1474^double positive = base;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^double negative = y;^1460^^^^^1445^1475^double negative = base;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Literal]^for  ( int seriesNo = itemNo; seriesNo < seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  ( int seriesNo = 0; seriesNo <= seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  !=  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^for  <<  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^minimum = positive;^1477^^^^^1462^1492^minimum = negative;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Literal]^for  ( int itemNo = seriesNo; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^1458^^^^^1443^1473^for  ( int itemNo = 0; itemNo < dataset.getItemCount (  ) ; itemNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Literal]^for  ( int seriesNo = ; seriesNo < seriesCount; seriesNo++ )  {^1462^^^^^1447^1477^for  ( int seriesNo = 0; seriesNo < seriesCount; seriesNo++ )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( y <= maximum )  {^1480^^^^^1465^1495^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^if  ( minimum <= y )  {^1480^^^^^1465^1495^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^if  ( maximum <= minimum )  {^1480^^^^^1465^1495^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Wrong_Operator]^if  ( minimum == maximum )  {^1480^^^^^1465^1495^if  ( minimum <= maximum )  {^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^return new Range ( minimum, y ) ;^1481^^^^^1466^1496^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^1481^^^^^1466^1496^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Variable_Misuse]^return new Range ( y, maximum ) ;^1481^^^^^1466^1496^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findStackedRangeBounds [RETURN_TYPE] Range   TableXYDataset dataset double base [VARIABLES] boolean  TableXYDataset  dataset  double  base  maximum  minimum  negative  positive  y  int  itemNo  seriesCount  seriesNo  
[BugLab_Argument_Swapping]^total = value + total;^1505^^^^^1499^1509^total = total + value;^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Variable_Misuse]^for  ( int seriesCount = 0; s < seriesCount; s++ )  {^1502^^^^^1499^1509^for  ( int s = 0; s < seriesCount; s++ )  {^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Variable_Misuse]^for  ( int s = 0; s < item; s++ )  {^1502^^^^^1499^1509^for  ( int s = 0; s < seriesCount; s++ )  {^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Argument_Swapping]^for  ( int seriesCount = 0; s < s; s++ )  {^1502^^^^^1499^1509^for  ( int s = 0; s < seriesCount; s++ )  {^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Wrong_Operator]^for  ( int s = 0; s > seriesCount; s++ )  {^1502^^^^^1499^1509^for  ( int s = 0; s < seriesCount; s++ )  {^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Wrong_Operator]^for  &&  ( int s = 0; s < seriesCount; s++ )  {^1502^^^^^1499^1509^for  ( int s = 0; s < seriesCount; s++ )  {^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Variable_Misuse]^double value = dataset.getYValue ( seriesCount, item ) ;^1503^^^^^1499^1509^double value = dataset.getYValue ( s, item ) ;^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Variable_Misuse]^double value = dataset.getYValue ( s, seriesCount ) ;^1503^^^^^1499^1509^double value = dataset.getYValue ( s, item ) ;^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Argument_Swapping]^double value = item.getYValue ( s, dataset ) ;^1503^^^^^1499^1509^double value = dataset.getYValue ( s, item ) ;^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Argument_Swapping]^double value = s.getYValue ( dataset, item ) ;^1503^^^^^1499^1509^double value = dataset.getYValue ( s, item ) ;^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Argument_Swapping]^double value = dataset.getYValue ( item, s ) ;^1503^^^^^1499^1509^double value = dataset.getYValue ( s, item ) ;^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Variable_Misuse]^if  ( !Double.isNaN ( total )  )  {^1504^^^^^1499^1509^if  ( !Double.isNaN ( value )  )  {^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Wrong_Literal]^for  ( int s = s; s < seriesCount; s++ )  {^1502^^^^^1499^1509^for  ( int s = 0; s < seriesCount; s++ )  {^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Variable_Misuse]^return value;^1508^^^^^1499^1509^return total;^[CLASS] DatasetUtilities  [METHOD] calculateStackTotal [RETURN_TYPE] double   TableXYDataset dataset int item [VARIABLES] boolean  TableXYDataset  dataset  double  total  value  int  item  s  seriesCount  
[BugLab_Wrong_Operator]^if  ( dataset != null )  {^1523^^^^^1508^1538^if  ( dataset == null )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^boolean allItemsNull = false;^1527^^^^^1512^1542^boolean allItemsNull = true;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^if  ( n == null )  {^1536^^^^^1521^1551^if  ( n != null )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^allItemsNull = true;^1537^^^^^1522^1552^allItemsNull = false;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^runningTotal = runningTotal + minimum;^1539^^^^^1524^1554^runningTotal = runningTotal + value;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^runningTotal = value + runningTotal;^1539^^^^^1524^1554^runningTotal = runningTotal + value;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^minimum = Math.min ( value, runningTotal ) ;^1540^^^^^1525^1555^minimum = Math.min ( minimum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, value ) ;^1540^^^^^1525^1555^minimum = Math.min ( minimum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^minimum = Math.min ( runningTotal, minimum ) ;^1540^^^^^1525^1555^minimum = Math.min ( minimum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^maximum = Math.max ( value, runningTotal ) ;^1541^^^^^1526^1556^maximum = Math.max ( maximum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, value ) ;^1541^^^^^1526^1556^maximum = Math.max ( maximum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^maximum = Math.max ( runningTotal, maximum ) ;^1541^^^^^1526^1556^maximum = Math.max ( maximum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^for  ( int column = 0; row < dataset.getRowCount (  ) ; row++ )  {^1531^^^^^1516^1546^for  ( int row = 0; row < dataset.getRowCount (  ) ; row++ )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= dataset.getRowCount (  ) ; row++ )  {^1531^^^^^1516^1546^for  ( int row = 0; row < dataset.getRowCount (  ) ; row++ )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > dataset.getRowCount (  ) ; row++ )  {^1531^^^^^1516^1546^for  ( int row = 0; row < dataset.getRowCount (  ) ; row++ )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^for  ||  ( int row = 0; row < dataset.getRowCount (  ) ; row++ )  {^1531^^^^^1516^1546^for  ( int row = 0; row < dataset.getRowCount (  ) ; row++ )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^for  ( int row = row; row < dataset.getRowCount (  ) ; row++ )  {^1531^^^^^1516^1546^for  ( int row = 0; row < dataset.getRowCount (  ) ; row++ )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^for  ( int row = column; row < dataset.getRowCount (  ) ; row++ )  {^1531^^^^^1516^1546^for  ( int row = 0; row < dataset.getRowCount (  ) ; row++ )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^runningTotal = minimum + value;^1539^^^^^1524^1554^runningTotal = runningTotal + value;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^for  ( int row = 0; column < dataset.getColumnCount (  )  - 1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^for  ( int column = 0; column <= dataset.getColumnCount (  )  - 1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^for  ( int column = 0; column < dataset.getColumnCount (  )   ^  1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^for  ( int column = column; column < dataset.getColumnCount (  )  - 1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^for  ( int column = 0; column < dataset.getColumnCount (  )  - column;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^if  ( n == null )  {^1536^^^^^1533^1543^if  ( n != null )  {^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^allItemsNull = true;^1537^^^^^1533^1543^allItemsNull = false;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^runningTotal = minimum + value;^1539^^^^^1533^1543^runningTotal = runningTotal + value;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^runningTotal = runningTotal + minimum;^1539^^^^^1533^1543^runningTotal = runningTotal + value;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^runningTotal = value + runningTotal;^1539^^^^^1533^1543^runningTotal = runningTotal + value;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^minimum = Math.min ( value, runningTotal ) ;^1540^^^^^1533^1543^minimum = Math.min ( minimum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^minimum = Math.min ( minimum, value ) ;^1540^^^^^1533^1543^minimum = Math.min ( minimum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^minimum = Math.min ( runningTotal, minimum ) ;^1540^^^^^1533^1543^minimum = Math.min ( minimum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^maximum = Math.max ( runningTotal, maximum ) ;^1541^^^^^1533^1543^maximum = Math.max ( maximum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^maximum = Math.max ( value, runningTotal ) ;^1541^^^^^1533^1543^maximum = Math.max ( maximum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^maximum = Math.max ( maximum, value ) ;^1541^^^^^1533^1543^maximum = Math.max ( maximum, runningTotal ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^Number n = dataset.getValue ( column, column ) ;^1535^^^^^1533^1543^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^Number n = row.getValue ( dataset, column ) ;^1535^^^^^1533^1543^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^Number n = dataset.getValue ( column, row ) ;^1535^^^^^1533^1543^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^Number n = dataset.getValue ( row, row ) ;^1535^^^^^1533^1543^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^Number n = dataset.getValue ( column, column ) ;^1535^^^^^1520^1550^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^Number n = dataset.getValue ( row, row ) ;^1535^^^^^1520^1550^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^Number n = row.getValue ( dataset, column ) ;^1535^^^^^1520^1550^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^Number n = dataset.getValue ( column, row ) ;^1535^^^^^1520^1550^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^Number n = column.getValue ( row, dataset ) ;^1535^^^^^1520^1550^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^for  ( int dataset = 0; column < column.getColumnCount (  )  - 1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Operator]^for  ( int column = 0; column < dataset.getColumnCount (  )   >>  1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^for  ( int column = 1; column < dataset.getColumnCount (  )  - 1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^for  ( int column = 0; column < dataset.getColumnCount (  )  ;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^Number n = column.getValue ( row, dataset ) ;^1535^^^^^1533^1543^Number n = dataset.getValue ( row, column ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Wrong_Literal]^for  ( int column = row; column < dataset.getColumnCount (  )  - 1;^1533^^^^^1518^1548^for  ( int column = 0; column < dataset.getColumnCount (  )  - 1;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^return new Range ( minimum, value ) ;^1546^^^^^1531^1561^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Argument_Swapping]^return new Range ( maximum, minimum ) ;^1546^^^^^1531^1561^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
[BugLab_Variable_Misuse]^return new Range ( value, maximum ) ;^1546^^^^^1531^1561^return new Range ( minimum, maximum ) ;^[CLASS] DatasetUtilities  [METHOD] findCumulativeRangeBounds [RETURN_TYPE] Range   CategoryDataset dataset [VARIABLES] boolean  allItemsNull  Number  n  double  maximum  minimum  runningTotal  value  CategoryDataset  dataset  int  column  row  
