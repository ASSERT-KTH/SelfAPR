[BugLab_Variable_Misuse]^if  ( upper > upper )  {^86^^^^^85^93^if  ( lower > upper )  {^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( lower > lower )  {^86^^^^^85^93^if  ( lower > upper )  {^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( upper > lower )  {^86^^^^^85^93^if  ( lower > upper )  {^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( lower >= upper )  {^86^^^^^85^93^if  ( lower > upper )  {^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Variable_Misuse]^String msg = "Range ( double, double ) : require upper  ( " + lower + " )  <= upper  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Argument_Swapping]^String msg = "Range ( double, double ) : require upper  ( " + lower + " )  <= lower  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Wrong_Operator]^String msg = "Range ( double, double ) : require lower  &  ( " + lower + " )  <= upper  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Wrong_Operator]^String msg = "Range ( double, double ) : require lower  ==  ( " + lower + " )  <= upper  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Wrong_Operator]^String msg = "Range ( double, double ) : require lower  ( "  >=  lower  >=  " )  <= upper  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Wrong_Operator]^String msg = "Range ( double, double ) : require lower  ( "  >=  lower + " )  <= upper  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Variable_Misuse]^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= lower  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Wrong_Operator]^String msg = "Range ( double, double ) : require lower  !=  ( " + lower + " )  <= upper  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Wrong_Operator]^String msg = "Range ( double, double ) : require lower  ^  ( " + lower + " )  <= upper  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.lower = upper;^91^^^^^85^93^this.lower = lower;^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Variable_Misuse]^this.upper = lower;^92^^^^^85^93^this.upper = upper;^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[BugLab_Variable_Misuse]^return upper;^101^^^^^100^102^return this.lower;^[CLASS] Range  [METHOD] getLowerBound [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return upper;^110^^^^^109^111^return this.upper;^[CLASS] Range  [METHOD] getUpperBound [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return upper - this.lower;^119^^^^^118^120^return this.upper - this.lower;^[CLASS] Range  [METHOD] getLength [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return this.lower - this.upper;^119^^^^^118^120^return this.upper - this.lower;^[CLASS] Range  [METHOD] getLength [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return this.upper   instanceof   this.lower;^119^^^^^118^120^return this.upper - this.lower;^[CLASS] Range  [METHOD] getLength [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return upper / 2.0 + this.upper / 2.0;^128^^^^^127^129^return this.lower / 2.0 + this.upper / 2.0;^[CLASS] Range  [METHOD] getCentralValue [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return this.lower / 2.0 + upper / 2.0;^128^^^^^127^129^return this.lower / 2.0 + this.upper / 2.0;^[CLASS] Range  [METHOD] getCentralValue [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return this.upper / 2.0 + this.lower / 2.0;^128^^^^^127^129^return this.lower / 2.0 + this.upper / 2.0;^[CLASS] Range  [METHOD] getCentralValue [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return this.lower * 2.0 + this.upper / 2.0;^128^^^^^127^129^return this.lower / 2.0 + this.upper / 2.0;^[CLASS] Range  [METHOD] getCentralValue [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return this.lower - 2.0 + this.upper / 2.0;^128^^^^^127^129^return this.lower / 2.0 + this.upper / 2.0;^[CLASS] Range  [METHOD] getCentralValue [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( value >= upper && value <= this.upper ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( value >= this.lower && value <= value ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return  ( this.lower >= value && value <= this.upper ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return  ( value >= this.upper && value <= this.lower ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( value >= this.lower || value <= this.upper ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( value > this.lower && value <= this.upper ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( value >= this.lower && value < this.upper ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( value <= this.lower )  {^153^^^^^152^159^if  ( b0 <= this.lower )  {^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( b0 <= upper )  {^153^^^^^152^159^if  ( b0 <= this.lower )  {^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( b0 < this.lower )  {^153^^^^^152^159^if  ( b0 <= this.lower )  {^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( upper < this.upper && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( b0 < this.upper && value >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( b0 < upper && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return  ( this.upper < b0 && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return  ( b1 < this.upper && b0 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( b0 < this.upper || b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( b0 > this.upper && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( b0 < this.upper && b1 > b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( value > this.lower ) ;^154^^^^^152^159^return  ( b1 > this.lower ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( b1 > value ) ;^154^^^^^152^159^return  ( b1 > this.lower ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return  ( this.lower > b1 ) ;^154^^^^^152^159^return  ( b1 > this.lower ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( b1 >= this.lower ) ;^154^^^^^152^159^return  ( b1 > this.lower ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( b1 == this.lower ) ;^154^^^^^152^159^return  ( b1 > this.lower ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( value < this.upper && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return  ( b0 < value && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return  ( b0 < b1 && this.upper >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^return  ( b0 <= this.upper && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^double result = upper;^170^^^^^169^180^double result = value;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( !contains ( result )  )  {^171^^^^^169^180^if  ( !contains ( value )  )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( upper > this.upper )  {^172^^^^^169^180^if  ( value > this.upper )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( value > upper )  {^172^^^^^169^180^if  ( value > this.upper )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^if  ( this.upper > value )  {^172^^^^^169^180^if  ( value > this.upper )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( value >= this.upper )  {^172^^^^^169^180^if  ( value > this.upper )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^else if  ( upper < this.lower )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^else if  ( value < upper )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^else if  ( this.lower < value )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^else if  ( value > this.lower )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^result = upper;^176^^^^^169^180^result = this.lower;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^result = upper;^173^^^^^169^180^result = this.upper;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^else if  ( result < this.lower )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^else if  ( value <= this.lower )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^result = value;^176^^^^^169^180^result = this.lower;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^result = value;^173^^^^^169^180^result = this.upper;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^result = result;^176^^^^^169^180^result = this.lower;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( value == this.upper )  {^172^^^^^169^180^if  ( value > this.upper )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^else if  ( value < result )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^result = result;^173^^^^^169^180^result = this.upper;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( !contains ( upper )  )  {^171^^^^^169^180^if  ( !contains ( value )  )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return value;^179^^^^^169^180^return result;^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^if  ( range1 == nulu )  {^199^^^^^198^214^if  ( range1 == null )  {^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( range1 != null )  {^199^^^^^198^214^if  ( range1 == null )  {^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( range1 == null )  {^203^^^^^198^214^if  ( range2 == null )  {^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( range2 == nulvalue )  {^203^^^^^198^214^if  ( range2 == null )  {^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( range2 != null )  {^203^^^^^198^214^if  ( range2 == null )  {^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( value, u ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( l, value ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( u, l ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double l = Math.min ( range2.getLowerBound (  ) , range2.getLowerBound (  )  ) ;^207^208^^^^198^214^double l = Math.min ( range1.getLowerBound (  ) , range2.getLowerBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double l = Math.min ( range1.getLowerBound (  ) , range1.getLowerBound (  )  ) ;^207^208^^^^198^214^double l = Math.min ( range1.getLowerBound (  ) , range2.getLowerBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^double l = Math.min ( range2.getLowerBound (  ) , range1.getLowerBound (  )  ) ;^207^208^^^^198^214^double l = Math.min ( range1.getLowerBound (  ) , range2.getLowerBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double u = Math.max ( range2.getUpperBound (  ) , range2.getUpperBound (  )  ) ;^209^210^^^^198^214^double u = Math.max ( range1.getUpperBound (  ) , range2.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^double u = Math.max ( range2.getUpperBound (  ) , range1.getUpperBound (  )  ) ;^209^210^^^^198^214^double u = Math.max ( range1.getUpperBound (  ) , range2.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return range2;^204^^^^^198^214^return range1;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( l, upper ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double u = Math.max ( range1.getUpperBound (  ) , range1.getUpperBound (  )  ) ;^209^210^^^^198^214^double u = Math.max ( range1.getUpperBound (  ) , range2.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return range1;^200^^^^^198^214^return range2;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( upper, u ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( range != null )  {^228^^^^^227^240^if  ( range == null )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( upper, value ) ;^229^^^^^227^240^return new Range ( value, value ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( result < range.getLowerBound (  )  )  {^231^^^^^227^240^if  ( value < range.getLowerBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( range < value.getLowerBound (  )  )  {^231^^^^^227^240^if  ( value < range.getLowerBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( value <= range.getLowerBound (  )  )  {^231^^^^^227^240^if  ( value < range.getLowerBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^else if  ( upper > range.getUpperBound (  )  )  {^234^^^^^227^240^else if  ( value > range.getUpperBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^else if  ( range > value.getUpperBound (  )  )  {^234^^^^^227^240^else if  ( value > range.getUpperBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^else if  ( value >= range.getUpperBound (  )  )  {^234^^^^^227^240^else if  ( value > range.getUpperBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( range.getLowerBound (  ) , upper ) ;^235^^^^^227^240^return new Range ( range.getLowerBound (  ) , value ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( value.getLowerBound (  ) , range ) ;^235^^^^^227^240^return new Range ( range.getLowerBound (  ) , value ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( range.getLowerBound (  ) , u ) ;^235^^^^^227^240^return new Range ( range.getLowerBound (  ) , value ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( upper, range.getUpperBound (  )  ) ;^232^^^^^227^240^return new Range ( value, range.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( range, value.getUpperBound (  )  ) ;^232^^^^^227^240^return new Range ( value, range.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^else if  ( value < range.getUpperBound (  )  )  {^234^^^^^227^240^else if  ( value > range.getUpperBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( range.getLowerBound (  ) , result ) ;^235^^^^^227^240^return new Range ( range.getLowerBound (  ) , value ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( result, range.getUpperBound (  )  ) ;^232^^^^^227^240^return new Range ( value, range.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( range != null )  {^255^^^^^253^263^if  ( range == null )  {^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double lower = upper * lowerMargin;^259^^^^^253^263^double lower = length * lowerMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double lower = length * value;^259^^^^^253^263^double lower = length * lowerMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^double lower = lowerMargin * length;^259^^^^^253^263^double lower = length * lowerMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^double + lower = length * lowerMargin;^259^^^^^253^263^double lower = length * lowerMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double upper = value * upperMargin;^260^^^^^253^263^double upper = length * upperMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^double upper = length * value;^260^^^^^253^263^double upper = length * upperMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^double upper = upperMargin * length;^260^^^^^253^263^double upper = length * upperMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^double + upper = length * upperMargin;^260^^^^^253^263^double upper = length * upperMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( range.getLowerBound (  )  - result, range.getUpperBound (  )  + upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + lowerMargin ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( upper.getLowerBound (  )  - lower, range.getUpperBound (  )  + range ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( range.getLowerBound (  )  - upper, range.getUpperBound (  )  + lower ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( range.getLowerBound (  )   !=  lower, range.getUpperBound (  )  + upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )   &&  upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + u ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( lower.getLowerBound (  )  - range, range.getUpperBound (  )  + upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( range.getLowerBound (  )    instanceof   lower, range.getUpperBound (  )  + upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )   >>  upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return shift ( base, value, false ) ;^274^^^^^273^275^return shift ( base, delta, false ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta [VARIABLES] boolean  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return shift ( delta, base, false ) ;^274^^^^^273^275^return shift ( base, delta, false ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta [VARIABLES] boolean  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return shift ( base, delta, true ) ;^274^^^^^273^275^return shift ( base, delta, false ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta [VARIABLES] boolean  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return shift ( base, result, false ) ;^274^^^^^273^275^return shift ( base, delta, false ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta [VARIABLES] boolean  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , u ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^295^296^297^^^288^299^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( shiftWithNoZeroCrossing ( delta.getLowerBound (  ) , base ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^295^296^297^^^288^299^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , value ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^295^296^297^^^288^299^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , u )  ) ;^296^297^^^^288^299^delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^delta ) , shiftWithNoZeroCrossing ( delta.getUpperBound (  ) , base )  ) ;^296^297^^^^288^299^delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new Range ( delta.getLowerBound (  )  + base, base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( base.getLowerBound (  >=  )  + delta, base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )   >  delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( base.getLowerBound (  )  + result, base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( base.getLowerBound (  &  )  + delta, base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )   &&  delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( base.getLowerBound (  >  )  + delta, base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )   >=  delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( base.getLowerBound (  )  + upper, base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )   !=  delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , result ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^295^296^297^^^288^299^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( upperMargin > 0.0 )  {^311^^^^^310^320^if  ( value > 0.0 )  {^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( value == 0.0 )  {^311^^^^^310^320^if  ( value > 0.0 )  {^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^else if  ( result < 0.0 )  {^314^^^^^310^320^else if  ( value < 0.0 )  {^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^else if  ( value <= 0.0 )  {^314^^^^^310^320^else if  ( value < 0.0 )  {^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return value + result;^318^^^^^310^320^return value + delta;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return delta + value;^318^^^^^310^320^return value + delta;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( u + delta, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( value + upper, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return Math.min ( delta + value, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( value + upperMargin, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( upperMargin + delta, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return upperMargin + delta;^318^^^^^310^320^return value + delta;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return value + upperMargin;^318^^^^^310^320^return value + delta;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( upper + delta, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( value + result, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.max ( result + delta, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Argument_Swapping]^return Math.max ( delta + value, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.max ( value + upperMargin, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^else if  ( upperMargin < 0.0 )  {^314^^^^^310^320^else if  ( value < 0.0 )  {^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( result + delta, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.min ( value + u, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.max ( upper + delta, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.max ( value + u, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return result + delta;^318^^^^^310^320^return value + delta;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return value + upper;^318^^^^^310^320^return value + delta;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.max ( upperMargin + delta, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^return Math.max ( value + result, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[BugLab_Wrong_Operator]^if  ( ! ( obj  &  Range )  )  {^330^^^^^329^341^if  ( ! ( obj instanceof Range )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^331^^^^^329^341^return false;^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( ! ( result == range.lower )  )  {^334^^^^^329^341^if  ( ! ( this.lower == range.lower )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( ! ( this.lower == result )  )  {^334^^^^^329^341^if  ( ! ( this.lower == range.lower )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( ! ( range == this.lower.lower )  )  {^334^^^^^329^341^if  ( ! ( this.lower == range.lower )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( ! ( range.lower == this.lower )  )  {^334^^^^^329^341^if  ( ! ( this.lower == range.lower )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ! ( this.lower != range.lower )  )  {^334^^^^^329^341^if  ( ! ( this.lower == range.lower )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^335^^^^^329^341^return false;^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( ! ( result == range.upper )  )  {^337^^^^^329^341^if  ( ! ( this.upper == range.upper )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^if  ( ! ( this.upper == u )  )  {^337^^^^^329^341^if  ( ! ( this.upper == range.upper )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( ! ( range == this.upper.upper )  )  {^337^^^^^329^341^if  ( ! ( this.upper == range.upper )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Argument_Swapping]^if  ( ! ( range.upper == this.upper )  )  {^337^^^^^329^341^if  ( ! ( this.upper == range.upper )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( ! ( this.upper != range.upper )  )  {^337^^^^^329^341^if  ( ! ( this.upper == range.upper )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return true;^338^^^^^329^341^return false;^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^340^^^^^329^341^return true;^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[BugLab_Variable_Misuse]^temp = Double.doubleToLongBits ( lowerMargin ) ;^351^^^^^348^356^temp = Double.doubleToLongBits ( this.lower ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Variable_Misuse]^temp = Double.doubleToLongBits ( upper ) ;^351^^^^^348^356^temp = Double.doubleToLongBits ( this.lower ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Variable_Misuse]^result =  ( int )   ( serialVersionUID ^  ( temp >>> 32 )  ) ;^352^^^^^348^356^result =  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Wrong_Operator]^result =  ( int )   ( temp ^  ( temp  >>  32 )  ) ;^352^^^^^348^356^result =  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Variable_Misuse]^temp = Double.doubleToLongBits ( value ) ;^353^^^^^348^356^temp = Double.doubleToLongBits ( this.upper ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Variable_Misuse]^temp = Double.doubleToLongBits ( u ) ;^353^^^^^348^356^temp = Double.doubleToLongBits ( this.upper ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Variable_Misuse]^result = 29 * result +  ( int )   ( serialVersionUID ^  ( temp >>> 32 )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Argument_Swapping]^result = 29 * temp +  ( int )   ( result ^  ( temp >>> 32 )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Wrong_Operator]^result = 29 * result +  <=  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Wrong_Operator]^result = 29 + result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Wrong_Operator]^result = 29 * result +  ( int )   ( temp ^  ( temp  >>  32 )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Wrong_Literal]^result = result * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Wrong_Literal]^result = 29 * result +  ( int )   ( temp ^  ( temp >>> result )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[BugLab_Variable_Misuse]^return  ( "Range[" + value + "," + this.upper + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
[BugLab_Variable_Misuse]^return  ( "Range[" + this.lower + "," + result + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
[BugLab_Argument_Swapping]^return  ( "Range[" + this.upper + "," + this.lower + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
[BugLab_Wrong_Operator]^return  >>  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
[BugLab_Wrong_Operator]^return  ==  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
[BugLab_Wrong_Operator]^return  ^  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
[BugLab_Wrong_Operator]^return  ( "Range["  <<  this.lower + "," + this.upper + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
