[buglab_swap_variables]^if  ( upper > lower )  {^86^^^^^85^93^if  ( lower > upper )  {^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[buglab_swap_variables]^String msg = "Range ( double, double ) : require upper  ( " + lower + " )  <= lower  ( " + upper + " ) .";^87^88^^^^85^93^String msg = "Range ( double, double ) : require lower  ( " + lower + " )  <= upper  ( " + upper + " ) .";^[CLASS] Range  [METHOD] <init> [RETURN_TYPE] Range(double,double)   double lower double upper [VARIABLES] String  msg  boolean  double  lower  upper  long  serialVersionUID  
[buglab_swap_variables]^return this.lower - this.upper;^119^^^^^118^120^return this.upper - this.lower;^[CLASS] Range  [METHOD] getLength [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[buglab_swap_variables]^return this.upper / 2.0 + this.lower / 2.0;^128^^^^^127^129^return this.lower / 2.0 + this.upper / 2.0;^[CLASS] Range  [METHOD] getCentralValue [RETURN_TYPE] double   [VARIABLES] double  lower  upper  long  serialVersionUID  boolean  
[buglab_swap_variables]^return  ( this.lower >= value && value <= this.upper ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return  ( value >= this.upper && value <= this.lower ) ;^140^^^^^139^141^return  ( value >= this.lower && value <= this.upper ) ;^[CLASS] Range  [METHOD] contains [RETURN_TYPE] boolean   double value [VARIABLES] double  lower  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^if  ( this.lower <= b0 )  {^153^^^^^152^159^if  ( b0 <= this.lower )  {^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return  ( this.upper < b0 && b1 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return  ( b0 < b1 && this.upper >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return  ( this.lower > b1 ) ;^154^^^^^152^159^return  ( b1 > this.lower ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return  ( b1 < this.upper && b0 >= b0 ) ;^157^^^^^152^159^return  ( b0 < this.upper && b1 >= b0 ) ;^[CLASS] Range  [METHOD] intersects [RETURN_TYPE] boolean   double b0 double b1 [VARIABLES] double  b0  b1  lower  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^else if  ( this.lower < value )  {^175^^^^^169^180^else if  ( value < this.lower )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^if  ( this.upper > value )  {^172^^^^^169^180^if  ( value > this.upper )  {^[CLASS] Range  [METHOD] constrain [RETURN_TYPE] double   double value [VARIABLES] double  b0  b1  lower  result  upper  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return new Range ( u, l ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range (  u ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( l ) ;^211^^^^^198^214^return new Range ( l, u ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^double l = Math.min ( range2.getLowerBound (  ) , range1.getLowerBound (  )  ) ;^207^208^^^^198^214^double l = Math.min ( range1.getLowerBound (  ) , range2.getLowerBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^double l = Math.min ( range1.getLowerBound (  ) .getLowerBound (  )  ) ;^207^208^^^^198^214^double l = Math.min ( range1.getLowerBound (  ) , range2.getLowerBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^double u = Math.max ( range2.getUpperBound (  ) , range1.getUpperBound (  )  ) ;^209^210^^^^198^214^double u = Math.max ( range1.getUpperBound (  ) , range2.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^double u = Math.max ( range1.getUpperBound (  ) .getUpperBound (  )  ) ;^209^210^^^^198^214^double u = Math.max ( range1.getUpperBound (  ) , range2.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] combine [RETURN_TYPE] Range   Range range1 Range range2 [VARIABLES] boolean  Range  range1  range2  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^if  ( range < value.getLowerBound (  )  )  {^231^^^^^227^240^if  ( value < range.getLowerBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^else if  ( range > value.getUpperBound (  )  )  {^234^^^^^227^240^else if  ( value > range.getUpperBound (  )  )  {^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( value.getLowerBound (  ) , range ) ;^235^^^^^227^240^return new Range ( range.getLowerBound (  ) , value ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( range.getLowerBound (  )  ) ;^235^^^^^227^240^return new Range ( range.getLowerBound (  ) , value ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( range, value.getUpperBound (  )  ) ;^232^^^^^227^240^return new Range ( value, range.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range (  range.getUpperBound (  )  ) ;^232^^^^^227^240^return new Range ( value, range.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( value.getUpperBound (  )  ) ;^232^^^^^227^240^return new Range ( value, range.getUpperBound (  )  ) ;^[CLASS] Range  [METHOD] expandToInclude [RETURN_TYPE] Range   Range range double value [VARIABLES] boolean  Range  range  double  b0  b1  l  lower  result  u  upper  value  long  serialVersionUID  
[buglab_swap_variables]^double lower = lowerMargin * length;^259^^^^^253^263^double lower = length * lowerMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^double upper = upperMargin * length;^260^^^^^253^263^double upper = length * upperMargin;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( upper.getLowerBound (  )  - lower, range.getUpperBound (  )  + range ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( range.getLowerBound (  )  - lower.getUpperBound (  )  + upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( range.getLowerBound (  )  - upper, range.getUpperBound (  )  + lower ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( range.getLowerBound (  )  -  range.getUpperBound (  )  + upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( lower.getLowerBound (  )  - range, range.getUpperBound (  )  + upper ) ;^261^262^^^^253^263^return new Range ( range.getLowerBound (  )  - lower, range.getUpperBound (  )  + upper ) ;^[CLASS] Range  [METHOD] expand [RETURN_TYPE] Range   Range range double lowerMargin double upperMargin [VARIABLES] boolean  Range  range  double  b0  b1  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return shift ( delta, base, false ) ;^274^^^^^273^275^return shift ( base, delta, false ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta [VARIABLES] boolean  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return shift (  delta, false ) ;^274^^^^^273^275^return shift ( base, delta, false ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta [VARIABLES] boolean  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return shift ( base,  false ) ;^274^^^^^273^275^return shift ( base, delta, false ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta [VARIABLES] boolean  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( shiftWithNoZeroCrossing ( delta.getLowerBound (  ) , base ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^295^296^297^^^288^299^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  )  ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^295^296^297^^^288^299^return new Range ( shiftWithNoZeroCrossing ( base.getLowerBound (  ) , delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^delta ) , shiftWithNoZeroCrossing ( delta.getUpperBound (  ) , base )  ) ;^296^297^^^^288^299^delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  )  )  ) ;^296^297^^^^288^299^delta ) , shiftWithNoZeroCrossing ( base.getUpperBound (  ) , delta )  ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( delta.getLowerBound (  )  + base, base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( base.getLowerBound (  )  + delta.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return new Range ( base.getLowerBound (  )  +  base.getUpperBound (  )  + delta ) ;^291^292^^^^288^299^return new Range ( base.getLowerBound (  )  + delta, base.getUpperBound (  )  + delta ) ;^[CLASS] Range  [METHOD] shift [RETURN_TYPE] Range   Range base double delta boolean allowZeroCrossing [VARIABLES] boolean  allowZeroCrossing  Range  base  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^return delta + value;^318^^^^^310^320^return value + delta;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return Math.min ( delta + value, 0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return Math.min ( value +  0.0 ) ;^315^^^^^310^320^return Math.min ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return Math.max ( delta + value, 0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^return Math.max ( value +  0.0 ) ;^312^^^^^310^320^return Math.max ( value + delta, 0.0 ) ;^[CLASS] Range  [METHOD] shiftWithNoZeroCrossing [RETURN_TYPE] double   double value double delta [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  boolean  
[buglab_swap_variables]^if  ( ! ( this.lower == range.lower.lower )  )  {^334^^^^^329^341^if  ( ! ( this.lower == range.lower )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^if  ( ! ( range.lower == this.lower )  )  {^334^^^^^329^341^if  ( ! ( this.lower == range.lower )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^if  ( ! ( range == this.upper.upper )  )  {^337^^^^^329^341^if  ( ! ( this.upper == range.upper )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^if  ( ! ( range.upper == this.upper )  )  {^337^^^^^329^341^if  ( ! ( this.upper == range.upper )  )  {^[CLASS] Range  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  boolean  Range  range  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  
[buglab_swap_variables]^result = 29 * temp +  ( int )   ( result ^  ( temp >>> 32 )  ) ;^354^^^^^348^356^result = 29 * result +  ( int )   ( temp ^  ( temp >>> 32 )  ) ;^[CLASS] Range  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  int  result  
[buglab_swap_variables]^return  ( "Range[" + this.upper + "," + this.lower + "]" ) ;^365^^^^^364^366^return  ( "Range[" + this.lower + "," + this.upper + "]" ) ;^[CLASS] Range  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] double  b0  b1  delta  l  length  lower  lowerMargin  result  u  upper  upperMargin  value  long  serialVersionUID  temp  boolean  
