[BugLab_Variable_Misuse]^return subHandlers;^71^^^^^70^72^return this.subHandlers;^[CLASS] RootHandler  [METHOD] getSubHandlers [RETURN_TYPE] Stack   [VARIABLES] Stack  subHandlers  boolean  
[BugLab_Wrong_Operator]^if  ( handler >= this )  {^86^^^^^83^89^if  ( handler != this )  {^[CLASS] RootHandler  [METHOD] characters [RETURN_TYPE] void   char[] ch int start int length [VARIABLES] boolean  int  length  start  Stack  subHandlers  char[]  ch  DefaultHandler  handler  
[BugLab_Variable_Misuse]^handler.characters ( ch, start, start ) ;^87^^^^^83^89^handler.characters ( ch, start, length ) ;^[CLASS] RootHandler  [METHOD] characters [RETURN_TYPE] void   char[] ch int start int length [VARIABLES] boolean  int  length  start  Stack  subHandlers  char[]  ch  DefaultHandler  handler  
[BugLab_Argument_Swapping]^handler.characters ( length, start, ch ) ;^87^^^^^83^89^handler.characters ( ch, start, length ) ;^[CLASS] RootHandler  [METHOD] characters [RETURN_TYPE] void   char[] ch int start int length [VARIABLES] boolean  int  length  start  Stack  subHandlers  char[]  ch  DefaultHandler  handler  
[BugLab_Argument_Swapping]^handler.characters ( ch, length, start ) ;^87^^^^^83^89^handler.characters ( ch, start, length ) ;^[CLASS] RootHandler  [METHOD] characters [RETURN_TYPE] void   char[] ch int start int length [VARIABLES] boolean  int  length  start  Stack  subHandlers  char[]  ch  DefaultHandler  handler  
[BugLab_Argument_Swapping]^handler.characters ( start, ch, length ) ;^87^^^^^83^89^handler.characters ( ch, start, length ) ;^[CLASS] RootHandler  [METHOD] characters [RETURN_TYPE] void   char[] ch int start int length [VARIABLES] boolean  int  length  start  Stack  subHandlers  char[]  ch  DefaultHandler  handler  
[BugLab_Variable_Misuse]^if  ( subHandlers != null )  {^98^^^^^96^107^if  ( this.subHandlers != null )  {^[CLASS] RootHandler  [METHOD] getCurrentHandler [RETURN_TYPE] DefaultHandler   [VARIABLES] Object  top  boolean  Stack  subHandlers  DefaultHandler  result  
[BugLab_Wrong_Operator]^if  ( this.subHandlers == null )  {^98^^^^^96^107^if  ( this.subHandlers != null )  {^[CLASS] RootHandler  [METHOD] getCurrentHandler [RETURN_TYPE] DefaultHandler   [VARIABLES] Object  top  boolean  Stack  subHandlers  DefaultHandler  result  
[BugLab_Wrong_Operator]^if  ( this.subHandlers.size (  )  >= 0 )  {^99^^^^^96^107^if  ( this.subHandlers.size (  )  > 0 )  {^[CLASS] RootHandler  [METHOD] getCurrentHandler [RETURN_TYPE] DefaultHandler   [VARIABLES] Object  top  boolean  Stack  subHandlers  DefaultHandler  result  
[BugLab_Wrong_Operator]^if  ( top == null )  {^101^^^^^96^107^if  ( top != null )  {^[CLASS] RootHandler  [METHOD] getCurrentHandler [RETURN_TYPE] DefaultHandler   [VARIABLES] Object  top  boolean  Stack  subHandlers  DefaultHandler  result  
[BugLab_Variable_Misuse]^Object top = subHandlers.peek (  ) ;^100^^^^^96^107^Object top = this.subHandlers.peek (  ) ;^[CLASS] RootHandler  [METHOD] getCurrentHandler [RETURN_TYPE] DefaultHandler   [VARIABLES] Object  top  boolean  Stack  subHandlers  DefaultHandler  result  
[BugLab_Variable_Misuse]^if  ( subHandlers.size (  )  > 0 )  {^99^^^^^96^107^if  ( this.subHandlers.size (  )  > 0 )  {^[CLASS] RootHandler  [METHOD] getCurrentHandler [RETURN_TYPE] DefaultHandler   [VARIABLES] Object  top  boolean  Stack  subHandlers  DefaultHandler  result  
[BugLab_Variable_Misuse]^return  ( DefaultHandler )  subHandlers.pop (  ) ;^124^^^^^123^125^return  ( DefaultHandler )  this.subHandlers.pop (  ) ;^[CLASS] RootHandler  [METHOD] popSubHandler [RETURN_TYPE] DefaultHandler   [VARIABLES] Stack  subHandlers  boolean  
