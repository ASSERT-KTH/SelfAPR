[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^93^^^^^78^108^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertFalse ( p2.equals ( p1 )  ) ;^97^^^^^82^112^assertFalse ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^99^^^^^84^114^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertFalse ( p2.equals ( p1 )  ) ;^102^^^^^87^117^assertFalse ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^104^^^^^89^119^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertFalse ( p2.equals ( p1 )  ) ;^110^^^^^95^125^assertFalse ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^114^^^^^99^129^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertFalse ( p2.equals ( p1 )  ) ;^117^^^^^102^132^assertFalse ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^119^^^^^104^134^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^f1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.white )  ) ;^123^124^^^^108^138^f1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertFalse ( p2.equals ( p1 )  ) ;^126^^^^^111^141^assertFalse ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^f2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.white )  ) ;^128^129^^^^113^143^f2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^131^^^^^116^146^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertFalse ( p2.equals ( p1 )  ) ;^135^^^^^120^150^assertFalse ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^137^^^^^122^152^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertFalse ( p2.equals ( p1 )  ) ;^141^^^^^126^156^assertFalse ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^143^^^^^128^158^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  DialPlot  p1  p2  DialCap  cap1  cap2  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^152^^^^^149^156^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  DialPlot  p1  p2  int  h1  h2  
[buglab_swap_variables]^assertEquals ( h2, h1 ) ;^155^^^^^149^156^assertEquals ( h1, h2 ) ;^[CLASS] DialPlotTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  DialPlot  p1  p2  int  h1  h2  
[buglab_swap_variables]^assertEquals (  h2 ) ;^155^^^^^149^156^assertEquals ( h1, h2 ) ;^[CLASS] DialPlotTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  DialPlot  p1  p2  int  h1  h2  
[buglab_swap_variables]^assertEquals ( h1 ) ;^155^^^^^149^156^assertEquals ( h1, h2 ) ;^[CLASS] DialPlotTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  DialPlot  p1  p2  int  h1  h2  
[buglab_swap_variables]^assertTrue ( p2 != p1 ) ;^170^^^^^161^173^assertTrue ( p1 != p2 ) ;^[CLASS] DialPlotTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialPlot  p1  p2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( p2.getClass (  )  == p1.getClass (  )  ) ;^171^^^^^161^173^assertTrue ( p1.getClass (  )  == p2.getClass (  )  ) ;^[CLASS] DialPlotTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialPlot  p1  p2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( p2.equals ( p1 )  ) ;^172^^^^^161^173^assertTrue ( p1.equals ( p2 )  ) ;^[CLASS] DialPlotTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialPlot  p1  p2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertEquals ( p2, p1 ) ;^197^^^^^179^198^assertEquals ( p1, p2 ) ;^[CLASS] DialPlotTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  DialPlot  p1  p2  Exception  e  
[buglab_swap_variables]^assertEquals (  p2 ) ;^197^^^^^179^198^assertEquals ( p1, p2 ) ;^[CLASS] DialPlotTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  DialPlot  p1  p2  Exception  e  
[buglab_swap_variables]^assertEquals ( p1 ) ;^197^^^^^179^198^assertEquals ( p1, p2 ) ;^[CLASS] DialPlotTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  DialPlot  p1  p2  Exception  e  
