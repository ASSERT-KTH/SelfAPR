[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i1.setFont ( new Font ( "Dialog", Font. 7 )  ) ;^128^^^^^113^143^i1.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i2.setFont ( new Font ( "Dialog", Font. 7 )  ) ;^130^^^^^115^145^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^134^135^^^^119^149^i1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^137^138^^^^122^152^i2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^142^143^^^^127^157^i1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^145^146^^^^130^160^i2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^156^157^^^^141^171^i1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^i2.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^159^160^^^^144^174^i2.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertFalse ( i2.equals ( i1 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[buglab_swap_variables]^assertEquals ( h2, h1 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[buglab_swap_variables]^assertEquals (  h2 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[buglab_swap_variables]^assertEquals ( h1 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[buglab_swap_variables]^assertTrue ( i2 != i1 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( i2.getClass (  )  == i1.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( i2.equals ( i1 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertEquals ( i2, i1 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^assertEquals (  i2 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^assertEquals ( i1 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
