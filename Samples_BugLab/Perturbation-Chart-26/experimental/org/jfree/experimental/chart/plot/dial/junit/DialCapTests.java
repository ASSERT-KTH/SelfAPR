[buglab_swap_variables]^assertTrue ( c2.equals ( c1 )  ) ;^90^^^^^75^105^assertTrue ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertFalse ( c2.equals ( c1 )  ) ;^94^^^^^79^109^assertFalse ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertTrue ( c2.equals ( c1 )  ) ;^96^^^^^81^111^assertTrue ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^c1.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^99^100^^^^84^114^c1.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertFalse ( c2.equals ( c1 )  ) ;^101^^^^^86^116^assertFalse ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^c2.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^102^103^^^^87^117^c2.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^c1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.gray )  ) ;^106^107^^^^91^121^c1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.gray )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertFalse ( c2.equals ( c1 )  ) ;^108^^^^^93^123^assertFalse ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^c2.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.gray )  ) ;^109^110^^^^94^124^c2.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.gray )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertTrue ( c2.equals ( c1 )  ) ;^112^^^^^97^127^assertTrue ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertFalse ( c2.equals ( c1 )  ) ;^116^^^^^101^131^assertFalse ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertTrue ( c2.equals ( c1 )  ) ;^118^^^^^103^133^assertTrue ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  
[buglab_swap_variables]^assertTrue ( c2.equals ( c1 )  ) ;^127^^^^^124^131^assertTrue ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  int  h1  h2  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals ( h2, h1 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] DialCapTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  int  h1  h2  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals (  h2 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] DialCapTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  int  h1  h2  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals ( h1 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] DialCapTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  int  h1  h2  DialCap  c1  c2  
[buglab_swap_variables]^assertTrue ( c2 != c1 ) ;^146^^^^^131^161^assertTrue ( c1 != c2 ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( c2.getClass (  )  == c1.getClass (  )  ) ;^147^^^^^132^162^assertTrue ( c1.getClass (  )  == c2.getClass (  )  ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( c2.equals ( c1 )  ) ;^148^^^^^133^163^assertTrue ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^c1.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^152^153^^^^137^167^c1.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^c1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.gray )  ) ;^154^155^^^^139^169^c1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.gray )  ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( c2 != c1 ) ;^164^^^^^149^179^assertTrue ( c1 != c2 ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( c2.getClass (  )  == c1.getClass (  )  ) ;^165^^^^^150^180^assertTrue ( c1.getClass (  )  == c2.getClass (  )  ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( c2.equals ( c1 )  ) ;^166^^^^^151^181^assertTrue ( c1.equals ( c2 )  ) ;^[CLASS] DialCapTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  DialCap  c1  c2  CloneNotSupportedException  e  
[buglab_swap_variables]^assertEquals ( c2, c1 ) ;^192^^^^^177^207^assertEquals ( c1, c2 ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals (  c2 ) ;^192^^^^^177^207^assertEquals ( c1, c2 ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals ( c1 ) ;^192^^^^^177^207^assertEquals ( c1, c2 ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
[buglab_swap_variables]^c1.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^196^197^^^^181^211^c1.setFillPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
[buglab_swap_variables]^c1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.gray )  ) ;^198^199^^^^183^213^c1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.gray )  ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals ( c2, c1 ) ;^217^^^^^202^232^assertEquals ( c1, c2 ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals (  c2 ) ;^217^^^^^202^232^assertEquals ( c1, c2 ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
[buglab_swap_variables]^assertEquals ( c1 ) ;^217^^^^^202^232^assertEquals ( c1, c2 ) ;^[CLASS] DialCapTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  DialCap  c1  c2  
