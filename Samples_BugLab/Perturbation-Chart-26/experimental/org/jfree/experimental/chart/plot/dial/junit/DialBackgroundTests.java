[buglab_swap_variables]^assertTrue ( b2.equals ( b1 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[buglab_swap_variables]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.yellow )  ) ;^95^96^^^^89^109^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[buglab_swap_variables]^assertFalse ( b2.equals ( b1 )  ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[buglab_swap_variables]^b2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.yellow )  ) ;^98^99^^^^89^109^b2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[buglab_swap_variables]^assertTrue ( b2.equals ( b1 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[buglab_swap_variables]^assertFalse ( b2.equals ( b1 )  ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[buglab_swap_variables]^assertTrue ( b2.equals ( b1 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[buglab_swap_variables]^assertTrue ( b2.equals ( b1 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[buglab_swap_variables]^assertEquals ( h2, h1 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[buglab_swap_variables]^assertEquals (  h2 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[buglab_swap_variables]^assertEquals ( h1 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[buglab_swap_variables]^assertTrue ( b2 != b1 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( b2.getClass (  )  == b1.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( b2.equals ( b1 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^142^143^^^^126^156^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( b2 != b1 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( b2.getClass (  )  == b1.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertTrue ( b2.equals ( b1 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[buglab_swap_variables]^assertEquals ( b2, b1 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^assertEquals (  b2 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^assertEquals ( b1 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^185^186^^^^170^200^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^assertEquals ( b2, b1 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^assertEquals (  b2 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[buglab_swap_variables]^assertEquals ( b1 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
