[BugLab_Argument_Swapping]^this.lexer = new CSVLexer ( input, new ExtendedBufferedReader ( format )  ) ;^94^^^^^91^97^this.lexer = new CSVLexer ( format, new ExtendedBufferedReader ( input )  ) ;^[CLASS] CSVParser 1  [METHOD] <init> [RETURN_TYPE] CSVFormat)   Reader input CSVFormat format [VARIABLES] Lexer  lexer  boolean  Reader  input  List  record  Token  reusableToken  CSVRecord  current  CSVFormat  format  Map  headerMapping  
[BugLab_Argument_Swapping]^this ( new StringReader ( format ) , input ) ;^107^^^^^106^108^this ( new StringReader ( input ) , format ) ;^[CLASS] CSVParser 1  [METHOD] <init> [RETURN_TYPE] CSVFormat)   String input CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  Token  reusableToken  CSVRecord  current  CSVFormat  format  String  input  Map  headerMapping  
[BugLab_Variable_Misuse]^while  (  ( current = getRecord (  )  )  != null )  {^123^^^^^120^127^while  (  ( rec = getRecord (  )  )  != null )  {^[CLASS] CSVParser 1  [METHOD] getRecords [RETURN_TYPE] List   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  boolean  Map  headerMapping  
[BugLab_Wrong_Operator]^while  (  ( rec = getRecord (  )  )  == null )  {^123^^^^^120^127^while  (  ( rec = getRecord (  )  )  != null )  {^[CLASS] CSVParser 1  [METHOD] getRecords [RETURN_TYPE] List   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  boolean  Map  headerMapping  
[BugLab_Variable_Misuse]^records.add ( current ) ;^124^^^^^120^127^records.add ( rec ) ;^[CLASS] CSVParser 1  [METHOD] getRecords [RETURN_TYPE] List   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  boolean  Map  headerMapping  
[BugLab_Argument_Swapping]^result = new CSVRecord ( headerMapping.toArray ( new String[record.size (  ) ] ) , record ) ;^161^^^^^135^164^result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ;^[CLASS] CSVParser 1  [METHOD] getRecord [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  boolean  Map  headerMapping  
[BugLab_Variable_Misuse]^result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , null ) ;^161^^^^^135^164^result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ;^[CLASS] CSVParser 1  [METHOD] getRecord [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  boolean  Map  headerMapping  
[BugLab_Variable_Misuse]^return rec;^163^^^^^135^164^return result;^[CLASS] CSVParser 1  [METHOD] getRecord [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  boolean  Map  headerMapping  
[BugLab_Wrong_Operator]^if  ( format.getHeader (  )  == null )  {^171^^^^^169^193^if  ( format.getHeader (  )  != null )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Operator]^if  ( format.getHeader (  ) .length <= 0 )  {^175^^^^^169^193^if  ( format.getHeader (  ) .length == 0 )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Literal]^if  ( format.getHeader (  ) .length == i )  {^175^^^^^169^193^if  ( format.getHeader (  ) .length == 0 )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Operator]^if  ( rec == null )  {^178^^^^^169^193^if  ( rec != null )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Variable_Misuse]^header = result.values (  ) ;^179^^^^^169^193^header = rec.values (  ) ;^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Variable_Misuse]^if  ( result != null )  {^178^^^^^169^193^if  ( rec != null )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Operator]^if  ( header == null )  {^186^^^^^169^193^if  ( header != null )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Argument_Swapping]^for  ( header.lengthnt i = 0; i < i; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Argument_Swapping]^for  ( headernt i = 0; i < i.length; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= header.length; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < header.length; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Argument_Swapping]^hdrMap.put ( i[i], Integer.valueOf ( header )  ) ;^188^^^^^169^193^hdrMap.put ( header[i], Integer.valueOf ( i )  ) ;^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > header.length; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < header.length; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Operator]^if  ( format.getHeader (  ) .length >= 0 )  {^175^^^^^169^193^if  ( format.getHeader (  ) .length == 0 )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < header.length; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[BugLab_Variable_Misuse]^if  ( result == null )  {^204^^^^^189^219^if  ( current == null )  {^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^if  ( current != null )  {^204^^^^^189^219^if  ( current == null )  {^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^if  ( result == null )  {^215^^^^^200^230^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^if  ( next != null )  {^215^^^^^200^230^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^if  ( next != null )  {^218^^^^^203^233^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^if  ( result == null )  {^218^^^^^203^233^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^return current == null;^208^^^^^193^223^return current != null;^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^return result;^223^^^^^208^238^return next;^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^CSVRecord next = result;^212^^^^^197^227^CSVRecord next = current;^[CLASS] CSVParser 1  [METHOD] iterator [RETURN_TYPE] Iterator   [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  IOException  e  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^if  ( result == null )  {^204^^^^^203^209^if  ( current == null )  {^[CLASS] CSVParser 1  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^if  ( current != null )  {^204^^^^^203^209^if  ( current == null )  {^[CLASS] CSVParser 1  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^return result != null;^208^^^^^203^209^return current != null;^[CLASS] CSVParser 1  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^return current == null;^208^^^^^203^209^return current != null;^[CLASS] CSVParser 1  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^CSVRecord next = result;^212^^^^^211^224^CSVRecord next = current;^[CLASS] CSVParser 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^if  ( result == null )  {^215^^^^^211^224^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^if  ( next != null )  {^215^^^^^211^224^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^if  ( result == null )  {^218^^^^^211^224^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^if  ( next != null )  {^218^^^^^211^224^if  ( next == null )  {^[CLASS] CSVParser 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Variable_Misuse]^return result;^223^^^^^211^224^return next;^[CLASS] CSVParser 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  next  rec  result  boolean  Map  hdrMap  headerMapping  
[BugLab_Wrong_Operator]^if  ( current != null )  {^204^^^^^203^209^if  ( current == null )  {^[CLASS] 1  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] CSVRecord  current  boolean  
[BugLab_Wrong_Operator]^return current == null;^208^^^^^203^209^return current != null;^[CLASS] 1  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] CSVRecord  current  boolean  
[BugLab_Variable_Misuse]^if  ( current == null )  {^215^^^^^211^224^if  ( next == null )  {^[CLASS] 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] CSVRecord  current  next  boolean  
[BugLab_Wrong_Operator]^if  ( next != null )  {^215^^^^^211^224^if  ( next == null )  {^[CLASS] 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] CSVRecord  current  next  boolean  
[BugLab_Variable_Misuse]^if  ( current == null )  {^218^^^^^211^224^if  ( next == null )  {^[CLASS] 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] CSVRecord  current  next  boolean  
[BugLab_Wrong_Operator]^if  ( next != null )  {^218^^^^^211^224^if  ( next == null )  {^[CLASS] 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] CSVRecord  current  next  boolean  
[BugLab_Variable_Misuse]^return current;^223^^^^^211^224^return next;^[CLASS] 1  [METHOD] next [RETURN_TYPE] CSVRecord   [VARIABLES] CSVRecord  current  next  boolean  
