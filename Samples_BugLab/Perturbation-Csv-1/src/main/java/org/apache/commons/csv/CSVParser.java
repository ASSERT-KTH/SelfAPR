[buglab_swap_variables]^this.lexer = new CSVLexer ( input, new ExtendedBufferedReader ( format )  ) ;^94^^^^^91^97^this.lexer = new CSVLexer ( format, new ExtendedBufferedReader ( input )  ) ;^[CLASS] CSVParser 1  [METHOD] <init> [RETURN_TYPE] CSVFormat)   Reader input CSVFormat format [VARIABLES] Lexer  lexer  boolean  Reader  input  List  record  Token  reusableToken  CSVRecord  current  CSVFormat  format  Map  headerMapping  
[buglab_swap_variables]^this.lexer = new CSVLexer (  new ExtendedBufferedReader ( input )  ) ;^94^^^^^91^97^this.lexer = new CSVLexer ( format, new ExtendedBufferedReader ( input )  ) ;^[CLASS] CSVParser 1  [METHOD] <init> [RETURN_TYPE] CSVFormat)   Reader input CSVFormat format [VARIABLES] Lexer  lexer  boolean  Reader  input  List  record  Token  reusableToken  CSVRecord  current  CSVFormat  format  Map  headerMapping  
[buglab_swap_variables]^this ( new StringReader ( format ) , input ) ;^107^^^^^106^108^this ( new StringReader ( input ) , format ) ;^[CLASS] CSVParser 1  [METHOD] <init> [RETURN_TYPE] CSVFormat)   String input CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  Token  reusableToken  CSVRecord  current  CSVFormat  format  String  input  Map  headerMapping  
[buglab_swap_variables]^this ( new StringReader ( input )  ) ;^107^^^^^106^108^this ( new StringReader ( input ) , format ) ;^[CLASS] CSVParser 1  [METHOD] <init> [RETURN_TYPE] CSVFormat)   String input CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  Token  reusableToken  CSVRecord  current  CSVFormat  format  String  input  Map  headerMapping  
[buglab_swap_variables]^result = new CSVRecord ( headerMapping.toArray ( new String[record.size (  ) ] ) , record ) ;^161^^^^^135^164^result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ;^[CLASS] CSVParser 1  [METHOD] getRecord [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  boolean  Map  headerMapping  
[buglab_swap_variables]^result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] )  ) ;^161^^^^^135^164^result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ;^[CLASS] CSVParser 1  [METHOD] getRecord [RETURN_TYPE] CSVRecord   [VARIABLES] Lexer  lexer  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  boolean  Map  headerMapping  
[buglab_swap_variables]^for  ( header.lengthnt i = 0; i < i; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[buglab_swap_variables]^for  ( headernt i = 0; i < i.length; i++ )  {^187^^^^^169^193^for  ( int i = 0; i < header.length; i++ )  {^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
[buglab_swap_variables]^hdrMap.put ( i[i], Integer.valueOf ( header )  ) ;^188^^^^^169^193^hdrMap.put ( header[i], Integer.valueOf ( i )  ) ;^[CLASS] CSVParser 1  [METHOD] initializeHeader [RETURN_TYPE] Map   CSVFormat format [VARIABLES] Lexer  lexer  boolean  List  record  records  Token  reusableToken  CSVRecord  current  rec  result  CSVFormat  format  String[]  header  Map  hdrMap  headerMapping  int  i  
