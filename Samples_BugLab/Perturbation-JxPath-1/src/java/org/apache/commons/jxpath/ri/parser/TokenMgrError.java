[BugLab_Wrong_Literal]^static final int STATIC_LEXER_ERROR = null;^21^^^^^16^26^static final int STATIC_LEXER_ERROR = 1;^[CLASS] TokenMgrError   [VARIABLES] 
[BugLab_Wrong_Literal]^static final int INVALID_LEXICAL_STATE = 1;^26^^^^^21^31^static final int INVALID_LEXICAL_STATE = 2;^[CLASS] TokenMgrError   [VARIABLES] 
[BugLab_Variable_Misuse]^errorCode = position;^130^^^^^128^131^errorCode = reason;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,int)   String message int reason [VARIABLES] char  character  String  message  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, errorLine, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, lexState, reason, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorLine, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, character ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , errorLine ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( errorColumn, lexState, errorLine, EOFSeen, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( EOFSeen, errorColumn, errorLine, lexState, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( EOFSeen, lexState, errorColumn, errorLine, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( EOFSeen, errorAfter, errorLine, errorColumn, lexState, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( curChar, lexState, errorLine, errorColumn, errorAfter, EOFSeen ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( EOFSeen, reason, errorLine, errorColumn, errorAfter, curChar ) , lexState ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, reason, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, lexState, lexState, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^this ( LexicalError ( EOFSeen, lexState, errorLine, reason, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( lexState, EOFSeen, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorAfter, errorColumn, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Argument_Swapping]^this ( LexicalError ( EOFSeen, lexState, curChar, errorColumn, errorAfter, errorLine ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^position = errorLine - 1;^137^^^^^133^139^position = errorColumn - 1;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Wrong_Operator]^position = errorColumn  >=  1;^137^^^^^133^139^position = errorColumn - 1;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Wrong_Literal]^position = errorColumn ;^137^^^^^133^139^position = errorColumn - 1;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^character = character;^138^^^^^133^139^character = curChar;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[BugLab_Variable_Misuse]^if  (  ( ch = str.charAt ( position )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^if  (  ( curChar = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^if  (  ( ch = strtr.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^if  (  ( ch = s.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^if  (  ( ch = itr.charAt ( s )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^if  (  ( s = chtr.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^if  (  ( ch = str.charAt ( i )  )  < 0x20 && ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^if  (  ( ch = str.charAt ( i )  )  == 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch >= 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^retval.append ( curChar ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^String s = "0000" + Integer.toString ( curChar, 16 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^String s = "0000" + Integer.toString ( ch, position ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^retval.append ( "\\u" + str.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  ==  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   ||  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  , s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   ^  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  - errorColumn, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^for  ( errorColumnnt i = 0; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < s.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < strtr.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^for   instanceof   ( int i = 0; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^for  ( int i = ; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^for  ( int i = errorLine; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^if  (  ( ch = str.charAt ( reason )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^if  (  ( str = ch.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^if  (  ( ch = str.charAt ( i )  )  <= 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch == 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  >=  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   &&  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   <<  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^if  (  ( ch = i.charAt ( str )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^String s = "0000" + Integer.toString ( ch, INVALID_LEXICAL_STATE ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^switch  ( s.charAt ( i )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^switch  ( str.charAt ( errorColumn )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^switch  ( i.charAt ( str )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^if  (  ( ch = str.charAt ( errorLine )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^String s = "0000" + Integer.toString ( ch, 15 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  ||  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^retval.append ( curChar ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^if  (  ( ch = str.charAt ( errorColumn )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^String s = "0000" + Integer.toString ( ch, LEXICAL_ERROR ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^switch  ( str.charAt ( errorLine )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  |  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   &  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  - STATIC_LEXER_ERROR, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   >  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^return ( "Lexical error at line " + errorColumn + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^return ( "Lexical error at line " + errorLine + ", column " + errorLine + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( character )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^return ( "Lexical error at line " + EOFSeen + ", column " + errorColumn + ".  Encountered: " + ( errorLine ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^return ( "Lexical error at line " + errorLine + ", column " + EOFSeen + ".  Encountered: " + ( errorColumn ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Argument_Swapping]^return ( "Lexical error at line " + errorLine + ", column " + curChar + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( errorColumn )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  <=  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  &&  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  >  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  >=  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  <<  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  <  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line "  |  errorLine  |  ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line "  >>  errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  ^  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Wrong_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  !=  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( character )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  + "after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^104^105^^^^100^106^( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  + "after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[BugLab_Variable_Misuse]^return errorLine;^147^^^^^146^148^return position;^[CLASS] TokenMgrError  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] char  ch  character  curChar  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  boolean  
[BugLab_Variable_Misuse]^return curChar;^151^^^^^150^152^return character;^[CLASS] TokenMgrError  [METHOD] getCharacter [RETURN_TYPE] char   [VARIABLES] char  ch  character  curChar  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  boolean  
