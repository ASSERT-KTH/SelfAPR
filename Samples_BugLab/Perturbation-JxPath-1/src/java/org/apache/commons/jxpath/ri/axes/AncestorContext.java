[BugLab_Wrong_Literal]^private boolean setStarted = true;^31^^^^^26^36^private boolean setStarted = false;^[CLASS] AncestorContext   [VARIABLES] 
[BugLab_Variable_Misuse]^this.includeSelf = setStarted;^47^^^^^41^49^this.includeSelf = includeSelf;^[CLASS] AncestorContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext boolean includeSelf NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^setStarted = true;^61^^^^^59^62^setStarted = false;^[CLASS] AncestorContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( position == getCurrentPosition (  )  )  {^65^^^^^64^75^if  ( position < getCurrentPosition (  )  )  {^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Wrong_Operator]^while  ( getCurrentPosition (  )  <= position )  {^69^^^^^64^75^while  ( getCurrentPosition (  )  < position )  {^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Wrong_Literal]^return true;^71^^^^^64^75^return false;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Wrong_Literal]^return false;^74^^^^^64^75^return true;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Variable_Misuse]^if  ( !includeSelf )  {^78^^^^^77^101^if  ( !setStarted )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Variable_Misuse]^if  ( setStarted )  {^81^^^^^77^101^if  ( includeSelf )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^82^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^return false;^84^^^^^77^101^return true;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^setStarted = false;^79^^^^^77^101^setStarted = true;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^while  ( false )  {^89^^^^^77^101^while  ( true )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( currentNodePointer != null )  {^92^^^^^77^101^if  ( currentNodePointer == null )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^return true;^93^^^^^77^101^return false;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Argument_Swapping]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^96^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Literal]^return false;^98^^^^^77^101^return true;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
