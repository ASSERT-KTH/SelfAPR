[BugLab_Wrong_Literal]^private boolean setStarted = true;^34^^^^^29^39^private boolean setStarted = false;^[CLASS] NamespaceContext   [VARIABLES] 
[BugLab_Wrong_Literal]^setStarted = true;^52^^^^^51^55^setStarted = false;^[CLASS] NamespaceContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[BugLab_Wrong_Operator]^if  ( position <= getCurrentPosition (  )  )  {^58^^^^^57^68^if  ( position < getCurrentPosition (  )  )  {^[CLASS] NamespaceContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Wrong_Operator]^while  ( getCurrentPosition (  )  > position )  {^62^^^^^57^68^while  ( getCurrentPosition (  )  < position )  {^[CLASS] NamespaceContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Wrong_Literal]^return true;^64^^^^^57^68^return false;^[CLASS] NamespaceContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Wrong_Literal]^return false;^67^^^^^57^68^return true;^[CLASS] NamespaceContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^71^^^^^56^86^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^71^^^^^56^86^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^if  ( ! ( nodeTest  >  NodeNameTest )  )  {^74^^^^^59^89^if  ( ! ( nodeTest instanceof NodeNameTest )  )  {^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^return true;^75^^^^^60^90^return false;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^if  ( testName.getPrefix (  )  == null )  {^80^^^^^65^95^if  ( testName.getPrefix (  )  != null )  {^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^return true;^81^^^^^66^96^return false;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Argument_Swapping]^currentNodePointer = testName.getCurrentNodePointer (  ) .namespacePointer ( parentContext.getName (  )  ) ;^88^89^90^^^83^92^currentNodePointer = parentContext.getCurrentNodePointer (  ) .namespacePointer ( testName.getName (  )  ) ;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^return currentNodePointer == null;^91^^^^^83^92^return currentNodePointer != null;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^setStarted = false;^73^^^^^58^88^setStarted = true;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Argument_Swapping]^currentNodePointer = testName.getCurrentNodePointer (  ) .namespacePointer ( parentContext.getName (  )  ) ;^88^89^90^^^73^103^currentNodePointer = parentContext.getCurrentNodePointer (  ) .namespacePointer ( testName.getName (  )  ) ;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^return currentNodePointer == null;^91^^^^^76^106^return currentNodePointer != null;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^if  ( ! ( nodeTest  <  NodeNameTest )  )  {^74^^^^^59^89^if  ( ! ( nodeTest instanceof NodeNameTest )  )  {^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Variable_Misuse]^currentNodePointer = null.getCurrentNodePointer (  ) .namespacePointer ( testName.getName (  )  ) ;^88^89^90^^^73^103^currentNodePointer = parentContext.getCurrentNodePointer (  ) .namespacePointer ( testName.getName (  )  ) ;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^if  ( iterator != null )  {^95^^^^^80^110^if  ( iterator == null )  {^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^return true;^96^^^^^81^111^return false;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^if  ( !iterator.setPosition ( iterator.getPosition (  )   <=  1 )  )  {^98^^^^^83^113^if  ( !iterator.setPosition ( iterator.getPosition (  )  + 1 )  )  {^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^if  ( !iterator.setPosition ( iterator.getPosition (  )   )  )  {^98^^^^^83^113^if  ( !iterator.setPosition ( iterator.getPosition (  )  + 1 )  )  {^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^return true;^99^^^^^84^114^return false;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Operator]^if  ( !iterator.setPosition ( iterator.getPosition (  )   !=  1 )  )  {^98^^^^^83^113^if  ( !iterator.setPosition ( iterator.getPosition (  )  + 1 )  )  {^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
[BugLab_Wrong_Literal]^return false;^102^^^^^87^117^return true;^[CLASS] NamespaceContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  NodeNameTest  nodeNameTest  QName  testName  
