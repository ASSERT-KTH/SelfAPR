[BugLab_Wrong_Literal]^private boolean setStarted = true;^35^^^^^30^40^private boolean setStarted = false;^[CLASS] PrecedingOrFollowingContext   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean started = true;^36^^^^^31^41^private boolean started = false;^[CLASS] PrecedingOrFollowingContext   [VARIABLES] 
[BugLab_Variable_Misuse]^this.reverse = started;^50^^^^^43^51^this.reverse = reverse;^[CLASS] PrecedingOrFollowingContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean)   EvalContext parentContext NodeTest nodeTest boolean reverse [VARIABLES] EvalContext  parentContext  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^return currentRootLocation;^54^^^^^53^55^return currentNodePointer;^[CLASS] PrecedingOrFollowingContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^return started ? -1 : 1;^58^^^^^57^59^return reverse ? -1 : 1;^[CLASS] PrecedingOrFollowingContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^setStarted = true;^64^^^^^61^65^setStarted = false;^[CLASS] PrecedingOrFollowingContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( position <= this.position )  {^68^^^^^67^78^if  ( position < this.position )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^while  ( this.position > position )  {^72^^^^^67^78^while  ( this.position < position )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^return true;^74^^^^^67^78^return false;^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^return false;^77^^^^^67^78^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( !started )  {^81^^^^^66^96^if  ( !setStarted )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( currentNodePointer != null )  {^85^^^^^70^100^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^85^^^^^70^100^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( currentNodePointer.childIterator ( null, reverse, currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^stack.push ( currentRootLocation.childIterator ( null, reverse, parent )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^parent.childIterator ( null, started, currentRootLocation )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^setStarted = false;^82^^^^^67^97^setStarted = true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^NodePointer parent = currentNodePointer.getParent (  ) ;^84^^^^^69^99^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^NodePointer parent = parent.getParent (  ) ;^84^^^^^69^99^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( parent.childIterator ( null, started, currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( parent.childIterator ( null, reverse, currentNodePointer )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^stack.push ( parent.childIterator ( null, currentRootLocation, reverse )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^parent.childIterator ( null, reverse, parent )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^parent.childIterator ( null, currentRootLocation, reverse )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^stack.push ( reverse.childIterator ( null, parent, currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^parent.childIterator ( null, reverse, currentNodePointer )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^while  ( false )  {^92^^^^^77^107^while  ( true )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )    instanceof   1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ==  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  <=  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^if  ( it.setPosition ( it.getPosition (  )   )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^return false;^157^^^^^136^160^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^it =  ( PropertyIterator )  nameStack.peek (  ) ;^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( parent.testNode ( nodeTest )  )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >=  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  + null ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^return false;^147^^^^^132^162^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^else if  ( parent.testNode ( nodeTest )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^else if  ( nodeTest.testNode ( currentNodePointer )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( parent.childIterator ( null, reverse,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( currentNodePointer.childIterator ( null, started,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^stack.push ( reverse.childIterator ( null, currentNodePointer,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^currentNodePointer.childIterator ( null, started, null )  ) ;^140^141^142^143^^125^155^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >=  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   &  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  + null ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^return false;^157^^^^^142^172^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  +  ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^it =  ( PropertyIterator )  nameStack.peek (  ) ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( parent.testNode ( nodeTest )  )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   &&  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^NodeIterator it =  ( NodeIterator )  nameStack.peek (  ) ;^135^^^^^120^150^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   <<  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   !=  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   &&  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  <=  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^if  ( it.setPosition ( it.getPosition (  )   )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( parent.childIterator ( null, reverse,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( currentNodePointer.childIterator ( null, started,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^stack.push ( reverse.childIterator ( null, currentNodePointer,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^currentNodePointer.childIterator ( null, started, null )  ) ;^118^119^120^121^^103^133^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^return false;^125^^^^^110^140^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ||  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( parent.testNode ( nodeTest )  )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   &  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^NodeIterator it =  ( NodeIterator )  nameStack.peek (  ) ;^113^^^^^98^128^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   ^  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  +  ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  !=  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^if  ( it.setPosition ( it.getPosition (  )  +  )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   !=  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   <=  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  >  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   !=  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  +  ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   !=  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ||  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  + null ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   !=  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( nameStack.isEmpty (  )  )  {^93^^^^^78^108^if  ( stack.isEmpty (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( parent == null || currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( currentRootLocation == null && currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( currentRootLocation != null || currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^if  ( currentNodePointer != null )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( currentNodePointer.childIterator ( null, reverse,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( parent.childIterator ( null, started,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^stack.push ( reverse.childIterator ( null, parent,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^parent.childIterator ( null, started, currentRootLocation )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^parent.childIterator ( null, reverse, currentNodePointer )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Argument_Swapping]^parent.childIterator ( null, currentRootLocation, reverse )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^currentRootLocation = parent.getParent (  ) ;^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^|| parent.isRoot (  )  )  {^97^^^^^82^112^|| currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   |  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  >=  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^if  ( it.setPosition ( it.getPosition (  )  + this )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   &  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  +  ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   &&  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )    instanceof   1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  <  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >=  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   <  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   |  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  &  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   >=  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  &&  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if   instanceof   ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   &&  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ||  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   &&  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >=  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^NodePointer parent = parent.getParent (  ) ;^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^parent.childIterator ( null, reverse, parent )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   ||  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  |  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  &  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^if  ( it.setPosition ( it.getPosition (  )  +  )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   >>  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  &&  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   ||  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  >>  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   &  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  >>  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   >=  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   >  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^NodePointer parent = currentNodePointer.getParent (  ) ;^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Variable_Misuse]^stack.push ( currentRootLocation.childIterator ( null, reverse,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   <  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  <<  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   ||  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   ==  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ^  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^if  ( it.setPosition ( it.getPosition (  )  + null )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^super.setPosition ( getCurrentPosition (  )  + this ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Operator]^if  ( it.setPosition ( it.getPosition (  )   !=  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^if  ( it.setPosition ( it.getPosition (  )  + null )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[BugLab_Wrong_Literal]^return true;^164^^^^^149^179^return false;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
