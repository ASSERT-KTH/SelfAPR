[BugLab_Wrong_Literal]^private int position = 1;^36^^^^^31^41^private int position = 0;^[CLASS] DOMNodeIterator   [VARIABLES] 
[BugLab_Variable_Misuse]^this.parent = startWith;^44^^^^^38^51^this.parent = parent;^[CLASS] DOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^this.node =  ( Node )  startWith.getNode (  ) ;^45^^^^^38^51^this.node =  ( Node )  parent.getNode (  ) ;^[CLASS] DOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^if  ( parent != null )  {^46^^^^^38^51^if  ( startWith != null )  {^[CLASS] DOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( startWith == null )  {^46^^^^^38^51^if  ( startWith != null )  {^[CLASS] DOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^this.child =  ( Node )  parent.getNode (  ) ;^47^^^^^38^51^this.child =  ( Node )  startWith.getNode (  ) ;^[CLASS] DOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( position != 0 )  {^54^^^^^53^61^if  ( position == 0 )  {^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^if  ( position ==  )  {^54^^^^^53^61^if  ( position == 0 )  {^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^setPosition (  ) ;^55^^^^^53^61^setPosition ( 1 ) ;^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^setPosition ( position ) ;^55^^^^^53^61^setPosition ( 1 ) ;^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^if  ( node == null )  {^57^^^^^53^61^if  ( child == null )  {^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( child != null )  {^57^^^^^53^61^if  ( child == null )  {^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^return new DOMNodePointer ( startWith, child ) ;^60^^^^^53^61^return new DOMNodePointer ( parent, child ) ;^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^return new DOMNodePointer ( parent, node ) ;^60^^^^^53^61^return new DOMNodePointer ( parent, child ) ;^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Argument_Swapping]^return new DOMNodePointer ( child, parent ) ;^60^^^^^53^61^return new DOMNodePointer ( parent, child ) ;^[CLASS] DOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Argument_Swapping]^while  ( position < this.position )  {^68^^^^^67^79^while  ( this.position < position )  {^[CLASS] DOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( this.position <= position )  {^68^^^^^67^79^while  ( this.position < position )  {^[CLASS] DOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^return true;^70^^^^^67^79^return false;^[CLASS] DOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Argument_Swapping]^while  ( position > this.position )  {^73^^^^^67^79^while  ( this.position > position )  {^[CLASS] DOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( this.position >= position )  {^73^^^^^67^79^while  ( this.position > position )  {^[CLASS] DOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^return true;^75^^^^^67^79^return false;^[CLASS] DOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^return false;^78^^^^^67^79^return true;^[CLASS] DOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^while  ( node != null && !testChild (  )  )  {^93^^^^^81^104^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child != null || !testChild (  )  )  {^93^^^^^81^104^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child == null && !testChild (  )  )  {^93^^^^^81^104^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getPreviousSibling (  ) ;^94^^^^^81^104^child = child.getPreviousSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^while  ( node != null && !testChild (  )  )  {^99^^^^^81^104^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child != null || !testChild (  )  )  {^99^^^^^81^104^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child == null && !testChild (  )  )  {^99^^^^^81^104^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getNextSibling (  ) ;^100^^^^^81^104^child = child.getNextSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getNextSibling (  ) ;^98^^^^^81^104^child = child.getNextSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( position != 0 )  {^84^^^^^81^104^if  ( position == 0 )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^if  ( position == position )  {^84^^^^^81^104^if  ( position == 0 )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^else if  ( child != null )  {^87^^^^^81^104^else if  ( child == null )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getPreviousSibling (  ) ;^91^^^^^81^104^child = child.getPreviousSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = child.getLastChild (  ) ;^88^^^^^81^104^child = node.getLastChild (  ) ;^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^if  ( position == 1 )  {^84^^^^^81^104^if  ( position == 0 )  {^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^return node != null;^103^^^^^81^104^return child != null;^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^return child == null;^103^^^^^81^104^return child != null;^[CLASS] DOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^while  ( node != null && !testChild (  )  )  {^120^^^^^105^135^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child != null || !testChild (  )  )  {^120^^^^^105^135^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child == null && !testChild (  )  )  {^120^^^^^105^135^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getNextSibling (  ) ;^121^^^^^106^136^child = child.getNextSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^while  ( node != null && !testChild (  )  )  {^136^^^^^121^151^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child != null || !testChild (  )  )  {^136^^^^^121^151^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^while  ( child == null && !testChild (  )  )  {^136^^^^^121^151^while  ( child != null && !testChild (  )  )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getPreviousSibling (  ) ;^137^^^^^122^152^child = child.getPreviousSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( position > 1 )  {^125^^^^^110^140^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( position != 1 )  {^125^^^^^110^140^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^if  ( position == 2 )  {^125^^^^^110^140^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getPreviousSibling (  ) ;^134^^^^^125^135^child = child.getPreviousSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( child != null )  {^126^^^^^111^141^if  ( child == null )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getPreviousSibling (  ) ;^130^^^^^126^131^child = child.getPreviousSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = child.getLastChild (  ) ;^127^^^^^112^142^child = node.getLastChild (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getPreviousSibling (  ) ;^130^^^^^115^145^child = child.getPreviousSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getPreviousSibling (  ) ;^134^^^^^119^149^child = child.getPreviousSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( position >= 1 )  {^109^^^^^94^124^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^if  ( position == 2 )  {^109^^^^^94^124^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getNextSibling (  ) ;^118^^^^^109^119^child = child.getNextSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( child != null )  {^110^^^^^95^125^if  ( child == null )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getNextSibling (  ) ;^114^^^^^110^115^child = child.getNextSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = child.getFirstChild (  ) ;^111^^^^^96^126^child = node.getFirstChild (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getNextSibling (  ) ;^114^^^^^99^129^child = child.getNextSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^child = node.getNextSibling (  ) ;^118^^^^^103^133^child = child.getNextSibling (  ) ;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( position < 1 )  {^109^^^^^94^124^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^if  ( position <= 1 )  {^109^^^^^94^124^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^if  ( position == position )  {^109^^^^^94^124^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Literal]^if  ( position == position )  {^125^^^^^110^140^if  ( position == 1 )  {^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^return node != null;^140^^^^^125^155^return child != null;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Wrong_Operator]^return child == null;^140^^^^^125^155^return child != null;^[CLASS] DOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Variable_Misuse]^return DOMNodePointer.testNode ( node, nodeTest ) ;^144^^^^^143^145^return DOMNodePointer.testNode ( child, nodeTest ) ;^[CLASS] DOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
[BugLab_Argument_Swapping]^return DOMNodePointer.testNode ( nodeTest, child ) ;^144^^^^^143^145^return DOMNodePointer.testNode ( child, nodeTest ) ;^[CLASS] DOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  NodePointer  parent  startWith  NodeTest  nodeTest  int  position  Node  child  node  
