[buglab_swap_variables]^return args.length == null || args == 0;^159^^^^^144^174^return args == null || args.length == 0;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[buglab_swap_variables]^return args.length != null && args == 2;^182^^^^^167^197^return args != null && args.length == 2;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[buglab_swap_variables]^Object value = context.compute ( arg1 ) ;^305^^^^^301^326^Object value = arg1.compute ( context ) ;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[buglab_swap_variables]^return lang.isLanguage ( pointer )  ? Boolean.TRUE : Boolean.FALSE;^335^^^^^328^336^return pointer.isLanguage ( lang )  ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionLang [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  lang  NodePointer  pointer  boolean  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return id.getPointerByID ( jxpathContext, pointer ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByID ( id, jxpathContext ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByID (  id ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByID ( jxpathContext ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return jxpathContext.getPointerByID ( pointer, id ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return value.getPointerByKey ( jxpathContext, key, pointer ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByKey ( key, jxpathContext, value ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByKey (  key, value ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByKey ( jxpathContext, value, key ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByKey ( jxpathContext,  value ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return pointer.getPointerByKey ( jxpathContext, key ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^buffer.append ( InfoSetUtil.stringValue ( context[i].compute ( args )  )  ) ;^423^^^^^416^426^buffer.append ( InfoSetUtil.stringValue ( args[i].compute ( context )  )  ) ;^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[buglab_swap_variables]^return s2.startsWith ( s1 )  ? Boolean.TRUE : Boolean.FALSE;^432^^^^^428^433^return s1.startsWith ( s2 )  ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionStartsWith [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^return s2.indexOf ( s1 )  != -1 ? Boolean.TRUE : Boolean.FALSE;^439^^^^^435^440^return s1.indexOf ( s2 )  != -1 ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionContains [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[buglab_swap_variables]^int index = s2.indexOf ( s1 ) ;^446^^^^^442^451^int index = s1.indexOf ( s2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[buglab_swap_variables]^return index.substring ( 0, s1 ) ;^450^^^^^442^451^return s1.substring ( 0, index ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[buglab_swap_variables]^return s1.substring ( 0 ) ;^450^^^^^442^451^return s1.substring ( 0, index ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[buglab_swap_variables]^int index = s2.indexOf ( s1 ) ;^457^^^^^453^462^int index = s1.indexOf ( s2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[buglab_swap_variables]^return s2.substring ( index + s1.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[buglab_swap_variables]^return index.substring ( s1 + s2.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[buglab_swap_variables]^if  ( s1 > from.length (  )  + 1 )  {^477^^^^^462^492^if  ( from > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[buglab_swap_variables]^double to = length + from;^494^^^^^480^510^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[buglab_swap_variables]^return to.substring (  ( int )  from - 1,  ( int )   ( s1 - 1 )  ) ;^509^^^^^480^510^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[buglab_swap_variables]^return to.substring (  ( int )  from - 1,  ( int )   ( s1 - 1 )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[buglab_swap_variables]^double to = length + from;^494^^^^^479^509^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[buglab_swap_variables]^for  ( chars.lengtht in = 0; in < in; in++ )  {^531^^^^^525^554^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[buglab_swap_variables]^return new String ( out, 0, chars ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[buglab_swap_variables]^return new String (  0, out ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[buglab_swap_variables]^return new String ( chars, 0 ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[buglab_swap_variables]^if  ( s3 < inx.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^chars[out++] = inx.charAt ( s3 ) ;^568^^^^^556^576^chars[out++] = s3.charAt ( inx ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^for  ( int in = 0; in < chars.length.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^for  ( int in = 0; in < charshars.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^for  ( chars.lengtht in = 0; in < in; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^int inx = c.indexOf ( s2 ) ;^565^^^^^556^576^int inx = s2.indexOf ( c ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^return new String ( out, 0, chars ) ;^575^^^^^556^576^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^return new String (  0, out ) ;^575^^^^^556^576^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^return new String ( chars, 0 ) ;^575^^^^^556^576^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[buglab_swap_variables]^symbols = symbolsName.getJXPathContext (  ) .getDecimalFormatSymbols ( context ) ;^667^668^^^^652^682^symbols = context.getJXPathContext (  ) .getDecimalFormatSymbols ( symbolsName ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[buglab_swap_variables]^return number.format ( format ) ;^685^^^^^670^700^return format.format ( number ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
