[BugLab_Wrong_Literal]^private static final Double ZERO = new Double ( -1 ) ;^42^^^^^37^47^private static final Double ZERO = new Double ( 0 ) ;^[CLASS] CoreFunction   [VARIABLES] 
[BugLab_Wrong_Operator]^return "unknownFunction" + functionCode + " (  |  ) ";^115^^^^^100^130^return "unknownFunction" + functionCode + " (  ) ";^[CLASS] CoreFunction  [METHOD] getFunctionName [RETURN_TYPE] String   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^return "unknownFunction"  >>  functionCode + " (  ) ";^115^^^^^100^130^return "unknownFunction" + functionCode + " (  ) ";^[CLASS] CoreFunction  [METHOD] getFunctionName [RETURN_TYPE] String   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return args[functionCode];^119^^^^^118^120^return args[0];^[CLASS] CoreFunction  [METHOD] getArg1 [RETURN_TYPE] Expression   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return args[functionCode];^123^^^^^122^124^return args[1];^[CLASS] CoreFunction  [METHOD] getArg2 [RETURN_TYPE] Expression   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return args[functionCode];^127^^^^^126^128^return args[2];^[CLASS] CoreFunction  [METHOD] getArg3 [RETURN_TYPE] Expression   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^if  ( args != null )  {^131^^^^^130^135^if  ( args == null )  {^[CLASS] CoreFunction  [METHOD] getArgumentCount [RETURN_TYPE] int   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return functionCode;^132^^^^^130^135^return 0;^[CLASS] CoreFunction  [METHOD] getArgumentCount [RETURN_TYPE] int   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return false;^144^^^^^129^159^return true;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return false;^150^^^^^135^165^return true;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Argument_Swapping]^return args.length == null || args == 0;^159^^^^^144^174^return args == null || args.length == 0;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^return args == null && args.length == 0;^159^^^^^144^174^return args == null || args.length == 0;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^return args != null || args.length == 0;^159^^^^^144^174^return args == null || args.length == 0;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return args == null || args.length == functionCode;^159^^^^^144^174^return args == null || args.length == 0;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return true;^179^^^^^164^194^return false;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Variable_Misuse]^return 2 != null && args.length == 2;^182^^^^^167^197^return args != null && args.length == 2;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Argument_Swapping]^return args.length != null && args == 2;^182^^^^^167^197^return args != null && args.length == 2;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^return args != null || args.length == 2;^182^^^^^167^197^return args != null && args.length == 2;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^return args == null && args.length == 2;^182^^^^^167^197^return args != null && args.length == 2;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^return args != null && args.length != 2;^182^^^^^167^197^return args != null && args.length == 2;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return args != null && args.length == 3;^182^^^^^167^197^return args != null && args.length == 2;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Literal]^return true;^185^^^^^170^200^return false;^[CLASS] CoreFunction  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Double  ZERO  int  functionCode  boolean  
[BugLab_Wrong_Operator]^if  ( args == null )  {^193^^^^^188^203^if  ( args != null )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Variable_Misuse]^if  ( functionCode > 0 )  {^195^^^^^188^203^if  ( i > 0 )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Operator]^if  ( i >= 0 )  {^195^^^^^188^203^if  ( i > 0 )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Literal]^if  ( i > functionCode )  {^195^^^^^188^203^if  ( i > 0 )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= args.length; i++ )  {^194^^^^^188^203^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < args.length; i++ )  {^194^^^^^188^203^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Literal]^for  ( int i = ; i < args.length; i++ )  {^194^^^^^188^203^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Operator]^if  ( i == 0 )  {^195^^^^^188^203^if  ( i > 0 )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Literal]^if  ( i > 1 )  {^195^^^^^188^203^if  ( i > 0 )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Literal]^for  ( int i = i; i < args.length; i++ )  {^194^^^^^188^203^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Literal]^if  ( i > i )  {^195^^^^^188^203^if  ( i > 0 )  {^[CLASS] CoreFunction  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Double  ZERO  int  functionCode  i  Expression[]  args  
[BugLab_Wrong_Literal]^assertArgCount ( old ) ;^279^^^^^278^294^assertArgCount ( 0 ) ;^[CLASS] CoreFunction  [METHOD] functionLast [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^int count = 1;^284^^^^^278^294^int count = 0;^[CLASS] CoreFunction  [METHOD] functionLast [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^if  ( i != 0 )  {^290^^^^^278^294^if  ( old != 0 )  {^[CLASS] CoreFunction  [METHOD] functionLast [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( old <= 0 )  {^290^^^^^278^294^if  ( old != 0 )  {^[CLASS] CoreFunction  [METHOD] functionLast [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^if  ( old != 1 )  {^290^^^^^278^294^if  ( old != 0 )  {^[CLASS] CoreFunction  [METHOD] functionLast [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^context.setPosition ( i ) ;^291^^^^^278^294^context.setPosition ( old ) ;^[CLASS] CoreFunction  [METHOD] functionLast [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^return new Double ( old ) ;^293^^^^^278^294^return new Double ( count ) ;^[CLASS] CoreFunction  [METHOD] functionLast [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount ( old ) ;^302^^^^^301^326^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^int count = -1;^304^^^^^301^326^int count = 0;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^Object value = context.compute ( arg1 ) ;^305^^^^^301^326^Object value = arg1.compute ( context ) ;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^Object value = arg1.compute ( ctx ) ;^305^^^^^301^326^Object value = arg1.compute ( context ) ;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( value  |  NodePointer )  {^306^^^^^301^326^if  ( value instanceof NodePointer )  {^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^while  ( context.hasNext (  )  )  {^311^^^^^301^326^while  ( ctx.hasNext (  )  )  {^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( value  >=  EvalContext )  {^309^^^^^301^326^if  ( value instanceof EvalContext )  {^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( value  ==  EvalContext )  {^309^^^^^301^326^if  ( value instanceof EvalContext )  {^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^else if  ( value  >  Collection )  {^316^^^^^301^326^else if  ( value instanceof Collection )  {^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^else if  ( value != null )  {^319^^^^^301^326^else if  ( value == null )  {^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = i;^323^^^^^301^326^count = 1;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = count;^320^^^^^301^326^count = 0;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = functionCode;^323^^^^^301^326^count = 1;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = old;^320^^^^^301^326^count = 0;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = -1;^320^^^^^301^326^count = 0;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = 2;^323^^^^^301^326^count = 1;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^else if  ( value  <<  Collection )  {^316^^^^^301^326^else if  ( value instanceof Collection )  {^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = ;^320^^^^^301^326^count = 0;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = ;^323^^^^^301^326^count = 1;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^count = old;^323^^^^^301^326^count = 1;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^return new Double ( old ) ;^325^^^^^301^326^return new Double ( count ) ;^[CLASS] CoreFunction  [METHOD] functionCount [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  value  boolean  Double  ZERO  Expression  arg1  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount (  ) ;^329^^^^^328^336^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionLang [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  lang  NodePointer  pointer  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( pointer != null )  {^332^^^^^328^336^if  ( pointer == null )  {^[CLASS] CoreFunction  [METHOD] functionLang [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  lang  NodePointer  pointer  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return lang.isLanguage ( pointer )  ? Boolean.TRUE : Boolean.FALSE;^335^^^^^328^336^return pointer.isLanguage ( lang )  ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionLang [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  lang  NodePointer  pointer  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount ( 2 ) ;^339^^^^^338^344^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return jxpathContext.getPointerByID ( pointer, id ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return pointer.getPointerByID ( id, jxpathContext ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return id.getPointerByID ( jxpathContext, pointer ) ;^343^^^^^338^344^return pointer.getPointerByID ( jxpathContext, id ) ;^[CLASS] CoreFunction  [METHOD] functionID [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  id  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^return pointer.getPointerByKey ( jxpathContext, key, key ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return value.getPointerByKey ( jxpathContext, key, pointer ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return pointer.getPointerByKey ( value, key, jxpathContext ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return pointer.getPointerByKey ( jxpathContext, value, key ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return key.getPointerByKey ( jxpathContext, pointer, value ) ;^352^^^^^346^353^return pointer.getPointerByKey ( jxpathContext, key, value ) ;^[CLASS] CoreFunction  [METHOD] functionKey [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  JXPathContext  jxpathContext  EvalContext  context  String  key  value  NodePointer  pointer  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  != 0 )  {^356^^^^^355^372^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  >= 0 )  {^356^^^^^355^372^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  == i )  {^356^^^^^355^372^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^return str != null ? "" : str;^359^^^^^355^372^return str == null ? "" : str;^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^NodePointer ptr = ctx.getCurrentNodePointer (  ) ;^357^^^^^355^372^NodePointer ptr = context.getCurrentNodePointer (  ) ;^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount ( 2 ) ;^361^^^^^355^372^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^Object set = getArg1 (  ) .compute ( ctx ) ;^362^^^^^355^372^Object set = getArg1 (  ) .compute ( context ) ;^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( set  !=  EvalContext )  {^363^^^^^355^372^if  ( set instanceof EvalContext )  {^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^if  ( context.hasNext (  )  )  {^365^^^^^355^372^if  ( ctx.hasNext (  )  )  {^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^return str != null ? "" : str;^368^^^^^355^372^return str == null ? "" : str;^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^NodePointer ptr =  ( NodePointer )  context.next (  ) ;^366^^^^^355^372^NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[CLASS] CoreFunction  [METHOD] functionNamespaceURI [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  ctx  Object  set  NodePointer  ptr  String  str  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  >= 0 )  {^375^^^^^374^389^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  == 1 )  {^375^^^^^374^389^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^NodePointer ptr = ctx.getCurrentNodePointer (  ) ;^376^^^^^374^389^NodePointer ptr = context.getCurrentNodePointer (  ) ;^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount ( 2 ) ;^379^^^^^374^389^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^Object set = getArg1 (  ) .compute ( ctx ) ;^380^^^^^374^389^Object set = getArg1 (  ) .compute ( context ) ;^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( set  >=  EvalContext )  {^381^^^^^374^389^if  ( set instanceof EvalContext )  {^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^if  ( context.hasNext (  )  )  {^383^^^^^374^389^if  ( ctx.hasNext (  )  )  {^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^NodePointer ptr =  ( NodePointer )  context.next (  ) ;^384^^^^^374^389^NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[CLASS] CoreFunction  [METHOD] functionLocalName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  != 0 )  {^392^^^^^391^406^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  == i )  {^392^^^^^391^406^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^NodePointer ptr = ctx.getCurrentNodePointer (  ) ;^393^^^^^391^406^NodePointer ptr = context.getCurrentNodePointer (  ) ;^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount ( functionCode ) ;^396^^^^^391^406^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^Object set = getArg1 (  ) .compute ( ctx ) ;^397^^^^^391^406^Object set = getArg1 (  ) .compute ( context ) ;^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( set  >=  EvalContext )  {^398^^^^^391^406^if  ( set instanceof EvalContext )  {^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^if  ( context.hasNext (  )  )  {^400^^^^^391^406^if  ( ctx.hasNext (  )  )  {^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Variable_Misuse]^NodePointer ptr =  ( NodePointer )  context.next (  ) ;^401^^^^^391^406^NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[CLASS] CoreFunction  [METHOD] functionName [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  ctx  Object  set  NodePointer  ptr  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  != 0 )  {^409^^^^^408^414^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionString [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  == 1 )  {^409^^^^^408^414^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionString [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  <= 2 )  {^417^^^^^416^426^if  ( getArgumentCount (  )  < 2 )  {^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  < 1 )  {^417^^^^^416^426^if  ( getArgumentCount (  )  < 2 )  {^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  <  )  {^417^^^^^416^426^if  ( getArgumentCount (  )  < 2 )  {^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= args.length; i++ )  {^422^^^^^416^426^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[BugLab_Wrong_Literal]^for  ( int i = count; i < args.length; i++ )  {^422^^^^^416^426^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[BugLab_Argument_Swapping]^buffer.append ( InfoSetUtil.stringValue ( context[i].compute ( args )  )  ) ;^423^^^^^416^426^buffer.append ( InfoSetUtil.stringValue ( args[i].compute ( context )  )  ) ;^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < args.length; i++ )  {^422^^^^^416^426^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreFunction  [METHOD] functionConcat [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  StringBuffer  buffer  boolean  Double  ZERO  int  count  functionCode  i  old  Expression[]  args  
[BugLab_Variable_Misuse]^return s2.startsWith ( s2 )  ? Boolean.TRUE : Boolean.FALSE;^432^^^^^428^433^return s1.startsWith ( s2 )  ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionStartsWith [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return s2.startsWith ( s1 )  ? Boolean.TRUE : Boolean.FALSE;^432^^^^^428^433^return s1.startsWith ( s2 )  ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionStartsWith [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount ( 3 ) ;^436^^^^^435^440^assertArgCount ( 2 ) ;^[CLASS] CoreFunction  [METHOD] functionContains [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Argument_Swapping]^return s2.indexOf ( s1 )  != -1 ? Boolean.TRUE : Boolean.FALSE;^439^^^^^435^440^return s1.indexOf ( s2 )  != -1 ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionContains [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Operator]^return s1.indexOf ( s2 )  == -1 ? Boolean.TRUE : Boolean.FALSE;^439^^^^^435^440^return s1.indexOf ( s2 )  != -1 ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionContains [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^return sfunctionCode.indexOf ( s2 )  != -functionCode ? Boolean.TRUE : Boolean.FALSE;^439^^^^^435^440^return s1.indexOf ( s2 )  != -1 ? Boolean.TRUE : Boolean.FALSE;^[CLASS] CoreFunction  [METHOD] functionContains [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  old  
[BugLab_Wrong_Literal]^assertArgCount ( count ) ;^443^^^^^442^451^assertArgCount ( 2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^int index = s2.indexOf ( s2 ) ;^446^^^^^442^451^int index = s1.indexOf ( s2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^int index = s1.indexOf ( s1 ) ;^446^^^^^442^451^int index = s1.indexOf ( s2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Argument_Swapping]^int index = s2.indexOf ( s1 ) ;^446^^^^^442^451^int index = s1.indexOf ( s2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^if  ( old == -1 )  {^447^^^^^442^451^if  ( index == -1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Operator]^if  ( index <= -1 )  {^447^^^^^442^451^if  ( index == -1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Literal]^if  ( index == -count )  {^447^^^^^442^451^if  ( index == -1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^return s2.substring ( 0, index ) ;^450^^^^^442^451^return s1.substring ( 0, index ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^return s1.substring ( 0, old ) ;^450^^^^^442^451^return s1.substring ( 0, index ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Argument_Swapping]^return index.substring ( 0, s1 ) ;^450^^^^^442^451^return s1.substring ( 0, index ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Literal]^return s1.substring ( 1, index ) ;^450^^^^^442^451^return s1.substring ( 0, index ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringBefore [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Literal]^assertArgCount ( old ) ;^454^^^^^453^462^assertArgCount ( 2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^int index = s1.indexOf ( s1 ) ;^457^^^^^453^462^int index = s1.indexOf ( s2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Argument_Swapping]^int index = s2.indexOf ( s1 ) ;^457^^^^^453^462^int index = s1.indexOf ( s2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^if  ( old == -1 )  {^458^^^^^453^462^if  ( index == -1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Operator]^if  ( index != -1 )  {^458^^^^^453^462^if  ( index == -1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Literal]^if  ( index == -2 )  {^458^^^^^453^462^if  ( index == -1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^return s2.substring ( index + s2.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^return s1.substring ( old + s2.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Argument_Swapping]^return s2.substring ( index + s1.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Argument_Swapping]^return index.substring ( s1 + s2.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Operator]^return s1.substring ( index  &&  s2.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^return s1.substring ( index + s1.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Argument_Swapping]^return s1.substring ( s2 + index.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Wrong_Operator]^return s1.substring ( index  &  s2.length (  )  ) ;^461^^^^^453^462^return s1.substring ( index + s2.length (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstringAfter [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  s2  boolean  Double  ZERO  int  count  functionCode  i  index  old  
[BugLab_Variable_Misuse]^if  ( index != 2 && ac != 3 )  {^466^^^^^451^481^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( ac != 2 || ac != 3 )  {^466^^^^^451^481^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( ac >= 2 && ac != 3 )  {^466^^^^^451^481^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( ac != 2 && ac <= 3 )  {^466^^^^^451^481^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( ac != index && ac != 3 )  {^466^^^^^451^481^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( ac !=  && ac != 3 )  {^466^^^^^451^481^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^assertArgCount ( index ) ;^467^^^^^452^482^assertArgCount ( 2 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( Double.isNaN ( to )  )  {^472^^^^^457^487^if  ( Double.isNaN ( from )  )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^from = Math.round ( to ) ;^476^^^^^461^491^from = Math.round ( from ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to > s1.length (  )  + 1 )  {^477^^^^^462^492^if  ( from > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Argument_Swapping]^if  ( s1 > from.length (  )  + 1 )  {^477^^^^^462^492^if  ( from > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from >= s1.length (  )  + 1 )  {^477^^^^^462^492^if  ( from > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from > s1.length (  )   >  1 )  {^477^^^^^462^492^if  ( from > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from > s1.length (  )   )  {^477^^^^^462^492^if  ( from > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( index == 2 )  {^480^^^^^465^495^if  ( ac == 2 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( ac <= 2 )  {^480^^^^^465^495^if  ( ac == 2 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( ac == old )  {^480^^^^^465^495^if  ( ac == 2 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to < 0 )  {^490^^^^^480^510^if  ( length < 0 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( length <= 0 )  {^490^^^^^480^510^if  ( length < 0 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( length < 1 )  {^490^^^^^480^510^if  ( length < 0 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( length < 1 )  {^495^^^^^480^510^if  ( to < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( to == 1 )  {^495^^^^^480^510^if  ( to < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( to < 2 )  {^495^^^^^480^510^if  ( to < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( length > s1.length (  )  + 1 )  {^499^^^^^480^510^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( to >= s1.length (  )  + 1 )  {^499^^^^^480^510^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( to > s1.length (  )   <  1 )  {^499^^^^^480^510^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( to > sold.length (  )  + old )  {^499^^^^^480^510^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( to > s.length (  )  +  )  {^499^^^^^480^510^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( to > s1.length (  )   )  {^499^^^^^480^510^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to < 1 )  {^500^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from <= 1 )  {^500^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < 0 )  {^500^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < count )  {^500^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  |  1 ) ;^503^^^^^480^510^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return s1.substring (  ( int )  from  ) ;^503^^^^^480^510^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  <  1 ) ;^503^^^^^480^510^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return sold.substring (  ( int )  from - old ) ;^503^^^^^480^510^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = functionCode;^501^^^^^480^510^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to < 1 )  {^506^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from == 1 )  {^506^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < 2 )  {^506^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < 0 )  {^506^^^^^480^510^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^length = Math.round ( to ) ;^489^^^^^480^510^length = Math.round ( length ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = ac;^501^^^^^480^510^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = index;^507^^^^^480^510^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  ||  1 ) ;^503^^^^^480^510^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^return s1.substring (  ( int )  from - 1,  ( int )   ( length - 1 )  ) ;^509^^^^^480^510^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  &&  1,  ( int )   ( to - 1 )  ) ;^509^^^^^480^510^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from - 1,  ( int )   ( to  |  1 )  ) ;^509^^^^^480^510^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return s1.substring (  ( int )  from ,  ( int )   ( to  )  ) ;^509^^^^^480^510^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return sfunctionCode.substring (  ( int )  from - functionCode,  ( int )   ( to - functionCode )  ) ;^509^^^^^480^510^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^double to = length + length;^494^^^^^480^510^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^double to = from + from;^494^^^^^480^510^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Argument_Swapping]^double to = length + from;^494^^^^^480^510^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  >=  1 ) ;^503^^^^^480^510^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return si.substring (  ( int )  from - i ) ;^503^^^^^480^510^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from - 1,  ( int )   ( to  >>  1 )  ) ;^509^^^^^480^510^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to < 1 )  {^481^^^^^466^496^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from > 1 )  {^481^^^^^466^496^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = 2;^482^^^^^467^497^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = old;^482^^^^^467^497^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  ==  1 ) ;^484^^^^^469^499^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return si.substring (  ( int )  from - i ) ;^484^^^^^469^499^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  <=  1 ) ;^484^^^^^469^499^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return sindex.substring (  ( int )  from - index ) ;^484^^^^^469^499^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from <= 1 )  {^481^^^^^466^496^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < 0 )  {^481^^^^^466^496^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < 2 )  {^481^^^^^466^496^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to < 0 )  {^490^^^^^475^505^if  ( length < 0 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( length > 0 )  {^490^^^^^475^505^if  ( length < 0 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( length < functionCode )  {^490^^^^^475^505^if  ( length < 0 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( to <= 1 )  {^495^^^^^480^510^if  ( to < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( length > s1.length (  )  + 1 )  {^499^^^^^484^514^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( to >= s1.length (  )  + 1 )  {^499^^^^^484^514^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( to > s1.length (  )   |  1 )  {^499^^^^^484^514^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( to > s.length (  )  +  )  {^499^^^^^484^514^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( to > s1.length (  )   )  {^499^^^^^484^514^if  ( to > s1.length (  )  + 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to < 1 )  {^500^^^^^485^515^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from <= 1 )  {^500^^^^^485^515^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < 2 )  {^500^^^^^485^515^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  ^  1 ) ;^503^^^^^488^518^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return sac.substring (  ( int )  from - ac ) ;^503^^^^^488^518^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from   instanceof   1 ) ;^503^^^^^488^518^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return s1.substring (  ( int )  from  ) ;^503^^^^^488^518^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from > 1 )  {^500^^^^^485^515^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < count )  {^500^^^^^485^515^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^if  ( to < 1 )  {^506^^^^^491^521^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( from <= 1 )  {^506^^^^^491^521^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^if  ( from < functionCode )  {^506^^^^^491^521^if  ( from < 1 )  {^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = i;^507^^^^^492^522^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^length = Math.round ( to ) ;^489^^^^^474^504^length = Math.round ( length ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = i;^501^^^^^486^516^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^from = ;^507^^^^^492^522^from = 1;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  <<  1 ) ;^484^^^^^469^499^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return s1.substring (  ( int )  from  ) ;^484^^^^^469^499^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  >=  1 ) ;^503^^^^^488^518^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^return s1.substring (  ( int )  from - 1,  ( int )   ( length - 1 )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Argument_Swapping]^return to.substring (  ( int )  from - 1,  ( int )   ( s1 - 1 )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from   instanceof   1,  ( int )   ( to - 1 )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from - 1,  ( int )   ( to  !=  1 )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return sindex.substring (  ( int )  from - index,  ( int )   ( to - index )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return si.substring (  ( int )  from - i,  ( int )   ( to - i )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^double to = length + length;^494^^^^^479^509^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Variable_Misuse]^double to = from + from;^494^^^^^479^509^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Argument_Swapping]^double to = length + from;^494^^^^^479^509^double to = from + length;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  &  1 ) ;^503^^^^^488^518^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return sindex.substring (  ( int )  from - index ) ;^503^^^^^488^518^return s1.substring (  ( int )  from - 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^return s1.substring (  ( int )  from  &&  1,  ( int )   ( to - 1 )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Literal]^return s1.substring (  ( int )  from ,  ( int )   ( to  )  ) ;^509^^^^^494^524^return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[CLASS] CoreFunction  [METHOD] functionSubstring [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s1  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  double  from  length  to  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  != 0 )  {^515^^^^^513^523^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionStringLength [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  ==  )  {^515^^^^^513^523^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionStringLength [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  
[BugLab_Wrong_Literal]^assertArgCount (  ) ;^519^^^^^513^523^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionStringLength [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  index  old  
[BugLab_Wrong_Literal]^assertArgCount (  ) ;^526^^^^^525^554^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^int phase = count;^530^^^^^525^554^int phase = 0;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( old == 0 )  {^537^^^^^525^554^if  ( phase == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^if  ( phase <= 0 )  {^537^^^^^525^554^if  ( phase == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^if  ( phase != 0 )  {^537^^^^^525^554^if  ( phase == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^if  ( phase == in )  {^537^^^^^525^554^if  ( phase == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^else if  ( in == 1 )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^else if  ( phase != 1 )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^else if  ( phase ==  )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^phase = 1;^541^^^^^525^554^phase = 2;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^phase = count;^541^^^^^525^554^phase = 2;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^else if  ( out == 1 )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^for  ( int in = 0; in < old; in++ )  {^531^^^^^525^554^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^for  ( int in = 0; in < chars.length.length; in++ )  {^531^^^^^525^554^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^for  ( chars.lengtht in = 0; in < in; in++ )  {^531^^^^^525^554^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int in = 0; in <= chars.length; in++ )  {^531^^^^^525^554^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int in = in; in < chars.length; in++ )  {^531^^^^^525^554^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int in = 1; in < chars.length; in++ )  {^531^^^^^525^554^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( out == 0 )  {^537^^^^^525^554^if  ( phase == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^if  ( phase == functionCode )  {^537^^^^^525^554^if  ( phase == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^else if  ( index == 1 )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^else if  ( phase == ac )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^else if  ( phase <= 1 )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^else if  ( phase == out )  {^540^^^^^525^554^else if  ( phase == 1 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^phase = out;^541^^^^^525^554^phase = 2;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^phase = ;^541^^^^^525^554^phase = 2;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^phase = index;^547^^^^^525^554^phase = 1;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( index == 2 )  {^550^^^^^525^554^if  ( phase == 2 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^if  ( phase != 2 )  {^550^^^^^525^554^if  ( phase == 2 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^if  ( phase == ac )  {^550^^^^^525^554^if  ( phase == 2 )  {^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^return new String ( chars, 0, index ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( out, 0, chars ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^return new String ( chars, ac, out ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^return new String ( chars, 0, old ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^return new String ( chars, , out ) ;^553^^^^^525^554^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionNormalizeSpace [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  String  s  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^char chars[] = s3.toCharArray (  ) ;^561^^^^^556^576^char chars[] = s1.toCharArray (  ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^int out = ac;^562^^^^^556^576^int out = 0;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( phase != -1 )  {^566^^^^^556^576^if  ( inx != -1 )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^if  ( inx < -1 )  {^566^^^^^556^576^if  ( inx != -1 )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( phase < s3.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( inx < s2.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^if  ( s3 < inx.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^if  ( inx == s3.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^chars[out++] = s2.charAt ( inx ) ;^568^^^^^556^576^chars[out++] = s3.charAt ( inx ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^chars[out++] = s3.charAt ( out ) ;^568^^^^^556^576^chars[out++] = s3.charAt ( inx ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^chars[out++] = inx.charAt ( s3 ) ;^568^^^^^556^576^chars[out++] = s3.charAt ( inx ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^chars[out++] = s3.charAt ( old ) ;^568^^^^^556^576^chars[out++] = s3.charAt ( inx ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^chars[out++] = s3.charAt ( phase ) ;^568^^^^^556^576^chars[out++] = s3.charAt ( inx ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( old < s3.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^for  ( oldt in = 0; in < chars.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^for  ( int in = 0; in < inx; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^for  ( int in = 0; in < chars.length.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^for  ( int in = 0; in < chars.lengthhars.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int in = 0; in <= chars.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^for  ( int in = 0; in == chars.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int in = ac; in < chars.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( out != -1 )  {^566^^^^^556^576^if  ( inx != -1 )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^if  ( inx != -phase )  {^566^^^^^556^576^if  ( inx != -1 )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^if  ( index < s3.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^if  ( inx > s3.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^chars[out++] = s3.charAt ( index ) ;^568^^^^^556^576^chars[out++] = s3.charAt ( inx ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Operator]^if  ( inx <= s3.length (  )  )  {^567^^^^^556^576^if  ( inx < s3.length (  )  )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^int inx = s3.indexOf ( c ) ;^565^^^^^556^576^int inx = s2.indexOf ( c ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^int inx = c.indexOf ( s2 ) ;^565^^^^^556^576^int inx = s2.indexOf ( c ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^for  ( int in = -1; in < chars.length; in++ )  {^563^^^^^556^576^for  ( int in = 0; in < chars.length; in++ )  {^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^return new String ( chars, 0, old ) ;^575^^^^^556^576^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Argument_Swapping]^return new String ( out, 0, chars ) ;^575^^^^^556^576^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^return new String ( chars, 1, out ) ;^575^^^^^556^576^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Variable_Misuse]^return new String ( chars, 0, inx ) ;^575^^^^^556^576^return new String ( chars, 0, out ) ;^[CLASS] CoreFunction  [METHOD] functionTranslate [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  char  c  String  s1  s2  s3  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  char[]  chars  
[BugLab_Wrong_Literal]^assertArgCount ( 0 ) ;^579^^^^^578^583^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionBoolean [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^assertArgCount ( 0 ) ;^586^^^^^585^590^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionNot [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^assertArgCount ( inx ) ;^593^^^^^592^595^assertArgCount ( 0 ) ;^[CLASS] CoreFunction  [METHOD] functionTrue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^assertArgCount ( 1 ) ;^603^^^^^602^605^assertArgCount ( 0 ) ;^[CLASS] CoreFunction  [METHOD] functionNull [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  != 0 )  {^608^^^^^607^613^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^if  ( getArgumentCount (  )  == ac )  {^608^^^^^607^613^if  ( getArgumentCount (  )  == 0 )  {^[CLASS] CoreFunction  [METHOD] functionNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^assertArgCount ( count ) ;^616^^^^^615^632^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^Object v = getArg1 (  ) .compute ( ctx ) ;^617^^^^^615^632^Object v = getArg1 (  ) .compute ( context ) ;^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^while  ( context.hasNext (  )  )  {^624^^^^^615^632^while  ( ctx.hasNext (  )  )  {^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^NodePointer ptr =  ( NodePointer )  context.next (  ) ;^625^^^^^615^632^NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( v != null )  {^618^^^^^615^632^if  ( v == null )  {^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^else if  ( v  |  EvalContext )  {^621^^^^^615^632^else if  ( v instanceof EvalContext )  {^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^else if  ( v  >=  EvalContext )  {^621^^^^^615^632^else if  ( v instanceof EvalContext )  {^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid argument type for 'sum': "  >>  v.getClass (  ) .getName (  )  ) ;^630^631^^^^615^632^throw new JXPathException ( "Invalid argument type for 'sum': " + v.getClass (  ) .getName (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^throw new JXPathException ( "Invalid argument type for 'sum': "  ||  v.getClass (  ) .getName (  )  ) ;^630^631^^^^615^632^throw new JXPathException ( "Invalid argument type for 'sum': " + v.getClass (  ) .getName (  )  ) ;^[CLASS] CoreFunction  [METHOD] functionSum [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  double  sum  EvalContext  context  ctx  Object  v  NodePointer  ptr  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^assertArgCount ( phase ) ;^635^^^^^634^638^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionFloor [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  double  v  
[BugLab_Wrong_Literal]^assertArgCount ( 0 ) ;^641^^^^^640^644^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionCeiling [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  double  v  
[BugLab_Wrong_Literal]^assertArgCount ( out ) ;^647^^^^^646^650^assertArgCount ( 1 ) ;^[CLASS] CoreFunction  [METHOD] functionRound [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  boolean  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  double  v  
[BugLab_Variable_Misuse]^if  ( inx != 2 && ac != 3 )  {^654^^^^^639^669^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( ac != 2 || ac != 3 )  {^654^^^^^639^669^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( ac == 2 && ac != 3 )  {^654^^^^^639^669^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( ac != 2 && ac == 3 )  {^654^^^^^639^669^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^if  ( ac !=  && ac != 3 )  {^654^^^^^639^669^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^if  ( ac != out && ac != 3 )  {^654^^^^^639^669^if  ( ac != 2 && ac != 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^assertArgCount ( inx ) ;^655^^^^^640^670^assertArgCount ( 2 ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^assertArgCount ( i ) ;^655^^^^^640^670^assertArgCount ( 2 ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^if  ( out == 3 )  {^664^^^^^649^679^if  ( ac == 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( ac >= 3 )  {^664^^^^^649^679^if  ( ac == 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Literal]^if  ( ac == phase )  {^664^^^^^649^679^if  ( ac == 3 )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( pointer == null )  {^673^^^^^664^680^if  ( pointer != null )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^symbols = context.getJXPathContext (  ) .getDecimalFormatSymbols ( pattern ) ;^667^668^^^^652^682^symbols = context.getJXPathContext (  ) .getDecimalFormatSymbols ( symbolsName ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Argument_Swapping]^symbols = symbolsName.getJXPathContext (  ) .getDecimalFormatSymbols ( context ) ;^667^668^^^^652^682^symbols = context.getJXPathContext (  ) .getDecimalFormatSymbols ( symbolsName ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^context.getJXPathContext (  ) .getDecimalFormatSymbols ( pattern ) ;^668^^^^^653^683^context.getJXPathContext (  ) .getDecimalFormatSymbols ( symbolsName ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Wrong_Operator]^if  ( pointer == null )  {^673^^^^^658^688^if  ( pointer != null )  {^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^format.applyLocalizedPattern ( symbolsName ) ;^684^^^^^669^699^format.applyLocalizedPattern ( pattern ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Argument_Swapping]^return number.format ( format ) ;^685^^^^^670^700^return format.format ( number ) ;^[CLASS] CoreFunction  [METHOD] functionFormatNumber [RETURN_TYPE] Object   EvalContext context [VARIABLES] Locale  locale  boolean  DecimalFormatSymbols  symbols  double  number  DecimalFormat  format  EvalContext  context  String  pattern  symbolsName  NodePointer  pointer  Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  
[BugLab_Variable_Misuse]^if  ( getArgumentCount (  )  != inx )  {^689^^^^^688^693^if  ( getArgumentCount (  )  != count )  {^[CLASS] CoreFunction  [METHOD] assertArgCount [RETURN_TYPE] void   int count [VARIABLES] Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  boolean  
[BugLab_Wrong_Operator]^if  ( getArgumentCount (  )  == count )  {^689^^^^^688^693^if  ( getArgumentCount (  )  != count )  {^[CLASS] CoreFunction  [METHOD] assertArgCount [RETURN_TYPE] void   int count [VARIABLES] Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  boolean  
[BugLab_Wrong_Operator]^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: "  ||  this ) ;^690^691^^^^688^693^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: " + this ) ;^[CLASS] CoreFunction  [METHOD] assertArgCount [RETURN_TYPE] void   int count [VARIABLES] Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  boolean  
[BugLab_Wrong_Operator]^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: "  &&  this ) ;^690^691^^^^688^693^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: " + this ) ;^[CLASS] CoreFunction  [METHOD] assertArgCount [RETURN_TYPE] void   int count [VARIABLES] Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  boolean  
[BugLab_Wrong_Operator]^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: "  ^  this ) ;^690^691^^^^688^693^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: " + this ) ;^[CLASS] CoreFunction  [METHOD] assertArgCount [RETURN_TYPE] void   int count [VARIABLES] Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  boolean  
[BugLab_Wrong_Operator]^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: "  |  this ) ;^690^691^^^^688^693^throw new JXPathInvalidSyntaxException ( "Incorrect number of argument: " + this ) ;^[CLASS] CoreFunction  [METHOD] assertArgCount [RETURN_TYPE] void   int count [VARIABLES] Double  ZERO  int  ac  count  functionCode  i  in  index  inx  old  out  phase  boolean  
