[BugLab_Wrong_Literal]^return false;^54^^^^^53^55^return true;^[CLASS] DynaBeanPropertyPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^if  ( names != null )  {^70^^^^^69^88^if  ( names == null )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Wrong_Operator]^if  ( !hasClass && !name.equals ( "class" )  )  {^81^^^^^69^88^if  ( !hasClass || !name.equals ( "class" )  )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Variable_Misuse]^for  ( jnt i = 0, j = 0; i < properties.length; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Variable_Misuse]^for  ( int i = 0, j = 0; i < j; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Argument_Swapping]^for  ( propertiesnt i = 0, j = 0; i < i.length; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Wrong_Operator]^for  ( int i = 0, j = 0; i <= properties.length; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Variable_Misuse]^int count = j;^73^^^^^69^88^int count = properties.length;^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Argument_Swapping]^int count = properties.length.length;^73^^^^^69^88^int count = properties.length;^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Argument_Swapping]^int count = properties;^73^^^^^69^88^int count = properties.length;^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Wrong_Operator]^boolean hasClass = dynaClass.getDynaProperty ( "class" )  == null;^74^^^^^69^88^boolean hasClass = dynaClass.getDynaProperty ( "class" )  != null;^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Wrong_Literal]^for  ( int i = 1, j = 1; i < properties.length; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Wrong_Literal]^for  ( int i = j, j = j; i < properties.length; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Argument_Swapping]^for  ( properties.lengthnt i = 0, j = 0; i < i; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Wrong_Literal]^for  ( int i = i, j = i; i < properties.length; i++ )  {^79^^^^^69^88^for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyNames [RETURN_TYPE] String[]   [VARIABLES] DynaClass  dynaClass  boolean  hasClass  DynaBean  dynaBean  String  name  String[]  names  DynaProperty[]  properties  int  count  i  j  
[BugLab_Wrong_Operator]^if  ( name != null )  {^95^^^^^94^105^if  ( name == null )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Variable_Misuse]^if  ( this >= 0 && propertyIndex < names.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^if  ( names >= 0 && propertyIndex < propertyIndex.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^if  ( names.length >= 0 && propertyIndex < propertyIndex )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^if  ( propertyIndex >= 0 && propertyIndex < names )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^if  ( propertyIndex >= 0 || propertyIndex < names.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^if  ( propertyIndex > 0 && propertyIndex < names.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^if  ( propertyIndex >= 0 && propertyIndex <= names.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Literal]^if  ( propertyIndex >= 1 && propertyIndex < names.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^if  ( propertyIndex >= 0 && propertyIndex < names.length.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^if  ( propertyIndex < 0 && propertyIndex < names.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Literal]^if  ( propertyIndex >= -1 && propertyIndex < names.length )  {^97^^^^^94^105^if  ( propertyIndex >= 0 && propertyIndex < names.length )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyName [RETURN_TYPE] String   [VARIABLES] String  name  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Variable_Misuse]^this.name = name;^112^^^^^110^113^this.name = propertyName;^[CLASS] DynaBeanPropertyPointer  [METHOD] setPropertyName [RETURN_TYPE] void   String propertyName [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^if  ( UNSPECIFIED_PROPERTY == propertyIndex )  {^120^^^^^119^131^if  ( propertyIndex == UNSPECIFIED_PROPERTY )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Wrong_Operator]^if  ( propertyIndex < UNSPECIFIED_PROPERTY )  {^120^^^^^119^131^if  ( propertyIndex == UNSPECIFIED_PROPERTY )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Variable_Misuse]^if  ( propertyNames[i].equals ( name )  )  {^123^^^^^119^131^if  ( names[i].equals ( name )  )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^if  ( name[i].equals ( names )  )  {^123^^^^^119^131^if  ( names[i].equals ( name )  )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^if  ( namess[i].equals ( name )  )  {^123^^^^^119^131^if  ( names[i].equals ( name )  )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < propertyNames.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^for  ( nament i = 0; i < is.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < names.length.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < names; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < namess.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= names.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < names.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < names.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < name.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^for  ( names.lengthnt i = 0; i < i; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < names.lengths.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < names.length; i++ )  {^122^^^^^119^131^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getPropertyIndex [RETURN_TYPE] int   [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  i  
[BugLab_Wrong_Operator]^if  ( propertyIndex == index )  {^138^^^^^137^142^if  ( propertyIndex != index )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] setPropertyIndex [RETURN_TYPE] void   int index [VARIABLES] String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Variable_Misuse]^if  ( propertyName.equals ( "*" )  )  {^152^^^^^137^167^if  ( name.equals ( "*" )  )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION )  {^157^^^^^142^172^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Operator]^else if  ( index == 0 )  {^181^^^^^160^184^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Literal]^else if  ( index != 1 )  {^181^^^^^160^184^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = ValueUtils.getValue ( index, value ) ;^179^^^^^160^184^value = ValueUtils.getValue ( value, index ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = ValueUtils.getValue ( value, null ) ;^179^^^^^160^184^value = ValueUtils.getValue ( value, index ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Operator]^else if  ( index <= 0 )  {^181^^^^^160^184^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = dynaBean.get ( propertyName ) ;^177^^^^^160^184^value = dynaBean.get ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = name.get ( dynaBean ) ;^177^^^^^160^184^value = dynaBean.get ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = ValueUtils.getValue ( value, 3 ) ;^179^^^^^160^184^value = ValueUtils.getValue ( value, index ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = ValueUtils.getValue ( dynaBean.get ( propertyName, index )  ) ;^166^^^^^151^181^value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = ValueUtils.getValue ( dynaBean.get ( index, name )  ) ;^166^^^^^151^181^value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = ValueUtils.getValue ( name.get ( dynaBean, index )  ) ;^166^^^^^151^181^value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = ValueUtils.getValue ( index.get ( name, dynaBean )  ) ;^166^^^^^151^181^value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = dynaBean.get ( propertyName ) ;^172^^^^^157^187^value = dynaBean.get ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = name.get ( dynaBean ) ;^172^^^^^157^187^value = dynaBean.get ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = ValueUtils.getValue ( index, value ) ;^173^^^^^158^188^value = ValueUtils.getValue ( value, index ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^else if  ( 3 != 0 )  {^181^^^^^166^196^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Operator]^else if  ( index > 0 )  {^181^^^^^166^196^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = ValueUtils.getValue ( index, value ) ;^179^^^^^164^194^value = ValueUtils.getValue ( value, index ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Operator]^else if  ( index == 0 )  {^181^^^^^166^196^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Literal]^else if  ( index != 1 )  {^181^^^^^166^196^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = ValueUtils.getValue ( dynaBean.get ( name, 1 )  ) ;^166^^^^^151^181^value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = dynaBean.get ( propertyName ) ;^177^^^^^162^192^value = dynaBean.get ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = name.get ( dynaBean ) ;^177^^^^^162^192^value = dynaBean.get ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = ValueUtils.getValue ( dynaBean.get ( propertyName )  ) ;^158^^^^^143^173^value = ValueUtils.getValue ( dynaBean.get ( name )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Argument_Swapping]^value = ValueUtils.getValue ( name.get ( dynaBean )  ) ;^158^^^^^143^173^value = ValueUtils.getValue ( dynaBean.get ( name )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Operator]^else if  ( index >= 0 )  {^181^^^^^160^184^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Literal]^else if  ( index != -1 )  {^181^^^^^166^196^else if  ( index != 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = ValueUtils.getValue ( dynaBean.get ( name, 0 )  ) ;^166^^^^^151^181^value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Variable_Misuse]^value = ValueUtils.getValue ( value, 2 ) ;^179^^^^^164^194^value = ValueUtils.getValue ( value, index ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  DynaBean  dynaBean  Object  value  String  name  propertyName  String[]  names  ArrayIndexOutOfBoundsException  ex  IllegalArgumentException  ex  
[BugLab_Wrong_Operator]^return dynaClass.getDynaProperty ( getPropertyName (  )  )  == null;^193^^^^^191^194^return dynaClass.getDynaProperty ( getPropertyName (  )  )  != null;^[CLASS] DynaBeanPropertyPointer  [METHOD] isActualProperty [RETURN_TYPE] boolean   [VARIABLES] DynaClass  dynaClass  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Variable_Misuse]^DynaProperty property = dynaClass.getDynaProperty ( propertyName ) ;^198^^^^^196^200^DynaProperty property = dynaClass.getDynaProperty ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] isIndexedProperty [RETURN_TYPE] boolean   [VARIABLES] DynaProperty  property  DynaClass  dynaClass  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^DynaProperty property = name.getDynaProperty ( dynaClass ) ;^198^^^^^196^200^DynaProperty property = dynaClass.getDynaProperty ( name ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] isIndexedProperty [RETURN_TYPE] boolean   [VARIABLES] DynaProperty  property  DynaClass  dynaClass  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^setValue ( value, index ) ;^208^^^^^207^209^setValue ( index, value ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION )  {^212^^^^^211^225^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^if  ( index >= WHOLE_COLLECTION )  {^212^^^^^211^225^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^else if  ( index <= 0 )  {^222^^^^^211^225^else if  ( index == 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Literal]^else if  ( index == 1 )  {^222^^^^^211^225^else if  ( index == 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^else if  ( index != 0 )  {^222^^^^^211^225^else if  ( index == 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Literal]^else if  ( index == -1 )  {^222^^^^^211^225^else if  ( index == 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Variable_Misuse]^Object collection = ValueUtils.remove ( getBaseValue (  ) , 1 ) ;^219^^^^^211^225^Object collection = ValueUtils.remove ( getBaseValue (  ) , index ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Operator]^else if  ( index > 0 )  {^222^^^^^211^225^else if  ( index == 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Wrong_Literal]^else if  ( index ==  )  {^222^^^^^211^225^else if  ( index == 0 )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Object  collection  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  
[BugLab_Argument_Swapping]^if  ( WHOLE_COLLECTION == index )  {^228^^^^^227^238^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Wrong_Operator]^if  ( index != WHOLE_COLLECTION )  {^228^^^^^227^238^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Argument_Swapping]^ValueUtils.setValue ( index, baseValue, value ) ;^236^^^^^227^238^ValueUtils.setValue ( baseValue, index, value ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Argument_Swapping]^ValueUtils.setValue ( value, index, baseValue ) ;^236^^^^^227^238^ValueUtils.setValue ( baseValue, index, value ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Argument_Swapping]^dynaBean.set ( getPropertyName (  ) , value, convert ( index, true )  ) ;^232^^^^^227^238^dynaBean.set ( getPropertyName (  ) , index, convert ( value, true )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Wrong_Literal]^dynaBean.set ( getPropertyName (  ) , index, convert ( value, false )  ) ;^232^^^^^227^238^dynaBean.set ( getPropertyName (  ) , index, convert ( value, true )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Variable_Misuse]^dynaBean.set ( getPropertyName (  ) , index, convert ( baseValue, true )  ) ;^232^^^^^227^238^dynaBean.set ( getPropertyName (  ) , index, convert ( value, true )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Variable_Misuse]^dynaBean.set ( getPropertyName (  ) , convert ( baseValue, false )  ) ;^229^^^^^227^238^dynaBean.set ( getPropertyName (  ) , convert ( value, false )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Wrong_Literal]^dynaBean.set ( getPropertyName (  ) , convert ( value, true )  ) ;^229^^^^^227^238^dynaBean.set ( getPropertyName (  ) , convert ( value, false )  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Variable_Misuse]^ValueUtils.setValue ( baseValue, index, baseValue ) ;^236^^^^^227^238^ValueUtils.setValue ( baseValue, index, value ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Variable_Misuse]^ValueUtils.setValue ( value, index, value ) ;^236^^^^^227^238^ValueUtils.setValue ( baseValue, index, value ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Argument_Swapping]^ValueUtils.setValue ( baseValue, value, index ) ;^236^^^^^227^238^ValueUtils.setValue ( baseValue, index, value ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] setValue [RETURN_TYPE] void   int index Object value [VARIABLES] Object  baseValue  value  String  name  propertyName  String[]  names  boolean  DynaBean  dynaBean  int  index  
[BugLab_Argument_Swapping]^return TypeUtils.convert ( type, value ) ;^255^^^^^241^263^return TypeUtils.convert ( value, type ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Variable_Misuse]^throw new JXPathTypeConversionException ( "Cannot convert value of class " + propertyName + " to type " + type, ex ) ;^259^260^261^^^241^263^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Argument_Swapping]^throw new JXPathTypeConversionException ( "Cannot convert value of class " + ex + " to type " + type, string ) ;^259^260^261^^^241^263^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Argument_Swapping]^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to ex " + type, type ) ;^259^260^261^^^241^263^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Wrong_Operator]^throw new JXPathTypeConversionException ( "Cannot convert value of class "  ||  string  ||  " to type " + type, ex ) ;^259^260^261^^^241^263^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Wrong_Operator]^throw new JXPathTypeConversionException ( "Cannot convert value of class "  |  string + " to type " + type, ex ) ;^259^260^261^^^241^263^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Wrong_Operator]^String string = value != null ? "null" : value.getClass (  ) .getName (  ) ;^258^^^^^241^263^String string = value == null ? "null" : value.getClass (  ) .getName (  ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Wrong_Operator]^throw new JXPathTypeConversionException ( "Cannot convert value of class "  <  string  <  " to type " + type, ex ) ;^259^260^261^^^241^263^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
[BugLab_Wrong_Operator]^throw new JXPathTypeConversionException ( "Cannot convert value of class "  >>  string + " to type " + type, ex ) ;^259^260^261^^^241^263^throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[CLASS] DynaBeanPropertyPointer  [METHOD] convert [RETURN_TYPE] Object   Object value boolean element [VARIABLES] DynaProperty  property  DynaClass  dynaClass  boolean  element  DynaBean  dynaBean  Object  value  Class  type  String  name  propertyName  string  String[]  names  Exception  ex  
