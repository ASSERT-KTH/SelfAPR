[BugLab_Wrong_Literal]^private int availableRegister = -1;^37^^^^^32^42^private int availableRegister = 0;^[CLASS] RootContext   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final int MAX_REGISTER = ;^39^^^^^34^44^private static final int MAX_REGISTER = 4;^[CLASS] RootContext   [VARIABLES] 
[BugLab_Wrong_Operator]^if  ( pointer == null )  {^48^^^^^41^51^if  ( pointer != null )  {^[CLASS] RootContext  [METHOD] <init> [RETURN_TYPE] NodePointer)   JXPathContextReferenceImpl jxpathContext NodePointer pointer [VARIABLES] Object  UNKNOWN_VALUE  NodePointer  pointer  boolean  Object[]  registers  int  MAX_REGISTER  availableRegister  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^if  ( UNKNOWN_VALUE instanceof NodeSet )  {^90^^^^^89^107^if  ( constant instanceof NodeSet )  {^[CLASS] RootContext  [METHOD] getConstantContext [RETURN_TYPE] EvalContext   Object constant [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( constant  ^  NodeSet )  {^90^^^^^89^107^if  ( constant instanceof NodeSet )  {^[CLASS] RootContext  [METHOD] getConstantContext [RETURN_TYPE] EvalContext   Object constant [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( constant  |  NodePointer )  {^97^^^^^89^107^if  ( constant instanceof NodePointer )  {^[CLASS] RootContext  [METHOD] getConstantContext [RETURN_TYPE] EvalContext   Object constant [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^pointer = NodePointer.newNodePointer ( new QName ( null, "" ) , UNKNOWN_VALUE, null ) ;^101^102^103^104^^89^107^pointer = NodePointer.newNodePointer ( new QName ( null, "" ) , constant, null ) ;^[CLASS] RootContext  [METHOD] getConstantContext [RETURN_TYPE] EvalContext   Object constant [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^return new InitialContext ( new RootContext ( pointer, jxpathContext )  ) ;^106^^^^^89^107^return new InitialContext ( new RootContext ( jxpathContext, pointer )  ) ;^[CLASS] RootContext  [METHOD] getConstantContext [RETURN_TYPE] EvalContext   Object constant [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^return new InitialContext ( new RootContext ( variableName, jxpathContext.getVariablePointer ( jxpathContext )  )  ) ;^110^111^112^113^^109^114^return new InitialContext ( new RootContext ( jxpathContext, jxpathContext.getVariablePointer ( variableName )  )  ) ;^[CLASS] RootContext  [METHOD] getVariableContext [RETURN_TYPE] EvalContext   QName variableName [VARIABLES] boolean  QName  variableName  Object  UNKNOWN_VALUE  constant  NodePointer  pointer  Object[]  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^new RootContext ( variableName, jxpathContext.getVariablePointer ( jxpathContext )  )  ) ;^111^112^113^^^109^114^new RootContext ( jxpathContext, jxpathContext.getVariablePointer ( variableName )  )  ) ;^[CLASS] RootContext  [METHOD] getVariableContext [RETURN_TYPE] EvalContext   QName variableName [VARIABLES] boolean  QName  variableName  Object  UNKNOWN_VALUE  constant  NodePointer  pointer  Object[]  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^return jxpathContext.getFunction ( functionName, registers ) ;^117^^^^^116^118^return jxpathContext.getFunction ( functionName, parameters ) ;^[CLASS] RootContext  [METHOD] getFunction [RETURN_TYPE] Function   QName functionName Object[] parameters [VARIABLES] boolean  QName  functionName  Object  UNKNOWN_VALUE  constant  NodePointer  pointer  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^return jxpathContext.getFunction ( parameters, functionName ) ;^117^^^^^116^118^return jxpathContext.getFunction ( functionName, parameters ) ;^[CLASS] RootContext  [METHOD] getFunction [RETURN_TYPE] Function   QName functionName Object[] parameters [VARIABLES] boolean  QName  functionName  Object  UNKNOWN_VALUE  constant  NodePointer  pointer  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^return parameters.getFunction ( functionName, jxpathContext ) ;^117^^^^^116^118^return jxpathContext.getFunction ( functionName, parameters ) ;^[CLASS] RootContext  [METHOD] getFunction [RETURN_TYPE] Function   QName functionName Object[] parameters [VARIABLES] boolean  QName  functionName  Object  UNKNOWN_VALUE  constant  NodePointer  pointer  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^return functionName.getFunction ( jxpathContext, parameters ) ;^117^^^^^116^118^return jxpathContext.getFunction ( functionName, parameters ) ;^[CLASS] RootContext  [METHOD] getFunction [RETURN_TYPE] Function   QName functionName Object[] parameters [VARIABLES] boolean  QName  functionName  Object  UNKNOWN_VALUE  constant  NodePointer  pointer  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^if  ( registers == null || position >= MAX_REGISTER || id == -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^if  ( parameters == null || id >= MAX_REGISTER || id == -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^if  ( id == null || registers >= MAX_REGISTER || id == -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^if  ( registers == null || MAX_REGISTER >= id || id == -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( registers == null && id >= MAX_REGISTER || id == -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( registers != null || id >= MAX_REGISTER || id == -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( registers == null || id > MAX_REGISTER || id == -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( registers == null || id >= MAX_REGISTER || id != -1 )  {^121^^^^^120^125^if  ( registers == null || id >= MAX_REGISTER || id == -1 )  {^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^return constant;^122^^^^^120^125^return UNKNOWN_VALUE;^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^return parameters[id];^124^^^^^120^125^return registers[id];^[CLASS] RootContext  [METHOD] getRegisteredValue [RETURN_TYPE] Object   int id [VARIABLES] Object  UNKNOWN_VALUE  constant  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^if  ( parameters == null )  {^128^^^^^127^140^if  ( registers == null )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( registers != null )  {^128^^^^^127^140^if  ( registers == null )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^for  ( positionnt i = 0; i < MAX_REGISTER; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < position; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^for  ( MAX_REGISTERnt i = 0; i < i; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= MAX_REGISTER; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Literal]^for  ( int i = availableRegister; i < MAX_REGISTER; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^registers[i] = value;^131^^^^^127^140^registers[i] = UNKNOWN_VALUE;^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Literal]^for  ( int i = position; i < MAX_REGISTER; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^for  ( idnt i = 0; i < MAX_REGISTER; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Literal]^for  ( int i = id; i < MAX_REGISTER; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < MAX_REGISTER; i++ )  {^130^^^^^127^140^for  ( int i = 0; i < MAX_REGISTER; i++ )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^if  ( position >= MAX_REGISTER )  {^134^^^^^127^140^if  ( availableRegister >= MAX_REGISTER )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^if  ( availableRegister >= position )  {^134^^^^^127^140^if  ( availableRegister >= MAX_REGISTER )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Argument_Swapping]^if  ( MAX_REGISTER >= availableRegister )  {^134^^^^^127^140^if  ( availableRegister >= MAX_REGISTER )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^if  ( availableRegister > MAX_REGISTER )  {^134^^^^^127^140^if  ( availableRegister >= MAX_REGISTER )  {^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Literal]^return -2;^135^^^^^127^140^return -1;^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Variable_Misuse]^return id - 1;^139^^^^^127^140^return availableRegister - 1;^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^return availableRegister  ^  1;^139^^^^^127^140^return availableRegister - 1;^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Literal]^return availableRegister ;^139^^^^^127^140^return availableRegister - 1;^[CLASS] RootContext  [METHOD] setRegisteredValue [RETURN_TYPE] int   Object value [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^return super.toString (  <  )  + ":" + pointer.asPath (  ) ;^143^^^^^142^144^return super.toString (  )  + ":" + pointer.asPath (  ) ;^[CLASS] RootContext  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
[BugLab_Wrong_Operator]^return super.toString (  )   &  ":" + pointer.asPath (  ) ;^143^^^^^142^144^return super.toString (  )  + ":" + pointer.asPath (  ) ;^[CLASS] RootContext  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Object  UNKNOWN_VALUE  constant  value  NodePointer  pointer  boolean  Object[]  parameters  registers  int  MAX_REGISTER  availableRegister  i  id  position  JXPathContextReferenceImpl  jxpathContext  
