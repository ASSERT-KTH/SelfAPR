[buglab_swap_variables]^return name.getVariable ( variables.toString (  )  ) ;^68^^^^^64^69^return variables.getVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^if  ( WHOLE_COLLECTION != index )  {^84^^^^^82^90^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^return ValueUtils.getValue ( index, value ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^return ValueUtils.getValue (  index ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^return ValueUtils.getValue ( value ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^if  ( WHOLE_COLLECTION != index )  {^97^^^^^92^104^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^variables.declareVariable ( name.toString (  )  ) ;^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^variables.declareVariable ( value.toString (  ) , name ) ;^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^ValueUtils.setValue ( value, index, collection ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^ValueUtils.setValue (  index, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^ValueUtils.setValue ( collection, index ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^ValueUtils.setValue ( collection, value, index ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^ValueUtils.setValue ( collection,  value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[buglab_swap_variables]^if  ( !factory.declareVariable ( name, context.toString (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[buglab_swap_variables]^if  ( !factory.declareVariable (  name.toString (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[buglab_swap_variables]^if  ( !factory.declareVariable ( context.toString (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[buglab_swap_variables]^Object collection = createCollection ( index, context ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^Object collection = createCollection (  index ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^Object collection = createCollection ( context ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^boolean success = factory.createObject (  this,^178^179^180^181^^170^194^boolean success = factory.createObject ( context, this,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^factory.createObject ( collection, this, context,^179^180^181^182^^170^194^factory.createObject ( context, this, collection,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^factory.createObject (  this, collection,^179^180^181^182^^170^194^factory.createObject ( context, this, collection,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^factory.createObject ( context, this,^179^180^181^182^^170^194^factory.createObject ( context, this, collection,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^boolean success = context.createObject ( factory, this,^178^179^180^181^^170^194^boolean success = factory.createObject ( context, this,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[buglab_swap_variables]^Object collection = createCollection ( index, context ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^Object collection = createCollection (  index ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^Object collection = createCollection ( context ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^ValueUtils.setValue ( index, collection, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^ValueUtils.setValue (  index, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^ValueUtils.setValue ( collection, value, index ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^ValueUtils.setValue ( collection,  value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^ValueUtils.setValue ( value, index, collection ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^ValueUtils.setValue ( collection, index ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^if  ( WHOLE_COLLECTION == index )  {^221^^^^^209^235^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^collection = ValueUtils.expandCollection ( index, collection + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^collection = ValueUtils.expandCollection (  index + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^collection = ValueUtils.expandCollection ( collection + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^variables.declareVariable ( collection.toString (  ) , name ) ;^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^variables.declareVariable ( name.toString (  )  ) ;^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[buglab_swap_variables]^collection = ValueUtils.remove ( index, collection ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^collection = ValueUtils.remove (  index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^collection = ValueUtils.remove ( collection ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^variables.declareVariable ( collection.toString (  ) , name ) ;^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^variables.declareVariable ( name.toString (  )  ) ;^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^if  ( index != null && collection < getLength (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^if  ( WHOLE_COLLECTION == index )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^if  ( name.isDeclaredVariable ( variables.toString (  )  )  )  {^262^^^^^257^269^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[buglab_swap_variables]^return  ( variables ? System.identityHashCode ( actual )  : 0 ) + name.hashCode (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^return  ( actual ? System.identityHashCode ( name )  : 0 ) + variables.hashCode (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + index.hashCode (  ) + name;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^return  ( actual ? System.identityHashCode ( index )  : 0 ) + name.hashCode (  ) + variables;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^&& name.equals ( other.name.name ) && index == other.index;^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[buglab_swap_variables]^&& other.name.equals ( name ) && index == other.index;^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[buglab_swap_variables]^else if  ( WHOLE_COLLECTION != index &&  ( getNode (  )  == null || isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^if  ( WHOLE_COLLECTION != index )  {^297^^^^^292^307^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[buglab_swap_variables]^return getValuePointer (  ) .childIterator ( startWith, reverse, test ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[buglab_swap_variables]^return getValuePointer (  ) .childIterator (  reverse, startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[buglab_swap_variables]^return getValuePointer (  ) .childIterator ( test, startWith, reverse ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[buglab_swap_variables]^return getValuePointer (  ) .childIterator ( test,  startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[buglab_swap_variables]^return getValuePointer (  ) .childIterator ( test, reverse ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[buglab_swap_variables]^return getValuePointer (  ) .childIterator ( reverse, test, startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[buglab_swap_variables]^return pointer2.getIndex (  )  - pointer1.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
