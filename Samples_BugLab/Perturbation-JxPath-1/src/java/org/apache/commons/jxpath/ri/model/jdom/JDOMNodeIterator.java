[BugLab_Wrong_Literal]^private int position = null;^39^^^^^34^44^private int position = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[BugLab_Wrong_Literal]^private int index = 1;^40^^^^^35^45^private int index = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[BugLab_Variable_Misuse]^if  ( parent != null )  {^49^^^^^44^65^if  ( startWith != null )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( startWith == null )  {^49^^^^^44^65^if  ( startWith != null )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^this.child = parent.getNode (  ) ;^50^^^^^44^65^this.child = startWith.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^Object node = startWith.getNode (  ) ;^53^^^^^44^65^Object node = parent.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^if  ( child instanceof Document )  {^54^^^^^44^65^if  ( node instanceof Document )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( node  !=  Document )  {^54^^^^^44^65^if  ( node instanceof Document )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( node  |  Document )  {^54^^^^^44^65^if  ( node instanceof Document )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^else if  ( child instanceof Element )  {^57^^^^^44^65^else if  ( node instanceof Element )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^else if  ( node  &  Element )  {^57^^^^^44^65^else if  ( node instanceof Element )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^else if  ( node  |  Element )  {^57^^^^^44^65^else if  ( node instanceof Element )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^if  ( node == null )  {^68^^^^^67^76^if  ( child == null )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( child != null )  {^68^^^^^67^76^if  ( child == null )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 2 )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^position = position;^72^^^^^67^76^position = 0;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( !setPosition (  )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^position = 1;^72^^^^^67^76^position = 0;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 0 )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^return new JDOMNodePointer ( startWith, child ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^return new JDOMNodePointer ( parent, node ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^return new JDOMNodePointer ( child, parent ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^return index;^79^^^^^78^80^return position;^[CLASS] JDOMNodeIterator  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^while  ( this.position < index )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^while  ( index < position )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^while  ( position < this.position )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^while  ( this.position == position )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return true;^85^^^^^82^94^return false;^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^while  ( this.position > index )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^while  ( index > position )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^while  ( position > this.position )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^while  ( this.position >= position )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return true;^90^^^^^82^94^return false;^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return false;^93^^^^^82^94^return true;^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^while  ( --position >= 0 )  {^105^^^^^102^121^while  ( --index >= 0 )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^while  ( --index > 0 )  {^105^^^^^102^121^while  ( --index >= 0 )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return false;^108^^^^^102^121^return true;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^child = children.get ( position ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^child = index.get ( children ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return false;^116^^^^^102^121^return true;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^for  ( ; position < children.size (  ) ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^for  ( ; children < index.size (  ) ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^for  ( ; index <= children.size (  ) ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^child = children.get ( position ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^child = index.get ( children ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^while  ( --index >= position )  {^105^^^^^102^121^while  ( --index >= 0 )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return true;^120^^^^^102^121^return false;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^if  ( index == 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( position >= 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( position == position )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^if  ( node != null )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( child == null )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^index = noderen.indexOf ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^index = child.indexOf ( children )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^index = childrenren.indexOf ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )   >  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.indexOf ( child )  ;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.size (  )   ||  1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.size (  )  ;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )   >>  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.indexOf ( child )  - ;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )   <  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return false;^156^^^^^141^171^return true;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^for  ( ; index == 0; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^child = children.get ( position ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^child = index.get ( children ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.size (  )   !=  1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )   |  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.indexOf ( child )  - index;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return true;^159^^^^^144^174^return false;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( position != 1 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( position == position )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( position == 0 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( child == null )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^index = noderen.indexOf ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^index = child.indexOf ( children )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^index = childrenren.indexOf ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )  >  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.indexOf ( child )  ;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = index;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )  ^  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^if  ( node != null )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.indexOf ( child )  + position;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return false;^138^^^^^123^153^return true;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^for  ( ; position < children.size (  ) ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^for  ( ; children < index.size (  ) ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^for  ( ; index <= children.size (  ) ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^child = children.get ( position ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^child = index.get ( children ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = position;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^return true;^141^^^^^126^156^return false;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( position <= 1 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( position == 2 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )  !=  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )   instanceof   + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )  >>  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.indexOf ( child )  + index;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^if  ( position <= 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( position == index )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^if  ( position == 0 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )    instanceof   1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )   &  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^index = children.indexOf ( child )  - position;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^for  ( ; position >= 0; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^for  ( ; index > 0; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Literal]^for  ( ; index >= position; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )  |  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Wrong_Operator]^index = children.indexOf ( child )   <<  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^return JDOMNodePointer.testNode ( startWith, child, nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Variable_Misuse]^return JDOMNodePointer.testNode ( parent, node, nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^return JDOMNodePointer.testNode ( child, parent, nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[BugLab_Argument_Swapping]^return JDOMNodePointer.testNode ( nodeTest, child, parent ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
