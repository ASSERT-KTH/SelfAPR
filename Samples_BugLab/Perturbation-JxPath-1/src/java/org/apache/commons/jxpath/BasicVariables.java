[buglab_swap_variables]^return varName.containsKey ( vars ) ;^43^^^^^42^44^return vars.containsKey ( varName ) ;^[CLASS] BasicVariables  [METHOD] isDeclaredVariable [RETURN_TYPE] boolean   String varName [VARIABLES] HashMap  vars  String  varName  boolean  
[buglab_swap_variables]^if  ( varName.containsKey ( vars )  )  {^57^^^^^54^63^if  ( vars.containsKey ( varName )  )  {^[CLASS] BasicVariables  [METHOD] getVariable [RETURN_TYPE] Object   String varName [VARIABLES] HashMap  vars  String  varName  boolean  
[buglab_swap_variables]^return varName.get ( vars ) ;^58^^^^^54^63^return vars.get ( varName ) ;^[CLASS] BasicVariables  [METHOD] getVariable [RETURN_TYPE] Object   String varName [VARIABLES] HashMap  vars  String  varName  boolean  
[buglab_swap_variables]^vars.put (  value ) ;^73^^^^^72^74^vars.put ( varName, value ) ;^[CLASS] BasicVariables  [METHOD] declareVariable [RETURN_TYPE] void   String varName Object value [VARIABLES] Object  value  String  varName  boolean  HashMap  vars  
[buglab_swap_variables]^vars.put ( value, varName ) ;^73^^^^^72^74^vars.put ( varName, value ) ;^[CLASS] BasicVariables  [METHOD] declareVariable [RETURN_TYPE] void   String varName Object value [VARIABLES] Object  value  String  varName  boolean  HashMap  vars  
[buglab_swap_variables]^vars.put ( varName ) ;^73^^^^^72^74^vars.put ( varName, value ) ;^[CLASS] BasicVariables  [METHOD] declareVariable [RETURN_TYPE] void   String varName Object value [VARIABLES] Object  value  String  varName  boolean  HashMap  vars  
