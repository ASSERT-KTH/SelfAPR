[BugLab_Wrong_Literal]^private boolean empty = true;^31^^^^^26^36^private boolean empty = false;^[CLASS] PropertyIterator   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean targetReady = true;^35^^^^^30^40^private boolean targetReady = false;^[CLASS] PropertyIterator   [VARIABLES] 
[BugLab_Wrong_Literal]^private int position = 1;^36^^^^^31^41^private int position = 0;^[CLASS] PropertyIterator   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean ready = true;^40^^^^^35^45^private boolean ready = false;^[CLASS] PropertyIterator   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean includeStart = true;^41^^^^^36^46^private boolean includeStart = false;^[CLASS] PropertyIterator   [VARIABLES] 
[BugLab_Variable_Misuse]^this.reverse = targetReady;^52^^^^^37^67^this.reverse = reverse;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.includeStart = false;^53^^^^^38^68^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.startIndex = -;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.startIndex = -startPropertyIndex;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Argument_Swapping]^while  ( pointer != null && startWith.getImmediateParentPointer (  )  != startWith )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^while  ( startWith != null || startWith.getImmediateParentPointer (  )  != pointer )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^while  ( startWith == null && startWith.getImmediateParentPointer (  )  != pointer )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^while  ( startWith != null && startWith.getImmediateParentPointer (  )  == pointer )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^if  ( startWith == null )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^if  ( startWith != null )  {^63^^^^^48^78^if  ( startWith == null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  &&  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  <=  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Variable_Misuse]^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^if  ( this.startIndex <= NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.startIndex = startIndex;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Variable_Misuse]^if  ( targetReady && startIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Variable_Misuse]^if  ( reverse && startPropertyIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Argument_Swapping]^if  ( startIndex && reverse == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^if  ( reverse || startIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^if  ( reverse && startIndex != -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^if  ( reverse && startIndex == -position )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.includeStart = false;^76^^^^^61^91^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.startIndex = -1;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.includeStart = true;^74^^^^^59^89^this.includeStart = false;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  >>  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  <  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  ^  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex == NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^if  ( this.startIndex != NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Variable_Misuse]^if  ( ready && startIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^if  ( reverse && startIndex >= -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^this.startIndex = 1;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  >  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  ||  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[BugLab_Wrong_Literal]^position = 1;^86^^^^^85^88^position = 0;^[CLASS] PropertyIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^targetReady = true;^87^^^^^85^88^targetReady = false;^[CLASS] PropertyIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex == 0 )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( position != 0 )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( name == null )  {^92^^^^^90^120^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( !setPosition ( position )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( !setPosition ( startPropertyIndex )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !reverse )  {^93^^^^^90^120^if  ( !targetReady )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !ready )  {^93^^^^^90^120^if  ( !targetReady )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( targetReady )  {^97^^^^^90^120^if  ( empty )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( !setPosition ( startIndex )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( !setPosition ( startIndex )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( reverse )  {^97^^^^^90^120^if  ( empty )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( !setPosition ( startPropertyIndex )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^return startPropertyIndex;^123^^^^^122^124^return position;^[CLASS] PropertyIterator  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( name == null )  {^127^^^^^126^133^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^return setPositionAllProperties ( startPropertyIndex ) ;^131^^^^^126^133^return setPositionAllProperties ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^return setPositionIndividualProperty ( startPropertyIndex ) ;^128^^^^^126^133^return setPositionIndividualProperty ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^this.position = startIndex;^136^^^^^121^151^this.position = position;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex < 1 )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( position <= 1 )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( position < startIndex )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return true;^138^^^^^123^153^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !reverse )  {^141^^^^^126^156^if  ( !targetReady )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return true;^146^^^^^131^161^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !ready )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex == -1 )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( end >= -1 )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -2 )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^end = startPropertyIndex - 1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  |  1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length ;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^166^^^^^151^172^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex < 1 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= 1 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( index < 0 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return true;^170^^^^^151^172^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  ||  1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length - ;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index = startPropertyIndex - position + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index = end - startPropertyIndex + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^index = position - end + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^index = end  >=  position + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^index = end - position ;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^int end = startPropertyIndex;^161^^^^^151^172^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^153^^^^^138^168^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex > length )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index > startPropertyIndex )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( length > index )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index >= length )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return true;^157^^^^^142^172^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index = startPropertyIndex + startIndex;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index = position + startPropertyIndex;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^index = startIndex + position;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !reverse )  {^153^^^^^138^168^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex == -1 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( end != -1 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -length )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -position )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^end = startPropertyIndex - 1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  !=  1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length ;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^166^^^^^151^181^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex < 1 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= 1 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( index < end )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return true;^170^^^^^155^185^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^end = startIndex - 1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  &&  1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index = startPropertyIndex - position + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index = end - startPropertyIndex + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^index = position - end + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^index = end  >>  position + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^index = end - position + index;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^int end = startPropertyIndex;^161^^^^^146^176^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setIndex ( startPropertyIndex - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^propertyNodePointer.setIndex ( index  <<  1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^propertyNodePointer.setIndex ( index  ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return false;^174^^^^^159^189^return true;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^this.position = offset;^178^^^^^163^193^this.position = position;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex < 1 )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( position <= 1 )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return true;^180^^^^^165^195^return false;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( PropertyPointer.UNSPECIFIED_PROPERTY == start )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( start > PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^start = startIndex - 1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^start = count  &  1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^start = count ;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i == start )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i > startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i >= startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = start -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( start - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( position - startPropertyIndex )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = position -  ( length - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = length -  ( index - position )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = index -  ( position - length )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  >>   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length -  ( position  <<  index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = length -  ( position - index )  - position;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex == -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( end != -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -2 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -position )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^end = startIndex - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  &&  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length ;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^226^^^^^211^241^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  !=  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length - offset;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^length = position + 1;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^length = end ;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = start - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = end - startIndex + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = position - end + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = end  ^  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = end - position + offset;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^int end = start;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex == -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( end <= -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -0 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^end = start - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  ||  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( start <= position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index <= position && position < index + startPropertyIndex )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( length <= position && position < index + index )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position || position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index < position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position <= index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position < index  &  length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return false;^237^^^^^222^252^return true;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setIndex ( start ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( positionnt i = start; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ( int i = start; i > 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^for  ( int i = start; i >= offset; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex == startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i != startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startPropertyIndex -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( startPropertyIndex - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  ||   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  &&   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length -  ( position  <  index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = length -  ( position - index )  ;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -end )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -startPropertyIndex )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^end = startPropertyIndex - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  &  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  >>  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length - position;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^length = startIndex + 1;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^length = end + position;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startPropertyIndex - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = end - startPropertyIndex + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = end  <=  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = end - position + startIndex;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^int end = startPropertyIndex;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( start == -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -startIndex )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  <<  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !reverse )  {^226^^^^^211^241^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex <= position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index <= startPropertyIndex && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( position <= index && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position < index  >  length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setIndex ( position ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  <=  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^length = end + start;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = end - position + ;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startPropertyIndex -  ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( start - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = index -  ( position - length )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = length -  ( index - position )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  >   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  <=   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length -  ( position  &&  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = length -  ( position - index )  - end;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index += startPropertyIndex;^239^^^^^224^254^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^int end = position;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^start = count  >>  1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^length = end + i;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = end  >=  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = end - position + length;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( startPropertyIndex - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( position - startIndex )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = position -  ( length - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  >>   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  <   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length -  ( position  >=  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = length -  ( position - index )  ;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^int index = ;^211^^^^^196^226^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^int start = position;^212^^^^^197^227^int start = startPropertyIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( start == startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i == position )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( startPropertyIndex == i )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i != startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startPropertyIndex - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = index - position;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = position  <  index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !reverse )  {^192^^^^^177^207^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !reverse )  {^196^^^^^181^211^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^length -= offset;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^length += startIndex;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex + startPropertyIndex - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex + position - startIndex;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startPropertyIndex + position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = position + startIndex - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = index + position - startIndex;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex + position  ||  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex  <<  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^192^^^^^177^207^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex <= position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index <= startPropertyIndex && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( length <= position && position < index + index )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( index <= length && position < index + position )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position || position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index < position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position == index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position < index  |  length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return false;^205^^^^^190^220^return true;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setIndex ( startPropertyIndex ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( startPropertyIndexnt i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startPropertyIndex; i < start; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( startPropertyIndexnt i = i; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ( int i = startPropertyIndex; i > count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ||  ( int i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ( int i = startPropertyIndex; i <= count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  !=  ( int i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i == start )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i <= startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = start - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = position - startPropertyIndex;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = position   instanceof   index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^length = startIndex;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex + start - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex + position - startPropertyIndex;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = offset + position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = startIndex + index - position;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex + position  <  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex  <=  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^196^^^^^181^211^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex <= position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index <= position && position < index + start )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( position <= index && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position <= index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex + position  >>  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex   instanceof   position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startPropertyIndex - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = position - startPropertyIndex;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^offset = index - position;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = position  ==  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index += position;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^length -= startPropertyIndex;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex + offset - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex + position - position;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex + position  >  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = position  >>  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index += start;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^int index = position;^186^^^^^171^201^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = position; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( start ) ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setIndex ( position ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex == startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i == startIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = position - startIndex;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = position  >  index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex  |  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index <= position && position < index + startPropertyIndex )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position < index  &  length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( offset == PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( start != PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^start = startPropertyIndex - 1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^start = count  !=  1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^start = count - i;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex == startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i == startIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( startPropertyIndex == i )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i <= startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( startIndex - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( position - start )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  <<   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  &   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length -  ( position  ^  index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -length )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length - length;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^end = position - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  >  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^length = end + count;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = end - start + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = end  !=  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -i )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  <  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index <= start && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( index <= length && position < index + position )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( startnt i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startPropertyIndex; i < startPropertyIndex; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  <=  ( int i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i >= startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^length -= position;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( index <= start && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position < index  !=  length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex + position  >=  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = position - startIndex;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = position  >=  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( position ) ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startIndex; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( startPropertyIndexnt i = start; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( startnt i = i; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ( int i = start; i < 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  |   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = length -  ( position - index )  - startIndex;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length  ==  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^end = length   instanceof   1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = end  >>  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = end - position + position;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( end >= -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^if  ( end == -start )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index > position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( index <= position && position < index  &&  length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^length = end + startIndex;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = end  ||  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = end - position + end;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = start -  ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( position - startPropertyIndex )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  ^   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length -  ( position  <=  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^offset = length -  ( position - index )  - length;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index += start;^239^^^^^224^254^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( startIndex ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex + position - start;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex + position  ^  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = startIndex  !=  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = startIndex - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = position - start;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = position  ||  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^index += startIndex;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^start = position - 1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^start = count  >=  1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^start = count - ;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^end = length - end;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^length = start + 1;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = end  >  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^offset = length -  ( position - start )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length  !=   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^offset = length -  ( position  ^  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = start; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setIndex ( startPropertyIndex ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^return true;^242^^^^^227^257^return false;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^targetReady = false;^246^^^^^231^261^targetReady = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^empty = false;^247^^^^^232^262^empty = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( !targetReady )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( PropertyPointer.UNSPECIFIED_PROPERTY == startPropertyIndex )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( startPropertyIndex <= PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^startPropertyIndex = offset - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^startPropertyIndex = names.length.length - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^startPropertyIndex = names - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^startPropertyIndex = names.length  <=  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startPropertyIndex = names.length - start;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( position == NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( startIndex > NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( name[i].equals ( names )  )  {^277^^^^^262^292^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex != startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i != startIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( startPropertyIndex != i )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i == startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -start;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^includeStart = false;^281^^^^^266^296^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -0;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^empty = true;^283^^^^^268^298^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( position != startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( positionnt i = startPropertyIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( startPropertyIndexnt i = i; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ( int i = startPropertyIndex; i > 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -startIndex;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( start != startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i != start )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i < startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( namess[i].equals ( name )  )  {^277^^^^^262^292^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^startPropertyIndex = start - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^startPropertyIndex = names.length  !=  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startPropertyIndex = names.length ;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -startIndex;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( position ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( offset == PropertyPointer.UNSPECIFIED_PROPERTY )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( PropertyPointer.UNSPECIFIED_PROPERTY == startPropertyIndex )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( startPropertyIndex > PropertyPointer.UNSPECIFIED_PROPERTY )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startPropertyIndex = offset;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( start == NodePointer.WHOLE_COLLECTION )  {^254^^^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( startIndex != NodePointer.WHOLE_COLLECTION )  {^254^^^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = offset;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( namess[i].equals ( name )  )  {^258^^^^^243^273^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startIndex != startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i != startIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( startPropertyIndex != i )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i >= startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = 1;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^includeStart = false;^262^^^^^247^277^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -1;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^empty = true;^264^^^^^249^279^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( position ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startIndex; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( namesnt i = startPropertyIndex; i < i.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( int i = startPropertyIndex; i < name.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( int i = startPropertyIndex; i < namess.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( int i = names; i < startPropertyIndex.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( int i = startPropertyIndex; i < name; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ( int i = startPropertyIndex; i == names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( start != startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i < startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i != position )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i == startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = start; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( startIndex ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( startPropertyIndex == NodePointer.WHOLE_COLLECTION )  {^254^^^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( startIndex <= NodePointer.WHOLE_COLLECTION )  {^254^^^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = end;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^if  ( name[i].equals ( names )  )  {^258^^^^^243^273^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = length;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( offset == PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( startPropertyIndex != PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^startPropertyIndex = names.length  ^  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startPropertyIndex = names.length - length;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( start == NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( startIndex != NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -count;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -index;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( start ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^if  ( i >= startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -position;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( startPropertyIndexnt i = startPropertyIndex; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = startPropertyIndex; i < startIndex; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( names.lengthnt i = startPropertyIndex; i < i; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( nament i = startPropertyIndex; i < is.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Argument_Swapping]^for  ( startPropertyIndexnt i = i; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^for  ( int i = startPropertyIndex; i > names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = count;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = startIndex;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( startnt i = startPropertyIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^for  ( int i = position; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^for  ( int i = startPropertyIndex; i >= count; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^if  ( i != position )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -count;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -2;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -end;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -length;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startPropertyIndex = count;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = 1;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^startPropertyIndex = startPropertyIndex - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Operator]^startPropertyIndex = names.length  |  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^startIndex = -0;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^propertyNodePointer.setPropertyIndex ( start ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Wrong_Literal]^length = ;^300^^^^^293^303^length = 0;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[BugLab_Variable_Misuse]^return startPropertyIndex;^302^^^^^293^303^return length;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
