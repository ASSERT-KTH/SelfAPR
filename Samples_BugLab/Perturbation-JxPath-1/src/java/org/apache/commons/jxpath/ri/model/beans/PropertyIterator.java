[buglab_swap_variables]^while  ( pointer != null && startWith.getImmediateParentPointer (  )  != startWith )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[buglab_swap_variables]^if  ( startIndex && reverse == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[buglab_swap_variables]^index = position - end + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( length > index )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[buglab_swap_variables]^index = startIndex + position;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[buglab_swap_variables]^index = position - end + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( PropertyPointer.UNSPECIFIED_PROPERTY == start )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = position -  ( length - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = index -  ( position - length )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = position - end + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( position <= index && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( index <= length && position < index + position )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = index -  ( position - length )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = position -  ( length - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = index - position;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = startIndex + index - position;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = position + startIndex - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( length <= position && position < index + index )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( index <= length && position < index + position )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( startPropertyIndexnt i = i; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = index + position - startIndex;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = index - position;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( startPropertyIndex == i )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = length -  ( index - position )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( length <= position && position < index + index )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( position <= index && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^offset = length -  ( index - position )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^startPropertyIndex = names.length.length - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^startPropertyIndex = names - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( startPropertyIndex != i )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( startPropertyIndexnt i = i; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( name[i].equals ( names )  )  {^277^^^^^262^292^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( namess[i].equals ( name )  )  {^277^^^^^262^292^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( PropertyPointer.UNSPECIFIED_PROPERTY == startPropertyIndex )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( startPropertyIndex != i )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( startPropertyIndexnt i = i; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( int i = name; i < startPropertyIndexs.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( int i = names.length; i < startPropertyIndex; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^if  ( namess[i].equals ( name )  )  {^258^^^^^243^273^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( nament i = startPropertyIndex; i < is.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( int i = startPropertyIndex; i < name.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( int i = startPropertyIndex; i < names.lengths.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[buglab_swap_variables]^for  ( names.lengthnt i = startPropertyIndex; i < i; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
