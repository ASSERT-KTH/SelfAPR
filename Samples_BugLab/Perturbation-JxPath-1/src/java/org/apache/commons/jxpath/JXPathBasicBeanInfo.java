[buglab_swap_variables]^bi = Introspector.getBeanInfo (  Object.class ) ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^bi = Introspector.getBeanInfo (  Object.class ) ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^System.arraycopy ( descriptors, 0, pds, 0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^System.arraycopy (  0, descriptors, 0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^System.arraycopy ( pds, 0,  0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^System.arraycopy ( pds, 0, pds.length, 0, descriptors ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^System.arraycopy ( pds, 0, descriptors, 0 ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^Arrays.sort (  new Comparator (  )  {^86^^^^^73^99^Arrays.sort ( descriptors, new Comparator (  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^System.arraycopy ( pds.length, 0, descriptors, 0, pds ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[buglab_swap_variables]^for  ( pds.lengthnt i = 0; i < i; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( pdsnt i = 0; i < i.length; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < pds; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^if  ( propertyNamess[i] == propertyName )  {^112^^^^^101^123^if  ( propertyNames[i] == propertyName )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( propertyNames.lengthnt i = 0; i < i; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < propertyNamess.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( propertyNamesnt i = 0; i < i.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^if  ( propertyName[i].equals ( propertyNames )  )  {^118^^^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( propertyNames.lengthnt i = 0; i < i; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( propertyNament i = 0; i < is.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( propertyNamesnt i = 0; i < i.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^if  ( propertyNamess[i].equals ( propertyName )  )  {^118^^^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[buglab_swap_variables]^for  ( jpds.lengthnt i = 0; i < i; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[buglab_swap_variables]^for  ( jpdsnt i = 0; i < i.length; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
