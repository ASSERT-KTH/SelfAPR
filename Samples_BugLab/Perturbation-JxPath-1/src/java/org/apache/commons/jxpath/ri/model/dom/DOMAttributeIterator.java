[BugLab_Wrong_Literal]^private int position = -1;^40^^^^^35^45^private int position = 0;^[CLASS] DOMAttributeIterator   [VARIABLES] 
[BugLab_Wrong_Operator]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^47^^^^^42^66^if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^for  ( positionnt i = 0; i < count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < position; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^for  ( countnt i = 0; i < i; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^for  ( int i = count; i < count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^if  ( testAttr ( name, attr )  )  {^60^^^^^42^66^if  ( testAttr ( attr, name )  )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^Attr attr =  ( Attr )  i.item ( map ) ;^59^^^^^42^66^Attr attr =  ( Attr )  map.item ( i ) ;^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^Attr attr =  ( Attr )  map.item ( position ) ;^59^^^^^42^66^Attr attr =  ( Attr )  map.item ( i ) ;^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( attr == null )  {^51^^^^^42^66^if  ( attr != null )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^for  ( int i = position; i < count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^for  ( int i = i; i < count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= count; i++ )  {^58^^^^^42^66^for  ( int i = 0; i < count; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] <init> [RETURN_TYPE] QName)   NodePointer parent QName name [VARIABLES] NamedNodeMap  map  boolean  QName  name  Node  node  List  attributes  NodePointer  parent  String  lname  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testPrefix != null && nodePrefix.equals ( "xmlns" )  )  {^72^^^^^57^87^if  ( nodePrefix != null && nodePrefix.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( nodePrefix != null || nodePrefix.equals ( "xmlns" )  )  {^72^^^^^57^87^if  ( nodePrefix != null && nodePrefix.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( nodePrefix == null && nodePrefix.equals ( "xmlns" )  )  {^72^^^^^57^87^if  ( nodePrefix != null && nodePrefix.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^return true;^73^^^^^58^88^return false;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testPrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^76^^^^^61^91^if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( nodePrefix == null && testPrefix.equals ( "xmlns" )  )  {^76^^^^^61^91^if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^if  ( nodeLocalName == null && nodePrefix.equals ( "xmlns" )  )  {^76^^^^^61^91^if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( nodePrefix == null || nodeLocalName.equals ( "xmlns" )  )  {^76^^^^^61^91^if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( nodePrefix != null && nodeLocalName.equals ( "xmlns" )  )  {^76^^^^^61^91^if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^return true;^77^^^^^62^92^return false;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^String testLocalName = testName.getName (  ) ;^80^^^^^65^95^String testLocalName = name.getName (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( testNS )  )  {^81^^^^^66^96^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^if  ( nodeLocalName.equals ( "*" )  || testLocalName.equals ( testLocalName )  )  {^81^^^^^66^96^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( testLocalName.equals ( "*" )  && testLocalName.equals ( nodeLocalName )  )  {^81^^^^^66^96^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( equalStrings ( testNS, nodePrefix )  )  {^84^^^^^69^99^if  ( equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( equalStrings ( testPrefix, testNS )  )  {^84^^^^^69^99^if  ( equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^if  ( equalStrings ( nodePrefix, testPrefix )  )  {^84^^^^^69^99^if  ( equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^return false;^85^^^^^70^100^return true;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testNS != null )  {^89^^^^^74^104^if  ( testPrefix != null )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( testPrefix == null )  {^89^^^^^74^104^if  ( testPrefix != null )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^testNS = parent.getNamespaceURI ( testLocalName ) ;^90^^^^^75^105^testNS = parent.getNamespaceURI ( testPrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^testNS = testPrefix.getNamespaceURI ( parent ) ;^90^^^^^75^105^testNS = parent.getNamespaceURI ( testPrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^testNS = parent.getNamespaceURI ( testNS ) ;^90^^^^^75^105^testNS = parent.getNamespaceURI ( testPrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testPrefix != null )  {^94^^^^^79^109^if  ( nodePrefix != null )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( nodePrefix == null )  {^94^^^^^79^109^if  ( nodePrefix != null )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^nodeNS = parent.getNamespaceURI ( testPrefix ) ;^95^^^^^80^110^nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^nodeNS = nodePrefix.getNamespaceURI ( parent ) ;^95^^^^^80^110^nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^return equalStrings ( testPrefix, nodeNS ) ;^97^^^^^82^112^return equalStrings ( testNS, nodeNS ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^return equalStrings ( testNS, testPrefix ) ;^97^^^^^82^112^return equalStrings ( testNS, nodeNS ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^return equalStrings ( nodeNS, testNS ) ;^97^^^^^82^112^return equalStrings ( testNS, nodeNS ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^String testPrefix = name.getPrefix (  ) ;^82^^^^^67^97^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testNS != null )  {^94^^^^^79^109^if  ( nodePrefix != null )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^nodeNS = parent.getNamespaceURI ( testNS ) ;^95^^^^^80^110^nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testNS.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^81^^^^^66^96^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testPrefix.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^81^^^^^66^96^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( testPrefix )  )  {^81^^^^^66^96^if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^return true;^99^^^^^84^114^return false;^[CLASS] DOMAttributeIterator  [METHOD] testAttr [RETURN_TYPE] boolean   Attr attr QName testName [VARIABLES] boolean  QName  name  testName  List  attributes  NodePointer  parent  String  nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^if  ( s2 == null && s1 != null )  {^103^^^^^102^110^if  ( s1 == null && s2 != null )  {^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Operator]^if  ( s1 == null || s2 != null )  {^103^^^^^102^110^if  ( s1 == null && s2 != null )  {^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Operator]^if  ( s1 != null && s2 != null )  {^103^^^^^102^110^if  ( s1 == null && s2 != null )  {^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Operator]^if  ( s1 == null && s2 == null )  {^103^^^^^102^110^if  ( s1 == null && s2 != null )  {^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Literal]^return true;^104^^^^^102^110^return false;^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Argument_Swapping]^if  ( s2 != null && !s1.equals ( s1 )  )  {^106^^^^^102^110^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Operator]^if  ( s1 != null || !s1.equals ( s2 )  )  {^106^^^^^102^110^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Operator]^if  ( s1 == null && !s1.equals ( s2 )  )  {^106^^^^^102^110^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Literal]^return true;^107^^^^^102^110^return false;^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Wrong_Literal]^return false;^109^^^^^102^110^return true;^[CLASS] DOMAttributeIterator  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] List  attributes  NodePointer  parent  String  s1  s2  boolean  QName  name  testName  int  count  i  position  
[BugLab_Variable_Misuse]^String testPrefix = testName.getPrefix (  ) ;^113^^^^^112^141^String testPrefix = name.getPrefix (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testNS != null )  {^116^^^^^112^141^if  ( testPrefix != null )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( testPrefix == null )  {^116^^^^^112^141^if  ( testPrefix != null )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^testNS = testPrefix.getNamespaceURI ( parent ) ;^117^^^^^112^141^testNS = parent.getNamespaceURI ( testPrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^testNS = parent.getNamespaceURI ( testNS ) ;^117^^^^^112^141^testNS = parent.getNamespaceURI ( testPrefix ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testPrefix != null )  {^120^^^^^112^141^if  ( testNS != null )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( testNS == null )  {^120^^^^^112^141^if  ( testNS != null )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^return element.getAttributeNode ( testName.getName (  )  ) ;^139^^^^^120^140^return element.getAttributeNode ( name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^return name.getAttributeNode ( element.getName (  )  ) ;^139^^^^^120^140^return element.getAttributeNode ( name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^if  ( attr == null )  {^122^^^^^112^141^if  ( attr != null )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( testAttr ( attr, testName )  )  {^132^^^^^112^141^if  ( testAttr ( attr, name )  )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^if  ( testAttr ( name, attr )  )  {^132^^^^^112^141^if  ( testAttr ( attr, name )  )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^for  ( positionnt i = 0; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^for  ( nnmnt i = 0; i < i.getLength (  ) ; i++ )  {^130^^^^^112^141^for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^attr =  ( Attr )  nnm.item ( position ) ;^131^^^^^112^141^attr =  ( Attr )  nnm.item ( i ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^attr =  ( Attr )  i.item ( nnm ) ;^131^^^^^112^141^attr =  ( Attr )  nnm.item ( i ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^Attr attr = element.getAttributeNodeNS ( testPrefix, name.getName (  )  ) ;^121^^^^^112^141^Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^Attr attr = element.getAttributeNodeNS ( testNS, testName.getName (  )  ) ;^121^^^^^112^141^Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^Attr attr = testNS.getAttributeNodeNS ( element, name.getName (  )  ) ;^121^^^^^112^141^Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^Attr attr = element.getAttributeNodeNS ( name, testNS.getName (  )  ) ;^121^^^^^112^141^Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^Attr attr = name.getAttributeNodeNS ( testNS, element.getName (  )  ) ;^121^^^^^112^141^Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^for  ( int i = i; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^for  ( int i = position; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^return element.getAttributeNode ( testName.getName (  )  ) ;^139^^^^^112^141^return element.getAttributeNode ( name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Argument_Swapping]^return name.getAttributeNode ( element.getName (  )  ) ;^139^^^^^112^141^return element.getAttributeNode ( name.getName (  )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[CLASS] DOMAttributeIterator  [METHOD] getAttribute [RETURN_TYPE] Attr   Element element QName name [VARIABLES] NamedNodeMap  nnm  boolean  QName  name  testName  Element  element  List  attributes  NodePointer  parent  String  testNS  testPrefix  int  count  i  position  Attr  attr  
[BugLab_Variable_Misuse]^if  ( index == 0 )  {^144^^^^^143^155^if  ( position == 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Operator]^if  ( position >= 0 )  {^144^^^^^143^155^if  ( position == 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^if  ( position == count )  {^144^^^^^143^155^if  ( position == 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^if  ( position == -1 )  {^144^^^^^143^155^if  ( position == 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^if  ( !setPosition ( position )  )  {^145^^^^^143^155^if  ( !setPosition ( 1 )  )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^position = count;^148^^^^^143^155^position = 0;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 2 )  )  {^145^^^^^143^155^if  ( !setPosition ( 1 )  )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^position = position;^148^^^^^143^155^position = 0;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Variable_Misuse]^int index = i - 1;^150^^^^^143^155^int index = position - 1;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Operator]^int index = position  <<  1;^150^^^^^143^155^int index = position - 1;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^int index = position - position;^150^^^^^143^155^int index = position - 1;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Variable_Misuse]^if  ( position < 0 )  {^151^^^^^143^155^if  ( index < 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Operator]^if  ( index > 0 )  {^151^^^^^143^155^if  ( index < 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^if  ( index < -1 )  {^151^^^^^143^155^if  ( index < 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^if  ( index < count )  {^151^^^^^143^155^if  ( index < 0 )  {^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^index = position;^152^^^^^143^155^index = 0;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Literal]^index = -1;^152^^^^^143^155^index = 0;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Variable_Misuse]^return new DOMAttributePointer ( parent,  ( Attr )  attributes.get ( position )  ) ;^154^^^^^143^155^return new DOMAttributePointer ( parent,  ( Attr )  attributes.get ( index )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Argument_Swapping]^return new DOMAttributePointer ( parent,  ( Attr )  index.get ( attributes )  ) ;^154^^^^^143^155^return new DOMAttributePointer ( parent,  ( Attr )  attributes.get ( index )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Argument_Swapping]^return new DOMAttributePointer ( index,  ( Attr )  attributes.get ( parent )  ) ;^154^^^^^143^155^return new DOMAttributePointer ( parent,  ( Attr )  attributes.get ( index )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Argument_Swapping]^return new DOMAttributePointer ( attributes,  ( Attr )  parent.get ( index )  ) ;^154^^^^^143^155^return new DOMAttributePointer ( parent,  ( Attr )  attributes.get ( index )  ) ;^[CLASS] DOMAttributeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Variable_Misuse]^return index;^158^^^^^157^159^return position;^[CLASS] DOMAttributeIterator  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Variable_Misuse]^return index >= 1 && position <= attributes.size (  ) ;^163^^^^^161^164^return position >= 1 && position <= attributes.size (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Argument_Swapping]^return attributes >= 1 && position <= position.size (  ) ;^163^^^^^161^164^return position >= 1 && position <= attributes.size (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Operator]^return position >= 1 || position <= attributes.size (  ) ;^163^^^^^161^164^return position >= 1 && position <= attributes.size (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Operator]^return position > 1 && position <= attributes.size (  ) ;^163^^^^^161^164^return position >= 1 && position <= attributes.size (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
[BugLab_Wrong_Operator]^return position >= 1 && position < attributes.size (  ) ;^163^^^^^161^164^return position >= 1 && position <= attributes.size (  ) ;^[CLASS] DOMAttributeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  attributes  NodePointer  parent  boolean  QName  name  testName  int  count  i  index  position  
