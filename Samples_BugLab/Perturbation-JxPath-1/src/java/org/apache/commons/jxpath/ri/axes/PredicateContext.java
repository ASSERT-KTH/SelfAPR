[BugLab_Wrong_Literal]^private boolean done = true;^37^^^^^32^42^private boolean done = false;^[CLASS] PredicateContext   [VARIABLES] 
[BugLab_Variable_Misuse]^this.expression = nameTestExpression;^43^^^^^41^48^this.expression = expression;^[CLASS] PredicateContext  [METHOD] <init> [RETURN_TYPE] Expression)   EvalContext parentContext Expression expression [VARIABLES] EvalContext  parentContext  boolean  done  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Variable_Misuse]^if  ( nameTestExpression instanceof NameAttributeTest )  {^44^^^^^41^48^if  ( expression instanceof NameAttributeTest )  {^[CLASS] PredicateContext  [METHOD] <init> [RETURN_TYPE] Expression)   EvalContext parentContext Expression expression [VARIABLES] EvalContext  parentContext  boolean  done  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Operator]^if  ( expression  ||  NameAttributeTest )  {^44^^^^^41^48^if  ( expression instanceof NameAttributeTest )  {^[CLASS] PredicateContext  [METHOD] <init> [RETURN_TYPE] Expression)   EvalContext parentContext Expression expression [VARIABLES] EvalContext  parentContext  boolean  done  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Variable_Misuse]^if  ( ok )  {^51^^^^^36^66^if  ( done )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^return true;^52^^^^^37^67^return false;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  >  Iterator )  {^83^^^^^68^98^if  ( pred instanceof Iterator )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^return true;^85^^^^^70^100^return false;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  >=  NodePointer )  {^90^^^^^75^105^if  ( pred instanceof NodePointer )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  ==  Number )  {^94^^^^^79^109^if  ( pred instanceof Number )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^return false;^102^^^^^87^117^return true;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^done = false;^97^^^^^82^112^done = true;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^return parentContext.setPosition ( i ) ;^98^^^^^83^113^return parentContext.setPosition ( pos ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Argument_Swapping]^return pos.setPosition ( parentContext ) ;^98^^^^^83^113^return parentContext.setPosition ( pos ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^Object pred = nameTestExpression.computeValue ( parentContext ) ;^82^^^^^67^97^Object pred = expression.computeValue ( parentContext ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Argument_Swapping]^Object pred = parentContext.computeValue ( expression ) ;^82^^^^^67^97^Object pred = expression.computeValue ( parentContext ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^Object pred = expression.computeValue ( null ) ;^82^^^^^67^97^Object pred = expression.computeValue ( parentContext ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Argument_Swapping]^if  ( propertyName[i].equals ( names )  )  {^70^^^^^55^85^if  ( names[i].equals ( propertyName )  )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^ok = false;^71^^^^^56^86^ok = true;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^if  ( done )  {^75^^^^^60^90^if  ( ok )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^return false;^78^^^^^63^93^return true;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^for  ( posnt i = 0; i < names.length; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < pos; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Argument_Swapping]^for  ( namesnt i = 0; i < i.length; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == names.length; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < names.length; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^Object pred = expression.computeValue ( parentContext ) ;^56^^^^^41^71^Object pred = nameTestExpression.computeValue ( parentContext ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Argument_Swapping]^Object pred = parentContext.computeValue ( nameTestExpression ) ;^56^^^^^41^71^Object pred = nameTestExpression.computeValue ( parentContext ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^boolean ok = true;^67^^^^^52^82^boolean ok = false;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  <  NodePointer )  {^90^^^^^75^105^if  ( pred instanceof NodePointer )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  >  Number )  {^94^^^^^79^109^if  ( pred instanceof Number )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Argument_Swapping]^for  ( names.lengthnt i = 0; i < i; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^Object pred = expression.computeValue ( 1 ) ;^82^^^^^67^97^Object pred = expression.computeValue ( parentContext ) ;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  <=  Iterator )  {^83^^^^^68^98^if  ( pred instanceof Iterator )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  &  NodePointer )  {^90^^^^^75^105^if  ( pred instanceof NodePointer )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  <=  Number )  {^94^^^^^79^109^if  ( pred instanceof Number )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= names.length; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < names.length; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  ^  Iterator )  {^83^^^^^68^98^if  ( pred instanceof Iterator )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Operator]^if  ( pred  &&  Number )  {^94^^^^^79^109^if  ( pred instanceof Number )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^for  ( int i = i; i < names.length; i++ )  {^69^^^^^54^84^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Wrong_Literal]^return true;^106^^^^^91^121^return false;^[CLASS] PredicateContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  Expression  expression  nameTestExpression  Object  pred  String  propertyName  String[]  names  PropertyPointer  dynamicPropertyPointer  int  i  pos  
[BugLab_Variable_Misuse]^if  ( expression == null )  {^114^^^^^113^131^if  ( nameTestExpression == null )  {^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Operator]^if  ( nameTestExpression != null )  {^114^^^^^113^131^if  ( nameTestExpression == null )  {^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Literal]^return true;^115^^^^^113^131^return false;^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Operator]^if  ( parent != null )  {^119^^^^^113^131^if  ( parent == null )  {^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Literal]^return true;^120^^^^^113^131^return false;^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Operator]^if  ( ! ( parent  <  PropertyOwnerPointer )  )  {^123^^^^^113^131^if  ( ! ( parent instanceof PropertyOwnerPointer )  )  {^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Literal]^return true;^124^^^^^113^131^return false;^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Literal]^return false;^130^^^^^113^131^return true;^[CLASS] PredicateContext  [METHOD] setupDynamicPropertyPointer [RETURN_TYPE] boolean   [VARIABLES] boolean  done  ok  NodePointer  parent  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Variable_Misuse]^if  ( expression == null )  {^134^^^^^133^150^if  ( nameTestExpression == null )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^if  ( nameTestExpression != null )  {^134^^^^^133^150^if  ( nameTestExpression == null )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^if  ( dynamicPropertyPointer != null )  {^138^^^^^133^150^if  ( dynamicPropertyPointer == null )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Argument_Swapping]^if  ( dynamicPropertyPointer < 1 || position > position.getLength (  )  )  {^143^144^^^^133^150^if  ( position < 1 || position > dynamicPropertyPointer.getLength (  )  )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^if  ( position < 1 && position > dynamicPropertyPointer.getLength (  )  )  {^143^144^^^^133^150^if  ( position < 1 || position > dynamicPropertyPointer.getLength (  )  )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^if  ( position <= 1 || position > dynamicPropertyPointer.getLength (  )  )  {^143^144^^^^133^150^if  ( position < 1 || position > dynamicPropertyPointer.getLength (  )  )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^if  ( position < 1 || position >= dynamicPropertyPointer.getLength (  )  )  {^143^144^^^^133^150^if  ( position < 1 || position > dynamicPropertyPointer.getLength (  )  )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Literal]^if  ( position < position || position > dynamicPropertyPointer.getLength (  )  )  {^143^144^^^^133^150^if  ( position < 1 || position > dynamicPropertyPointer.getLength (  )  )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Literal]^return true;^145^^^^^133^150^return false;^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Literal]^return false;^148^^^^^133^150^return true;^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^dynamicPropertyPointer.setIndex ( position  ==  1 ) ;^147^^^^^133^150^dynamicPropertyPointer.setIndex ( position - 1 ) ;^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Literal]^dynamicPropertyPointer.setIndex ( position  ) ;^147^^^^^133^150^dynamicPropertyPointer.setIndex ( position - 1 ) ;^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^if  ( position < 1 || position == dynamicPropertyPointer.getLength (  )  )  {^143^144^^^^133^150^if  ( position < 1 || position > dynamicPropertyPointer.getLength (  )  )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Literal]^if  ( position < 2 || position > dynamicPropertyPointer.getLength (  )  )  {^143^144^^^^133^150^if  ( position < 1 || position > dynamicPropertyPointer.getLength (  )  )  {^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^dynamicPropertyPointer.setIndex ( position  <<  1 ) ;^147^^^^^133^150^dynamicPropertyPointer.setIndex ( position - 1 ) ;^[CLASS] PredicateContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^if  ( position <= 0 )  {^153^^^^^152^164^if  ( position == 0 )  {^[CLASS] PredicateContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 2 )  )  {^154^^^^^152^164^if  ( !setPosition ( 1 )  )  {^[CLASS] PredicateContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Literal]^if  ( !setPosition ( 0 )  )  {^154^^^^^152^164^if  ( !setPosition ( 1 )  )  {^[CLASS] PredicateContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Operator]^if  ( dynamicPropertyPointer == null )  {^158^^^^^152^164^if  ( dynamicPropertyPointer != null )  {^[CLASS] PredicateContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Literal]^done = true;^169^^^^^166^170^done = false;^[CLASS] PredicateContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  
[BugLab_Wrong_Operator]^if  ( this.position >= position )  {^178^^^^^177^188^if  ( this.position > position )  {^[CLASS] PredicateContext  [METHOD] setPositionStandard [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Operator]^while  ( this.position <= position )  {^182^^^^^177^188^while  ( this.position < position )  {^[CLASS] PredicateContext  [METHOD] setPositionStandard [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Literal]^return true;^184^^^^^177^188^return false;^[CLASS] PredicateContext  [METHOD] setPositionStandard [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
[BugLab_Wrong_Literal]^return false;^187^^^^^177^188^return true;^[CLASS] PredicateContext  [METHOD] setPositionStandard [RETURN_TYPE] boolean   int position [VARIABLES] boolean  done  ok  PropertyPointer  dynamicPropertyPointer  Expression  expression  nameTestExpression  int  position  
